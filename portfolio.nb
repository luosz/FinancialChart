(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    818981,      15090]
NotebookOptionsPosition[    815327,      15005]
NotebookOutlinePosition[    815702,      15021]
CellTagsIndexPosition[    815659,      15018]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s", ",", "portfolio", ",", "data", ",", "symbols", ",", "std", ",", 
      "return"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"std", "=", 
      RowBox[{"StandardDeviation", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"return", ",", "std", ",", 
          RowBox[{"return", "/", "std"}]}], "}"}], "//", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<return\>\"", ",", "\"\<std\>\"", ",", "\"\<r/s\>\""}], 
               "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], "&"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9, {3.6701716503770185`*^9, 3.6701716506582756`*^9}, {
   3.685305952518339*^9, 3.6853059537176065`*^9}, {3.6967608776432834`*^9, 
   3.69676088094309*^9}, {3.6967609151895046`*^9, 3.6967609377087526`*^9}, {
   3.696760993933354*^9, 3.696761073622054*^9}, {3.6967611222038827`*^9, 
   3.6967611349350204`*^9}, 
   3.6967613481293807`*^9},ExpressionUUID->"8c08837f-8e1b-421e-be78-\
0bc82eda6287"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start1", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start2", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "//", "DateString"}]}], "Input",
 CellChangeTimes->{{3.687000687380389*^9, 3.687000691123763*^9}, {
  3.687614865311994*^9, 3.6876148655927954`*^9}, {3.687615693446018*^9, 
  3.6876157159117823`*^9}, {3.6876157613395433`*^9, 3.6876158485145035`*^9}, {
  3.6876161174929743`*^9, 3.687616121566601*^9}, {3.6957146336464562`*^9, 
  3.6957146442638135`*^9}, {3.695714683683401*^9, 
  3.6957146874316454`*^9}},ExpressionUUID->"ca58564d-e2c2-4c41-a41b-\
4195dc58339b"],

Cell[BoxData["\<\"Wed 31 May 2017\"\>"], "Output",
 CellChangeTimes->{3.695714691871008*^9, 3.6957281132851152`*^9, 
  3.6962338966179028`*^9, 3.6967607209181795`*^9, 3.6967614646181746`*^9, 
  3.69676153070809*^9, 3.6967617322874737`*^9, 3.6967619060619135`*^9, 
  3.696762055027141*^9, 3.69849774408033*^9, 3.6984978125269766`*^9, 
  3.7020194263341355`*^9, 3.7020197015737047`*^9, 3.7046909729002047`*^9, 
  3.705041397935094*^9, 
  3.705251975042736*^9},ExpressionUUID->"10e51504-7b57-413f-b206-\
88c54f616020"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<PUTW\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OUSA\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SCIU\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7046912590027647`*^9, {3.704691320868693*^9, 3.7046913619411926`*^9}, {
   3.7050416338567667`*^9, 
   3.705041640480579*^9}},ExpressionUUID->"9ec59700-6cdc-4997-9164-\
7d1dbcdd846e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/m/9b5xNmnw=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/m/9b5xNmnw=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.977123795454931}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.9832547697967541, 
        1.1058742566332203`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.977123795454931}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.9832547697967541, 
        1.1058742566332203`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1058742566332203`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02763148364738066`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "40.02225398917557`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.7052519916019287`*^9},ExpressionUUID->"b3fcd2f0-2efa-4432-9ef2-\
0d94ca1a7211"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.968139426191012}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.974272910443367, 
        1.0969425954904646`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.968139426191012}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.974272910443367, 
        1.0969425954904646`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0969425954904646`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02985007080587063`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "36.74840849204043`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.705251997993761*^9},ExpressionUUID->"ae5a1059-0b6b-4f5f-96bd-\
dd7275880a60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pCjz34OPvt0XXjBr1PT/Q1eyEw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pCjz34OPvt0XXjBr1PT/Q1eyEw==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1268582282338255`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03833089897857604`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "29.398168534050054`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.7052520031846914`*^9},ExpressionUUID->"7c768583-d475-453b-97e2-\
b30b33856407"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/m/9b5xNmnw=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wtnFIw7/B2hyoJs=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.9676928431338743}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.974272910443367, 
        1.1058742566332203`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.9676928431338743}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.974272910443367, 
        1.1058742566332203`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1014084260618424`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.026243094348026595`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "41.96945723912565`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.705252007140696*^9},ExpressionUUID->"b3a6a056-393e-43c6-a10b-\
d4018c5c974a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nk4VPsfB/CJrhb75Vc3UcNVRGq0iCbLqbSIIloel2lsyVWWZA2N7PuQ
nZjSokWmZLndlIpIpQkJCRVddcikrrLk/j6dz1/H81hezzlzzvu8P1/fGXVn
791uEgwGYwq+f/6GL+uPHJLAP8Wm8IOnfIAkynsFVp9mUxaagAulo9eelqPc
dwicY3SCkTKXss8/4EVuusfGmJQFilySiB9YuFNGk7KIDc6/wN7fv4Ey4yC4
0tLx/GY2ZRYfXLHRXGmmDOVaOSeScP4a0uT8eeSnxYZgceGV5PRCykwXcNXm
jzoXuyhbJ4NXNa+0zKiizKsCN0x+PmtSR1nBwJkkuh4uM92H1zfjgnX+W2TZ
Nk4d90kA75cPju2Sxvw3wb96t6zP0cb8PeBB2QL94UDqfK6jC0l0y3zbtaX1
00/zY8GPJmqSDLZSx2uvg2/EvTDkTmP+V+AlA+8669dQ12NKuZKEyu6VB8NM
sc9r4NhOzjntpZQVOsHt5Xr6PTqYV9KNJASq3bp+6ti3Hvh16o7vehzs8yrY
z7P2RE4I9tkOvhPV91Q5hTKXcZAkDCaXvYmLp8zXAbd72Haz87FvO3DkI3ad
PZ+ydSt4wNPjblgarocfYAn/lS1f0nE9aLmTBOfLnEcNRZjfxp12P4VQ8KpB
vVb5EuxzAmwoE/GSU4B9ah4iCf7CCY4RHmfsAscanl5th/djBYMTr+aMmF7E
/MXg6K70W6xiymJ1D5Io7rnDu5mKfVqCd6ifalxwDPMHeND64AnAyQ7idcXR
mL8J7MB3k7yBecy2/0kSWaZWLnFoH78/aXkEp8GKgeYVa7E/UQNYZM7oGLqA
+UfBAt7NWWlnsF8fT5pr88BdOhIL/ZMwf50nLQ9zBDxao2XvcAnzLzhMEm71
8tPt+Lx92eCyk00fW7Kx3/uHaf2aDYEV7tsy+zIx/7wjJCFtOyp8n4H5zcD7
6gtXGYZiv3fBj7WH1q3Own4/HKGvDyUvkmi9vL3ifBDmNwabpfTYPQ/H/O5g
1/mOT+fh9YUK3rR59a0HR8eZk+IbmNcNHBn46auKAPOmgrfsffKtyBb7lPUh
iTTvIXNVd+zTECx8cs7UXwvzOoMLSkNuB+P+wk0CNxxoCnfYjHkrwVekxxgb
DLDPtb4kEXZWPp1rjX0eALvVFEQabcL1EA9OVXz75Ds+n7AcnNFdcvpoLuZ/
Df5X9PuhFwnYp8NRkpg/PBBXdwT7jDlK61MkBD+NGRPujcL8r+hm/eIHfYcY
zfKLwT4jwevsKpU5jthnKVhNpshM3Qrzd/jR+rGWOEYSPtOS2hu3Yf7l4KRz
S/zPbsF+r4CrHW/mq+zEfl+AoxpnXduthPn/A9/rVVyQzML8y/xJIs+ifcxF
DfPbgqfyKjW2rsB+W8CcVP3hS4ux3ylw/U6/uBh9zL80gHZ/sTXYPnRtL8sE
8x8PoO33wvEA2n7f93sgSZxgqEhH4fkKO8GXS2zYS1dj/iBw/DoPNUtlzH8W
fD0iq61JBftVD6Kdz9oRRHu/4vqD3xR5dUx+ofZffhFYQi68UacB9+dHdFtv
CyaJW7Iy/WHLsd+j4N6sBIcHBOYvAFtqtywv24f5HwbT5qPwGdzvZKNn7Iz9
eoeQxNX/yZ0KdcN+c0No+xWjDjwnYzDe+ijm/xRC21+4vx0nCf2kRt/UOOw3
C7xffWZGNe7XzHtg+1V/JKRcw/VBgt/9rRioUo55TUNJ4sAP9T9mP8M+74C/
G/fd1a3BPgfBmhvDbHY+x7y/hpFE7kVvr6G/MO8GMPFxU6VNIeZ1D6Pt3/wB
sB13z54Tl3E9yIfTri82AquqRq91kPtM5XUFR756KDJkUrZOARM7VdO9F1Hu
kzlBEuubXZYL5lJWWAfOdcxcYKFD2cwJvLXuttu0BGWfRHDPD/bBJFnKggqw
fFDwY2Mpyqw1PLge8/pk7wT2yQHXH/KVl9CgjvPjwJuu1+6LVqdcewN8Z7D6
0irMK+4G79UwvFz7G2VhdAS8v7wR/VKthHnLwM2ZJanxjTj/LnB7fbXx7VvY
98yTJKHcP0M26W/srxS8uHXhWzsRzvslONBkoqlsEvPNiIT9ytnq2fQI9qsL
vv3SqdwBjzMvg9la4gP+PTjvNnAr15sr+QHX63Qk7XmF2lFwff7WvBES1+tu
8KKQ1GsnpnDek2DXxkHdk3g/0ZJoWr8MazDPa27w22HMGxJNe33t92ja68Ua
MSSR/rq7PGQeztsKzPrg9GH+Epx3ILgoYlAtF+fNOwMujZxmvFLGeTNjadc3
swAzAlwGJ+Vx3sfAZQnGbj7fMX8huEPXQD9sDnVc1Ag+1ikcHltGmbs1Dv6f
teZ6jqvivH3prs2Po50vrgdnWuRKP9+G+cXgqTmvLpTa4/y94kli/IpIL+Ew
zj8HnKhkMT7bD/M/ANt4TA1oxuF6HQYvW/xsxYUIzD8/AT7vqf21wzUR12ct
uGWBl5HMecz7EdzYIZUpKcC8yokkEdE98d7sNOY1Ac/cyHkWVop91oDZKWc8
TC5jn//QzxcqJsH76fD9koqXmJcNduloZtYIMe9B8PKkxJipcvz/6QfvW/Og
srAE+5RLhs8PC4sPaWTiejACj7YkZgxEYX4XsK/oie+dQMyfDNa6V1dx8hT2
KZ0Cn3/3GlqO4uuZBuD/ArKnJZMxPxdsxMoWq9zG/AkptOcR3gT/a7ptiF2F
fa5OJYlLS7UL7xZjn47g507FAdIHMX8sOFRxzbyGUMx/HdyRKiebH4/5u8E5
VXtctI5jv/Z8mI+v6vSAL/Ybxac9r/gauK35QLNTDubvBNc/2U4uPov5JdNI
woJfZcnDefVFgBt07Fw38bHfq+B3Iv/rxSmYvz2Ntj58GOm0+wl0wJFpQ8ez
8PWsS+BqbZOIGXnYb2s67fr8H+CRh80fZ8Rifq1TJJE9p3iVuyf2KTpFm4dw
AiwbXPrGPBLzamaQhHm9+LgUD/PuAmdzHq3cfRHzBoNVHnuGauZjn9/AG2/L
MJqfYp8amSRh+yy4c6Ad81qC81foWN3pxrwBYKkyFa22XswrAOeqte4dfIR9
Ls4iiZds1aXVTdjndrp5flm09SE8DS77/MnLqA7zN4CflLjf8H6BfW7JhvvN
ODSmJMI+fcCB56+0BTVg/jywaqSB6ZIuzF8PXi2zeegxHmeNgNUS/Itv1WCf
R3JIwmTS8V4GPo84G1zx4GvxtkbMfx/sTjatMEjH/EM5tPXAm5dLy6+QCbb6
4XeuvQX7vQu2KPLQLe/H/B/A8crh8opizK+UB+/fKuPyK6VHqfzG4BsynG+7
pCjz34OPvt0XXjBr1PT/Q1eyEw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/m/9b5xNmnw=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1163662424335228`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0323186870527655`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "34.54243795890822`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.705252010909248*^9},ExpressionUUID->"9b275da3-6ab0-4082-bbe6-\
7f600cb8e5f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pCjz34OPvt0XXjBr1PT/Q1eyEw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
b/WZ/APeX6tM
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1119004118621452`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.032929394336666494`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "33.76619686636803`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.705252016762686*^9},ExpressionUUID->"17f2c2a7-40b2-490d-87f4-\
492b273adb4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pCjz34OPvt0XXjBr1PT/Q1eyEw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tYTOseB/BRxK50VaRDU6Jdijl0Q9SSkq00yWlH1HR3616jy5TpJtJl
UgylGqGdbqYtIpcKlWwyG0kltQ8RK4p9sF3K/u31++e8nod8nvdd6/2u7/rN
PE/6fmEbA+VYLNY3+PvPT/jDfe1NU/jfMVv4RzjDh6bqTQe9FOUYS1eBl9+v
r96CHtwOFvD7s2Jxf/hLcNnCmIAwBcYSdR5NbRZdSlBSZCxbAc5yNV7983TG
rCDwXgc3dzk1xhwR2DN6asnqHxg3q/jSVFBh3k7eVMZj1mCfDOc0t2mM2f5g
hcpN7xTwftxscOMjcxd1VczfAGZHtDVEaDNWs/SjqQW6umdi5zG244EDn/t5
6xhi/kywrtkH8cgCzF8P1qxrutJlgfmfgn/rLJW3fTf6j3nb/Gmqx2q8/j6f
sSgD/PVakfykIcbNdeDIt8tdQvUxfx+478uVN/bmmF8hgKYaqipedq7HPmvB
G806tlg5YN4esFnsv1PtbDGvfCBNPeHZNbW6YV4zsHT9/NdCL+yzGnzbp6vd
xAP7fASWX5IZne7JmMcKoqmkrPPzLNAikyDi+uZNYGFF8KQJXOc+AM8by7G3
5GGf42Djl/rOAm+cB6Ngmlqqp+PWsgfzu4HTLBW1bAIxvwAsfm35QRyGfX4J
Ju4nM9xOU3Idx/YmBmF+V/C/REqOw7ifEwf+ul07ZTEf858El99IqeQLsE/9
HTS1q0uX7R6HfTqDb2uIpXQA5ueDNzmqaMVHYH4JOGfWjZaHUZj/NrhbR07Q
mI39rttJU6X+36t/zMJ+o8BHuY1tOrguKQZf3Sg675qG+dvBjvumzn4qwvzv
wUk2iq/CDmG/4bto6sJ75YuTCrDfQrCxmK/ecBTz3wTH+xpfe4/r7FHwUXnB
2d4izK+zm6Zkl5KSdhdjv+LdxLradXDMHM+SkNOYf2Q3cX64dghxvsQuhMjL
aQIbJdxc+laM/b4KIc4TaYbSlK9L3KBTIeZfCRZ6Xmmzzsf8wWB77+Fu/TLs
Uy0MnqfqS11VHeZdDo6uDz4TeA7zBoLlTaVmcWcxby5Y76LJ/lM4T7Lp4UQ/
LOtwYp3jB449bKA7uhnzZoFDpwv7nsdj3gtg3ssPKu04H2yLCJp6GpceNy0J
+/QBu7zInGmajPNwIILoQ3ouguy7H6xeGqv+qAT73BpJ7JfsAw/XCZJcsD+Z
FPwp89ZS01OYvy+SeB7OlCiasrD2VpqM682p4IQZdPm5k9hnTRRxPvsx+LVw
bE13OeaXi6Yp917pN7oS85uCDaz+1NxRgf1WRRN923WBs7U8SjaUYv7v0cR5
EuMY+DxKnk2LwPcrc48h7se7H0POwzewzURA7wN8v80L+HB/H6NDU69gfi74
oH1M/arLmD8B7J4dOVR9Cfv9DNbaMzLrbjv2O28PTfU3v1q3og3zbwBblvzx
JL0F88eCdbvDtHUvYv4ycMfmr8K5NdivfixN3c3zsZHWYr/rY4m+eTHg4Jpv
/UcyMX9pLPF91dwRS3x/cJ3iaGqKk5/Sain2GwkuiNwdq43PIz0OTu1O2zj+
BPO3gYtS1qwoHcL878Cr32c25fdhv2Hx8Hnwct3zgsZ+j4ELDFpWun3A/DfB
dx7fUH72EfO/Jc2blUDsHzsCtnHoqFT4gv22gCsOnFUIVXnH5KfBHsorIiLk
GUttBTSV4de4+vwMxnbXwIO2v3Z9V2UcPgx2rW6ImqfJWKKRSOyX2YDHF9k/
XTCNMSsYrO7MO5c5mbFoCPzfBsHG5JvYp2oSnK9aUfCpG/MuA699NedWTw/m
DQCXVPonej3EvnPApxVfxp/B6weV99LU4lXeA1a/Y59WYHXXu4/U8Ho7X/C6
KbLTZb04DwfBnzK81MrvYd/nwU2/e1IzOrFPcyFxP543eKYjb8AD84n2g+WN
7RX/xPs1/woO/h+vtuM+5n8Cbuxtte7E+0vTk8n3fzaZOE+tF3ynj8PZ8Rvm
nZxCzDOrBlzy6URBYSvm6waPGT3W8BzAfJNSacpPmpuz5hnmW5hKvH92JXj+
hculZu+xv4dg1cSRERauCyfAb75flBWNYd4f02jKpGZDRRR6cCN4cm5bX/Rf
2NdX0rL56cT8sLjguR7WZQOTGHPiwd8Skj8Efsa+/gJvn16+Xfk79mWwj6au
zbqqvlab2c92AfcMLHpcp4fzuYe08AT4hLHpD+y5jNXYGfB+PtafylPHef0p
g5zX6AxyXkvIddktsJOzOb/LgDFv7X6aSpn7yoAzH+c1Apy2vIj1Gd1cBF64
7WRIrQnjsVZwYUeF0n0zzD8GvjxWfC/TCD9PoQfg/WiW29iZMh48Cp611Zqv
uRjz3wDf31vV64+2ewN2MNQy1zHH/DMziXVOM3jEcc6JTmvM+xrMjy+Yss0B
8844SFO1HPHDt46YdxVp7lWwfhdr0an12OdLsPjEgQ4tW8yrnkVTVgEqyxLd
Me8K0mpB4F9kmt0SD+zzOThstvo01f9gnyrZhFnLsonrOf7kOi8bzKpV2km7
YZ9KOTSlcZbvu88F+7QEm/KHjd7heVwe+MAfKZ1x3pg/EzxYdiv1qyfmr88h
8tktzYXvm2vxvjc3Y5/bcok+JRngxN6Z8lUWmL8ul+iX9SSXeH+iLSLi+uY0
8Jzi45EaP2H+WhHxPOweEfG8XPk8mmoRpxcr8bDf5Dxiv1o1WEQp3GnfgPkf
kQ5nHSL6lJgcItY5Z8AlE6Un+7dgvw/AOfM3vZ3APkXj4KEXx04KnTC/UT5N
TQ/VCMxYgn3K8on5kH7JJ+Zn0LCApgzH9cJ5yzGvawHxPHZx4NkxiRwPL+zz
E1j5PN+iMR77NDhMU6OtQ6b5KZjXGXx8QFiWk455+aRFErCRYPirYRr2qXcE
fn/UFzzoT8Q+14HX7Iqb7CzA/FHgn/XKn/+yD/MXgztLxrb37sf87eCVSh8V
Jg5in45iYl0SDr54/ZTj9VzMXygm9rNawXGft+bp4zpnFHxk+M0xpwzsM+Qo
TVH2W67nZuM8iMHDgX6LHQ5h/utg7yX07Qv4fNwRcr9Q+xixX+0w+K1qA9u5
FPttArtFPr83+zTmfwX+dof7l28V5tcshN8XT3uZn6nD/CvBH7uujurWYJ8v
/m/9b5xNmnw=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt1wk8lIkfx/EJ1b970Cprk6O1Symr0qLDk1JSGUKHTYNyluRMyZWQK61y
tTKL7JLRdKn8yw4JJedK6NImR49Fp0T6f3t+/16vjvfrGfN85uuZx6TutN96
jwyPxxvF769/45fglQPL0D8HV+GPsJm7WIav8ObYxfGcJSvhwkvpsSWTOHe4
waJ6fTubqZy9u+FnV2IKOr7lLJIXsszrwYUGizU4NxjDZkpPb85bxJnnAq9u
lDsaocdZLwleaPppkacyZ+l0R5Y5ZezlsmQy58Gfv1q2Z2v454GvVnOGI7f6
lenJcMcFCXBd/LuMXFnqvwavnaGtozuBM9/AiWWkOs0frs3lbCKEo9xHr9ep
Un8sHDYu366UekVX4DKvlMu8FdT/FM41zlaW1HDnF+50Zpm2kMSITDvOSdGw
e8x3O2OknKUX4c23P32pUqf+R3DAC/GQlYCz2oTdeL0JD3zX7KQ9i2CjSf9c
OmNFvW3wmvi+wxu3Uq/sHpbJKg+XvbaFenXhsaDAIbkjtGchHFghvmAWQ3u2
wNs9tUSqyZyFPBeWue3SZu95mnOSDmy2rvbcnCza2wYeflB5OTON9vwbnheZ
1NyXTnt+hsulhm1mZMkPrjj+cWx2bD71W8Eh2yf5/UNfzw+GMyzOdOeJac9P
cErE6ztTRLTnPDeWEf5SuDcuh/ot4bctI+o9KdQfBL8pHag1pz5hDnw+SywW
naM91d1Z5repkkdjdD61jXBgasDvT8KpPwCuDdd11D5G/SJY4tQZ/EMc9d+D
q6OtkuPo+U3MPVhGT2NBQP9vtK8v7C/q8YjOoP5MeNqiC73PaM+GKrh25NpH
hT+p/w18wazDvjKX9vX2xF6tcRYbqVeaAasKTEc0af/BCrgheVr9ZXq9agOw
u/okr6E/qF95L8vICYKOltJeHanwwazhWbLUxy+HyzM9bLPp+U36YLsnLevn
0/N7K+1jGYX3jooOZJEJXOJqXWZNe+j9Ba+8MvFGNu0n7IVrQyWhohPUr+jF
Mqc11g+5RlH/CtjA9Vx1djT1u8IFBvp1TbSPhL+fZWyK2q58LKBeI9jhsYpS
VyH17oHrHq63rMim3hPwiuzCpWJz2nOaN8s0dZfynQJpz5/hmWldeQOG1OsE
exm1dJXoU288/Lzs4oQz9H5IKoZFH448191Aey49wDK7PHqmnqTjgl3w+je6
babWdD0ch0fZ/xRpBlD/ZZhJ/9lIkEj9T2DRQmU1QSTt+YsPrm9ZN7e7nrRn
FDzso3D20UHql8CfizpX+NG+vEdwrKbBPQ9/6h/vi/vN9Xczouj6lB6Fb+5w
dsr2oj3FcLWYl+tpT/2tsFxgd42xI/XL+LFM/l5LRVsh9S+A22slRvvo/sE/
D1eWNctnu9C+D2DlytUlSiup/wscUzvF/eVm6tf2x/nTlke4rqH+LXDhWE+3
viXt2wQv/Sn1/vFVtO/o18cXr+uaRcelWgFwvXDCElvqF8CVjZm2kzZR/2G4
qTKpe4YF7TsMVx+R72ulx3doBmIvo1Sd5zbUvxlWnaE27z093uQgnJd82DTA
iPqz4R1PDK+7LKV91Q/i/X9V6DLThPa1gK99tjAfpvu50B8+lMb/sI1P/Vmw
/osQvf+O0P35Ltx+w7DuwhBnwfogltEeGd/XR/f7MB94+v3IIiO6H0t+g+WC
TWr2u1N/JTwoVpm/xZn6X8NdWqL79U607/5DLGMvl9wv3U37psPzlPbOHh9E
/RVwrufTi7e9qb8f3l+osKePjgtnH2aZBcvcvlGn63MwBdbQmFi5kd5/amXw
n5OtFLzp/Sdg4WD3X01LTlHvqmCWaS4PGhs4T3uWwocCi0fc6f7k3QN/17x7
2PAC9SocYZltsQfijc5Q73L4g4HaZTFd/zxXWO9gwGo3On/SS3hWZUJ6HV3/
0hkheL83mc/85jj1GsLXew2XqV6n3t2w3j0rcXEJ9SbCqve1JitJac+pofh5
IAxva66kPZfBk8p12YVPqd8RXvgp49/Ht6k/Dg7xn29WX039V+H+8/lVwira
c0kYywR1Tu4yqaE9HWCXd8KTTx5RfwwcUndjTL6V+i/BdaWGQX/UUf9j+FRj
5doH9PWSY+Esk/3uwImmeuq9AJsPMMaa9POP3w7rRVYVGtHPAxO5CJaJ3pRg
mkX3b54Ybp9ddT6iiPoewlbrNs1QuUt9446yzLc7r3TEUH/SfNhxR8c24d+0
XwH8fFn1gpRy2q8ZDlqxUHKY9ggbg1sODPtF3qPeHyNZ5sWjNxvf0/EOa/jq
7sX7cuj1iEbg0nXlUe10/obvj7GMxVODuceaqVcAy+i/2/rgDvUegge3mU2N
pNcv/QhX2KukltPXD2pEsYyHaOvcimfUuwlWCxj7vLufegPhREGuT0EP9f4O
1w5ev9f7kvZTi8b95KfWHTJ0fpMN8Nm3c7RH2uj77Qefzh4wzm6g/rNwgMa4
b9fR97OhGg7OiGxQfkt7rovB9+P93b7If2nPA3DXlnR3RzouPQMz7X+KbUep
/w4cuky75eaU11z/IPwqZE+8tiJniddxlrFu++Jco8a5Iw0Oedlo76PFmX8b
njh9zpdFizmb/Aufjf805m/A2XtWLD6fqOSZ7lzOWU8KK19N4q214ix8Bb+M
Hz5ZY8M5aWYcPj8tboo6uI2zdCWc2FhgPdGFs+AWrFNU7fDRmXNYNzxHz166
fwf1ysezjFaCZ+z7cOo1hi/5rPR96U29LnCdRWXtOB/Oos6vx0t28XI9ODdM
T8CeCqeZs06ceYawxu1rfqrbqd8Z1tv3wK7ClvoT4ButYZ3qjpwHpyTi8/bQ
y7PtZDUD2GRDxfMwB+oXwvpybp3Pgqg/Fp5q55I3jfokV2CHG24pKn605+IT
eD91a27V8qI9d8Jyr2ssHNdQfzSs8/ybxihL6r8Ibwr9wG+wpv7HsODW5Nqb
a2nfHUn4PHcz+td8hvaNhJfE9Sdfpr7BItjasbhXRUj9bfC+A6Uq/XuoX/Yk
y/S2ZDXKutK+4XD8207d7bQ/vxDuKhbL3SebtMDCU+3S3+n76c37FZ9HZznf
Gk/nE+nAosV17wbo8Xr5sL5i0PJM2l/4NzwzfDQvnvZP+gzHBr8vzqP9pT8k
437wYm9H+EraswH2sMt5YUXnk3yCVW9NO1ZP+3TMO4XXF6Zw0Zf24FvC4W67
DCV0PZkEwTZaId3jf6E9h+CArIDHU+h64mmcxvXtMGGCRTz1boQ328qLlyVS
bwCcZqpoXnaCekWwmcySrn8iaM+5KSxz98mPWolhtKc5HDe3rWUqPX+YL3zy
DyvftCPUnwnbz+/8Lu7/13MV3DqgmPyBnt/bLBX/vyj0qs5JoD294WLLxoID
cdSfAT+R76gZpT7eHTh/KOeVcwz1D8CpG8qOPwulPfel4fO5gWGoMJmuh1Q4
YcvVTG16frVy2PCSU/85N+rvg7+X8U/Sous1TCmdZXy2H6pKjKJ9T8MNlx5G
zE6nff+Cp9vkGB7Npv5e+OQd+4bhQupXzGCZ5Zofz1eVUf8K+FRIw9qMm7Rn
FyyUPLw3p/z1qv8B8J/Gtg==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7050912*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1098916934525036`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.030085778752755976`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "36.8909079127903`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 
  3.7052520229774933`*^9},ExpressionUUID->"fbc437b3-6595-46d0-bc69-\
62cad311a77f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<VTI\>\"", ",", "\"\<EDV\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<TLT\>\"", ",", "\"\<TBF\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687720875048324*^9, 
  3.6877208755336103`*^9}},ExpressionUUID->"450dc594-3d9b-4fdc-9103-\
d430ebee1359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
R/UcoClg6g22bynaTP2gCeerlc8wuUX5bWDncYV/B9P9fOVeOPTXiZpty+n8
+gsfdExXMj9E84vJ03A9z5DcZjqX5hfWMOfUnsCtstTPQfDI1KRwSTfq51RY
iiNxYFo+7e+ZpIXr8RTfj89VaXxYCe9cLCUyvJr6OQAuvjvLf+hJOv9S4MCs
Dbc9Ouj+97mW0P2aiMV03M+M//gu4ieND7vgP8ktFztO0/6eC/D5LzIh3tto
f08ZXLa+TEbKlu6Hf8DVT+SeePvQ9c53Bs4X5e2Zx+Npf+U5eHHSkeHaNF5l
lsJdirpGnTcpfyfc83lLQ7UK7Q8ery1gbnX+qvyxnK53CbCRZm6D30raX10M
60aqmlgdpvzt8LbXBWbpOZRfYaaA0Qie3yVIo/ovhmsTB8yZlk31LYDFVVrV
hh6k+rbB9o7Mgtb/jRdjZ+Hvr4sbaraW7tcZ+JTzx0i+O9XfDbauOfautYzq
OVpHaLxLWgAPPec+8xp9f+VWeIHaMb8hC2g8Pqkj9PdHS88W9N//xZ0Htx62
8rycS+PDZrjfflHlaPid5+2VW4dS3vvwg1kho4al0/g2R1doPiTlAp9vPtXZ
sor6IQLuNz/1vgOLnJrzSDOJ8n+Esx3Hyj21oXo66QmYAZ7nHlh0UT2PwP32
50dnw57z6tIy2ih/PVzjoVP7VZn2gw/WFzB7g6LXWm6kfgiDi5LKStyfUD1v
wvtn1D8a3kn5a+HN5ZFdyyupnyXmCJhzldMXmx+h/NpwTfrsKLc4qu91uP9+
tRrYrsjuQLmA8osZCJg3VcuVK9dRP2vBnxuzv1xXo/xr4D8f+Ws8R9L922v4
hnRDVxvtt7MUmYt63P4j7n6N+mEqvFx3Z6mnEvXzapiZtmDtNwPq5xC45Php
b63PVN8/8LxZhmsr9Oh6rTFPwHyzFk0cuYjmb1Zw13q9756TqZ+D4L8X3eTc
DlD+y7CD5Ygv6RVUX7X5+Pnxd7LdzlI/r4CXnqiZun099fOe+ULHz/IiLLYs
dGqLNuUvh/8cC61fQtczqeWGAuZFQbPdQGca7/zhfvtPvZNgqwFXVi+m/atJ
T2F7p8KszYk0Xn+HP4klSqa+ouufzwIBcz1l7DP1JzSfT4QvJjSsT22k63fJ
AqH1hfYOWOneYMsWXcqvuFDAREYFxKSNof44A1fVlMdMYag/iuBozlLDbTrU
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VqgdPxIfxT5PwAa2FwLt7rDPR/DToedaWL1n3lo4LSrhp1ot8/bWkAuWZcda
HcxmXiu4bp5uoHpznxnwPa+Va8OusM+v8Ift59q2ZR6jXl3lQmBseqVq8/W3
gPUdG/bP5PUXr4Y1crq1NtVmn1XwIX+bmS8E9tm9G67f9qM3LIyZ3xxuFVRq
6WrF/CvhNqlHr91ZxfyRsMfu1qveidinRnfcb0PkDn4R7HMC/PWab9KFOOZf
AWt2nfagoM0PRf4IuOwRXsfxZHQXrhum3XJaL8XfJaY95MKUxa81OyorXOMC
P6nrP6NnB4V19sEeg80eeiQw/x34a6xZgJTXK/A9HDZm4TzfWPa7rKdccI/t
OiY/jf3uhk9nHx+dfJH5b8IGhi4pIew/ugy2PDN2T9IN9rmzF8bTDrdJc2+y
z+vwwwlOR2c95Hh4AzuoTIvYWcDxoKKJz7sgeaRyl32PhB0qVZW0sthnApxh
uPlVaQb7fA2v2f2j3Z6XzNtaSy4sjtxYFPWJeQ3hsUbTBjq8Yt758Nulk/fk
8/5TegVPnLDDcetT9tmyt1zwuto5WOsB8w+HY7be9k7g/S6eC3epOmBVz3yS
QPjQE/92hvns8x98c7RTgOM99jm0j1xIOrj7fvZJ5p8FJ8u0J8xbzfxb4YEJ
tWXl05j/PJw4vOfPOEv2OVhbLvQM2uZ+woTjQQS/XtRmoWZ75veFdy86rt3w
lOvZWTh8ef/I5BbMnweblL1/6TiC/U7vKxd0Rk93qXzP9WwTnHq36vrDN1zP
YmD3ckeXcY+4nj2BR/7tOkFWxfX3Jzw5MjT1Vn/2u14H91d0g1vftuz3FCyJ
WxyQxvUuOhu20ty6M7qG69l3OCNzV+xoLebX7icXzA/s93PowT4z4Uq3kTG3
dZi3BvZJ949ezj50tPrLhYamrAolc/ZtCe+2MniUye9X9gCeWPr8rEdf9lkN
l2c2pj6v4/rbc4Bc+P70jeTiS66/k+FvSmbat0qY1wM2XvzkfOd77FMO66ZJ
lwbGcf3tNhDroZvDr/7hXH8nwbsk3zttPsb19z94+pOhc1cWcf9wAD5rPSBj
f3OfXQbJBbNdQ23Dk9mnGbx914uqSH5+mRu8rPXIjk28nur74bM99N26lTN/
Chy4SifqZy37NBmM15dvslDj+yu5wH77HH0y+f5Ge+HFup3+zbzJ/LfhcYZH
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
54P/Aaa8l8A=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.8433090336425355`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.8433090336425355`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VTI\"", "\"EDV\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3633673271498252`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.12119832303563266`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "11.249060985348711`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9},ExpressionUUID->"80697788-0050-4d96-8a10-\
bd7cede1eba1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wX/vw16AlQxEnku9wvy/wZ2ThlZuH8L+CBDlC//9GBlgofejrDqwW9e9wIAa
zP8LPKsqi7EBr3en/Dg+cSPvUF3oAqzvRfBh2kZL3iJ8P1MDDr+TljffFfMP
gIXOp2iZiPGF36dUPAaPuKpuYwZiP/SDhd7HKsiM5xOu3q2r67B/GOvBAXNu
/s2Mw/cdB8C3fcyqpu3CfvgK7rLqUJ15H/thnjifOKto7hzZi3kJ8NtjDYab
5fH9/T6w0HmchmRwtqm+7IkCfB8zewJf+Dwcey2YRv4Hz3ftBesPOFup38H3
94lgTiunvFgZzx/cB4csPND7Dc/ncVdPpHxepytYtOdJkC2e75Fkgxeox33O
m4PnDXrAQueZaM6T+MTuwZKpnw/g+b6T4OfFK5XKIjFvMdjs0NOzi87g+YIp
k/nC55EYJ8CeyhnBK/F8IqsI/HeOQ4LIMTx/1g7efFFW7GoQnj+bOIVPfHcS
W/GCwPNnOuBbYvu9nL3x/NkNsND5tYa3VNPEp8L1/aDvyM7B82da4I+bV5rl
8PC8lD04cTTjvc8tPD85bhqf6H4uWL7uC56XWwbe8EvlmEYp5rUBP9U7I/Ek
D/OGg6dIv25Q+4jn+WgSfMJ9gdvxsVY8z7cEvOGRmOX9DsxrDZ5Tr75sp8p3
Mm8o+H21g1bgJNK0q+C4wIVNTTtIs1Wn84lNfk9yVdaQrtgynfJ5gmAwLW/q
DvlPmD8bHJZgqZtejPkbwM93Gwe9xfN7nZaSfOJb2eWi+a5YzyCwuNZJp3t4
Xo+eBb5ebHbcexPmfw7WDPYdzcDzepwhcIDe08MCPN/I5MyA/l+58drvq9if
teA1RjHa8m/w+v8E1yl27F9+GftzwUy+8HlMVjo4bfKXD5FTsZ7V4N9WMecP
rsO838Gu8lOPeFljXrlZfEKlcKKYmSzm3QieL6ei8BPzNVSBo1uqCMWX2K/9
4IOn4kRSb2G/Ss+m3C9MY/Al29vFvfmYfz94xqumKdW/8f7/An7V/9V2CM+7
MubO4RPn92pbE/jrWXRwxZ/LTVs+4v3lCRZNtrl9ohPvrzNgofN3PrPm8ok7
zLVTeJOxnmvAV963PhIsxfzu4PUc9uv2EOzfRPDAsm6aozv2bxlYoXtYKuIo
3v+r5sF47aXpyAzEfnABT+20LF2Ugf1wGqxNbBjSwl/PKAEvnax7cw+e12R9
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
HJ2M9az/SOrP6/+J1Fc45RN5ny7Z+IlcP3nyJ/I+UdCnjuyniAV15P2NzLuO
vO9SJoLPvbikObYA89+qI/tbUns1eT+j8FTT94P71eT9Iy9XTfbbhbVq8r5G
tUZD99fiNGR/SJCjoX9f8F5Dzp8f85n8PYDo6mfyPleqAq8JHD9wxw/cT+v8
hfSXdjQ4Puit35D7uJ92GXxsRXSecx3up736Qt9fdKiH+7+T68NHjzCvTT15
ny5YDlZ2zLt/JBT306rAmY6Hh99Zgvtp7RrUzNPe7+LVU3E/bWQDef8kWtpA
9vukOxvI+3JeGy08T82uzfw0CutpqSXv6yWLtOTfyyVasp+oOgMuHNwzfONK
fD9k9hX6825koYE/9vMC8Jjri54lL8P8oWDDt6+2fXbB/KfBnrEFHbp3x/xP
wJanN3tOHIj1FTaSPNqtjeT8eKfoceEjcKKl0rHTS/z7glawoaJD8L8I/PuB
oG9qhslYK+hQylqQBj4xqyr8ylvW4gfgdp/nFa1uYS1rBtvsXdZ5eRFrJa8J
+vdFdqXFAdaiVLC76J5deRBraQnY2afVYlE8a8U38IjII2vmzWOtHfgdvr80
6I6fGWveTHB1xXcbIyP8ewct+ArXx6dtJuY1bCbfL5gGbn+7p2zUC8y7qZn8
fQSnHmydnTRybw1rfr8f5O8tRJN/kHpJN/wg11+RBN64f2fWgAisZ+8W8vcc
EocWsv8r92oh7xNVCS1kP5qbD/7Q4eIJTwvsB7tWGG8pTc37h2M/eIDXuUe9
UzVg/v2tJB//JvikUeqKiDuY/0MruX5a958wHiwKhz7bg/WMBW8UZ50ZeY21
8PpPUl/JO7BO/oKfQ93w7026/FIzL3SslzjaY32jqcXZ4FAm/fqth1/Y/G/A
Dc/q9NSlrJWdfquZPaZCnfovrDmjwTm/c0etPc5aegns6di3je1m1oqX4BMd
rEKrprDWtv+jZvRiYtxOt2HNswavsLNJrLRhLVwGbncm7VakK2vViz/k33N1
/6qZnYOly1QBrAVW1OIlYMNU6wD965g/HPyv+PoAz0us+Tr/1IzFfk5k3DHW
Iot/5PykLuCitx4hCQrMvwO8b5R/iV025s+kn5cM52iY1d4jVvUqYS13Bv/n
86oQam4G+D/1EzwGd78ROaLmINbXSUfDFHRJO377DdZ3K/hQP2P99U8x/0nw
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
KdnZPaM4mLceXO6ecfe1Hubt5wTj57bNLuvvmHcyWPTz2MF3I9jj3Ntgg5En
LqgGsBZowC88PDd8Dmct7i2E67dkTKiXF2uZA7jjuu6F+10wv5eQ7I+IPoHz
4ur1mVCsp/58WD/0mtvSzQ7z280n+ytaD3CLv+Byr02Yf/98cn3k3Z1hPbTO
UFOUwVo1HjzbtLZmairmXwPWXab+NTkW88c6kzzi6860vmMXkOvLXw02tnF3
qU/A/NHg11tiRk+cjfmzwRvezHzLnYv1XLlQw6QXHQ6rmcRaErWQ1F9+CZx8
Wjpn/HjM+xIs/rwxc1UvzNvBhXxethsseW134+VP9vooL4A/uR1JPZPDmlMF
bpox7VNlJWu+7iIN46RveyY9mbXIahH5vPbcItKPvOeLyPUX6iyG9fRlnQPn
q7EfLBaT43IXsOxOVXVFMWvB08Xk98V/wRN6Mo+r6rCfhy8h56t0XkKuLyd0
Cbm+0l9LyHhUDF1K9uO0TktJv/G2LiXXQ3hyKekn1SBX8v3cueCr17ziVw/F
fggET29R9+/UCfvhONjjZdTEthWYvxRc4xLwfFkj1nf2Mg0jVeqVLn2L9fWj
lh5bRuqtuAeuFD+IHVGO9W8EpyWnXj19Guu7ebmGsbJKjjp3H+t7BMzrsc9Z
pwjnh6LlZPxxtcvJfCMwWAHzfYzVxlHtsb4HwYvUOeYRDdgfBSvI+fG/rCDz
h6jvSvLvpcxKOp+pV5L+k/RapWGM7O4FjqzBvJPAk3geh8wuYt514Ccbu9QZ
L8d++Aj+sknh2SrBevYQwfzGDbMo88V+ngi+mpQQ57cI83qAJXke1xossN5S
sJFho9/k3ljPbqthvZMVNivhy0e2nuPAPcfMtOzVzJrnDh48vK/9/peshfvA
owxq53YrYC25Bnb4F5dk9441d4wbzNfzz3Q2MMN+FoEXNhnNLXbA/HvBxVFu
sq92mP8KWPixdVdQEOZ/Db6YUF7n8Yb9PtEKdw3jf612/VN71tJI8FLVRn2z
cawVF8FhKdIrbVZg/mrwzfB3CyvmYf72azTMq4nT5qf9rmXreR5sVmf+qjCb
NfcFuM2IjhM1UtaCtmthfT5wZNOdk6zFI8CyvQkt9ltZc87R4/wKcAf+PVVL
B8zL8dAwf4zf+6aUsMel5mCH1zkJTj0x70LwhMeJpRxHrGc5eFb9MZ1z87Ge
f8A9e/uaDRvGWj7MkxxXzQfvj11VtGMK1jsE/HGO+a2/E1jLflIrh6yD9XyB
+8tQG9YcJ3DfQclf/esxfzB4VGv3OSZNrEUnwJuumN69e5e11sQL5j9l1MkH
rax5jmDjn4a+LtMxf4AXuR4SmRc5X/l9L3K+glneGqbt4BP9zghYi7eAL/r+
qQ3mYv6j3iSfshi8OzM7ZP4QzN8Ivr3mwY/mZqyveD2sDyVWFb/NsL6HwaV+
F9cusMV+KAQvy7b58rMf9kPDevJ7wv4b4Hn+szr8iSXWNxkcuX3r4sHtsL53
NpDzF3wGr8/Q+Rv4D/ujz0YN4/XEbnC6EeYXbCT14N8CJ4tnrZNpsL514Fb9
/DNz22A/9/Qh56Ow9yHXQ+sJ/mHf+mibCdaTu4l8XjVhE+lv7tpNpL6COPAd
V89n2enYD13FMN7uDg6PzsR6jhOT8c93A6cFlFy++QL7OQZ8/Ljui7oWzHsV
7PR1ZUbOPayn7WYy/oWrwJfWHSwcp8B+2AOuH3zB4XU85r+8mYxX1StwsWfM
UV0f7IflvqS/ZRG+5PyVcl8yPjjV4LJZAYKhfTB/uy3k/BU7wd07zl1duQr7
IWsLqQevEtzJ1D3/2jXM38aPnI/E0o/Ug3vWj9RD8AzscfPSuD4dcH77B/av
zPW53QXnNzN/Mp8qF4D/jlm4YOZMvN89Ad9bMWxbwUC83/0Gt50abJjcHedn
0wDy/VoheHbN+DfeOrje2AbefT96x6RvWN/WAPL7qsGBcL90ao4W6LLmzguk
83MQuPOAv0cCPDF/WiCZjzkmQeR+wp8DPnLLYEyJEPP7g6+vX+I9fSzmTw0i
36coCSK/J5wZrGGmthHazV6K9z9f8J1t9pVp/nj/SwGnXffPORCI64274PJd
oSWlVXi//goWGfofefQb13ObtmqY3lMWqrcPwf2IQ1vJ+05OIXha/9sDmp/j
/boeHPjhnqXlRHye6reNvO/UJoEj2pS7PRfg893tbeT5S6gBf1959d6uxfj8
5BAC8+uAsDttnfD5KB8c+TzZPtMEn+c+hdC8+qHkeU9pF0rex3A8Q8n7HukH
sMW497JO4fh81327hsk5kTr3zS7MO347ycNbs528DxbGbqfvF7vsIOaOBX/J
6DAn/iHmX72DPK+Ko8FlBV5mB3Xw+Tl7B9lf4o+WaJj+m52yb9zAeq6UkP0h
aRQ9rrgkIful2pf0uHx3GMyXarv5PZ9j3gth5HmYWwUe7/Kl4kok5tUN1zBr
jWyZV1uwflngtiGKvyNX4Puu5+CePnHds6ZgPp2dGqZhWfOgQBWuzyx2kvfX
vDNg22GNesFfcb32FJxx03bViXp8/vgLXq0dH3D8FT5/DN8Fzxtdp55zfI/9
6ryLvK+W/QK76ElHbMnH9eTQ3TC+zNL3OvfBvMLdpH/4W6kVLeDLsjcZj7ti
vQZFkP7lzY0g70uFgRGkfyTHI8j7Uy4vkhwXzAYffzEnN3w69qsf+PmloMQO
m3H/4Vgked+qvEctmhFF6ivdHEXqqTgSRc5fWwTutPLMcWE7zK+NIucn99mj
YYaIVvLMzfH6H9xD6sEt2EOut+AL+EWk/aYX8zF/371kPuArwGVpCaZnbTCv
ei/5fmmvaLh/JrqNHd4f804Cp1RE9/F/hNc/L5r0g+RjNJmP5D1iyPmrJsaQ
/uN6xJB8spoYOv677SPvcznj95H3wXz3fWT/WbRvH/l7EK1eLNmf5Y2JJeNH
KIol84dkbyx5Xyy/EkvrOSqO1nNFHKmPLDKOzGfKi3Fk/4nzMo7sB0ldpaSe
il1SMj9rz4OvZemKec/w+fOFlPz9iLDtfnj+uXC9vrUVx1cY+H2AY9XM23g/
OLefzO+CCnC39Y+8Uh/g8ycnnlhmDv4bxFk6qBbvB5n0uKg8nuxPSP/Ek+dd
xbAEDZNUXir2XIL9oAQ/DMsbnO+O/fAT/E5y8feeHph3SCLcD+2fHnMfg3md
Esn+hiAY3Dq7XWytE9bzRyK5/3EGHSDny3c8QPZjRAHUUtkBkp9nnKRh/s0t
GtV0F/t5VhJ5/pdsAefeMBu3KQXzH6WfVxUnkfErnp5M5juZOJnMp8rD4P7C
4EtlGsxfRM1vAJ+75zqsMRvrufEg+XsgbfJBcpx35yCpj/AzWNhRGbl2Bubv
c4jsh3APHCLHBbcOkXqK6w6R/TRZz8Nwv756e0KuM+a3P0z3o2oP///+xv8B
4gcwqg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2WlcTG0DBvApyZ4pSbKNLFkzshM62RIyyL6NZF8apFJk7IQaISIZSYRI
tgpJQskyhZ4kNZFtBo1sIbyXrr68z4f3ef6/+yzXXOc+9zmnt6WH19g5xiKR
6J2JSPTv3/hH3napTuB/Ggbif1Qy2GdL1qCjP0r/WfIQdij6/kT5udKyH3DN
VfO2DqCVrbx0QsLTQVc6lVU6fhQ8s/+u9AO01hfu+uJyw/rcXvENHrhl2+u4
j5VWSxQ6wTFx1MsahkprXOGoztePL+C4aCXstnKfX9P3lZYehl3jGqrf6Cud
2myZTvC9nrDz6LtKG4bB3te+HOuhY/7lcN3R/esOoWUR8MbOq/uUcn/lbfje
jaIaEo6LhyzXCco+FbOq83hOXrDrhfBNP2lFOOwfKVi8esP8N+GrATOvvac1
H+B0N5vG2W8rLV+8QidMCXdutFJbaVUYHBx4QN6wiHl1cNC1iCWfC5i3obdO
OGfRpyAnn33uhr9f230ljePaa/D8DHFkl2fM+xa+qux9f/Vz5rVYqRP6Gl3q
MqWQeR1h5+Skvp+4vegKrBB2ve3Kcekr+IWXZvm9p8xb30cnND919q2a51f1
geufiK8WlMe+Z8Ml5fcnd2Ae2Qs4RefzTU8r6/rqBOs7UY6zmSe+J5w76HeN
XsXML4ctj0a26cPfL94O28SmHW2ZzT5r+eF4kyzrH3jEPrvBY3/kOw/LZf4Z
cFCe++/UTObfCn/ukTx00n3mT4DHmfyq1u0O+5Wu0glbR0+0mk1LpsJ/sme+
unmL+TfBbu3XBm+klWfh4y/t5cW3mf8pfPikV78l6ex3kj+uf9rUACnHFeth
j5Z3HpfQ6tNw3qYBFm2ZT5MLdx9hN88hi/mNAuBaXttXMo9qLTziULrhJ/dP
jYXLmjZ558fzGR7Bhc/Cil1uMP8f2MTfy7w8lfnbrdYJsXedwj9fZ78x8IHd
34Zc5Lg4G/6vfOz1hbTTL/jC4u3l6dxe0WYN5kdInZK7HFePhrcv0Hfrz/PJ
y+E+HY+ExCQyr22gTpAE5H6ac4l5R8IPf555UHCeeX3gb8evfVVyXPkVXn8m
40TWBfbZYi3m5/GWmsEXmXc4nNW8e5CCFnvDWxKGGdW+zLyRsDY+xnMs82qa
KnWCZ/PYTSOvsM9h8Dz3hGfF3F66DL7wyOZ1Mi0/CPtH30k7wPOrbsHLs8bU
qZbAPgevw3rXTBM+7hz7XAqbLZG3jolj/v1w2uDb+nmnmT8NfttPfDSc49r3
/7ZXv6i59Az7XLQe86najHnOx9jnXjinqOh9vWjmvw6bnPe/rz/K/DpYPqS4
v5TbSy036ISPLZqN/u8k+w2Fl+7u3T8giv1ehS1v+3WbyO0lb+Dy/t+/2fN4
MvON6H+Z38kLaubvB3ctKxx0lRYnw2Gz9p5eeIj9lsDGEwd7RXFcYbYJ6+OC
sjU+Vfl7w/Py7L3v0xoPOMf0fWOvI+y3GE7LfL1wDfdX1dmsE1r/tH7hfpj5
e8D3sotD93F7w0z418rvxp/5eyRB8OP/BvmsCme+6Vt0QsO7Y73bRzLfFvjE
7NUi0W7mOwdPaBrarCyU/Um3wuULH7lvZ39T4K1XTzauyXH5Rjhde2RzdY6r
zsBR/XKnt97GfHnwEONibw9aNnEb7r/yHw+9g9jfOtjk79q2k7fy+p+Cw/1k
GWVbeP2fwF/8Blzat4n5RUE6Qbepe3EbHk8dCIvijPbXpDUn4Ob7x53P38z8
j+ChfiUpQ3k+ud127J9xcagztzccg93/tv5zi5Zo4Ou583Ia8Pyyn/CDmJIc
D+ZTtt6hExY1dzp6eyPzusFpTY63iOT5nO7DNcdJY6cGsM/vcIyxj67HGuZt
uRPPE62p1oXjmhHwbslb5fPVzOsDN4kqS63PcdUX2LJwyTQJ909tHqwTTivW
jgxZxfwusJ3i3FMD95esgO9Mcv22m/vLDsHT24UduMlxbZMQ3L8tnK+8ocVD
YfuIrtci1zK/Al73rWPeiqr8B2BRwIy8D4HMnw5HyIW2Cb6cD4NUWG963q0d
7M+8+2AL77sqYQXz3oBPLCmy/rOEefVw8AOZNJNWLtylE1a27zm8bCXzpcAn
J94d5+HDfO/gL9MWLc2hnRqEYj3Y9uXcyar+dsHaRK3zAeYRXYXjO+YFjvBm
vtfwmb2brjzluFy8WyfMySg53ZlW9YVj/Ce227SM/SXBYb6TBi31Yn8v4dar
hx1y5/GU9fbg/Uu+puTmYl7/XnBoSl0P++XMPwu219e3nsHfr669Vyd0aNgy
Zze313SHUz9HLUlUMO9M+ILr43aPub90G6xc+t1/JftIrRGmE6RtzTJj/dhf
V7jXPaOIVexbMg12azumV+uq670ZbmW0rrAzt1fGww0+OSfKqvrssk8ndCoK
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
2Kv1/A4xWvb5Dj6H55G0hH02cMbztoZU5vKSefvDQe9P7phGa+fBjh61/j56
wbyh/7zmYlwX9q0WD9ILYcFf9Z25vaYv3DRncPpbnl80B/4536eJOc8vDYG9
C3TrNhczfxK88deMw5Nes89eg/XCqt02tT1esU8PePWE7hPeVuXfAU9q0qn6
ywLmvwSffJb7VpTP6z9ziF7Ys3/PD4//2Oc2WNZsq+V4DfOeh78smRwhe8i8
z2HbigtdomnV5qF6Ia/l9cElj9lfPFxYeP1mKm3Ihy+0m9zdjeeTVB+G78et
9m2f5zFfFzjiZ439k5hPGwdb/nYfVfCE/eXBi2etWDf+GfMauyC/2SCHAP4+
RSe4gdDgzVkeTz0BnhAZ3DeS/cr/wvqSgu9evB6q9sOx3jf5+TqI/aWOgy/d
M75bg9sb1sAlXybvyWLfygpYPmLK5ztV17utK35vj+zlRTyeVgZ3fVcxoz2P
Jw6APZyehntxe6djcHJGc+vNBvbXaoReME9JTr38nNfbDVaH7CnX8v6V+sFb
s6d9qM35Io+CK7zEfTdV3V/34N5PF9gpeb9IRozE+hqfeXHnH/a5Eg6vl/BY
/pv5D8OFN5ZdGFy1/mbCKV1v92vG9Vz7Ge7z+kaH2hXsL2IU7lfvyau9mEdz
G/5zr76tPc8v+gTXmalbnfmDeZu46YVD8h/vxXRqOHzr0JPU7G/s8yZcZ/vb
gEAeX/IR9tO1dMnm9jLr0XohtsbpPFVVXmc4MD6tehueX3wD7tkv0NLwk33q
4R3Lk3JtOF8UDWUYz9vybBrng3og3P5BonQL7wfNAvhY3p70VZx/8rfw+/BY
5TL2r7IYg+ufczxoCX9fqiOc+8YqqAGvr2EubBQyzHbXU+bfBbddpt5sk8v5
UH8svofzlmVX57i2D/zMv8fsw5yPYk842+6FZAzzOgXDY4rCqu+umr+JsOO3
jZfseD5Rr3HIN2HApSjej9JZcOioEW+seDz5drh9a2WDTM5P1UX4Rqe1CQ+4
PslmuGM+hE5RV60vyq3wuqJhPse5HsYnwK57co6c53qjLYBHrP0pfsjfL64x
Hu87bZ2X23J/9Sa46X3fboXMpzkLi8YPXtuJ81mUD3s2nxJRVrVemUzA98Sf
oF5TvjCvPdxIeD5wDo9vOA0/eSMqvfWGff4Hz9lQJ2wNr5fMaOK/75sINyXH
lR3hvSnL99fk8ePHw13rLrQbzeeR02N4vHRk7Y3Mq/gDuzeZevlZIfO3m6QX
VHF3w8ewP81YeFxfo/OmOcy/Bh7Uy/hBadV69gtOXzvqXVwW50ObyXi/WuNY
1u8O84+GI0cWm/Xn/hJ/WLX/6dDYR8wfDc/N7mnckddPazsFz0/l54EHUtjv
KFj07VUjr/vM7wvHvp3iW4/zSXEEzo46UeRbtZ5lwa1UNiNPcj2Vuk7VC81c
3HeO5XyTe8O139U8G02rIuGdex37BnN+p2b8G1/iWqse8xjKYEfbJTYhvB7K
ZdP0QtSMgoLyqvl8EH6zt0O7blxvtbfgO+vqZDdhH2ID7Hj3e193Ph+cbKbr
Bc24c2lfmE+zH16aVMP9Q1W/N+Ey5f7NYv5e6Qc45Nay5aczmL/RDL3wLn7L
w8XZzC/APt52iW8z2acOvp9leuogr4/Scibma1mdfYfuMe8A2KfZvhHDuL92
Pjx9nuWqTM5XxRs4cJr5vaV8nqjN5cg/VD0ksmo+9IMLn03f7cj7STQXXhJm
Pn0v559UBW+5Y9y5KdejVLNZ+D50ejJwC+e/oTe8cf3Nol0cl8yGrcJvRq37
yvw7/42/bF1YWrW+XYYfjPb82J/vZ+KeHnrh4CddnZY8n5Mcdj3a6IiK81cR
BMvO1z3Xg/e3+gLcKLPIuoD9awrh3MLIhi5cb+XTZ+N+3GF1S8b3d9UWOOY/
netdfs+knoMTFuxuWcj3UcMzeMCpzbq23F5i6on7Z8Op7Sea8/lwBpbmNy9J
5Ped+Cn8n0fDJmfa8f282hy9MKXvlyfDqr6XO8PJI+uWJg3g++1pePXe8eZB
Hfl+ngu/KGwcX6Pq+0I0F312D9yv4fedqgM85UqrtG18f091h802Nuw8nd8D
skfwib9Llpn+ZZ+/4aEnuty/z/fleLt5+N4uNTw+yXHtGDjo+O7ju/h+Ll4N
13QcvbQ63+/VP2Fx3/yIhxzXtJ6P98d+d80PV72fj4Z75p+ObWXD/Ktgywft
M9X8fpMfhbeOWOWwvhX7bLlAL4x0KdsWwu8TyUg47Nu7lQf4fi/zgaN/mVxo
+J351bByS9rwOlXP57vwslXth+fxfd9p+EK8/9oYVm/i9VWsgLda/VY0ZD/q
Q/C9gDmWC2jNHThl54DUnpxvojJYWie4vTW/z1SKRXg/8slK6Mc8qQfg3Cet
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
qnoNDzn27KIJ5tv/ACv/bks=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0.6794117485945514}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0.7024221282011531, 
        1.1626297203331881`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0.6794117485945514}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0.7024221282011531, 
        1.1626297203331881`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"TBF\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.8791526367105368`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03660467928338273`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "24.017493225507977`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.705252041942008*^9},ExpressionUUID->"aac06f78-f4dd-4728-9769-\
4e24eda95853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IWM\>\"", ",", "\"\<RWM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6877208799567623`*^9, 
  3.6877208858208823`*^9}},ExpressionUUID->"4277d921-c313-41ad-9dbe-\
20988045f588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Hf5s/x/N7am2
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
8ojVr8B7N3VEHjiB+f+BPSe3n7XOJVacTlcylh21vW7FYN6X4IExEanXSol5
HeCnaasH7WvHvMMPKxnvxjdRmZeJWScPU/1yS8CJfaabHOmJx78NPHJItGv0
RcxrdgTm3d2+X2sR5vUC//024X7BKWL+M7D2fmZtzA5iUTO4YIVOXKULsZRz
FN7fXs4yHo/5PcBOtmNmjLXG/JHgGbsMi4P7Yp+/wEY/BpwvbP9K+hycAfdr
Qa25L3pifndwwqKAti8dZDt3LfiaaY1OYCWx4Ch4pBvLokVBrB5wTMmsarou
ONMd+3QFW61KXXKlP+YPA29Iu6O7qp68XpQO/mKVcshrCOa/D54bPensVRXZ
zpuSCfOi71Q0vyv2uwbcJqirfFBCtktSactlYMNn28O1HhKLV0qovLIDYD+/
02Ft+Zj3NjhnS1Xg0VZizhfwiAOc+dvfEvP7ZimZ8X2O6q1vJlaIwQNEQZM3
PCVm38yi3o/3Cdw64NpSjyBioe5xJfMpc0KuvzvmHQ82dnJ8/HcR9nkdHDPj
2Lt337HPWnD/nAZ7932Yv3c29fkye/Dht+V5b41wfgXgnhaxhS6fsM/qbGr/
pT1PKJnPhaX1Blsw/1jwep/kwz9iMH8geOfZqP7DlmD+neBpayI9b6/CPrud
hD4+TNpw15mYZQtOSKipWm6N+eeDX/8Z15m6AvPHg1taOJZ7R2H+PHCcdPUr
e/UX0u+oU0pGM1qcsb+SmO8P3ra3PD36BrFoG3haSofNhMPE0vPgOfPTDG/k
ESteg4feO/KnXxqxcM5pJeOiGLS4+ACxJBZ8ckCvueaziOU5YLPRM2frjCVm
vQIfXz5y9yUPYm4n2LbMV6OkL7Fs0xlYzxvLg7f1IVafAq/Tm/t8XC/MXwpO
zkySjB2H+f+cod5PZJ4D9y8VKysqZxDzXoBLLS8eGzEc87bmUPkkpmep95PP
OEvtj+ApeG12duSkMGLxb3BTUmD0nL2Yd8g5mL8to3yiPmHe6eeovjjrwEvf
dU+8Mw/7bKStGHSe6pvtBjb9aGv/8jnmDz9Pfb7wCPgSf8GFhoPY54BcOB7H
tO7NXYJ9Ts2l9kcQCj41SbK/dgfmTwNvL+ui22SO81wIjuy93DySjecbc4E6
P0SrwfbbXEZsHYLzfBBcr/NDc1Yd5r8LPi2wf5Z5C/Mrwf141gnsBux3RR7V
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

           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
5PbtRW3mnQvHNrldbZ8j6/n5/613OIr14fwJ+X6sv9gP7pXd8plrdeafDfct
+vK+oAHzb4e99mUfCOXnRQ2TDcKQmbNPuDVkPXvAvS4uMrk6M/8sOM29dOwr
fl61BY6+57LG9Qf780XY5tY5aSP2V5mQgueXSlscuvP+opwBn+6yz1/M+UOz
GW6ybkzT5xxv+vPwpLrVrxVwv0BsgO3aVnAs4/pfPfUYnv8admvagP1btwEe
VXB7c775eSITDo5z9khhHnktDcZzg5mD+1RhPePgpG4znrc2998MuNa9kC09
67D9X8Keo/b0PkIrbVINwvZbSzcea8x6d4aPhZ/sKWM9fNPhJVcW1+/P/qN4
Bgd8GbPzg7k/VD9uEBauCsEjKvvDf3Du1DPLxK1YbzlccDQ1dAX7p+oJ/KJd
YIuItuwPVU9g/e+u+t6I/dnUHp7xPPFAf/Y/yRi4+f7VQ2P5fVk0rNc3Mkj5
eX2lNIMwMXVl9sQW7A9S2O/Of+0f8vu+I+H7C2/knm7J/JFw35gKJwo7Mn8K
PCFlW+9Dndkf2pw0CG9nxVjJeVw+DH5/UfehiHlVEfA0n5yzjZlHewS+tbUs
drqU+e/AyYMutWnO8accfMogXLa8OfQgP69ZCiuf2JdF87j+ELzKQ+ZYzZy/
EB48u7DpAPZP39/wyVoL5dXqsb6L0/H5tY7RHWqyvgfgOasq977D9pTq4Eb7
dcadnK/kP2HbTq+fVuB8o3I5jfu5f6VRo+1Z373w8Z+2Vqt4ftl1eM9ew7Gk
Ssz/De4z7FTkY45XTeMzuD7dptqXOd70/WDp7rL3X9n/1CXw24rxDtXZ/3SN
MgxCBdPWodeYT9QH/t7J22kuf08aCs/MfPt5F639BIe3fdP4phPraX/WIIS+
WV/7XjPm7QXHHPZZ1o39S6aAP8hulVZgeyu3wUdPHfqSxvYWNzhnEHxK5w69
y/bx7Q6vKD375BLbVzHz3L/9K4s/T7szfwL8vcXK7AiB+S/AVSqlR1Rkf5P7
ZmI+1/wxNGMe1XR4yXqbvTs4XrSb4CYbOkr8JMyfBed+D3dez/EheQs72M98
Gcjr00zJwvqn4bvFs9ne+vXwxHU3PK9zfInPwc9Hfe81gePT9zV8uadmT4L5
fiI+bxBe1dL0qM/fE8XBw1OUyla8/0jP/Du+q3+8mO0nfwE30ZTOGUSramjR
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
BHM+0y6Dk4oyazTlfGU6DLdsuG1dKvuDsrnIKLyIMxx4wv6nGQSPj265XvqF
+cPhyofHpP9ifxUfhK1DbmRdrlLeX3xvwb4BYzMcrcqtG2BhFJZ93b6mqGa5
RYvgs0a/6WNqlVu6D9bLOxxbaFNu+Q04zNt3yEoeV32Hq0jHZvavXW7J/Ar4
vYPNfvjYllu2G36xZe8x+0blVl6DC2wr/HS0L7emFK58ddLAjTyud6poFFLq
ZNt3b1FuRSJ8qbOu64625Vbnwr9mZESca838n+E+hT6599ozr5+lUZjw63eQ
s1u5tdnwx/sVf/lLym36CB+OSg74yu9LGlYyCj8fn1kU7868PeDTm3asa9aB
eWfBaYHVNl76j+PtPXyy55NfrZqznvUrG4XSxQ53xc2YV4CTvntPzOH4VM+A
myTJthezvrrN8MGx4/q+M7E/1KliFOanHAuZxvuPyhsuetGyWQvz/Xoq/LBm
lzEzzPPbBlgefSHxCH9fkgn/iQ2+aufIenpVNQr1U9albmEe/WT4hOOEDcNb
Mr8K9j5r865dK+Z9CQc9mukxpB3bf6KVUXBqtj45kfWQroVdrN79Ws3fk6fD
rS66L/Grw/pWr2bE/Ts/sg0tWwXnXc+pd/Y9+2sa7Hq+z8MqvB9rnsALIl8r
j5v7a9XqRqH7dj+hQ33m6wCXVRjye3dl1i8V7rLgXa37nM91j+D/vK5u6v6Z
80Fla6Ng51lsu4fjRSqFdxzbGT2Y6x/5SHhZg8LLjznfSirWMAo5a9zth7H+
sjbwqpvP5g/keFIOg6dv6bS9pR3rGQGfrFNwfE0NtrfIxigMuZDaN0PM+rWE
Q91d9K3YPurB8CLLs598uX7QLYVvZPr/8vnIvIf/ff74edVB83qnWU2jkOAz
Y+Rx3j+0A2GPPv81DK3G/roYHnpiZVqTimzvA3CvFrNn59VlvXWws/iP/Cjz
6APERkGpWXPbtyrruRD++Trc7ooD8++FVxyM2LWf401xHa68vW6j1xw/6m//
vh82+KfRk+2trmUUku/17B7qzfGeBzts3WN1idaWwNMu974V3IV5G9U2Cr2D
N/Zz6cvxsxMeXcXT0bkP63kFDjh8Kvd0APN+gk3fZ/WrRYsdbI3CyMfWC336
MW8veOVHH+m17hw/l2GfnW+Xh8rYXz/CHzZMaH7Oj/21QR2Mh6dJe719mL87
rMwuy9YKzD8TDntXvEXThPV8B3cfXb9tIOcDWb26RuG76/m1nzg/Kn1hy1cf
vZpxPGumw8Fb5Je3m+erTXD0wx9Tzpn7g209o7BtqbRBNM+n7grnJQyoYdeU
+afArdtZW7v4Mv8GWDVn/bi4jsx/Di5pcS88ivXXetY3CrYHK7fUcv4xTYJN
n4LCX3I8S+Lg9mecGtxkf5GdgUPa7BgeyLzKF/C1R0MnLONx8QQ7o7B2QMzy
es6s7xq4avsr4z6b85+CC8L9uw3l9av1cFmXcbPbcH6XxzYwChc3GPWpvH7V
Cbhrk8M/RzRg3sdwzJyrb0ucmLdKQ1zv+TktfnM+l7SHU9euUfbn9Wg0sK5x
tfNPOR/pH8I5S+7WnMH5XlzJHvOVt937Y52Zty18sbZbx760YgQsna++XZnz
u+g+PPWUr8V0zt/SCg4Y/1+aNt8iZf7WcFBz35/dvZh/KLzlxLzkO2wPrRKu
esQqLa0H6/kXrlbv+No7/LyyhaNRmPFBY2HN/qgJhJvkZp4azPbSL4F/dLrj
eJT1FR+CU4s69G/M8aFu2sgo/Lb6VSOd/VEng8VfDc/vcr4WLYYXeY8O9WP9
pPth16VXp8wxz783YYthW/bnMJ/J38ko7Cv4snCYB+u7AG6wteEKLcezbA/8
0Ccy/C6tzIeXehz9nmQej1/h/RtTLdv0Z33nSYxCx8a/rI4PYn13wZ1mRTza
NpD5r8JPax0Jfsbxp/sCjx54e7ZsGPM3amwUwo8c+RTJz2tz4PQbfvsbM5/J
BDd9+9R1J8e7xL4J7nc7Zu2bxvEu6wl/6i/UuNuV9bwEu5xstHFCN9bzA7zD
FDGpO+vna+dsFKpvV2316MW83eCNuTueBZnns2C4p0uTJEu2v9QIh1ueSivm
+JfXdUH//b5v2ZvG7A8+8NScH9WWsL200+BIyzOnvPn7po2wZ9He2dt5v1TW
dsX6IP7evmXs35oucOfJn8pu8P6pD4J/D/+2pqQT86+Hdw9ysrrK6/c9C1u8
kWSu5vjXeTQ1Cu+1ufUGcP4STYKX3PE+as/rla6DrfakyfeZ+/Np+NqPsHWv
+Puq53DpyIG1epnH2/hmqIfnJmvDL97vVsN2fVtsDbNg/pPw+Of2j6twfGue
wuJmXQJczfNBTHOspxQOL9tw/lAfh9sf2Hd2Nu/XuiL40aAeZc95PxdVaWEU
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
2nMeCeldWc/X8LJh/dac8vzs8z/2gXy5
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.838898549190589}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.838898549190589}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"SH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.139334247612595`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03710158620016374`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "30.70850506137031`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 3.7050414278141985`*^9, 
  3.7052520522880807`*^9},ExpressionUUID->"f64dc46a-21e2-42de-914d-\
3feeb93d1097"],

Cell[BoxData[
 TemplateBox[{
  "FinancialData","notent",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"RWM\\\\\\\"\\\"}]\\) is not a known \
entity, class, or tag for \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FinancialData\\\\\\\"\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FinancialData\\\\\\\"\\\"}]\\)[] for a list of \
entities.\"",2,18,1,29586612957396748452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7052520629786763`*^9},ExpressionUUID->"c26fe5a3-1de3-4230-a335-\
bf60298c4923"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"FinancialData\\\", \
\\\"[\\\", RowBox[{\\\"\\\\\\\"RWM\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Thu \
31 May 2012\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2012\\\", \\\",\\\", \\\"5\
\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\
\\\\\"\\\", Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \
\\\"\\\\\\\"Wed 31 May 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\
\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\
\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,18,2,29586612957396748452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7052520630568027`*^9},ExpressionUUID->"24cf0a38-0a05-4ec3-8e55-\
3f8ed90be2d2"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"FinancialData\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"RWM\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Thu \
31 May 2012\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2012\\\", \\\",\\\", \\\"5\
\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\
\\\\\"\\\", Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \
\\\"\\\\\\\"Wed 31 May 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\
\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\
\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"0.9999999999999999`\\\", \\\",\\\", \
\\\"1.0295058637919787`\\\", \\\",\\\", \\\"1.031283366312452`\\\", \
\\\",\\\", \\\"1.0174191856766994`\\\", \\\",\\\", \
\\\"0.9925346928283757`\\\", \\\",\\\", \\\"0.9985780657884092`\\\", \
\\\",\\\", \\\"0.9861358193642473`\\\", \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"37\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", \\\"0.9754710754605589`\\\", \\\",\\\", \
\\\"0.9523640851327085`\\\", \\\",\\\", \\\"0.9448987101562961`\\\", \
\\\",\\\", \\\"0.9356559004641983`\\\", \\\",\\\", \
\\\"0.936011400968293`\\\", \\\",\\\", \\\"0.9321009632280395`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1207\\\", \
\\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) cannot be \
transposed.\"",2,18,3,29586612957396748452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7052520720619426`*^9},ExpressionUUID->"01f08067-2005-481d-9395-\
cb6b69995b14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
vxg8YBv0x6AP8zqDFc5KXZtdhHljwffPTCvpacS8hWCb1p2X9/7Deuqmc4l/
K2fGV1RgPZ3AYv4ulvX9lBnR4IsmSnGWQj+o/DfAJgekDioOYv4PYP6pgTen
pKnP3R0y4P5Svm2SniTlZCbYYSvt8z1Vyuyr4OV3rptrmlLmN4K/b/7ZG7+W
suI/sMj+9mXq6yhzrpzlEmnRc8uf7KcsUQ8Wvt0ipzuHssUouC7y06IGrA9D
NZNLXDIwDR9Qpj6nXQZ/Gvh1oPIe1vMtOE+n7HhWFV7/P+CnEnkDS0bx+quc
g783aZKK02TMawNe2V94x3cuZXo1ODCYq71ZnTLzF/jSd/qo2w7KhYpZXKIh
JD54vT/mXw/mSwrvHYrB/AfAhmGabIsirOcP8POarU65dyjXzj9P5uNW+OZj
fivw/JZnD80fUNbbB060Pku8/4b1zgJHeNZsX8jDespdgP60O2yr8RbraQme
+KiZkVOG+QPAe8InBO/vxvxnwRnsorgq/P2Fz8BNuvd7PF9jfVde5BIBxlEs
GTZlxh6wRkJIzfJazH8G7P7a2utgA+Zng5Xft97qbcbr78uC+/MRiZqUNKxn
CrgwZ7KoSzDmfcQSqKdiN7jde7mvrR3mnZkN6+35H2IvWGE9k8EzSlzFYgKx
ng/ATyRMrcZ2Yt4v4GUjN6a1PsS84jmw/nReO7nlGeY1BicmRZf73MJ6luaQ
32ctTJfYDx3g7ZvkGj0sMb9IrsB4YC/NFRhPfPdcsv5ZCo4iWM92cHZRib6D
HNZz+iVYn/r/0Xq3C/PrgytmbDG9egTzu4Ldpq1fG5mD+Y+DhRf/LE07hvWc
cplLtO557HzpGvbDYrC1x9hSzZeYfzt4WViaX7AN9kMM+PxY6ei0LMx/Czxk
9Vj9FvaHok4el0hZc9cgWmSQqq8j+Hr+PIeIpZSZUeBA/cU9iZaUC6+Dz7Hp
jGp9ypz34KGX7ytnb6fM2HIF9pN5kjs3baXMOnyF7NfBIZFMyrUF4BI3+221
lyjTGsGig+pSzumU9f5eIfezfiOJ9ZTZ4flconng2yqtT5T5eeA3D962mrVQ
VqwDJyUVjRkmYv4R8KZMS6trqZh/YQFcvzqPm+kplC3egHOKZK/zP2DeIbCa
qGr53jzMq3yV3H/+TR+owrzW4KOOZ9LXJVF2fw0O6wrd6FBOOfkn+KnNZJvG
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
sYpHfOUs4Z3Zjv1gAr6Zz1lz5zbOb17gced3ekngiUzDd5nVWO+yVeT81hfO
DMDzNaPVPCL7t9bS4iw8X9sJ9nz+5IJKI85vJ8Hjnj8w74F7zndtmjoTr7+b
JW/8+R8jzlJgvmTdBePtAfO2gp03KHt8vI7nDbFreMQ+fvN8T0U8bygEZx+U
yrBdhPk+gm/k35rxpR7Pzyav5RHRbTu8Gpbi+ZkueNGrILHPjfh+1A0w9yPX
q+D/76c1gV8f7VntiO+PWUy04o1/f4qhDb7j5ZfL98T3qRzAOqubwxeI4Ps7
/6zI9ftem4hn+H6ixjpy/TVpKKEZ30+0X0fuH+p1F9Xg+4ARYKbrDY7vRnw/
anQduX7Wdbd/j+8nqq4n10vZ/z5bYF76ejL/ynqpX/h+Yhj4ZNI6e9pPfL/y
MriG8AsYuYTvd6ls4BGpcf+0C0/g+1224CUVzs/Zs/D9rhCw/922lidzMX8O
OMwz5dtDPXz/qBp8t/2tpEEWvv+5wZo3/v1Q+gGwxZIdFSnK+L7qRWty/7vo
6uqFmL8KLOWTv98a3+/m/ADvv1u0WMsW36fMsuERk5iir33+/75qJVi878P2
hnmY9zvYeVO49d+JmHeuLY+4pV738et8PD89C5btEF65aBu+j/YMrOKgFq+I
798p9pE//+Xrts3O+P7cnI0w3gJfz9yRiPVeCX6/75yR8228/uXgOReVnmZm
4PXnbSTrUaERL47np7PpPGL4hKlLwTo8/zUH97jH/PaKwfNfX3CnypGjqpfx
ftYNnm508d78LryfzdwE67lsl4EUB7yfLQf7hCeczQ3C+5k3OF8n4lDdauzf
U2BiyWDIyGM8nxa34xHhV9q/9NzC819jcFxTmCNzC57/eoJj544sasX34ywS
wV1fo3MU3mP+UjBvm4FFK76fQzOy540/H9fbAW4rOKzL+Yn5T4DNf24r/H4Q
8xeDM6PXO2vG4Xhy3cwjPuyrDtJIxvP04+Cm4v904/Tw/nUHbJfZNDpzMc5X
LZsF7tcSU7fwxp/fs2LAu43NabPw/aDaW2BZhd1Zb77iefpH8AGGizdNA++/
Qg484uebjcdrmzCvDjg9uv32YD/W8zp4rbbYnvxWrOcHB3L+nFV2cR7OVxO2
8gg1KVNfLZzPmFrgiprCizn4fkrhFvC4950sGsH5u1sa9tXh/PV3q8D5J0vd
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
1Px/QQ15cQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
PhuSaHgiHedn7T/Ufpcb94c6LigEa+eWPu9ow36uA4++rtzxLhnz9+yg7gdZ
4zqo/avoIviP/Ze87WvxfvNNB3V/rerxl17vbMDthlX1udcwv9dfKr/89V9q
/62n3knVj/tfJ7UeCpZ2UvcP4l3gxtyIkgkWWN9uXdR6xR8NrjkleDTlBPbH
4i6q/6URXdR+TpUHjn0QvnmXLfbHCJby3/lXshD87/wcBl5QZHrskSv2Ry54
eS9+h78d9vcT8D/nk83vpmQ+Z/2+PscQ+zsU3G+N4TjfgdjfWWCTq+7JLDXs
70fgTHdr7zfDMX87+GLCscbDHBxvW9WU/64/vJNq1OcLK8H/jB/Jd/C4mcye
xQ6Y36Q7lU9wHOynZfFN0FZP6nsP3G3u1rAYFbHsKzh/8Ve3+gZijos6lU96
B/zv/NCiTn0e20hDyVTaGeU+08S80zSo9ws3gvWiPmlO+0XOr9esQeXjDupB
fb6AAec4rtj7ZxqOR/8e1PWSHQL/M9/w+2sq/50PRJPA/8wn0rXg6oB9Y0V6
mP8A+HIe51K4jHwe+zq47O/GfoOvEUsmaimZ3/0eND7OIpb7gQecCH02Mg3z
i8CcUSNv7I7HvA3gJLXsnvOCiFm+PZXM12r2YgMPrGc8eA13T7J9CDH/Mnid
2ZXSJcnE0t69lMzjBWc3F+cS8/aBXY5Me/uznlh4qRfdr7XgiTN6hHv+wHxa
vZXMpfLOmBUFmM8WfHTorgrzN3i9L/Sm6iur6U2dn9VDm7o+HI42VX++pzbV
P+zufZT/7kd41n2o/he696HrGUmby9JRMpN90mZxU7B+o8C2fbwUGfmY1w1s
pZvy9Vgz5g0HD9p1pmtmEebN06HGl2i4LtXP0gXgbZ4jZvdLJ1bt0KXqy84B
76ocF560Hust06Wuj3yeHnV99LaDQ7b+GPotHPNn0hY8BPdZ/Xjy5rmY/yf4
MGt9t0UcvN7ivkqmIM6g6Yw5seg+mCdbv6XMFPN+A4ce2Kt4PRTzDtVXMtK6
JbNd9fD6H6MtuQvuv+qg/dZemLcVrGFtfqakG+Yd3E/JsK88Ten/Q07yzgBf
OPWxNF4T63kb7DQ1MnKjghxntfSj3s8x7K9kFCeDb/L7YP6p4Jr1GnZZ6pg/
ALwz+OrAXxOxnk39qe/HGzhAydw1UKvrtgzzc8ELC9LF7yZh/vUDqHzygwOo
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
aLEX898Dzzvc80XHccz/1Yt6HinctAz6M2u6s1kk1vco+NRm6YhbdzH/HbBG
0YbB2Rcxvwo89/b7/eUvMb+Rt5LxbHIZd2Qf1vewN7U/YpWBl23uferwGMzf
DC4uvHx0hxHmH7Qc9qPlszTt8P5AxCyn7h94CvC6I4HzN7zD/Uz/FdT9oWQS
2Ca4R8rjTLw/Wgs+qGPV6nod9wefwKt+JPdLT8L7t758WM8ip3R+j8b7t4l8
6vkQazV41pDdbr3w+Q1HBL7pZ1Q6sxDv33R8YL1YfX6s3ke8f5sAfuo9zrOo
FfvBF+wrkJ041oT548F9I1f2XtqM+S+Da7uex8d14X7GbiXcn4dpa91+hPdv
fHBKq/eQ9dWYfx94QZbo2i/cr4gvraTur2W14KlhVgMs7bCe3r5K5pfPf9c1
8fqJYnypfpFe8KXu51Q1vtT+id1jFfU8R35uFXU/qfca7OnbVXb+Nebt7qdk
gr+cPdcT8wuswVmVK1Qa/ljPM+AJFuuK0ydhPavAUfOCvmd2x/0YazXcT6j6
jdzeF/djo8AlF8eeSNTBeruB087v4oxRw3o+A9esETpcaSfPM4R/wdkLzFap
62E/DF8D87l95JkRCnJcvgAc2OxbYqCB+cPA9+fWRr55So6Lf4OduB1Ru2qJ
ZeZrYX629HyYc4WYNR9sH3rYaloWPj/ZDn5beVU08xIxPxNcvXTL4scZxCrT
ddTr2XPAp3fc6vcMP58XApZt3Wlz+h7mF4N/O6Tn3rxDLLkPfjVr7aaPc4i5
s9YrmfH++2d6zSMWBIH3tVSMi52J+Y+BB6YJqhdEYv67YI2IR8NCvDD/V3DU
nVHRxQuJRQJ/2F/sj2jtpkksPQLWsrNMrZyM+W+Dn5pU3BzkjvlbwBmpM9pu
mRDzDDfAeNTJeHfIAuubChabd12epUOsdwvcb8dSfeGLWpK/CZz2e4XWDgPM
PzBAyXQX3JoUr4H5uQHUcU4pWHO4UcG7z+T9/M/g0h9GlotqiEX9NtL5ncHW
Y+svZaph/jVg3lW3VLVL5PUSvUDYv/gUeWadJ5Y7gvtumPNfagSxnh+4PiJB
6+J+zJsYSNezjwD2i9PNEm/oYj0nCKjrzVkJ9nG6nOF5EvthP3i1u+tGLoP1
LgKfi5n15/F8rOf4Tcr//b0DrOcK8JTS+7ntDtgPe8EnYx11qyswfwH44s/e
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
cdFH8ILM4uuLHWsm/x8NfjDo
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
iyfA5mvfF/lz/JJGwLndOkWO5/VProIfnbP87crrg5lzLM6f7fGSCv59j7Hw
4ZWr2o3i/EUWDm/50aL2NV5vlCfg+OgjY+5xfqJ+BP99ltB9JudXAaPitEKK
l+5rBedXCjk8aqZ75gNeD7KOwasbnV9xjtcbfT7sLags5/H6If4Lj/m7wX4N
54+awzu1wqeNiRnrfjHvfbjI6PfqLszv8QsOVvw1G83ro6xtPPpDaXDzNa9Z
z4Pw2yB5bBDPlyQP7vxub71wXg8CKmFlSGxXex6PotUujG9Xqu8vLGTeofDq
tnZ92j1kPe/AGy0Kv9zi8cm/wtKRoV0jOJ9ViXejf61utMCc83WNF5zhKBc8
DfkXwtvdBoT0Na6a/ys/wUsnJvb0r1VldbM9mL84+Xc7W73KooHw0Z8O17fW
rLJkHqybV91su1mVA3bDn7385BrzKutt9mI8H/yoJMSkyuL+8EcHy2PJtass
DYEX1fp77C4/L98Je3180v4D/57qCrxg7LQlRvy8R599WuGLOqTsXLUqy2bB
Ez36LPjG9yt3wMZmp/2e1GD+LDhw+y8jC/49RZAS1+t51cqTeH+QtRUOWVN3
1AeeH/0luPTK6c3X2T7FZXA707Pto1hfqXkC2t+qP1lX2b41CrjJp2rbFvLz
Zhfh7gfnSZpzfuPxBn58au1uG95fyUz34/y+7/vGiPdXSjc4Jz/FoznnN5I0
eMbV02KnJLaHV3Bi5dYdSs7vFfUOaIVKcXTZFPbvrK5wlx5Dwj/zeqsPgAvb
pu2Usb/LX8Idpmx+4MP+rqqTiPuJ4X8WTOf9icYFPl3Y5FgLw/zLH5ZFjZPa
sf14RMLDwr806sHX1TUPoj8U2Eb/4v2XqBO87VewxQreH0rGwx87/6zeg/Oj
gLXwlaJCD1fD/Osk/CT66YAknj+x0yHcL8Su6SZje5KOgXUPSjvfMGV7WA2P
SBZ8u7E9qZLgbZcKw17zdc1D+FzzsE8pFqzvyMNoPx3rRPSnlSvhGYNq54W0
Zns4Cq83/TLzTyu253xYa3ysckJLtuc/cPMrzWclSaqcteyIVmhwrsWJUZ3Y
ng/Be3+1ODOTr4vvwX6nrh/r3Zz5f8L1xnbfVqMF87c5qhVqXc106EJ75MK1
Kwfs7ufEvN9h48K/18yZT9nyGOa/sz4+OtCeeYfAbdM0F33s2L9uw95aRS93
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
zP8Kzn+S6/BwHus7yR7j95Ti9OVdWN8o+EcTwXyAoT2fgdXFZ1JNeL5VL+Hd
g3ceXc7xUhbZDtevoWZpcTx/yhTYrYXfhf0OzPsMzvhqnX6b1w9RLQed0LHH
m2kdDfOHTrDN/Un2lmxfWSfhHbduPzzMv6d/DA8/832OnudPXMNRJwSlrBls
zfFR6gTPSv15fj/7s3wM7DO5e/MsL9bzEVxc7Jn11tAeqrXHeF/xIl3qwvzt
4SznvE31ezL/SHhJ3y0vJnN9VL0SntQ3Ki+Q/S/gD/wxwGWois8DFO066IQU
Ta1Ner6e5Q0H1gr4mcf+qV8GGxU8OniN68niw/DEqa7n13J9V9Wmo04otP3T
Mov9VzMcTjnUN3c711PMlsKaVYNM7Pi6RyJst+zbNC3nd7JceOK1o//VecHx
YagTxpuMp/mzef2XLIa/JnqHRfF6H5AAu9pY9tjA+2PFbbj5L9PUYM5vs77A
6e3sbZ9yfiFd4KwTrp04/diWxyffC9s02+A3icevuglbBb/ZYcf1Kk0F3N/G
606l4XlnM4lO2GibPOY41x+Uu+DVfadcffMf5z/X4JbeTW0/Gu7f9PCZosnS
yPHMb9NJJ2yW+WuuG54394MPXKp4PncT5z+X4f3+PuJvXA8Rl8PHnhUtKx/K
/E0664TqU9c+WC9jfgFOd3g0J4XPd1Uz4bBsVf1M7jeQNXbRCXXvmna+sZ55
e8P9m1QbbsX7M/UM+O60v159Dc83t8JTnC0PmHL9RNHQFfOP5vb+b/h61n+u
/9p/cXvvzcw7DdYHXr1xhfdzYgWc/vVQ4wjO96UX4KaxcxO7c/1G070L6tdm
y4wuzGM2BdZMvfJzJZ9ne0TDCdGvP46bxvzn4Ie3I71m83m/sgi+HPzMP9+D
9QzoivmPal69AfVZzw2wOrpg8iTD74lOw4Vzx95x5f6grBdwiZ12dTUr5q/d
TSfU7/ko9jjvl+Xr4JhfARM+TWA9T8Hxd1YN2cX9FJqncMfpklWfWH+zmt11
wttPrre8DM/vJbDpU99tSyNY32R405VDqR253ix6DF9oOdyv5Qzmr+6G/lz3
Slo01wcCOsL9v5u/S+D3KUbDd1KGVvfh8y3xQ3iOefaGWYbn96IeGL9yXH50
4fMtuSMc36f+/Btcr1D5wuZRqudPuf6sWQGfvNaz5k+eX9lveOanl0cOcL+C
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
j6bdMP7/D98dsU8=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.852450458054369}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.852450458054369}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"IWM\"", "\"RWM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1091834194199883`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03810758542778624`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "29.106630791968897`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 3.7050414278141985`*^9, 
  3.7052520845960045`*^9},ExpressionUUID->"bd0b8b54-8249-4313-bec9-\
b7e5de7ce90e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EEM\>\"", ",", "\"\<EUM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EFA\>\"", ",", "\"\<EFZ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68772110106639*^9, 3.68772110604591*^9}, {
  3.6877212572034655`*^9, 3.687721262025201*^9}, {3.6877215083368464`*^9, 
  3.6877215085778017`*^9}},ExpressionUUID->"b1d487e7-f623-4847-a8d2-\
c923553c7741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
2++6arza/wfTiFbo
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2XlcTOsfB/BB1ixJIq2yhcpIkmydkCSMLWuMQmUdUSlJyb4kIWsZKksL
IyR7JHuLLSlayDZDRpIt/D53Pv3zu3/ce9+vM3Pmc77n+zzneU4dPZeMn1tf
JBJ90BKJ/vsv/pF2XawU+L/qIfhXlASOWbhh2LI/n/+zWR5sP7+fr+S3xpKf
8IPnnq20eTys0xKl0La9/eHq7xorRsMdJBvNztJlgXBM5Cnll28ay2rgoOaL
HZdXaSw3kymFFnrewxP4+XxX+M2KKKdZ1RqL/OH0wPdPRn/VWHwIXm475+oJ
pcaZxkuVQiObyF7dKjVWj4Cd/Ib7zvvE/H5wsGLOu2Efmf8g7KbeO9voHfPf
glNejXr4lNYZ7qcUuv5NzzCt0NhxCfyrUUlJJi3bB7cr3DWgz1vmz4Krq4ac
n17O/J/gC52VforXGksXLsPvr1q30Zffj4qBbxzaNS+Sv6dWwh2rR7zJesO8
bZfjfjikX1r/ivXcCf/KjI9oWsp6XoFdwq6HvShm3vfw7ovjPyqLmFfXXynk
nzmgKuZx2UD4cusTif9esp6X4BvbghZ/psVvYLfNUXrbaWmrAKVgaz52rbiE
efvDLYfoPbJjnkwvOLOJ94MUnl/yCn5zrGPfgGesZ/NApXC60W3nJYXMbwf/
qX3mM5rHy6TwRKds88W0zha4l4f7kgXML2+6QinkPkttsI3nz+8D38kcN+oc
LZoJT0t2+Bz+nPk3wrbJn4s7FzB/Ghzw4ffYvBesrzhIKTxq5/rOnvfDbDo8
Z+352rD3zL8OVhYvM13P+xl2Cl5nstL2Pe+P4jl8dHafW3toxynBSsFk9pqR
rh9Y3zVwismtEcNVzJ8CP8jYtDqF/ZlfAB9Z3M2qO/tXVG8lvMD3YHoN67sa
NppilVX+g/U9AY9Zc9JgOvtf/Riesd84VofHzf7CjvOHxCSqmd8iBPlP93jU
l+crOwqH7Jv0ZjvHk87D/7fjb9jFdeb+Azy/rMsqpWB4cvmDFRwv8rFwtVGn
3FYcn9IfsH5Or68yHo8yD1UKMlPxK1v+fqYbvO/o3xkt6mvmD3UArPS9ZR5e
Nz98g913eeZt4+cVpqtxf88mGljw/GUj4R5vTwtanB90lsPxPU+E6XM+coyD
1ycfeOqmpXG+UZhSyFo9aJhrQ41FI+Ck2Y1zdjbQWLwUTrXbUnqUx6UH4DaL
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
XI+N+887P00y4fsPnRA49vMM90yud+S/YM81y9oP43oov7MP9u8L+ywfyv2x
aCzcvtJ5RsspnN+C4GlhwbomnswfD9tHVfis43pN3dEX92NmUkAS14dmbvBU
2yWTErj+lQTA+4P3jHHg+jRMDvsveXjsF9evintwhziXoSHbOb+NnI/xYHnX
8PMWzm/L4LWlHi/k0cwfC9+d3C31y2bmvw2/2mBvtGMP81fBt7o0nVWwj/WV
LcD4n9Qh1/8o67sf9nwS6yLfzfw34c7eJ79X7Gf+z/DsAZJ5rw4wv8FCnL9y
UZYfXbYHfptqt2xsLOt7A47scTS56gjzf4RbxE26cIvXI9NfhPWxW376b+aV
O8JOovei0Twuvgb77lyofZnXJ/0Ap0becJm0ifnbLFYJC39P7rGS6/nMQfDU
U/nOi7Yxv/fi/7t+hc4SldDV8d2hayeY1wE++jV8mSKZeefCohOp/zayPo7b
YT/PtN8VXM/nt5BhvejSZG/SGtbTHj6R0zPfoG597gmvedl88xHuJ6Rb4efj
puqK45k3/T8PDhLimces71KsL87r7i7h9UtmwWsOrwh3iWI/bILlHuvXX0ll
/jPw5IpGg7dnM/9LuCL+bHR0Gus5w08lrG5yvK1qL+u5Hp6onbv7bDrzK2Dp
5Ft3Ey4xfzG8+ePFQdMTmb/hMpXQujRae9Vl1jMCThGM7HPOs56psO/vTz1/
8PfMCuGPZq02h19h/vrLUX/PHnZveP4wSzisdXODX2dZ32TYY8Bb71l3WN+n
sNZtfXcb9ovsH2zdvX/sEfabvLs/+sPgwrmL7If8CXC6rbrtop2s7yN48HRX
/2UcD1G18KqPt88k8noyuwaohLihOivDaLUE9rEelBd3mPlXwheXdfszs66+
P+EJsxcn38lnfTsFqgQz72E/Z99m/jGwgUXjf2Jev+MK+Jl13OEhCcx/BN66
YG83Q/arqOMKlaB2SEhpXNfPo+A9N+cPe8T9o9QfNroVNngt54OoQ3Dh1xL7
DM43mXfhkFHNmjfm/CVxCVIJbi5l5wfU7ef94E9aD+903sH8B2Hx3/5d9Q8x
/y24+lDruLvcH+t8gbeNkS+fuIT1XRKM8R5SseZr3X5uH9xjs+fI1UHMfxN2
25mxPpD1FVfCAeFjbpfImb/9StTD77pvSt18EQPfSG7ut5b32+w67Le/icu/
uv5QwarrnWqDTzPvkBCMH5fuBXHsF8ercEG6e1Uvfl/2Hn5RLJ+fdZV5dVep
hBkZn/3D2R/5A2FHvc1nlHOZ1xu2l70psuN+NeoNnOJyP2ADx2tmq1CV8Dky
4Odlzh/q/vBSgzKTsFPMOwfuk6LOucnfl0TCCks7Vd4D1rP5apWwuE/OthLm
0ekH+/y7PsvwDfPPhgf0NIjULWX+LXBqyaAxJ18z/zk45uuMbS/vs562YSrB
W17wUO856zkTzv69+GNmBfNvhO1tulpWvGL+NNhq9Q+JbhHzv4Cl5Y1b/Sxm
PdeFY/481SDVT8W8p+AHS+aWyR8zbxHcddrJwtA85tVag/X7Cp1sO16/KBX+
YPLsxqF7zPcMbnJ9eZ4+zy+tF4H7GZG24+JH5usJf+setL1Tk6+a+iXBL6zu
7zdto7HkCdzMuGNZrw4ah/2FPTsW5Wt30lhhsRb9VRtzKcJY47Lx8BD9PWcW
WGgs/w17Xkzo3sNU4/wu67C+jRz926aLxiIJ/OrCbfE3nk8cDPfTvtKnoIfG
mT/g6uif/jetNFabr8f8uTI7Umco846Gn4mte0rnMG8g3HHcqMmfvJn3MHzi
xqp1vRZrrGO2QSWEzmz2MXOCxo6u8Nr0+Ma/3TSWLYf/Ree8F/N88jjYXb+4
a6WU+e/AWg2f1frM11g6YiP2a9IbnQ7x/FFL4Z3r9jo2Wcn8B+ARD5KOG4cx
fzbcoLH5QIutzK+GLeNmf47dw3ou3oT9lUlB/6ok1nMvXNtua5R1OvNnwU1F
02Yn3mP+T7BQ+ip7zV3mb7cZ8+HhmAMrC1nPTHhH5sFVmz8wrxLeb5OSUE/F
vHpb0E9zWz+3KGHewXD/Tga2URWs5xXYoWDqXtV71vMd/NFifYUJP69ovVUl
HMi5PdZEq1qTdwCsvDlp8bwq5p0HTzF716XxT9azAi4f7zzis5r1bLlNJWj7
lk1bxzyi/rB+0YD4h1+Y3wvemmff1Kaa+bfBK4a3S2vYQPN7au1I3K/5gzvl
NtHYzA5+XWlY4S/SWCKFp5rbr2ior3HYZnhse91n+9torDgLvzrfeu+dpho7
9tmO+XdP8J+HzTWWecAuMy72eVTA/Bvg4x+rhnaqZP7TsOR9/wkj3jD/C/jx
uZxLep9Y32lRKsFW/qddD9Yjcy1cNT3+XVVj5j8JTwvOXnS9PfM/hz+rlF0u
mDB/gx0qoabmZuIYI9Y3HPb8+GSXfQeNdVLg45lewSmmzF8Aj5LOKMzVYX5R
tEqw+Pq0swmvV94j+v+Oi0/AK221r+jraix9DO+/ahr3o77GUX/goLcnU+NY
/8xuO1GvaW2Uvm/ZD/nwXees7Fu8H4pfsEeEy0aDv+zfzrsw3pvZP7zM4zpj
4cH3J2y50ZF5g+Dnu3RnVZtpnP8dFidddTznprHIfDfWPw2KX1t5M68bPLhk
T27ibOYNgO3Nn4ytCmReOXzurteYG6Gsp2kM5g91/gRfOes5Ev6hn5fU7Sj7
YRnc7ntHqf1+5o+FRz9Yur/jAdb7Nlw1WfRe+wTr6bwH+5/pT0OOnWY9ZfBD
i32em68y/364/jTXZ38zmT8bHnI7Pa4Dj4s/w6VO9X+E3NI4c9FelXDMreWD
e4/YD3vg0ldbe9x/xfw3YC9l9dOgMOb/CF8q/r7L5TDz6+/Denxju/lKBeu7
GzZLeDanw0PW9xosyxu1IfYJ83+AGwW07uvwlvnb7Mf40msd7934myb/IHj4
sH4TLrXUOOotPD551trxut+G/A/Q9Zf9
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 2.2774733034201904`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 2.2774733034201904`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.316973225674435`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0771287904663551`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "17.074988700217222`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 
  3.7052520925894547`*^9},ExpressionUUID->"5b192dca-ce0c-421c-b1a6-\
e05997bf0a9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wO32QYK1jdgfnnlK6r5WiFeUHtb3Wh5x/iR4mUfsp8W/84h+kBk/VVKHnq0/
dKkU+yP6KbE/FxWC93Uf3X/ULcz/6ymxnlUtfgbjiYvmmWm/8XrLf0bkTfoB
Xrv1k7/1Mcw7NJ8831mYT1zfgv35xPmOQgUuz4x8M+E11nPwc3j/5n4fuuEt
5p0PdrFcskkoxrzOYK9b+3vNscW8kc+JevP0C5QUV+jIFx/CepoXEOtXye4C
Yn2SdLaAOF+tloPfuCV01ZyA9ZxXSJy3yHYUEudbnKxC4jyV/7WQXP9sewH9
377t7u3zWE/pC2I/IawDT3+rox6kjfn6FBHnk9wQcGBPXnNMJc4P94uI83rx
R7Du5agdHTU4Hvd6SdxfUJiCJ77bPsZMD+uXCh6jW3NBpxbnhw/g4wXXJc/7
Yt6eClj/rN6+LIWLeaeA425o279ow/nDXkF8f7XGK2K+404C64tGtxkNwPd7
A/jG8kTP0zcwbwA42zxo582ZOD90K1ZSdfcGr3AYg/PDBHCV9c/Y/ZY4H68F
a4aP07zTA/MeBm9Ky/uUNgHnjwTwuMJL12ZPw/ls7Gt4P7buKSnwxflsNbjL
2cMTHfvifOwLnitZvWhcF8wfD57YFt1NbS3mf/OaOL+XrXijpILXOIzlU1hP
7zfE/RPOdbD2goibBy5i/lf/ff0C87mFMszfDg7p8byw+Q3W7+pbWK+/6vok
OwHzFoGDkrK1d4bi+qENvDSv/ueVy5jX6J2SuvmFf6MlHd//KNLiAnCvJF3v
vscxb8s7Yv2jMCiB9Wo/054PqzDvYrBNc9PKLTlYz2fg0IFfHti6Yj2bwa+b
FuRoZeL6Zkipkhr59f3sZXLMbwWeNk/6dkQn5t8HLmi++DkjF+v5Hbz71dpJ
TnFYz0FlxP0bgSW44WrcvMV+mH9vGfH+yc6VkfeD9MqV1O3hK38N9cV6UuA9
Tu9F+Q8w/y7wN/eY6gB7zB8OVgvYav5XjPmzy4n6SOa+J9e/28Hbz5jWza3D
/KfAQVeiDTW+Y/5M8KBfN0cGjMR+/gLuFVIetWgxjl9bK2A/b9Ey64oTjgdS
sHhfbF3uBRwPHlYQ87foE9hdLJTrnsbxS7uSGC94JyuJ8UKYVknsvyQ14E3f
fsjON+H4pVVFnA9UTyMtTqkiz/+rwMlPZDe892P+Hh+I81zOlA/EfCd//4GY
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
dx72H0dHmcXEYv45YNbnI6Sfz///fvz/AFawXKM=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
605iPU8k2EWur50D7w+vUN1YgOtrBeDe8xzfnHTA9bVm8J2bNU5Zk3B9bZQ7
ud4a607Ew8wD085vcL6DafvVghG7yfg54IcFItsbMlyvzAXr3Kh8Y3MZ1yu/
7Sa+T6TpoaSfh5Eu8CDWk1WuHsR6p4S5h1ivlc/bQ6xXMreDh18SjdnUC+M9
Ca5YWSvIeIz5HCRQcjdWrQhyiMV8zhEQ62dsJ/B5tbib21jYHo6DK8285+be
x3gzwF7L84PGfcB8zvJU0s9b8BzBGru/1Bem4PrqMfCM2Ss8+X9xffgemHZe
Qf7Bk1g/FWzaq6SfTxEf3kusl8sk4M3qbZnNjXj+4B2Ydv6D3duLWH+VhoBp
5y9UKV7E+1mVYNp5CF7PfVCPvDs05OtPXN+euo/4PPPWPmK9mvMGrHk466+G
Hcb/dx+x3i+e5K2kn1eR2YJp53/4peTrot/eRPuUTvAhrqeK50Osd7P8fMj1
604w7XyIfPx+4vcwV+0n8sM5AG64w8w8tBPjvwKO7uS1uIdg+9A9QNxvbKsD
ZPzeYNr5GtElsNdGo/vDv2L8ReCbjo4DPxhif7H8oJI4L7P3ILGeLjl/kGhf
8qcHif0uZstBYj9avMdXSTxPEOdLrOcyCnyJ/pjd5Evs5/O1/KA9vc7andyC
/d0ZP2I/iPXYj+jfeEo/ov+WLPQn9oc4j/yJ/lzQ8M//Pz8iHhpArE/LzMC0
83sM1wCifxd9DiC+TzokEOrLhRvPvZiP8c4FJx8wmWRYhu3BOZDoX3gnyNfl
A4Ngvvy9SPtQN7bn2UHE/c3ZGkSsxwsiwN1/VmQkbcP404OI/Um2iZDYf+Nv
ERL7naKjQmI9XXoXTDv/onoPjq3bmPS0DPMZFqzk9p/xOl+ejuPd7WDy+lcH
E/0Tp9chIp+MlEPE72NXHCL6Y36PECXXrqh2mXMkttcpYNr5OdZN0rxyMO38
nfBPCDG+SCaGEv2T3CaUuH/FXaHE/p3MIAzGm52ywLNr8P7igWnnodi+YUT/
JP0vjOifVHqHif6TZQ32EBgwss9g/7Uf3DXEIuXmTey/LpNmso4ouXl/E/eK
nmH/ZQmuid1SGJOP+4f7wLVH2k5eeID7cxePEPt/smfggPMpWauFlPnLjkL7
TR75Y2k47h96ggdsulQxNQn3D+PB10VT9748hPE/ARf009j40Q3jV4EFB0Wf
B8/B8cHjGPQXcbEbWPo4PpwFvwlIfnttDMafD54y4uy0kubPVPyN4NZ2UXa2
GsY/MlzJfTqdl6yvg+fRpOCTk8dt2FxDvZ+vACffdd+38xVl0bAIaB9/nl38
XkxZag5m2GwYZ6qO+cyJIL5P+BU80Htfm48txqtxHMbv6sT5Fr+pz8vng//M
OdTjuyPG6wKO1FgxT3Mm5vMT2NNtQurIaZjPwZHweo/anmMm4Xg2F6z9et56
lT3Gvw3swc96VnAc8x0JnjTIaIXfKsyn+gkld/CJFRqP/1B/n2V6gsgXjw+O
tvjhdf0Y9bowHFx96XulhRtlSRo4p69J6EIPzOfMkzA+7FhR7TWDsmAz+HZW
hV2OgLL4CFh3IM+7woay7A5pxnuweczF6E8WmF97EfG6NBTMXr5oh9NSyqpU
8P6CIWaNczH+KvBPw/kdPHvKPLUoiH/mMTNJEOY3GKwp23xopSNlZnIU8X7O
2ygiXgEjGn7fyItZpgcw/snRxPexb4CnGe+20orH9lEGNouYmRJ1BePvjiby
JzU8BfXT+O89zlzAfMrADcrlak9dMJ+/wD0d8tSOJWO8+jFEe2OuBof8PLPC
4DjGexDsunpfzqQjmM+fMUQ+GHqnof7gMDXje2O8K8G5bK9K4XiM1weccPZh
iP9EjFf8z0d5K8PGYT51zkD/Eem+YKwa5nMFOHb7TJ/Fbz9R8XuB9Q0MonX/
UJZcADuMabzdYoLxF4I7eb6W0UMwn0tj4fsuvN03bBDmUwBOaww+taaQ+rzs
HNji7V01wVXKjCfgNUMTO37FUmY3gyNmJO8YGEpZuvsstPeufjvNrCmrYsGz
Tz1+xFlOmZUH1qqfad16mTLvO1h/eJb95DaMf0Qc3B/nfmj2O0aZeRocF9jv
1Ilgypxc8PXnzjnMIMqCb+Bm02d2V3dQFmueg7+XMKVjtg3GvwAsyJ+xY4U5
ZdEXsLa61+WZGz4t/B/JeFe7
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2mlcTG0DBvCRrKGRJGsjIVTGWvY5hCSVPVuSLCUakkiYbFmiEZEtCRHF
IFGoZKssjWxRkj0zqZF97bl09eV5Pzzv+/+dM+dc57rvc59zep+2nn5jZumJ
RKL3+iLRv//Gfzw6LNAI/J+6QfiH0hUeOMzbp+Pv8n+W5MLzVDtfmNKuP+Ai
rxVj/nB/RTs/jaDe0HaT7HvVdtUo+LHL6iFi7l8cCHtdnj93N7fLv8InR7TZ
/PJHlWMkco2wa+6rmPLPVVY7wsk5c/Yn0KIAeFHm64hnFVWWHoCLP7m8a/e3
yhmtF2qEhrY/2h36WmXdcDiu2/SRt6vzL4K/XO242KM6/z44QK9P168Xq6y4
AXceY1H/7oUqi4cu0ghzXJ+2XHW+yjI/+LVGbdgumfl3wx3KGtTISWH+q3DS
w7jw8rPM/wGO/rygz7ukKnv4+uP67sosOvD3yp3w+MZxE45dZl4NvLr1ekUM
80iaLkafQ3fd8T3FPrfDmmV2zeefYJ+X/3m/8z2DBOYtgQ+OW1MrP5F5jQI0
QsWrZyei4pi3P/ymaVuxN/cXXYTTSvtNLjzGPt/AF+oJb+UnmddwiUbwVDXT
b8jzKfvAroPMV9Xj9oyZsLt1t6kR8ezzJbzA9uD4tBj22SBQIwR2fJu15QDz
94Z1066ftaaLPeAdPzb93sn9xZthd/vd8aOYJ6beUpzPZfygK9yu7gFnRvde
9pK/F7nDJ1yWhwzk9Uk3wEt/ta5XxO0eZ+CCL/ExvofZr3SZRuh9/sDKo7we
yRT49qK8xEPsy3UdrF34YMo+WnHq3/5L/VrMolVP4FRJwk0Tjq/MLeh/+8tX
w8lNElfWPc78CXCZcy3jP7T6Efw9pPui22eYv8ZyHH/a+AVXOL7KVfD3wkqL
SB4vIx5uGW363JHW3YeXJHdYsZzHk/yFp9nu/9zpCPNbBmuEmCfzPOwPst84
uL5naXHkPvZ7D35Ucnyi+17m/wXLTNzbv6Pl7Vfg/l9Q/rbuduZ3gY1yK7/s
iGaf32GD3++/xUQyr/lKjTBzW+OyCduY1wlufKDnj3tRzLsEVoXm5EQwn+IL
HNciqW38fvZptkojWM34aL4slnlHwBvq3Bknrp7Pi+FVwwz1ylOZNxo2G3tx
s3MW+2yl0AifWz0OO8v7RTQclr3fIPKkpQv/b4+98OOC3t8PV99/1+G+IZf0
N/P+ltiHaIRNNuPazef97LoAHrMg4JIn+1ZEwafb32pzmvNJlQkrgtyChvJ+
KC6FTefXXrSB94N83mqMR0yRp+oc+4yEFWabbwZXrw/pcEZBkcUvjq9IA4cl
rss3Zj6p8RqNsC504tWxzJcRAc+re7evHueP7hI84W5Yq4E8n+QdXJbR1ziE
+Vwbr9UIbZJr5pZU5+8Hu39O7VZ5lP2mwsenaSa8p2WvYb/GptsGVK9vjdZp
hLcbIz0/sf8YO9hxU0nbWG5Xe8L+dZY2Hc3ze7yAy7Mqhsypns8G6zXCxNY6
md0e5u8F3y4/b/6A1k2H/7jkPHfj/SvZBJ85P+O1iNvF00I1Qp7duVU9OX9l
ofDTrq+zT/P+lZ+G336f5JTC/FgANMK+U1sV65hHOhk2tmwwpl/1erYWftRG
ulXN+ac8CadPq2vmzfmekQ+/HOx/NWYH+5u4EeeXil7b7WJ/IXD+tngf73CO
/wnYcW/7s/ZrOf4PYbstZ4JrhTK/aBPyntmS12wT+1sJb15/M2Ip7xf1Mdg3
9PrrVbToPuxWluyTs4V5O27GeB2R7LzO9Ux35P+WqOEL3+OPzNrJvD/hwolX
z/bh/amwCEPegkrFrOr11xmO2bil5AvXU9kd2LOe3YFs3t/yb/DXl8k5kzh/
Ytpu0Qg/G607U8TxVI+Ex2h39L/M55loCdzivkH5nOr76TPs3iZzT9gl9tlm
q0aYET+tSO8q8zvARmaOo314/0r84U3Kw4nLrjD/flgyL2556XX22TIc47l+
XmrJTfY5DJ7SsPGnSJ5fJoctLkZPrn6eyvfAkRX3fQLTmP8anPPl2P1Mjr90
iFIj7FTM+XSW95tyF+yT1FddzPUm4wq8tWW9IJWKebXw2TmXAwt5fIXPNvTl
vD3d4i7zpcHNoy8c6VDCfO/hm8/bRjZ8xnxNIvB+cum4xPQV+9sGz/7+52Dj
x+zvEmw+53MrfV6f9C0cZ9gt59xtjr94O553Oy3sEguYty+sZ/V5cgrPL0mB
w366t7a6z/5ewc2iV+75ncO8DXdoBO/tSv+puRx/W7j48ydh1yPmnwH3dm5t
8esJ+6ofifnbxblwCvOpe0b+73yi6XDh80HTtnD8pBvht1dzN9tlsr86O/H+
816yYjHXT103eGJhrz9G1eM9FV7WpLdJrwzmXQ9fKtxw6Qrnh0IFKy9k9Dbh
+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
zId72iQ/Kfs8CE8+cfnASZ5PfguW1VIVapg/5gscF95ygDWPpzZ7jPl5v9M4
w57M6wjXevAt8yWPp8yCz3VXdjzSkn1WwKsT27TM5vl1rfLx/T9jj+ger0cy
HN44QL/BGDvmXwgnqPT63OD5isvhWl3Ea/I5HuIWTzRCvU7tD71rw/z2sNR5
/OyD7FO+AD4wwbnBnibMHwWv/uJ0Jt2IfTZ7iu+do/fqJLVinwLc2c/wTV2e
TzkPfuStlN3k7zMiYSOL3AcNTZg/Hfa6+OJ4UnP2O7AA3wtezv32cD6p5sJx
lg8D23Vi/gj4QWDJ4IWcf+LLsP4n44Td7E/2DpaecIzyG8J+ZxXieRD9pvW+
YexXCU8Nfb3egvezNBVenWDsWDSG+V/DQtbRb4m8n5SNnmmEu3niu4t4P0q2
wAO1SwaN4u9dz8PHDqpCjWcy/wu4tIl2/gmuRyqDIo3w4XLLoQt4fxf3+r/l
SbCqxbezsRPZbxHsYG627np1/rrPsd5VdguIG8/8PeDJOtOMejPYZwFctnNX
/d/Mo6tVjD67Ljm4gvtLpPCCjR9sIrneuE6GNRujrnzg+qBYCy/yWGncnfNF
XPOFRjD/0SfXTsY+rWHfhEtLenL9kE+EbXss//DbgXlD4L+/zGt0o9Un/vlw
faFfdZ+dX2L9Nh9tUsH+lePg1Yenn3w5ivlXwqvq3Sncxby6Y3Cbww3Ke/D3
kvuw4/w6mSbcXzX6Ffr2VLTL82Kfy+H0ye2mKOYyfxx8zanud40/86vhKef2
O++Zw/w/4Yo0Tf38pexz2WuN8P21qWR3IOfDIbjvkpLdwT7MfwdOGhh55cQS
5v8GH1wS4DV+DfO3fYP32ZqRlR4r2WcOnPr0eK8n85n3M/zxWUq883LmbfP2
f/uLR8DJLoYVnswXcxNe0tgt3InnV3+EMzd91FovZt5W7/63XToMXmSW+Mcg
mHnlcLfEBPMDm9lnGew19LLjqHD22bwE42l8/4Apn8euQ+Al3z3vXt3G/PPh
hPjYTAv+XrUL1rl0aGsUxj5N3uN79bzPbAM+L+UyWP7uZMRL9hHjAxetGX2v
hM9z9Q54+Y6lgz9uYP502HnorMBD69nnAA2+79Ttdu1Yxz7nwE9d7o6ay+Pp
tsFZFevl1z2Y/xKs8MubFOjJ/G//bQ8+0HgSx7/YS4vxy3b+tZH3hzgcjvNa
sCtxEfOnwM32HTr6N4j5X8HHLmZ43uH5pWGl+L1Bxw/ZPL9HMrzGaUBrvRXM
Wwy/7TFD/Hc189b/oBEysp75T+HxdD1hk6iypC6cL4qzcNSmla/LeHzVM7jV
1g323rz+4jpl2B4/as0s9iPuDodPnWFZdxbzToX3zDm1z4V51E/h6NzlUR1C
2Wetco1Qd97eno4cT2lXeGdlq4RYvs95TIKd0moH+1R/b66BNR9/9zTi96JE
T4f7c3Jb/e1H2acVvHigfkUpf6+YAG8Z2bbmcs4PlQLucGX5rkYLmf84PGby
y9fz2Y+800eN8GRL6sNIvj/FjIUzeottb/N+UK+AM30mnTLn+IiOwUun1hvv
zvVQmgenfjRas8OX/bpWYD63tJa6KthvEHznW/1OeuxfcgSu8+xOzCvOV9dc
+P2c19tXVr9P/oA9Prvt67aJ/S79pBGsHnmHDq5+342FC33a75bwe1h+Gz4n
yF5t5/d3zFfY5uyeQYd2M7/ks0bY/aSlcRN+j3scgD9fibTK4Pu0Mhs+fPnN
qJLjzP8JDkvI2t6Nfy/Qtf6C+Sj+63WOx5c4/PMHm9Ym/D4v1sFp9gdU55hP
3PIrxv+7RdpZfo/KhsKmZ4MD251kXj94oOqO63h+D4nKYHHN3lfucjylpt/w
+3uzlzbj/e8xGG70a1iLeM5HpS/c9urswEquhxk74axxG1XbuB65Nv2O99GC
N/vcp7HPQfDW9+9G+nF9VXnDrSRv/m51Z/7t8KOYN0+bcP6K0+BN+lmlJWPZ
Z/8fGuFyyNpp2f3Z52xYMfX3jVm9mH8bHK3e19/Iifkvwo1/Dr6/rD3zv4GP
t0qf4mPFPmf+/Pf/zzQbXKsB+9wKd04ZOvFGfea/AOeG2Bh++fChKv9L+PKe
QU0sv1dZ1eAXvucKwkpCa7DfzfAldeKS3WL2ew4+HXkr+G5N5n8O//yhqczl
+4663m98312tubc7t4t6wqZX7QdZv6s6vvIMfLTVyKEmFVXOKIRLOvbPu/Cz
yrraf/D8/tqs1eS3VZZ0g3WGw0saFFbZdQr8oem7VHVJlYufwPvD7z/yKKuy
WP8v5u+2sPbtP1VZZgPLxMHP+5VWWe4GtxrW5d1R/j5mNVw3aMKulboqS2tU
Yr69+LC3w+sqe3SBL/8Wxn7+y/zj4fXZ0ZN+6XF+rIJzg9vW+Ma+dfFwX79J
08R8X1dYirRC2I7Ki59qc36MgdvU6bU1vA7nRzDc5PaYHdd4/eKjsCzxhzKQ
eWX34BsTUooNPlZZ7VJDK1g8vZ5Tk+MlCoKPPWlhd4LXKz0M71lQvuAM7XEX
7rjMbWggr0/5HT5/KrzmFf5eEqinFd5tS4md8J79HoTTpJtvOXJ8FLfgDY9m
7nrOflVfYOWLQNGfcvZvVlMrWL4aYeXN91V5NLwsI0B9tx7nRxb89rBbmmUl
81fA9YsjNu9nP9Lh+lphXwNdprp6PlyHDd917zWwgPOhHK5zXT/7CMdf0qKW
VghK3VtR/Jx57eGpA/6MULxk3gXwjN8vao3i/uIP8Ji+Xgt7ZrPPZrW1Qod2
Lo3F6ZwPwj+n7OrlcJbzYR58Kz/vws545o2EjSpyP7Xaxz6N62iFrYpGhmfC
2edA+M6LHSlz6Iy58OWk11+6z2D+CPh6J1Vf0wXMfxle/FBd6yat6ldXK2Tq
zOJ3B7PPWXBpk1lhnv7Mr4Rbzlw6URXAvK9hh+n+Bt1Wc/xn1tMKksMZpk0X
cfy3wHbrRoxyWMq85+H141Vns3n8DIP6WmGzRdgfn7nsbxPcc8aJQYMmsb8k
2GDQ99W3pjBfEdw+9qGdhQ/z1TXQCk0LHHc2XMJ8PWCHO0fuHmS+mNNwi4fH
r47wZn8F8Bb/Ttbh3F9UuwGuV5Jk03oe80rhwj/9UzsuZN7J8KTD+/vvWca+
ajbUCqs3vzZozOtxtYbthT/tJ2xl3olwXGCaw5JY5g2Bg68OcPGP4niLGuF8
3lcSPXazv85wjuZSgCaCecfBxYs/Ff1Zx7wr4Xd72n5OW8u88XCbRgPfn/Hg
eHc01AoRAcKm04vZ52g4NsXcwnMTx3s5XKpXVh65gfnj4GEZNgV/uN1VDf+V
fTnhxt8XO4tx/1j2X57L8RMvgzNXJy94zz5kh+CixSn373O85Hdg2d0RA7ev
Yv5v8Dx9mwE2YewvprFWsGprv6V4I/PmwKI+QS1DuT3jM5xat6hlbV6fro2R
VvAqquw4fwv73A9rvq6ZcXMl+7wJnzNauatCybwf4Zhlfq0HcH9xqyZaQZWt
6BvB+S8bBjsOavrUhedTX4NXB833s+f+onJ44o3SAGENx7+5sVZQBPXwaiFn
/iHwhXObfzTi9Svnw8uuZtuZubPPUnipMLtHKOenq0lT9N+40cCa9swvg+Mq
B5TscWR+H/hF4chrChfm3wEHLxI61Xdgn01McL/PbhDh48w+B8CPLtQNV7kx
/xy4ZI16mT7ziSLgU+OOzUni+aWX4HVPHa994f2c0beZVrDpMK5rNvfXecFT
onoPTub9IQmHL48ovSebyfwpcPFg58SACcz/Ch5ldP5K+WT262mK9Xeg550f
89lvGDy53FkvgfePPBkWL+qb1jaI+Yvh7te2bm3Mvj02Nsfx7r05nh3NPs/C
EXdDshMimfcZ3DZoosvxJOat00IrZG1rNrjjVebtDlucfJrX+Tr7VMGP7QSz
RRfZ51PYp1d4xEHuL67VUivMrTGsxUg183aFKxq7XL3/hHknwXetrZPHpbLP
fNjJsN7x3pfYp14rjJ/6b+hCHs/DCs4p8W44/BHzT4Br91pS1OoN8ytgq5DO
hQ5a9lkJL/B2auvE56WiU2vMxxurZnb+wvxjYeNvKXMM+HwpXgG7RJSPPn2Z
+Y/B1xofaKXIYp8d2miFujPqXwy8z/ngChe2uWTdiPuLlsPqaVf65R9j/iNw
8aaajbfSHrmwXSuV2V5en26UmVY4nvp5RXIC+10K53tI6v08zPyx8Nv7ogVl
fP4obsOh1yNGHk9h/q9wcWIDr4nMJwuQaIUGsaYLz5xhvwdgvQMph5TJzJ8N
K7M+mt4+x/yf4KiEkOGBp5i/TVut4BGVWPqZ2zNuwPPqHBhbyvVTp4O3Nz7n
o7eHeVuaa4W+a+vWarOeeYfCTycP69JgOfu8Cp8sPhncjvevuOzf9jHbwsVc
/2Wm7ZDvwuJJ5dwuHwynjh3/6APvtxhfeEK4qMu28exT+397NLXQCp8PdNy3
m/e3chCc+mx+YAjX5wxv2GT0iKwgHk+3/f9WGLVH/o6FU8Qj2Gd/2Op+TmTE
MOafDc++sKXhYlfm3wavXTNsiMk05r8IJ0yYqp7lxD77dMD8X7B4ZxjvZ5EX
/PGgU2iSH/NvhSseRlbW53aPC/DA/pOynw5i/pfw4FH3f2yTst8ZHTFfB2w/
8cKE/W6Gxf4W2jsdmf8cfDhzU0BOe+Z/Do/sNtNyQGf2ucFSK7i/fJURVYd9
noH3fQ+x+fOntCpvIZzklpQ5/2WVRXU6YT11P3sovKTK0m6we5/fiq3cP+MU
rHPy+mZXk30+gf9cDPeeTEv0O2uFvJATV3Z+rdrf1QYe4t7EzEyfed1gVfmz
Lye4v/gxPHWciXX3X1X7y2p00Qq+hzs6hvJ88i6w/q02qZLSKseMh+tbZclG
v2b+VfCJtRPHBRVU2eMvPHCkrZfdrSorLa3wPqPf/l3WPeYfA5uN9Rky5HGV
dcGwsWTAG//cKkuOwts7db9bJ7/KqvbWWuFb0T7XWTlVLnaBi47/0p91t8ri
ILhRwaBu/WnZYfik2ulrzHXmvwv7uSU4yLPY7ygb9O3R/V0nNfsNhE/775j5
LpP5D8K1RItqeqYy/y24f7+cqAkXmf8L/OfZkF3ZtOvirlgfi7yuj0yqsiIa
XjsgUT1DxfxZsO/RtK2DzjB/Bdxm3xNzr5PM31qqFT6tyL+Wf4r97oU/Dw86
W5vb1dfh4HklvrY8nkgH28Tu6HQ5hvlbdMP9qGwqFOxgfvtu/+Zbo+O9d7Pf
TPh3WmlsyR72+wF+WvuOx5Ao5m/WXSts6uQzNFrJ/AJsf33tnRs8nmoevO/6
0eWTaLlxD63woN3egKj1zDsQDn247vfotcw7F+55OMAwJpR5t8P6Fc+/bFnH
Phv3xPv/ocDLUdye0Q/OfD9Vm7aGeWfB4vAtF96EMK8Srqtn4ihdybypcLft
1+bEr2Kfdr3wvLI51SBawT5nwqkzrHZ24/6yLfDKitDPv3h8+Xk4cLAw8OgK
5n8BR7wpXrmL26UevTG/bI9NuMHr8dgEV9paHz3I7cokuPT4ga0X/Zm/CBba
RRnuXMb8dW3xvKv8ud6A2xWhcPi0OxbFtOo0nOEzuJ7pQuYvgCfXjF87fQnz
17bD/MnZurU+jyeTwuMkJ8Wfl7Pfk/DJiNrp9QPY7xM4r+JAwSNf5q/ZRyss
GuMVXFPO/Naw5VYfu378vXIiHLvJIz8jiP0+gpXdas2SLma/or5aIeT9sVeP
mEfRGVbsMUg6M5f5x8HTJl/LH7SI+VfC1rlnfhwIZL9/4NtZ6XOs/dhvx35a
oWu7abaZs5l/NByx7lTsmJnMHwwbHdhYw30a88fBP0c2b/bOnf1a9Md64r9g
XDNv9usM57x60uQer1eyDE7LXT5u6RzmPwRHSU8NWjWP+e/AD2bMmRQ6nf06
DUBfk051OjiO/S6B8/8s65PjyvwxcKqiQOk9lvlzYJud91fJxzD/Z/jCgaN7
v7iwX/+BWiHZ1DAyglbuhx1HTfHX0hk34UWmQod0/l73ET7Te9fVejy/pNUg
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
j9jnW9gz5JZJbI520H/J1pqE
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0.6034245153872689}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0.6326033625719969, 
        1.216180306266556}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0.6034245153872689}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0.6326033625719969, 
        1.216180306266556}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EEM\"", "\"EUM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.8684854932035189`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04913483312041162`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "17.675555976249612`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 
  3.7052521017904205`*^9},ExpressionUUID->"c8bde650-725a-4885-8a6b-\
a6f56eb3ae8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0oaeIiyZfop4/iz8D/x/+6/+B+QgTYk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
UetI2Q==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTPv/B/ApyZ5JZAmlIloYVEJqDolQRhSRTFGplCmUooytFDKSSpSU
JSGDZCk1ClmTrCUkpGai0SYJv/ftNX/8vvePe+/zcWZOr/P+fM5nOXNGeax3
9FRmsVj1KizWf/+lf/hjAqQM/lduTf8S8cgfTeL9QmCdp+Sa3aonF/5u/M+8
X+Tyk4N4F/92Wai3XspULug22Lqzy2J7ssD5avoUfL46hCyx3DFnyq8uC9rI
P5QtbBw7upymI5AyS5U8XI3gsnnkTFdXpqi9y6xNZI2Of3llbV3mHCdbGqXa
7cTnJSMCpcxNZ/FIZfw9+RyyoDYzTBf5dILIKofirIxxPbxj5Msm6xcFHUb+
e2TTAYcchh3qMnt2kJSxMu32pPZgl7nryQEhxscOHUD+I+ShIdaFZ0XIX0ze
v6aY5Y/Pl30jm083zqpO6DJ/3QYp8/hfn8IXiV0WJZD7ajRcKU1DXin56zS1
b6X4vs6gjVJmll/uESX8PfEhMn/MaAu/eNTzFnlswem6gH3IW0e+o6V75BHM
HbBJyvgNTLJ8HY28luTxx8tVspCXlUduExlvV8X5OV/INQu1zg/GcX7/YLr+
ENPvafh7oqnkgXpfby1Hfslqsoogcfc5nJ9XQ95so2vcvh317BsiZTQbn/uM
gsXm5G9/3G1D4Wo+uU/+y6Nxu5F/L3nsqbEuwv2oZ6/NUuZ6t1DrLXtRz8nk
E0qPJtfi77HcyO2DV4pORCH/HvLIR92XNW9D/svkv187XIfh+uScUCkzN5ep
Zyvqu4J8fa+Z4TJcH283ecjYoDvdk5D/ItmmqHCGGO0nriDHzWH6CZNR32Vh
UmbHtkFtF/F9wQ7yh6GPuR74fNp5cqZHjtOXOOR/RdZ0/JVtlYL8SlukjPII
M4cSWLSNHLdlt2nRUdT3LFltQd7HvHTkf05u4EftTcDndf6Ss+wahww6hvxj
t0qZHseib4jQPtWnyUG5X3ZcwfnYz8gq2W8bohX5f5MDXuo5nVDkHx0uZSaK
w50HxCD/QnLmtfxUNurHbyfnpm8cbIL6i3QjpMy7vn/eaO1B3gXkQ6rLWgzx
9+TB5Mm1s/SUzqKerWTLNiuT/cdRT+1tUoYbrL0xCcer7cin9T41a+Qg70Zy
jUPsJf0i5E0lm1fYNc17gnoOF0qZCHubqgUPUc85ZOu75mfyJOgPgeSjTpyr
a+4h/1HyPp+2uaG3kP8uea6StWxLAepps53q5Vn0re4G6hlAFmidH6F1BfmT
yFoH5VUtZ5C/iDzwWqHdaeStbiAPY17an0L7CPx2SJlaLXmVMT6fdpj84UfG
zVhcb1kh2Sv73vBfGcgvJe8Rmpk7XEb+gTupfSWBL1Px9yVx5PMmvbVtL6C+
+WSTxosLVqP9db6SA2af22OF+vPUd0kZabLN3DaML8Lp5L/66k1J+Dz7Jjk1
JHlcEvJxP5M3X+tevAjXL1DbLWW8/ZQ3db+L/BbktYsuuTajfmUe5GG286IS
zqO+H8mlFZ8P7cpFfftEUvtEeEx4g/4mMSMX9UzK2nEE+VeRP37dszED+XRi
yN/yzS2t0T/YK6OkzLq+S70q0P+5UeTu6pFjtHH9gkvkiqigtyX4PA0AUmbM
8j9qWbh+znJywQLBhSenkG8X2TPg46oyxfibTR6/N3+aNsYbyRvy1F2bl76K
Rf2WRtP9/z56IgfjqXA7eWL49YRdGK/E58j9ni4tnxeG9n9JNlw38VJuBPKz
YqSM9kj/+S+EqF8E+bTk3sCZivkhk7ym2SYoFuMF6zl5f93x5i+4H/kGe6VM
2Tyv6W+zUa9T5OL4ttkm6D86ZeS/8UmjzdF/eB1k0cTL3lGZyKu/T8osvJw3
/Cr6p9iB7PZA+LQ72of7hBzR61aA8zXU8yd5auLcFwvzkXfUfinzmqX+Sw8u
m092iJpWUIT2ZwWTXYRtlaGFqGcLOf78qZZc3H+SkbFSZkRwYoH3A+SfS565
Icr8Yinyb/jP749wVuD+5KWQ7x9++qYex6u1DkgZ/TEPauNeoJ625L7NnCw1
1IMrIIsvOxpdxf0iSCZvXr9GP0OR/w55sprh9UbF/TRLJGXeP/tVmoXvixLJ
DtvaXA3EyHubnDJ8ar+jqIdcRk4WFHr8PIl6+h6UMhuNSuqbcLy6gFz5oDoo
WpGvnpzg4PS9uBj5NOJofHi4wzEO11N2kGw2+Sar8g7ql092zrTSO3IT+WrJ
yV87Ao/jOJ99SMqkW726zX2DvNPIm2uPT55fhfrdIOcHedaufo/6ffrv8x6f
NV3fIm+/eCmzs+fSVb/K0f5TyLlPlcds+4j87uTGdQ/a69+hXr0PS5kzM07s
bsD5ykzJtn9/zvyKv8daRd7nt01vQC3yRpPzxm9Yx8Z6T9IjQcowYbkjZv5A
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
abjesDDkX0QuzvLq6J+M/FvJq8M09gtxnHOarNVHdeXy9egf+pY0nwSfCDyw
H/3Dgcx+GLA2bR/yh5K3xsS77glH/gyybt+lAqXNyP+E7Lh29tYI3A/sBTPo
fvVJe/bVHvUNJo/Nu1s+biHyp5FFn0Zzvy5H/ofk8ppF6mvNkb+F/FDTbvsE
9Df+Biuqb/Kp4J42qG8K+fwmjy9Jc5C/hNxtZvSkT3zk/0FWEtYdZ/sh/3Br
Gg98PNSjFPVNJof9uKAauhT1vUNOfVWVMtwF+RvJy9es7abphryzuDJm22Pf
Tb1WoJ5F5NQOadMU3D+cBrLa67j+MagHX5Oh9Z3OhT5LliAvl5ymHl9q5oC8
vuSTNj8r4zAe8erJRuuMp5xdjHpqzKT6Hbl539YIeWeQg5wK/Y/rIK83+U/1
ooe6uD/ZcWS/B8vvr2jG/caeRe2933HX0dYul00jKzv16pyohPye5Cf/esUv
N0H+A2THaL/q3Riv+DfIm13MhzbjfPIpNrT+vjtHdhj3o44Hed3ZjxeFn7rM
20euc5pXGYfxVJhLrs/pzy9RQfuvmk3jh98oswhYEE2umprk7zUU7X+FfEeg
NauxN9r/HTk4bXC4Jc4virSl8cjpkTT3LsYDMVmoJumxVIJ8leRUw1kHJxxD
vu5zaD6xu/4l2x/5JpCXO70KLnfqcvUF8puJLkmzXLvMfkPWX3Df33stxjPl
ubR+2FTSeNwO45kxOX7adlmEB+rrTBbl9e/3ZxjGr3/k5WYv338ci7zj7GRM
gp3a+nPKyLuYbGJ4V3a+L/KGkyPfTJ05f0aXhZ1kFidbdEK3y+Ix86ge/Dkh
VbbIyyOnlfr84k5F3i3km+UpS55ZIu8pctPj8wY5bmhvvfmUb3+3L9m4PpYD
eWS2XYr2eIy/m8m7O+ckenGRP53M29KhawCLHpMtP3B2j9dGPecvoHq2l90b
wUI9N5Gf1E8/3/a9oSv/cfKy7VrhPxq6LH5AdrrtFHrrVZerm8lHleLz4hq7
nHbMXsbMOhV9eE8/5L1HnumeqGVmhLw/yL2TWy11RyKvloOMyU6tN32ig3oe
Ib+aEBc80Az1LCbHsApn3tRA3u/k72lXljf2R94hC2XMD4dblkpjUO+Z5D1W
I8VfR6Cet8nvx2aUBwxEPWXkkzP/PHoxC+0/iEf1KD33L2sR2t+a/C+y+xb1
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
+T/hulp5
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.4796901309161656`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 1.4796901309161656`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EFA\"", "\"EFZ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9561975791110691`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03719219655569308`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "25.70962910671922`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 
  3.705252115431291*^9},ExpressionUUID->"c4be2cdf-7f55-4f54-ab1e-\
0043c4d39f5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<DUST\>\"", ",", "\"\<NUGT\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<JDST\>\"", ",", "\"\<JNUG\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6984978302715607`*^9, 3.6984978560185995`*^9}, {
  3.70201941324889*^9, 
  3.7020194137295437`*^9}},ExpressionUUID->"9d865506-bd6c-4380-8300-\
cddcfd93fe89"],

Cell[BoxData[
 TemplateBox[{
  "FinancialData","notent",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"DUST\\\\\\\"\\\"}]\\) is not a known \
entity, class, or tag for \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FinancialData\\\\\\\"\\\"}]\\). Use \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FinancialData\\\\\\\"\\\"}]\\)[] for a list of \
entities.\"",2,22,4,29586612957396748452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.705252119603142*^9},ExpressionUUID->"750a7bf9-9152-4c76-bcfc-\
94ced7ec248f"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{RowBox[{\\\"FinancialData\\\", \
\\\"[\\\", RowBox[{\\\"\\\\\\\"DUST\\\\\\\"\\\", \\\",\\\", \
RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Thu \
31 May 2012\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2012\\\", \\\",\\\", \\\"5\
\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\
\\\\\"\\\", Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \
\\\"\\\\\\\"Wed 31 May 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\
\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\
\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,22,5,29586612957396748452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.705252119618765*^9},ExpressionUUID->"24c98739-8012-47e7-8d42-\
d9871cf4690b"],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{RowBox[{\\\"FinancialData\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"DUST\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\\\\\"\\\", \
Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \\\"\\\\\\\"Thu \
31 May 2012\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\"[\\\", \
RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2012\\\", \\\",\\\", \\\"5\
\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]], \\\",\\\", TemplateBox[List[RowBox[List[StyleBox[\\\"\\\\\\\"Day: \\\
\\\\\"\\\", Rule[FontColor, GrayLevel[0.5`]], Rule[FontWeight, Plain]], \
\\\"\\\\\\\"Wed 31 May 2017\\\\\\\"\\\"]], RowBox[List[\\\"DateObject\\\", \\\
\"[\\\", RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"2017\\\", \\\",\\\
\", \\\"5\\\", \\\",\\\", \\\"31\\\"]], \\\"}\\\"]], \\\",\\\", \
\\\"\\\\\\\"Day\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Gregorian\\\\\\\"\\\", \\\
\",\\\", \\\"1.`\\\"]], \\\"]\\\"]]], \\\"DateObject\\\", Rule[Editable, \
False]]}], \\\"}\\\"}]}], \\\"]\\\"}], \\\"\[LeftDoubleBracket]\\\", RowBox[{\
\\\"All\\\", \\\",\\\", \\\"1\\\"}], \\\"\[RightDoubleBracket]\\\"}], \\\",\\\
\", RowBox[{\\\"{\\\", RowBox[{\\\"1.`\\\", \\\",\\\", \\\"0.808063916759569`\
\\\", \\\",\\\", \\\"0.7684875510962468`\\\", \\\",\\\", \
\\\"0.7577108881456708`\\\", \\\",\\\", \\\"0.7515793385358603`\\\", \
\\\",\\\", \\\"0.8286882199925678`\\\", \\\",\\\", \
\\\"0.8117800074321814`\\\", \\\",\\\", \\\"0.8455964325529544`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"36\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \\\"1.0033444816053512`\\\", \
\\\",\\\", \\\"0.950575994054255`\\\", \\\",\\\", \
\\\"0.8881456707543665`\\\", \\\",\\\", \\\"0.8530286138981792`\\\", \
\\\",\\\", \\\"0.8671497584541064`\\\", \\\",\\\", \
\\\"0.837421033073207`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1207\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"}\\\"}]\\) \
cannot be transposed.\"",2,22,6,29586612957396748452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.705252133271656*^9},ExpressionUUID->"fbea28f6-6ae1-496f-9b06-\
a1dfc9b6ab0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
QVbum6NdkzxBqW9d43ymz0TOr/TsDHbMnsj5YEcLyOPZNVHx/ybAf9DdJ8b9
kHOcX0sfJEtDO8xs+zKO/beqQWo+Gf6AdkeQsn/Hgw13glT/F/6E+V+QWm9l
f6PSJFkyiAC/G8Z3dpmk1osxvunmJHX+0N/6exLnP0tM5vxg+cky7vNXXYPz
wWMk5vsOYN20yUp8lsL+xI/JXI/LmQvPu8pMYXuquYF2bYcp7O+mz8f+W/AU
tp9Zz0A+80bi48cfTu+fg/23UsHszwysi+f1bYPZP44PwPlkmkQs7vuEZYY8
1vXEfF8c7Y6LwV7nm7HVVFnyERO6BuNbJhCL+3XPmoLta4hfbZuYbkxNvM91
jljc3y7bCPrVfprK52nJzJyPGBfC+aIiU9m/XxnC+cYp05G/0CSGqPUosP5D
iFo/RX9T4Wk8P4nVwJ7YabJy3w/xge70NNUf4HhEJsb3KBbO//hPl6VK4oLn
N7Dh5HQ134zxzG+JH3TccTK2KcubdwbnC/rtRz7I2YhYfD9Q7j2e1wyb4ZV/
tL6aodZvwY7cM9X8NctbfybH69YEjp+GeLNx0UyuH1mSML4rR6h6nwDv19YN
Zf84cyvEV4aBoWx/JzqQjzFHhqr1Do73D4Ty/YIJ98D62hbOP8TpEf+a+lvU
/DTYOt+bHfssar0E7HlEjPvyFREf2ufO8soPuvYQ437+POSLtA9neeVfDRnD
2J/+HMP620Us7qfti+P82b0wr/6mdLPVeifHG1Vm8344847ne/tstZ6B9WK8
TRwxr02m2VPAlr+zvfLJ9opzvNabq/Mctb4Btv2aw/5v/wDEU85yc2W+z2vC
+zXGuWq9nddnCLF0ec3vuzaOP78T43sgCevfU3qeEj+M4fiz/Ty2D+8mYXzj
FOLEY7SBU1jeDfPU+g/np3XhXuMb2oRzfnHrBLZfQeFqvpXjz3XhXvbQeUG0
P/M/nj0jx58t56v1Mo4/x8/32s+O1fM5vkgrxPWNpPkc/y4swvbXM5/np1FR
3v9jI3h/D/BFu2tFBOenZpUAa88S/7sZlXNzbrDhfYSaL2T7VWiBLLURC24n
x28OYvH1tr0Ky+smFt//7m2H32PNH+kVHzuaRKr1Zo4/TxCLgnJKG9bnm0jv
+c8TRf5rwX1Wn908/w2J+fsIzv8OjeL443Ys7/+XxOL7nhYneP/nWqj6J2BN
fWL+/pDrGYMXKvH3Ea7HLCS+vZoWXHrsV0/2RV72QFeHWHwP23401zNMi7je
ZPvF+d8FxPy9BtieQCzuMzYPABtqRct83/0+2NwvWlbui/N6Do9W74OAnXuj
uX41ITfb20fR6vmP5629rWq+FO2OOVa1/o92z25infjePon33wNigflktl8Z
FsvK/XC0u2YR4+9fSRhPu3OxWs8EG+4u9tpPZs0SL7ZVXsLni28OrH99/BL2
ryf34fz6rSWc3w/Nj/m3/lnC55nfZrCjQgzXi3os43yEM8ZrP9p/xqj1A86f
lF2q5nNZ3o5Lvd5vmLpU9XfAzm9LOV9nLMH6LL1MrTdivvXtiMV95Qs3wabJ
y7zOH6ttmax8n4V2XclYXp/N6/F6aE28wxZUMjocbJlIjO/lL2B92dfGsr+Y
kMz29zzx4/O1mpfagHZzi+Wcj5izi+uH5uWc75ctYOcqYr7vzes5iVh8nd83
C9vjj8T4ezSn+Dwbs0JW7vPzebaceLy4Dtaa18MZ4ozB8+dd0rE9freC9XF0
HtfnCq7keHP/d95vy1Yq932W8Ho+RYzvGY18HqcQ4++9pOP6XL5VsvJ9A/sP
jVcp6/kxn7+vVyn5/BoW//8BexngPA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTP/3OPBJmwgJqZSGLKFlylJZ5yIp21QikcaSJdQkLUqZLCVapkhp
M0KlkhGVFkxIpWSSqChDi8ygEYkWvud9Xp/fH7/3H+/3+/l43XvnzLnnvl7n
dacpOz3t3YbRaLTPCjTaf/+Ff9gzPCQU+V/ZMvgXjwXec+nmjedyaPoL8AW5
xAVXDdGsP+D3674fPGqO5up7Sii7adNWNZNxwTrwthNh61tvdP9nsR+YlTU8
ZUQemvMLbJv4qNrFE82ncyRUhntSx/BytMgWPD594ABVjab5gHOZH807atGM
y+AO9eHiYy1ooa6XhNoZ72P7ehx+vswaLA2NYTWMIfEfBn+0oqX3SPF4VjL4
oHJnc0jRN4z/KfiRnH8aSxHH1awOS6gCvRtJnQ9wnOkJNu5j9c6+iOZcAi9N
m1TyIgXNfwwWGS/3/uaLFn0Fn8jeGp50EM0+6C2hlqeOYXIPoXkXwWXOLxa7
30LLJODXtXFlNv5o+oQjEkqSOngseAxacB7cf9T3oIscWnwf/OtNMrv501eM
twu8+mm696Q+NFPdR0Jx5083lB9F4l0MtjNbpvu1BcdpJeDYpZVhP0VoRge4
OldFT9aDZo/xlVDaiZo/pw8n8VqCa23eeWl+xHHhLrBoYsbZgvdo1kfw1bKb
Jc+nkXyq+kko81KmpcZMEv8C8ErtIPVh0Xi8mA0+c1/7jvoBEv85sDCi74GH
I5qv4i+hEv79yRVuRYvmgvck9JlMtCfxbwcvT685HGNN4j8DPuJbXGK6j8Sf
B/5yt2KK1VK0jHFUQqWnLha+mYGmbwW3Xo+NfGdK4j8NjiwoTwrTQHNvgSsf
Je9+OBctaAI/eXhlxl1Lkl+nAAllMehrJJqC5pwAtx7Sqpk7lsSfA57QqBHe
NZ7E/xrcMjp4c/1qEr9coISK0LvtFmyE5h0H/xuYqTWDIvm9AebqrZv6PoTE
Xw9WexBZMUxM4v8LDndX/rHsf/k3OCahEttdBRdlJL/p4NuFZTdek/PV6sDq
k64GL+KR+AfA9fWbCzY4kfinB0mozKv3S0aQ78ffAF6+adiGfnJ99m/wCcOE
fO4zEu/UYAnl7/SGXtNI4l0LjnKYM3Z+AKlnXzDP/9WBqXvweeL2ghuGxzG1
b5N60DsuoV56K1VaiEk924B/y687MvUvWu0IuHueNvNvAD6/zFSwjY+q6riZ
3zGfOlyo118q2ZrT0DRrcPQcS21VdzTDC/z78qCnVh6anQRWb5t1P9YTzSsH
nzWttj9JxukrQyTUqWF0OUYamd88wBt/rvsaZkTmtwTwg137NW3Xk/ntEXhi
U55F+0g8X/wFfL7Ab8nmLzjOOXBCQjmM9127XBnH+XHgh756+bbPcFz0EGz5
MTZz2x40TQJ+en/S/ogpJP7xJ2G+kutwk3uN48JYcOO3q5tsLpH5rRSs6qV1
XeEP5pf+CXxu1k/HQj0S/9hTEqrXqNzAewaJfxG4uEnskR9I5rdisLeRQoF9
GJrZDv7r7hU22YTEP/o0zO+OJQpdh9B8C/CG6k6fwEVkft4JHl/RtDJvI5r9
4fT/t17wRobC550sHxlwCe+ncD44P/aNo0YlqWdX8JKABbMUJGS+Owvu23Zt
9OJMcv9dwiSUvYNaDG0kuf9hYGOrNGEfRdaP2+Dcq54uzaPJ88Q4I6FGM/6k
TW75gvlzBod8nbgo6Dip31Pg5VGBaldpZD7LBdu8utshWkPiawQXGWVlLi0k
z9PmcJjf67nbheZkPggBvygqi1atwOsLssGbFrR52s2R4v1vAJ/VdV1cEyrB
+GlnJdRgf0JtWDqaHwzeE7B61sx5eLwoE3yp8b7p+gEcp9WDTWzCVE1ccJw9
85yEelZWQ19fjZZdB18zs3HwL0LTReAytxJq8Ceez+oHO9flPzqqjePcaRES
SsVO02cn+TzBevCw5oPxnT14PPM5eHVaulHYdjSnD5zgfH+xtRuJd0okfJ+U
xvCUxs8Y7xpwZvet3xUf0DRf8LLphT5P/qJ5P8FON1+s4i/E84WToySUIOnc
gEAPLVsNNtzewlDPQtO9wc8CLc7E/sHzWSlg/zm2u/OH0OJJ0RJqyuJqEU+V
5HMVOLY+yORbAY4zOWCV7OnhZlFoTiJ43xUXv5DjaP4T8EVFt3t60WjGCp6E
+mkcd7CdHM+LB48NOfh2dAJaWAY+8rk2O/0eWiYFzxy01LI5h+a6x0A9bJoV
rN5L4nsAXmCwnsNYR+L7DK7cvqV83EoS37hYuF+Lj7c6bCD5iwEb6rHsbg8j
+SsFu/cd8HFVJPF1gpVcnQMj+7vw/qudl1Bt2bcsRi4i8S4Ev/ivPTBG04vA
I9z17JTnkPy1gdlzfPy1bEm8oy5IqLvi5dIUQ7TAHIzT8RgS/w5wpGTL2D+T
SL5GxMF89YVX7OtA4p0H7jS/vdC9CuOhuYKzJke38nahGeHgPYu9Hh9bjBYq
X5RQXZtUNt1ZiJaZgtWOtQYEz0LTt4GPBMSmjZyJZoWCjWrzP2eaobkCsO/R
F4/7tNFqJvGw3ky5vCbGAM3cAnaKpjMFOmjOSbDGXZXWX3po/k1w0417LzvJ
+aI34LUbjl79o0XyuSkB1oMdZp41GmgeF7wuf1LdXVUSfxZ4o6OnntpoEv8r
8LQtvKqNKiT+f+Dis02zzOhoccYlCZV9Vzw/lEnifQmeF5HddLGXxDsIzjex
ZUw5Q+KdkQj91N/1xkeSSD6vgxfl+Ps8Xk3y+QIcLmttVx9O4v0D3i5q1Mp2
JPHqJ0H/NzFn+rHnJN51YDX5g53KpJ5YNeA1UUonncvI/f8Fjjn0Vm7uE3L/
6cnwPD8PWB+wh8RvC6YixuguuELi9wGP//Xy5/xoks8f4Pb+gqCoiySfuikw
/t5c9W/fJ4x/NXj3+62qKyNI/IfB9O2u+vesSPzJ4KXijhIdS5JP7VTop7+t
+N07jeTTCvz7j8qpzyNJPXiCO07076ydTOrhEvjVFpPMqSH4eYLH4BkTK/Im
JKKZyy9LqF2zPjpeaEBzDoLvSfu3FtNI/BfBqqav13y9guMiITit6tS9S4Vo
3n4+9GdWzZZFErTwPPhBd2pu8DcS731wc7Our7kjma+6wHbOpuM7dUm+1a/A
+hTTHHNzFXmeeOAFX7p3Cm6j1UrAN/nOjisNST10gKfeCNGZt4nMV2PSoP9Z
vILbWUueP0twt+7xzXtWkPXrHtjLbvLTIiGuf+yP4LwWo7ZqRdK/qF6VUKXl
zlEbRv7A+BeATw5orr4fjeMyNjhvRO7CmN9k/X8PLpjpPXfHftK/qFyD9S7/
a2TwMtK/zAV/d2xdf3cN6Re3gzPvfRHMH4vxMM+AJ42JOJy1lexvlK5LKIOa
oLOXtpH11xScsM5tZSabxL8V3PnP/OgNIVl/T4Nz5wgz/H6Q/vEWeOMrsx/q
pB+gG6dLqIG5DR7bSsj66wR237JiSmoc6R9PgO/cefH7ShZZz3LAJ+0Vum/H
4ueJX4NrW2O0ZgvQHMcMeP40FnQrrSP7s+Ng+4RvtxSNSP9yA2zdtN/n9ArS
P77K+H/zIem//oI7NdcWv23rwfwey4Tna0Po8DXDSP+VDl5lOvLiuyqyv6wD
p358aJBM9sOsATBNMam84SOJf/oNWJ9KZppNTST9TC3Y81nWtBIR6bd+g4Nu
HdnvX0X676lZcP9eqKveFJP5eC24yjhlwYUOrEd2Nbjo8nA9IwOyPvSCT3os
TMmYRtZfvWx4Hh28J28SkfXMBvxI0LKQTeqXfgT8rUN9wHYDyWcPWPJgot9I
0n+IdXIk1KewwO2fyX5FzRqs3X7K+1wlqQcv8HSPvC2x40m+k8Ab+7Njtswj
9aB9E/bXlU4DdHWyP1sJlguyDbQg/T3bA6y7JL9VUET6xQSwXtf8OV61pJ4f
gZO0He6OXYZmUbmwv1xWMmHpuV7M5wHw1/jaCyNFaEEcuHPN7IJguz8Y/0Pw
xMPrDFUu9WH8EvAxvSN28uR54e+7JaEmGz97vLSW7CdiwTatEk7OBxyn3Qd3
l7cs2PUZ7z97rAD6iVUHZKycn5jPaHC3nM2NxAr8fHoxeGZ+t9IbFTSrHTxa
YfHsQ7/weO7o27D+Ob77+DSBPH8W4Pctfz/PJfsVZiH4vIV72+87aM4HMC1Y
+2HTAlK/I/MkVPz+zM11FmT/MB9syBF9++1K9g9ssM4p1U1H9Mnz1QpO894m
09xB1ovhdyTUUHfsP3teJ8ZvBm7IXPDVR5XUgwu4hzG6PNeWzMdh4Nj8WoO/
CTg/ihXvwvp+u6bNjsxnagyw/T/2FDOyvjGdwaquqrouIrLenQLLyn5L5tSS
fjIX/LK9ZFaoFZkfjPIl1OIth7WXX0ezN4N3HH549vhmUg8h4BWl146VRJD9
Tza41lBms5r0V7IGsMxa9E7jPcbH3VgAz0PD8DNvS9sxv8HgO8Wvb9co4PcV
Z4JHFhan6c5sw/jrwf4uhzuLroox/iHww0xr8+PMD5jfwELI38iZfNkHNC0d
/OZ356rZQXg8QwQuHWF5k9WO4+x+sO+3barKm9G8afdgvayyT1nLxOPpV8E3
IiZ4tKihWc/BZuMcxuxyw+O5ff/ZKjDGb8dHjH9KkYTiZxmmcDXQ4jVgj+En
zrqkoPk/wY4dnuZy5mjR5GLoly4aXqhUQdNswNUr8nZc243fl+ENnuLxw17x
Bo4Lv4Pbyi5kREzFcdmkEpifBtzPabVi/uirwAaqZW2ZZ9AsDngTd9vGn/NI
vhPB6+Nd3Qp9ML9qWqWwvsUNv/JCgmauAD8waUhTEHVgPRwC3w+YXL2yCr8/
Px58uWHdnthfJN9lYIZhiLZBMn4em3kf9qenPvaFR+L5PHfwsPUr9+jno4UX
wD9ConaKmvF42QPwseonH57E4Dj9M9j/VO4uWhBasPcBnC+hVfiVo8Ux4IyD
yk0d2vh91ErBE6byDpV8I/F3gmkeodH7/Eh/ofZQQm0zd5LdSyP9TzRYfpj9
rJdFeDyjCCxSzNgriiP9TxvYWLnxYSrpb3mjhBLq9pRdX+csJPsNc/D85sFr
cF8xvwVgTRXHod8X0FwxOO95uiYzBM8XjCiDfk3T6s7su6TfmAfeMz7C9P4g
fh81VzDLq2lHoSPGw28BP3czlAjlcFyk/EhClXeMYmvdJfVhBn6XZa0bMwvz
x9gGlnuzOZq3AMfZoeA4s39N0ld4f2QKj+H5FpUFK0Wi6SbgN/WMsBWFeDxr
C9jywjz/2reknk+CO92jF3gVYX0Jbv5nT/Mdqk8wHqbhEwnFjclOsBqPn8/Z
BDbUn59yLRfN54L/rLreED0WLcoCH+R775+/Bs+nNYDn6vVGbpAn9eFQLqGU
d3e9HduLxwuDwMest7S5LybzXQZYK2JIx/U7qY+X4IUlu3jdDqS+B8GZvkt2
K9JJfQQ8lVCF0/ub+01IfV8HH9HYtm+KBqmPF2DXuiNV6WvJfPcHXK28ceNG
M9LP6VfAfDZn37i1fWR/lwaeuYMZH6FD1u8acM+1nt8K/bje8n6BJ/hcrFQ/
Rvb7tpUwv7B3+Px5T/r5KrBEMHjZfRx5f/YD7KilcDMxgLxf162SUFbJnvf8
XuB8qrYaHOQ8hnvgHnl/fRis+ylCw7aU9G8ysN7gFWrPLTyeNukZ1PvWx5ES
st9lWIGbnCzmq5D42J7gV4kGgbEP8XjeJXDQ0qY6Iw80XbNaQn05M7Qizw2P
Zy0HX9wTKkkaIO8jDoIH7fzUJtiS96kXwb1Tm/Q/JZL3f0Jw++oJufdSyfvq
ZTUSKuDDY+253mT92w8WXHU8v6YFr0d7AP4VOmZ7nz+a0QXObHXbMK+c9D97
nsN+OEPj/epGjE/GA69OXh0+RZHE1wG+/saffeZ/68eYWtjf3q426nQm61sU
2GAmpbmU7MeY98BhXvPfqn0i88FHsBEjMi6c7Nf5qi8k1H73RBM9Tfx80QJw
90L/dtPzeDw7H3zR+Y3Sqv/NZ+/Bk0sPrEvvx3oSqogkVN9tDZeltqRe54KH
1p12bU0k9bodPKnMaLlOHT5PYqU6qO/JD94wP+Hzp2YKtpgQrLJEF+uZuRVM
N/3C0CTPO+c0eB9zsdWHAvL8K7yE/unDwvGm7uT5NwZ7KqmYmbji9dlOYP7K
oBGs92Q9OwHeEHIo5m4DWT9ywNVevfGWP8nzP6deQjF7+ztppng+1xFs63Bg
oy9ZbwTHwepL+2+Z7SHx3wAHxnyJSfYj6/ErsHNbfseBRvw8vv0r2P9e3jPW
xRXXC9Ex8JOoxScHElsw/gzwXB/dTQffvMf468AZ11cczTr8DuMfAC/fu/b3
Eq23mL9rDTBflcalRuc3Y7y14FOfYvfWh+Px3N/goV/pukl0HBdMfS2hVo6a
rn1HCc28Ak7r5Ih9qpown9Xgp/+9XY3HcX4v+GSxno85hZ8n0nsjoQ4d1q8t
5qJptuB9BREHT+WheZXgCC32DPVcPF/YA56vsDXaTg/HZTqNsP/c8sFmxDIc
p1uD9UK3H18Qhp/P8gJv1aQ17LqP4+JusGXVuRq9RXi+mnaThFo0mjVl6hcS
/0qw6GxJgL4iid8DXDSx3NLl4huMPwE8i7n65+BmNGNiM9xfOfkJ9z42Yj4p
8FHaAlrdDTyfdwC8Xu399rlS/DxhHDhg5AT+/WYS/0PwpLDVkerlaO7StxJq
XOjX17MetWJ+94EtjGNtNzuhxbFg17Kvfx8V4f1Wuw/27p9erGxA+rNP4LUD
pbVf1+H9Frm9k1BlTbFqh/bjOI0Hnqf06lO3A+nPisEf/QwM+mLw+ux28PEJ
E+MDR+H5vNEtEqq//fksrVAcp0eCr62rCtu8E80qBBcMu+/9LJTUxwcw7UPi
8bIh/D6Cka2w3/fzPP5rGdajeD6YZ9h9PtYGz+fcBVcbPe8Z5o7j/FZw21pl
VyspjouGv4d+9O450ZdUjIc2F5z8s2nCkoUYv/AtuE/p2KqTm9AyRTH0GxlR
SYFcPJ7OAMeazVBRkOD1Wc7gZgXPgYxBvD73FLizc8mwE5Y4rib/Afqh2KqF
0Qk4zjQC/1VvqabdwHHOZrDy9mtyheY4zg8Bn3gmVFm+kOQ7G6z0duDDyr14
PHv2R9hfX8lMnzgNzdsIfqCyf38GFy0MBq/Slz34PAfPl2WCvbqW7Rg+mcRf
D+bQi6beXooW2LVJqJ0GltTWOFIPgeAp/NGclTNxXC0dfMLs88/kPSR+Efin
xmzmomgc5/SDXX5M7eTPIPVwtF1ChUzdOfv0FFIPV8FZlVtua8xFs5+De66a
aI+VQ/P6wJMEbQkKeiT/UzokVKso/XuCNZr7DHyra90x3U6cnwQ/wfE7L1hq
5ZH+fHIn1HORwjCOM5mPbcBqaw4e3lZM5rMKsKjGvcLLlPTr38HLE3Wj7/ST
/YXOJwmleFoc7KiH44xVYN2IqjNe28n+ggNev3OC71tn0o99A7+srXIcSiX9
mFYX1P8utdprSWR/sQKsFW3YLV+E+eEeAvfoF9RkBOD9EcSDF573urRgIZqp
8RnuX/jHAuFZUg9M8EvLKeMezyD16w4OjLCrSbMg89sF8K/6rFv3Y3C+oD0E
6yU+iysfhfMFb4lEQomVWZ5qM3BcuBesY+M10yADx2UxYAfNrQkxI9D0UnAU
zWxSZAoez+oEZ3xTan+ajBbvlkL/V7xkWnrca8xvNNjkew+r7AeaWQQu3Dzh
958wNKcNnOKd8vmqL5oR8UVCSdXWR4VZ4fXYBeD+EQt32R/FcZ4Y7L7uwpLV
Mxsw3hFfoZ/J1Fxq3YqWzQNL7r4KtS98hfm8A1Z3m1XpQMYFLeCuU8tmnncl
8Sp/k1D1/FC9RBaJ1ww81qsxu+47ns/cBr4/pYIxRw/PFzWDRaO8/i2fgKYp
dsPzcm1iad15NMME7O496t3FB2j2FnDqo2vGnmdJ/CfBI6IMBxmTcJw+TCah
zhtW7lYX4eexDMF1q/9VNs3Ace4msPK2OTeSE0j8XHBPZc/SsXfxeuIssGPr
Vq3b40k+Z32H/UZB+oLjMWi+A7ggquPa91VoURA4pIz5+xT5PrRM8DVLlurb
0ST+l2DZ65liYzmSX1YP9GPyJf12NzA+WQDY3aA1qLytHuO/Dk59ojb13Wc0
6wU4TP9NVtcGkv8/4PV/616fe4RW8/8hoWYvfZGkHk7ymwZ2tRsIbOhHc2rA
j8ZPaR45Cj+f/wu8YK5184uRJH76T/h+9/SiYxTR7Mvg0nWp3ne6SX6rwLnq
OXu+lpH4f4Cbr9eH/vtI6kO3F+ZHr73yuotI/leDDc1zNeOa8fPFMrBsTmTV
HEdSD5N+SSj92Kba1y6kfq3A9LFP6r4b4vPA8QSn7FIpfv2UPF/fwCLrTXdF
Bbj+MjT7JNT0TTv6ThaT9Xk52CQhqWBZB1mfD4KdmKoXXT3Qwovg3f9OHnjq
TvqfCb9hvrucvrF2O5q7DDxh0bXcFGPS/+wH+51YzjFJwuddfB5c+3Wne3QU
rodqD8D/2iMY2qZkvVj8R0K9yCt+rZJN1os94OzkEx6HyXpDiwHP13v7mEvG
GSXgEmvnS1900ewO8OHgmHt95H2JbFc/9GPBkmFzC8n7kyjwqEntfl08nO9Y
98BeamZOc46Q/eZH8Fq9Z0cdf+DxAtUBCfU5l5fz8C/Op8xz4JiKt4KWUjye
kw+Gy42mHcH+k/8ePO1Ail3CLbI+qwzC/VPuCY/nk/VkHtjPXOmmQRrph/PA
47zNF7Zkk/XiHVh1vER/oi2JX2lIQm2pXK6x5xdZ70zBAZ3bxU6WZH7eCjb/
Nf1biQCvJ24Cq69c030qgvQ/Cn9hv9SocCw2l/Q/xmCFhQ9Onzcm/bwTuCWo
mJ3eQNaXE+DYaX9rWhTJ+iH3D+b/jo2FuwfJfn4O+LtHT7SAvK/iOf4j/T1t
EL+/8Dg48NN4ZxUT8vvHDfDKoIkpoQdx/8Q1oEkpVQf31Dv55H2EPXjnnezf
Ox3J++JjYPUN5j9vWJDf7zPADexZgzr/+725Dvziw53QRTFkP79BTkpZT6g8
sYX8/kMLAC8vtgi30sD9DuMaeK/EyLr4B3kfVAt20TiUN6+T7J9+g9t94hQX
TsXvR/cbJqX0bWtaQqaT+rgCdk2e3ZyahesXtxp8cUNr8lJ5sn73gjVe86rv
nsH7I9aTl1K/C67dV7pL+rdU8DFnnY6CThznV4JPHXLf0rMW61/UA67Uv22q
Qfo/hrWClGpqiJ4wZg3ZH5WDVZ2DS9Mv4PGybrDVQWFU+HHSb2orSqnsPvsd
X8pI/7YSbDxjCVNvLunfPMD//TXCu+mkHr6Cb77tPdlch/EwJypJqSXso/Vp
4fh8cigwI8rp6cLrZL0+AF6kKBrTlkPqOQ5s53SvZI0Z6X/GK0uplJB7wqPb
8f7zloK9TpzczzYl70/2gY1C813ylpN+IxZ87LN31xkDEv998NiUtPAn8qR/
WzRcSiWM7a/zKyP17AY+0nhq2OqFpB/igVXWBt1aVo2fz2kHD9d5K/EaTfrf
XSpS6lF78IRVgaRfiwR/Zi/7ECUi/WYh+HrHefP3/0h/OXKElKLmBe6YFo3f
n3UWrKhn+oVvj/Md9y7Yx7bNv0VA1rdWcFOCx6yYO2R9Gz4S7nd3/e9PmTi/
qs0Fh6Uff5YZi/M1/zZYuGakncb5l5i/t+ArI4LPXffGcZqSqpQK8KqLt2SS
9Y0B9rWhJ44aj8ezncGnx/j/ecASYb7kR0kpw6ZcB6fc5xivEThhR51zPP0F
xrsZzL5SfvkJBy0IAX95l3NH1ornM2mjpZTT9lzznTPQnNngP7+abwvJ9fgb
wX99xyltWIzjomBwpO293YdkaNoN8BiTFbNkI/H6vJljpJS7pwGvwqMW82kH
/ljU3lTDwONlgeAYt7HuOddxnJ4OHijbf96/iMQvApdmNW/52YfHi9erSakV
c7N19XXRakfBssSql1ylOoz/KnjhVsUlPuVoznPwRfhCLiZofh84pHDEobZe
PJ/NHyulaK6ZTYXumE/eM3D+tjdf3m/E44U/wTGBn721nXFcNlkdns9idbXg
SDQ3BVx69emijVvQggrwmHOljEVZaPF3cENF0qF3d/B6ajrjpNTqQL8Jh51J
vKvAHs1LN47PJPl8Ar42+3hJdjGO07rBn06tjVh/Cq/H0BovpTj3UpLtXLBf
Ya8A2/588d5yCZp3CNzECY/vY2K90b+AhSMUteJiyX5eY4KUitY8GbS/gKzH
TPChcYE/D9rj+i5wBxvVs24p/USLL4Br8yoWzX9K+oVxGlJq9oR5vFO30fwl
4BGH1uvn7sLri/aCl2o3NsS9IP1ZLPhq6q7ueCPSH5eCPWj3ehbKYX0LF06U
Ut200GfsbyS/u8Ht6cqjGSNIfxYNfpryQ8WjnPRnReDTt7TSt2WR/qwNrLt3
XFUXGz9PbacmzHfB4hqfRNLvRIBZ567qVO7BfHAKwBZ/Fv4aeo7X44vB96q8
PST78XrscC0pNU/nackrO1IPd8BzvSxG9Mbh8cIW8Fn5MzprpWiZsraUOvom
MvqHM55PNwMrTBhgDxWSehCAtW/W8kqt8XhxM/jSln6X+Lc4rqY4SUrtr/e/
oONI6sEEHN993IbdQ+p3C9heY1CF1kbqoRE8exG/6vQNNGOYDuTXIqPvsgua
bQhOilt6hfeGxL8JHNpw+n1QPqlnLjjgCrfseCqOs/6B3zxO3iy7hOPcWbqQ
72lRzdwQMj84gNcYmryJT8LnUxwEFo17tPR0MHn+MsHlZ21f7tFH82dMllKr
Do+tLYnF80Us8EBGzpK4eWR+CATLPeuoObyJxH8dDMtLZogyif8FeKTZpdlV
eWR+WKcHz9+iO8cXxpL5zR8cP/ngBYPhaFYaeEigfnrOZ5wvuDVgUZrW8ugS
tOAXmMNwLjz/B830oUupw4Gea8z60ZzL4O6p2ro9u0j8VWCXWYy7v5jkefwB
jv6jluAWQeKfPAU+//7mir1CtPApeGaOZ+9tfVK/MnDtZYWFLRn4feiTpkqp
irJOibEdmmUFHuo/t3+2LVr8GNzaWlZp7Uvmh2//jVfHFi2uJ/Oxpr6USrtJ
Xdch8wdnOfj3V2e+zRH8PP5BcMg+eYOIKVhfDCn4gf7caWcvkfVhwjSYb/7q
zU+1JfPDMvAqVcfXjx/huHA/+PMiz81BW0k9nwfT7my2+UX2R1z16VLqwqVg
wftKtGAx+EyOSGVKKNlv7AFPe8p+f6aX1HMM2DXU6sD3RWhmCTjg+2bbIzvx
fJHlDMhv+Zfxa+zI+rYbPFz9umupFZoRBb46RXVMO4M8j/fAaRr0EcPJ/ov3
EbzPqt0zdxjZ/+yYCetTXp5qQTaadQ589rLdx+s2+Pxz88Gtl6n1dW/w+Re8
B+88MlnLNJbsN88YwPdzoV+98oTs1/LA1x5r3Uq6gfOb6B14fOSn2Q2LcH6j
Kc+C68W+k43qw3GGKTi4tGaHdSrZ/9wCTxL6VTJOomVN4JLj9c6BZL9EV5gt
peSLoh5kZJF+whic1nrnJs+XvP9zAic+i+v1HU36sTfgoQ3fXzLmkN+z5OZI
qWee4dP48dhPceaAFYuOzPtwj+wvHMGPc3fvHHxGfo87Dp50gV8ezSXv2/+C
9x317zh5lvS3BoaQr96jszvJ71tCe/CY86Gr46rJ77XHwF+M256NLyK/D2SA
5053yBtxivz+Pd1ISt2n/TpWGER+/94ADrhfYDLJl/yeFQDuySlljfEmf091
DXz+vZ7HW0Uc59SCTXUvHo8l8dLWGUM/7rvJP5bsnxh+4Kkiwby8LNJPXgHL
i++/3t6J6xevGly243XvkybsF4W94Nbrlw+HD2C/xzpiAvnMWDPLMILkNxU8
06dI3f4meT9VCb69om8ZZUX2nz3gaa23qcXtpF/TZcB6cHJO5bJavH/8JPBc
K4+cWjHZf5aD96cp1cw/St6vycBNpoOFTu3k93BtUynl3c5c84Hs39grwWvt
M31alTFe2SNwn8RKcw95H0n/Cl7ZkK2ZRPaDrIlmUkqzcPIelTbyfpACl/wZ
yFQSkv3FAbAgb25VBemHOePnwvxXK1vZZk72a0vBnktqLG+nkveB+8Btf/Pr
G++Q32fOg7d+VpoudwLNGzsP+jtXf93+b2R/sQismdTl112ElrmB3Tjqk5NG
kv0mD+x9OuH7aPJ7CKsY/DvmW9DEdSSfFvPhefdtlGx4Rt4P7wLT/ttAdZH9
ZiT4hfvN6+arSfyF4BU/Z1/dyMHz+R/AqnLzwsZ54fUZ7AVQb5/XeeaMJ/k8
C05mWOib/e/96l3wMh3z9q5q0r+3gqVatXonz5H3w8PNpdSeyL/lapb4/HLD
wIGhP2YGk/dlgttgtjyvM7eE9G9vwVXMlC1pXWR+U7KA+uNUO1Qn43zGZICX
SKVnW33JepELTnKarf39FVmvm8Amlbbi/giy3slbwvx5qlW9K7cG4zcCFyg7
WT7goXmbwcU03S99crh+0l+DH5pSF/+tJesHbSHko6ytUjEF12PubLD8YXPr
Q4n4+YKN4IdKRmZ28Xi+OBg8458Pq207We+GwFyffafN6nCcP3MR7BeFx3a9
TSfrtR04Yat3wWl/st4dA39vbY89HkL6z3SwkuDT0KA26YemLZZS3xpvptz9
QNa/9eDDDcfef1xE+rej4KyPjLqP+8j7watglrLF5JaLZH5+Do7mZu97fgSf
L7W1S6TUZK/Fnpd5+PwxfcEHqMafuQvJ70l8cM9E5f11LqT/fAbOZps+5a8i
/edP8Hhl3dR2H/K+ynspPE/peQaRb/F6vBSwTujp3FFjyO9JFWA58Ru68V3y
vvg7WPzv9OY8Q4yPrrMM6mNMv7TuNOmPE8FZGWfu64/HzxM/AW931bcoXkve
t3WDlXSzjW/VkvVlBVNKdWjpBHf8Iu/XHoET7ox/84S832R8AW+jogKVLpL1
ToOC+fqse/9hTfI+kAne9cks/FU16Zfdwb+mWZgdu0zq4TN4yq9Z9aPSyHo9
brmUmvNeq+XBWFLPS8AV1wWLedtI/7kXHKqi7Vh6Eq0WC74l9dxf8YX0E2or
oF+rqDDXHyLvixeClz8aE+pwm/TzbuB9N2ZG2zBIvxENztr8QGt3EHmfWQS+
e+l345d/5H2r+Uop5b9OmpT7htTDTnDgyScNprNIPUSAHZcWfxnWTfZTBeBd
ScwalQekH3a1gv31rXcx6k54PiccLK9RfW2ghsR7B6x08GHj+2+kv2gBO5ye
bJPxjPQ7oauk1LHd9jKRIel3BOAVLoNT/+4k9doMTrHMfuHuR/o1RWspdS7S
vNcwEJ8vlgk4aFZK31gbsv+8CX5nPteoi0Hmg0awsabJ+sckPuaw1VDfA2eK
X7iTeA3BN1Ls8w46k/5iE7h2c19lTzJ5v/4P7J1hqDDnEPk9Y5aNlHqSKurZ
vxzzKXQAtxs7OUVbomVB/423XTnYGkferw+Cryxqyx1O9iOCGbbw/EcWpwyR
/aWYBbb7pu/ivZ/064FgYWj6v1Ifkt/r4FlrqO1N5P2BSH+NlPoRfLD37S2c
L2jrweFGtLoP/jg/MPzBo+YuX1b9tRLjTwPr15q/uzeiHOOvAWvPV/el3y7D
fK5ZC/vxQq/3gpNCzKcPuOnNwHBnxiOM/zJ4QU6Rxww6Hi+oAifkR5r8sC3B
+H+A03M2xz/1KsL8Ja+TUn4zSuVHTX2I8T4FF86O42/UL8V4v4NvnHgZVBpX
iPFOWi+lJDu6elfQ8HzhJfDBwtH2ISH3MJ+PwbzTllXqy/B4+jdwTr2F3Y/Y
AoxXcwPsPzZ/Nrp7Kx/jXQ4OPlLTMOwmHq9WBu7UGnPpxQ4cZ0rB5W4X1E8J
cJwzgSWlYHtnMHYsXo+/DPxoX0tu9fM7GP9+8NglKxeIvqDZXeCUmdk5PeZ5
mE91O7gfdu8tFqy6i/EvBu/31qaSVdGyPeAX/cU7fUW3Mf4YMH9U8SOjVDxf
MMZeSrU0bA2xi8XjxZZgxo3G/tO++Hlqu8FRwct8vo8XYPxRYJuVGfueCtCc
e+DZv41St5xF08wdYL0zW5ASGI5m7AArTeEF6ASj2efAzxTMPslC8Pq8fPDH
8wcWPXXDeFjbN0J/NSr7+0YvNPcMuDp8Vf/MglsYbx44/8SKGXYr8Hrid+AZ
WsyRwgq0mrIjzH/7NerkAtD802Dr3sv6DvH4/UW3wEcGY27yrEm8zeDD/WZ6
O0xJvAqboB9ZKeiaa5SL8RqDy6XbL+94no35zAEn9w3vqtLPxHy+AQfbekgN
nmRg/HKb4XnqL9/67juOc+eA1bsb+QkHsjB+R/CEl+U2g89xnPkK/LYx/t7x
GjTnLzj1l8W1fbvTMX4DJ1ivbv9soCng9UX24IDSUVuLV+E4LQhccNDOvt8J
x3kDYFV6RFpdOlo4fQu4QLJ9MB6Pl20AW25y9+sdjaYHgE8/r8yx3XwN478G
Ftu9vieyS8P8TnWWUr1ta1ay49Fq68CDt/Zzck2uYvx+4DFi4+N+iXg+5wr4
2bLmAPsEHOdXgxOucjMcNuP5DNutMN/vEp0d4OM4+wh445+uvOk8HOelgtt2
u82wqbmC8VeCB+cFn7w/HcdlPWBrxXkOOhIc53ptg/k2bIilfAgtSAK367t+
a1mOFpeDVa9U1kYVk/hlYP1FAxFjLNBMbRfod3Z0qyyYhBYlgEdbX5F5u6Fp
j8EhG7o7S8bg92N8Bb8cYbBrA53EP3G7lFrnZydSNkTzKPCxYWdmlSwj+ZSA
a9Reue3Ix3HueFcp9XrCVwuv3WjBUnDpg1Wc+l1o8T6w6pLTJvVpqZjPT+Ba
P73M69vR/LFsqPfXzSuvP0eLFoGVqvfmzbyUgvHuAYt+NWjIL0IzeGDbXf9O
Sk+jhaN3wP6+UchmxqNlFuC0gcsNfDO8Hn0X2JaeeJ8xkIzxR4L9+x45yKXh
8dxC8KGdyfJzFqPVFuyUUnTrustLOGgmG7z2qsG4zIUk/rPgxYW7A3rJOP8u
OOuw6WcqHS1qBWs1Xa9XKkzCfLrsgvzfqnrrG4nmhYH3OSWqutWghbfByaez
vEr2o2VvwWWv+mwLtdF0pd3Qv0xLDC8tTsR85oLPPnP6oNGAVmsC63sN9A6p
4PFMeTfYv+SYfXgWg+McI3BmM1d+6B2algNenmlVvbUNzXgNPjZN59jHxWg2
bQ88fy5cuRgPNG822L2t589ZN7RwIzg2t3hEuiWaVQ9uWeiYWL8CzR0CCz/P
YD6aghbM3Av9wtIk5aDwSxi/Hfhbgt+NaQfRasfA/poXKl7tQ/P7wTnfyiWT
tqNF0/bB/DnaQ7TPGE3bAD6ycFuu1wI04yjY8IGx3g0Gmn0VvJp+Nyz7MFo2
ZT9Ykl7UfRVNXwv+Ny5U/L0VzfIFvx6K8orko7l8sO+ReX9V6tGCZ+DR5qPK
fCeimTbu0O+Zir4aLEZzvMHtKWGDiTtI/CngF921LmcEJP4KcHNbStjiKBJ/
D9i4O9RlMBDN4xyA76PSN2IHGy1MBF87fNzazInE/wRc+9HXLXwsib8bPLrR
a+2CtSR+rYMw3nfdeWNFAuY3Hmxnm9JuEYdWewRun6Mz5R8HzfwCLnRv/BM9
As3ROATzm3783hdf4zF+JrhfLUF5tyKOMx6Cd5VOvt7Wi+Psz2DGWLnOMw44
zhvnIaV+bvC2ashGC5eAj04qmGfxAo+X7QX/9+dJS+3RAjVP6L/sYlN4o9Di
heCSZTy50X8uYrxu4B08j5iBH2hmNHjO/OXTORp4vGgUR0oxzwqi9tzCcZoF
2JJ5eni7Oo4zdoJ39xXVm8iReCPAmnutXSq/4PG8AnCCyY3GAAUcp8/3Ir+v
ZX3DcZYrOPQQKzrpJ5obDt6rcr6irDMO478DNnqZOJ9ejxa3gE/pfz9yVYrm
bDsspTKMwrarD6L5oWBRsGq84hy8nkgATp/t9n39GxynvQU3bhkYZ9SFZih6
S6luo3Fh+n/QwpPgstEt/9aa4vmym2A3fq3h+esk/kbwGrbodvEBNGvYEZif
tmtbVW3A+8E1BL/blHBTw4TUQzZ4M4tfnizB45kN4PUTDj0cqCT18A98YZW/
o0EzqYdZPlJqHE2j49s8kn8HMDs4sN6DjLNfgo9u2l75YTWaNwh++v1Wq+5U
jFc4wxf6xblNDnwn/D4yFvgS7/71XjaaHghet8BpqOgEye8f8FSX5JXzFPB8
sb6flPr9TNdy3D4cV1sP9htWep/bgmb6g4/N3yLsssfjOWngsLrzxn1GpD6m
+EM/VnZFVXszye8acOjkxR2Shxcwfh+woVv75xxFHOddBjfeX3pn3wUcF1aB
88r65u0Uolmrj0qpTQqV9hIPPJ57GNw1YFU5GEfiTwZX2optXnTi8eKn4BYn
hSvjdpD6/g5W7Uz/6nCAzBeeAbAeXDr//nAT5l90CXyxIrEwrYbE/wSst/ag
24AOqe9v4N1QsKZ6eDxbM1BKZWt9ujP/Alp2ETwtW5zlcIvURxm41kFvZ8gJ
Uh9S8LHDATmlN8j8tuyYlHpw4u3QVzL/MB+Ao/brduzaicdzusDaRqtbNwtI
PagHwfq/vPsEJ57EuxisZSYbPlKZzG97wb2zr5aMMSb10AE2aPr4aZ01Wjgm
WEp59O+5Y8sj84MlOC9yk/N58rzRd4OHlIy7piqSeKPAYV/G7fp2kcxvqsdh
P7y9mrHBldSzOfjo3kwvn0JSzzvAq2s5I21XkfXvHHhT7y+5poe4/vPzwU+4
U3ISstCMeVyYfxU2iPMPoNnbwTFaekZ7mWjeGXCQa5bV2HVoYR54qGyb8fk9
aNk7sDzX9WRBCK6/gtMhUsr0RHLQojqy3t0CRz5bOnG8kMTbDH6tsqaYUYr1
wVQ4Afk7GTTSV5vc75tg4fhF19a74jjjDVihY415oDapV7mTUur4lmWLX6rG
YnxzwL3eW8qimtH0LHC36e+Xsx+jWa/Azz+efKYRi+b+BacbXXg85gpaYHAK
9j8hJd1nzqHF9uB9x6umnd2H5g+AB4sdfdi3YvB+Tz8tpXqsC9SvyeM4jQW2
YT7SmWSEZgSAu1rXLpJvx+OFv8GZEVPrY03RsqmhsL5+vvvhwFQ0fR04OfyE
U8MhNMsPnE+z47r0o7lXwJLz8uMeXkCr0cOkVDQ1OTwlA820Bd/p0uqy6eTh
/T4CNt+j6TUkQfNTwXV1ipHPQ9CiSvCngiOj49zRbOszUuqL7xDdoika8+kF
tsrbOPNhK1qYBLbvnX3xdQpaVg6e5j/s1hl5PJ8uA6dXl070KsRxgUe4lNLZ
9zojvQ8tTgDz2ULdt0NotcfgoGdy8hNoeD7zK/iip9Lg2mIc50w8C/tzbkyq
tzKOM4Tgrk6N+jodEq8EfOu+4R0fazRv/Dkp5ajQUJixCi1cCj4zb3x36m40
6z7YZdRXvtcqks9PYIZ3taGtFVowNkJKXZ4tvLt4HFq8CEwNFWrlmuL9VNsD
7tGetenmGxznt4Mr9B9cvByD46LRkVD/fU4PY4WkHizB1mEz/vz7TephFzhW
b5eyB+s8xh8JXnNN+n2RHY7LRkbB/PXnwcYDP0g9LADHMinx62pSv2zwiecf
fRum4vfhngU33hl4FO2MFtwFP/jWNe+MH8nn3Ggp9R72e3SK1IML2MzKw3Bn
JeaXHwY26nNx7iL3S3QbbLzLrsJ6Ah5Pewde/mJv8FV9kl9nHsxf4ZpPLjqR
ejgFDpmbU79vFo7LcsGpiXnmxhqkHprAP4ZMqsbtJfmXj4H5xYHT7T0HLQ4B
h4l3H5fFkXrIAT/JP5B0TwfNfA2mj477xx1G6oEWC89fZIPuRHUS/2zwjFGp
ERMV0IwbYJv8DW6zRVGY33rwz5kh69fWRWL8Q2CWLFq0LxUtnHke8nv53cb3
iWiuCPxt6swTY3PQgn6whl/X97RKtHjaBbj/xc+GNT3F66ttAD+4WvR6aSSa
eRTsYRPoInVDi/rAApey/hX9aNrUONgPfxu8Kb+Z1PNasPvOx2awAGC8vuCH
wZ/Xbqkg+eaDM6f1f9pgTvKpd1FK3Tgtx5ovJvm0Abcvi0uWVpN68AbvaNFY
HT+W1HMK+GNmIsMqi9RzxUUyX54l8wFnVTz0H78OWqQPkvmBA/a4V7inQIHM
b4ngSSd3Ud6epB7KwcJXCoJXT0i+u8E5Fmbut8eSejiUIKVMfOwkpn34fWXx
4LUvemTP8tD0R2DzRt9PgT8xn6wvYLPyn62yvzjO1bgkpThGczpmJ5D8xoEn
nbhZkaxG8vsQ/NTzvkVaB5rzGWxs9ufMq5Vo/rhE2A9enVW14ybJ/xJwhnZd
melaNK8TvPqO7LVzbdSy/wMRbclP
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474112*^9, 0}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 3.0787811222593833`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474112*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474112*^9, 3.7050912*^9}, {0, 3.0787811222593833`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"DUST\"", "\"NUGT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.015042028126197274`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.34163256883371906`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.04402984228801264`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9},ExpressionUUID->"a8305114-e0aa-47b2-8d4c-\
0848415b52da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxVm3V4E0sXxoM7BHcIxT24QxZvsWDFIThFw0XbIsGlSChS5AOCOwR3CIXi
EtwhOGSRFHe+d97JPk9z/7j3/p6Z3Zw9c+bYTAv0GNKqd2KdTrc4iU4n/ot/
TC+PeRX5v746+JdVf9yrnNqzuNu5evGCdXPBxd6c/DN4FNl4EFz2RYUl8SM+
CbY8Aw9JdevyjHqfBdvTubxKkr/7myn/yK4q4GUT/wb/tH4TbN4HHlKm9bSw
cmSbB9yxepK9Typ9EexMfcKrpO4XeTBJo6+CPRXB6aKcxwtV/ChY3w0ctjJT
zzO/yI6HYN/ImI9LLlJ+d4pYr/K2bKrZ34eqlL88uFGDuTN+HnxH+TuDo7eW
de3zvKH8U8H8nGFkX9KTXmXkkSGttr4kG8qCDVWaX9/Shs+bO4BLRDS9cWXb
W8o/CXwAX1toLH/fuQ1837fU1zIX5TOVOuVVVp6btWPZBanfUPDvh+9b1Z5P
fTps4KCM204MfCnl3wwuZWzVU3+Nz+tugmfO6hO3ezjZ3jrOq2wv878uE+aR
XWPBh4o63r1IT337NoDnu6fnr9Kc62O4Bk6xe8mkoDX8PfNvcPuP5q+ejnze
E3Haq5hzd81cO4Tz9evAI5L3Pzkglmy6Au46YV6uSXauh/UHeOLA5eedKbl+
joJnvIqtkJrGWfo79bsabBTqf0a2XASXfBXZxDnyJ+X/Cp6+K8Xtj0/JvpCz
XuX56bCIhZulPZwDV158KU+WnH+oz0/gEq9Xrs3w7R/lzXtOW+/flLcx+OOx
4J1LN3Dc9B/4yMN1Y4pU0JmEPn3gkJ/W4/e7/KU+c5/3Kvk+LMuyJZy/b2wA
Lv9MfVl+BN9nGQJe/qH0iXvV+Pv2JeBVHbNO/Z2I44YcF7xK9WLll2a9wufN
dcElygmL4bhtIPjH0GcVj4ZI+ReBty7PPM3QScrvAoel61MhRQPKY61zEev3
6NzNKbs57ggD921nWXvawPfpjoF3tPpyJNG/X5T3Nbj+AOOyasX4+64+l7xK
XP8V71P147jPDu59+val3l7q3/wCPLrZ92Lp8nJ/2TJc9ioz+gkByPo5lzX7
o/2YDoCvbR296LKJ49an4NxZaxXxvuL6O9Je8SpfSrS9ktvH9XJXBvNxB5+3
7L2i7X/as/0xuPIwc6+KJaW9pnJ7ldrzc3arEkN79FUAP+40ce+wp5xv6Aoe
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
+up6WW/UWurv19cl218u9fu3TL3q/B9KKI0y
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
KV/0GjvI+nPWKdX5eT24Z2XKx8snM23/B6FzjlI=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
CJBR
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5897472*^9, 0}, 
       PlotRange -> {{3.5897472*^9, 3.7050912*^9}, {0, 2.024975751697381}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5897472*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5897472*^9, 3.7050912*^9}, {0, 2.024975751697381}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JDST\"", "\"JNUG\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.04341304136975913`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.28611057102460047`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.1517351883025195`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.705252160506219*^9},ExpressionUUID->"a30042b2-c0e6-4cd1-bf61-\
a60859271b67"]
}, Open  ]]
},
WindowSize->{1474, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.35 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4635, 117, 352, "Input", "ExpressionUUID" -> \
"8c08837f-8e1b-421e-be78-0bc82eda6287"],
Cell[CellGroupData[{
Cell[5218, 141, 1304, 34, 156, "Input", "ExpressionUUID" -> \
"ca58564d-e2c2-4c41-a41b-4195dc58339b"],
Cell[6525, 177, 515, 8, 43, "Output", "ExpressionUUID" -> \
"10e51504-7b57-413f-b206-88c54f616020"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7077, 190, 1400, 37, 212, "Input", "ExpressionUUID" -> \
"9ec59700-6cdc-4997-9164-7d1dbcdd846e"],
Cell[8480, 229, 21451, 433, 509, "Output", "ExpressionUUID" -> \
"b3fcd2f0-2efa-4432-9ef2-0d94ca1a7211"],
Cell[29934, 664, 21267, 429, 509, "Output", "ExpressionUUID" -> \
"ae5a1059-0b6b-4f5f-96bd-dd7275880a60"],
Cell[51204, 1095, 21848, 439, 509, "Output", "ExpressionUUID" -> \
"7c768583-d475-453b-97e2-b30b33856407"],
Cell[73055, 1536, 28822, 567, 509, "Output", "ExpressionUUID" -> \
"b3a6a056-393e-43c6-a10b-d4018c5c974a"],
Cell[101880, 2105, 29091, 572, 509, "Output", "ExpressionUUID" -> \
"9b275da3-6ab0-4082-bbe6-7f600cb8e5f2"],
Cell[130974, 2679, 29015, 570, 509, "Output", "ExpressionUUID" -> \
"17f2c2a7-40b2-490d-87f4-492b273adb4b"],
Cell[159992, 3251, 36210, 701, 509, "Output", "ExpressionUUID" -> \
"fbc437b3-6595-46d0-bc69-62cad311a77f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196239, 3957, 489, 13, 72, "Input", "ExpressionUUID" -> \
"450dc594-3d9b-4fdc-9103-d430ebee1359"],
Cell[196731, 3972, 71077, 1256, 519, "Output", "ExpressionUUID" -> \
"80697788-0050-4d96-8a10-bd7cede1eba1"],
Cell[267811, 5230, 67774, 1204, 519, "Output", "ExpressionUUID" -> \
"aac06f78-f4dd-4728-9769-4e24eda95853"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335622, 6439, 490, 13, 72, "Input", "ExpressionUUID" -> \
"4277d921-c313-41ad-9dbe-20988045f588"],
Cell[336115, 6454, 69063, 1225, 519, "Output", "ExpressionUUID" -> \
"f64dc46a-21e2-42de-914d-3feeb93d1097"],
Cell[405181, 7681, 498, 11, 30, "Message", "ExpressionUUID" -> \
"c26fe5a3-1de3-4230-a335-bf60298c4923"],
Cell[405682, 7694, 1622, 25, 43, "Message", "ExpressionUUID" -> \
"24cf0a38-0a05-4ec3-8e55-3f8ed90be2d2"],
Cell[407307, 7721, 2419, 38, 111, "Message", "ExpressionUUID" -> \
"01f08067-2005-481d-9395-cb6b69995b14"],
Cell[409729, 7761, 69867, 1238, 519, "Output", "ExpressionUUID" -> \
"bd0b8b54-8249-4313-bec9-b7e5de7ce90e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479633, 9004, 766, 19, 100, "Input", "ExpressionUUID" -> \
"b1d487e7-f623-4847-a8d2-c923553c7741"],
Cell[480402, 9025, 69668, 1235, 519, "Output", "ExpressionUUID" -> \
"5b192dca-ce0c-421c-b1a6-e05997bf0a9d"],
Cell[550073, 10262, 66498, 1183, 519, "Output", "ExpressionUUID" -> \
"c8bde650-725a-4885-8a6b-a6f56eb3ae8b"],
Cell[616574, 11447, 67654, 1202, 519, "Output", "ExpressionUUID" -> \
"c4be2cdf-7f55-4f54-ab1e-0043c4d39f5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684265, 12654, 545, 14, 72, "Input", "ExpressionUUID" -> \
"9d865506-bd6c-4380-8300-cddcfd93fe89"],
Cell[684813, 12670, 497, 11, 30, "Message", "ExpressionUUID" -> \
"750a7bf9-9152-4c76-bcfc-94ced7ec248f"],
Cell[685313, 12683, 1623, 26, 43, "Message", "ExpressionUUID" -> \
"24c98739-8012-47e7-8d42-d9871cf4690b"],
Cell[686939, 12711, 2441, 38, 111, "Message", "ExpressionUUID" -> \
"fbea28f6-6ae1-496f-9b06-a1dfc9b6ab0f"],
Cell[689383, 12751, 68991, 1223, 519, "Output", "ExpressionUUID" -> \
"a8305114-e0aa-47b2-8d4c-0848415b52da"],
Cell[758377, 13976, 56934, 1026, 519, "Output", "ExpressionUUID" -> \
"a30042b2-c0e6-4cd1-bf61-a60859271b67"]
}, Open  ]]
}
]
*)

