(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1083509,      20286]
NotebookOptionsPosition[   1079375,      20191]
NotebookOutlinePosition[   1079749,      20207]
CellTagsIndexPosition[   1079706,      20204]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s", ",", "portfolio", ",", "data", ",", "symbols", ",", "std", ",", 
      "return"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"std", "=", 
      RowBox[{"StandardDeviation", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"return", ",", "std", ",", 
          RowBox[{"return", "/", "std"}]}], "}"}], "//", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<return\>\"", ",", "\"\<std\>\"", ",", "\"\<r/s\>\""}], 
               "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], "&"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9, {3.6701716503770185`*^9, 3.6701716506582756`*^9}, {
   3.685305952518339*^9, 3.6853059537176065`*^9}, {3.6967608776432834`*^9, 
   3.69676088094309*^9}, {3.6967609151895046`*^9, 3.6967609377087526`*^9}, {
   3.696760993933354*^9, 3.696761073622054*^9}, {3.6967611222038827`*^9, 
   3.6967611349350204`*^9}, 
   3.6967613481293807`*^9},ExpressionUUID->"8c08837f-8e1b-421e-be78-\
0bc82eda6287"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start1", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start2", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "//", "DateString"}]}], "Input",
 CellChangeTimes->{{3.687000687380389*^9, 3.687000691123763*^9}, {
  3.687614865311994*^9, 3.6876148655927954`*^9}, {3.687615693446018*^9, 
  3.6876157159117823`*^9}, {3.6876157613395433`*^9, 3.6876158485145035`*^9}, {
  3.6876161174929743`*^9, 3.687616121566601*^9}, {3.6957146336464562`*^9, 
  3.6957146442638135`*^9}, {3.695714683683401*^9, 
  3.6957146874316454`*^9}},ExpressionUUID->"ca58564d-e2c2-4c41-a41b-\
4195dc58339b"],

Cell[BoxData["\<\"Tue 20 Jun 2017\"\>"], "Output",
 CellChangeTimes->{3.695714691871008*^9, 3.6957281132851152`*^9, 
  3.6962338966179028`*^9, 3.6967607209181795`*^9, 3.6967614646181746`*^9, 
  3.69676153070809*^9, 3.6967617322874737`*^9, 3.6967619060619135`*^9, 
  3.696762055027141*^9, 3.69849774408033*^9, 3.6984978125269766`*^9, 
  3.7020194263341355`*^9, 3.7020197015737047`*^9, 3.7046909729002047`*^9, 
  3.705041397935094*^9, 3.705251975042736*^9, 3.705314779789386*^9, 
  3.705314925688922*^9, 3.7069033691352315`*^9, 
  3.7069036343350973`*^9},ExpressionUUID->"99c819b5-a1c8-48bb-ba63-\
9aa87dace997"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<PUTW\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OUSA\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SCIU\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<JPUS\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<SCIU\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<PUTW\>\"", ",", 
     "\"\<JPUS\>\""}], "}"}], ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7046912590027647`*^9, {3.704691320868693*^9, 3.7046913619411926`*^9}, {
   3.7050416338567667`*^9, 3.705041640480579*^9}, {3.7069033536388907`*^9, 
   3.7069033670207906`*^9}, {3.7069035797598486`*^9, 
   3.706903606180378*^9}},ExpressionUUID->"9ec59700-6cdc-4997-9164-\
7d1dbcdd846e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
rm4hTc13V1qorzhi/h8o2Kep
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
rm4hTc13V1qorzhi/h8o2Kep
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9670935139997071}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.974812874761869, 
        1.1292000900051051`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9670935139997071}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.974812874761869, 
        1.1292000900051051`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1292000900051051`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03770601763197856`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "29.947476846439173`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.706903646102397*^9},ExpressionUUID->"6910910c-d210-4503-9eb5-\
1bd0d0808576"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9623245477151834}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9699559451001989, 
        1.1225838928005096`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9623245477151834}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9699559451001989, 
        1.1225838928005096`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1225838928005096`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03803772559789659`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "29.512382119465794`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.706903650391309*^9},ExpressionUUID->"837ebb7d-f196-44d8-8f24-\
ee8d5438459b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nk4VIsfx/FJRWUbCfkRYy26dZUlUjhpUUnaaJOlGGUbZF+SfS3SRSRK
3SuhmYsWVGjRgkaG0EbSTUcMktLi9+18/zo9T+n1nDMz7/k4zlBz8dnuKsJg
MH7A399f4Q/TyIUk8L9Cc/jHwglcMa2Ks7p3+Lc5yeDEvMc2YlOUCyvBk76Z
yxYrU+fzX4N3W/mtrXakjjs5HCSJmdckP2XUDP12egL4luK3+Tp/UsfreOBF
a/eM3e+nLHwBbpNe7rd1EfV8LNFDJLHEZqr113LKPeVg9+2SKbcUKTO7wAaZ
/X4+Ktg73ZUkzsoYFonLUeYsAe8wzbmdvY0yoxRsLvbm8KAXZb0O8PQaqcY9
xyk7MdxIQkcwsLs1nHK6LnjXrbc3Ak9QrtsJLorqHcuPoWzbBvbv2zSnLpZy
1E9w2rm8KYN4ytyFbJL486LYwqlT2L+NTXs9ZjjYgf30iUUe5cJJsBbL+mnO
SdxT050kqlynLzuCxxlbwUr98pey8PX0QsCrp7Uc883F/iJwQZPlEdcsykK1
wyQhzZ9r9DUa97T+7YqWMj829gcepu0RVQjuy88sHgrG/sfg2YJ/G0jssdh4
hCQiVKIMGtAc/yO0nsJ88DpWjGsk7sdvBKfNcKtSwT7GKDjzuvn3B6dxX44H
zXW5YIdNKZY1x7D/ngethzUMVtUc3Jd6FvsVPUmiuTNjlXg27psN3myy0JmZ
gvs2eNL2tRgEjz8xlVVNwn55L3g/bFEX7UTstwBvVu7rTPbBfe+AzTU1Rn3x
fKcBL/r1IetNEgNnxpS+e2D/avDhkTxJdT/sZ4Mn9sfq2ifgnkwf2verZyU4
wGpbuOLf2OsKDvkxNHN7JvaeBJN2kZ0yG3BPSQ5JXJ1TbnhsL+5pDNaV1lWa
rYS9LmDNsqmRufOwNxW8LU1ctXsF9l4DJ2iLhN/TwT0NfeHn7Y/ASYEl7ukI
Pq57YdYNI7weksD6o92TWzyxvwJsb7OYX56K/a/A2wwTBMqRuOd+P5JY4TBq
p+6Me8b70fbkc8FqvYHzi4Kw/wXdejP9Yb9iuZ5bIbhnDLhZTz7hoS3uWQau
EfFWzrHA/k5/2j62IkdJIvuu89NaU+z/A5xS7uCkshL3vQI+I655M53AfdvB
z0oWM76IYv8U+PVL/wlFTezXCSCJXy9L0qaY2L8DbKZw/nG7Gu77DGz860eL
pSzu+wNsR1wunquF/dqBtNcX2oI9Mt4SFcuwPwx8WXCfx9bDfb+B8+/Ur3m0
FPfVCCIJ23UbDUXx/se0AbvYlSnwtLE/GLxJ2pk3JIb9F8ChB3293KVwX7Vg
2vl6m8GDE4m2+t/w/hwAVjjg73f4BeX0AvCiOa1vq8vx/vyIblurEJKwKB7o
lWThvn7gZtlnv9YYYv9ZcFLKrKEFm7H/QQjt+8McAY/4qAuKduG+PqFwPx2/
/KBnN+57JpR2v2LcA18pyOoqccX+oVDa/cVpfhhJ8Hwq/+kMw32zwBk+ETJj
eL9m1YPTat4kVJ/H64MEsy/M+LIGf9645uHweAU9B6UG3PM2OFMQE2PNxT0/
gLe9Ekl2vIe9cyNIIqwk7JJ0GfauAssNXFuWnIG97Aja/Tu9Hzwcv8uvPB+v
B+lI2vMLTcDbHbfEmk0boXoPgTkXvjlIylK2PQGWOFmftE6Gco/EMbh+X+u4
xP3EPVeAzwqCSfkF1HELZ/AhDs9tYBz7U8BNO59Y+zCo44VVYIUvxnu0v+Ge
BlFwPxPLN239hHseAHvL8Na3z6POT08EL3eUH9qNrvsX/N1JUVUOe4UvwQ8H
KoS54pS5ccdJYkupv1mWKPZeBZ+cWl/yYRR7u8F5UjJRX9/h3jOiSWLah5/7
HvfjfmVg/qBWSeMk9j0Hu8ZGiqVrU8/nNC2GJGJY3IT6/2HfYvD6OFWVVXic
VQKOMF75THw27icAE+6rgytxz6hf4KmSjMW3tbB3USz8fqArI1ssj73bwYdu
fpxwXoh7fQd3nD9/2RJfj68VRxKO2U/njSyhzLAFczKtXhXMp6wXGkd7fN3X
ONrjherxJBH9Ifz0OQJ7t4ADpFSvOtlibxC4V1Ad0boRe8+DF3RrPJw0p8xk
JdCe32IT+FP5/IPSppQ5R8G57CZvKw3sPwce4+uvjzLA/odg8dclU5t34Z4b
Ekki/IEzb4kV7ulLd11eIu184X2wvbHVtKNHsV8Ilgs7WxkRj3t6J5GEiYvv
joQc3DMH3JLXHitfgP13wbUF+2vZldj/CdxQH1TQWYb9CskkEV8rtevqddyz
Dhw3SMzKacXej+BGIqE8ugl756WQxNopl1k3H2GvGThf/8CwSjfueQvcJl9q
97wD9/yPfj5XJhU+b009D9TPGKV6TcHNn9P93V5hrxs4W8ZSorwH93wH9p61
I1m/HfeUSoPPt+uX5sTX4/VgAk59rWPM4mH/QbCA5PU8L8L+NHB/sbXZ2zu4
p/gJuH8Pyny3b8A9jcDkY7bajpvY7wSe+Bk13vMB+5NP0N4PtxLssnT84ngf
7ql/Ej6fXm3QsuLjng5g89hUo68Z2J8APpXlufJTMfbzfnup6OneKux/CV6S
KOu98R/cd286SXDZc64I83Hf2HTa+xWWg+UE9kXN97C/C9zVMrT7Ygv2T88g
CSllufOMZrwejoOr/lOszq3FfUvBtl11n75UY39HBu364DBO0V6vUBcseB9c
NISP17sMDn3L9fF9gPu2naI9f/pP8DnqAxf7F2aShPLSv0Ocs3FPfibt+8Gd
BC/k8z3Cr2Kv5mmS2F+h0mZQir1bwfU7O2v62rA3BJwjH74xuxH3nABr12tV
1k3inup/kcQ8l2PRw9Op60vPGmz8XvtGx2zKToFg/xid/Z8lKKcXguM2GRm0
fsE9VbPgetDQYBZN4J4b6Y7yz6JdH9x8sHCd2ZjsCPY3gs3a2ksCRKjn56zP
JglnnVq2xE/ckwOudhGm7PuM/bng15HLlFaIUecz7oO7nLcGXMXjesPg/RLd
9bEfcU+vHPj9xS3obim+H2E2mLXqFXvJOPY3gE3GW31O3cb+wRza9RAlf4bW
z/wL/M6jR7JjCve9A561o6r0jQz2D4Cbrmta7l1AuVA2lyTElKJv1hpT5q8G
dw4H7mzVxz3fg2OLRtTVDCnXMfNIwmZcunSlCfauBO9dpBP10J0yyxV8xyja
2vMIZW4f/XiP5Fn4vO0XNN22o8w0BruJJLiK7qVs4QK+n5LdL4/HOangSN7s
sZxduKd4PkkMOafx7H3wejAEE0e9qqzj8XpwBNvYPMlNDsL+JHCQfY3yzBjs
r6Dbdvk5+Dy7Vu9ulzNq/n+yxLCx
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
r6Dbdvk5+Dy7Vu9ulzNq/n+yxLCx
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1621917812403237`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.046871170870195863`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "24.79545015973413`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.706903653750041*^9},ExpressionUUID->"d6f3f2e8-8025-4e52-bc7a-\
e3dcbe182b77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wD2XnIPrtbpqgfDth7X/A1H/tDM=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wD2XnIPrtbpqgfDth7X/A1H/tDM=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9656497093206122}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9759871557344633, 
        1.1827360840114851`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9656497093206122}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9759871557344633, 
        1.1827360840114851`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JPUS\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1827360840114851`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05107815746843009`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "23.155417944402153`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.7069036580928307`*^9},ExpressionUUID->"1c5122b0-4aac-4ec6-bccc-\
cd51ec5ced4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
rm4hTc13V1qorzhi/h8o2Kep
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
H/iIpkk=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9619937378549537}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9699559451001989, 
        1.1292000900051051`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9619937378549537}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9699559451001989, 
        1.1292000900051051`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1258919914028074`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.036107019392302195`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "31.18208066885856`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.706903665440876*^9},ExpressionUUID->"711b4e8e-6585-41bc-b655-\
7ac85480a5d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
r6Dbdvk5+Dy7Vu9ulzNq/n+yxLCx
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nk8Vfkfx3FLMxTpSpLSdC3VRMsdS2SJY5oGkftLC0puSlLk2qlsieyu
JVuWm2YUUooy1ZRLoWhhGFqEVsZRXdRUiPl0Pr9/vj0eLc/HOfee13nfg9Td
fDa5S0lISEzA729/wy/Wajeawn+KzeEPCx74+NVebhGanwBWLqriekkzFlaD
g3LLS/RnM27tAVMio+kzyt9/M89lN01l2c1vKPuJseA4uFpnsONNIWPRRbCs
W/HqD+OMxU/Bv1kf2VHCYt6P/f0emvIImC/4upRx33mwg9gsOkCdMesxuHEx
1ZSwAHul3Wnq41oV2/4V2LsCLHtWTTnZkLHEObBU9lSppS5jTidYib1GM0ef
MU9iL01Nup9PsUILtPcSrxdtBguOtJfOMmDMbQc/7g5YYGTKOPIrWDho0Btl
zLhyqQdN2Wh/dkt1wP7/gdUUNXp0Kew/Aq7Rk/kcvAH3HPMg3q9Vax9NaR97
HuFrif324Ja3aUlNeD4n9JtrXk6T3IT9p8ELXLmexo6MxeqeNNWcL1+3cAvu
aQsuU7yv/tIC+4PAG3glg1vssF8IlpNvCC63x/5mcMqLKCNHT9zXej9NKfC9
n9z1wH39wTLLivv/2If9BeChkDYdKR72N4GTm8o+BHhh/wh4pnHtJumDuC//
ABw/116Z5oP75oF3PtepMQ3A/tvgLkvNskg+9r8HXzjt4+oUjP2qXjS1cu6x
G/0huG+2F3GcVQ+enmxj0xWJ/UNexPX5c72J6wstvIleTi34h7PqcYH+uO8/
3sT1BEoHaeqZg4VySyD2m4ELua+8m/H9xR7gKZvuW+lhuCfLB74e1HPDx5Kw
1xjMHh4pqUzBXndw6sffHt5LwN5UsGzyL22l+Dy1zuQT+0gY8YnjHDdwnIFs
zSQ+n7wkcP6Qidy5rdh7BdxrIlJMwOeDbeBLU2/PR1TdccI9XcFDGWd9Xu/A
5yHel9ijssqX3PsZ+KPsQbONh3DPHX7E+cJYcPY7yrDTD/srwROqiWdzIrD/
qR9xP5zv/Gnq5zxeMx+Pi6LBETfE6upocYU/cX32o2/Hi1V7zI5iv1QATd1d
mJ5hHYv9y8FTc1aa3ovGfcsDiL0t/gb7ucvebvh//1QAcT3hskCaGqiM6R3B
z7fVIZB4P95fgeTzMAEWhvdYaSRj/5IgmuKsC88xz8Z+Lnh4RoBnSBb2Hwb7
5rjKDWbivl/A6U52unQx7qsZTFOz+406dpzC/o1g6lLf/Yv52B8CHl68oWJ7
BvYXgx9ax1oGx+G+6iE0dSr3ctJ3+DxxNoQQe/MCwabstQKTvdhfFEJ8vxLd
DSG+f3CtQmE/+ebBjETc1w9slGidyMX7qcwHn3h079FQDfY3gn/XcWw+LML+
YXCY7B2v2Cu4r88hOP6x1PJyI+6bC17v6mwv14r9t8GNbQcrctuw/x1p3rzD
xPniLHDjlWzPKx24bx04fkL+uXgA+2mwB9sqSL4He82PwNdL404n7fe4503w
dB9184hB3HMALLvZZvzkW+ydHUac32oK7g+OEdS8wF4P8IHV9Xaavbjna3CJ
/bUtzyWGmT1nhdPUeHVkecEcxuI1YJcf1pyJncuYvQfcovUs8wOLMTcF3Gt7
Q2GGJOM++Qi43yTL0oaZjFmG4NdvXF9cU2ZssQu8VG+F4yYVxvxEsLRFoN5K
ecbCy+C60TM3smYw5uhHEu/H2wn2LEitGlNiLIgD/8qd13Ma3090CRz/aNYi
l1nY3w02NQsZ2orvXxkTRVP6me/CL6ti74Uo4nqsJ+DMwHHWCxnsnXaUppyr
NTSffsX9KsCCqNykSbxfThdYrHLi6jw17JOMpinzBs2tSmzs0wEbTU6T3qWL
+5WBq9z3q+iuwv06wE3SU4JZeDxyEsxXLTiVtwJ7fzxGU4ZqeQO+6L5N4JtZ
Re9SDXCvcdKti2No6kX8NqVqC8YSXHCRWUKBmjn2HgL7tBz2OrYa9/oMNq5/
YmhuintpxNLU5jHFmPsO2GsHNjg1oefsgr3BpCNPgUc3r7pZvx33Yx+nqSTl
Mk0Ze9zPBmx9t7vCxw4/7wDwg13BuYVc7C8kj7feAV9fk70onod7/hoH++Q5
rh9ywz19wWkXbD/V7Mb+k2DnzGrH8H3Y3wDuXW6/ruIA9ovBHeOq3vbuuOfB
ePh50xf1QHk/7pkDltrxk/6oF/bfAmuEql1b5439b8EmJkUycn7Yr5JAHOeI
wNJsGc+2IOwdBO93TZJOjsbeOYk0VVHuFKoVg71rSXNvgBu9uxsH43HPfrDr
ym3LV4Vhr2ISTc2he5T60rDXhDRrLzg3OnRK4QTu+Qq8zfBcfHAG7qmQTFhi
TTLxes5u8jgvGdxWqFhoJcA95VJoallXZn17Iu65GiwXHuHLw+txeWCjniyj
aQXYnwAueWW8xC8b+6tTiD4LvVR4vr+s7DLLwT1dUok9hcfB4ce9wor9sf9i
KrGvRHcq8fkJnAXE60XHwLrrPuxxiMP+8wLiftiPBcT9cqXTaOqw9p7zJwtx
36g04nzWObDt98GXVJOxv5M0XyKd2FOonU4c55SCnXUUFLbn4r7t4KPDRyU3
JmH/V7D405L312Oxf2kGTX1+15bmz8c9WzOI56NyLIN4fvq0MuH7o1dHz74Q
7LXPJO7HIhRc9cuE7d94/dZP4KSPJk5lV3FPjRPw/3euU3pRHfbagoNp8e3f
b2NvEGmBEOydv0TW8BbuuSiLphRTOtc9/hP3tAY/oKY/pK5jvz9418LW8foG
7C8AG0SleH5twv4m8HXVZVuWt+Ce67OJ40I+WPPMQ63JB9ifl02cL9EATkvt
Wb4dj3Peg0f060bdG3FP7xyasv9ZsebWPXwessEqP4bOS2jD/npw5cBo2AO8
P+4QeX7k3FzifNYJcGfU0HBtD+5bC47P0Us4/Qr7/wG/Lom2k6SxXykPPt+u
P7Rch7HfDMwTOxypG8I935DHRayT8Pxqxeb9O4K9xuAU3U6XzV+w1/0kcX7l
S7DtG9mBPz/hnjPzifNZRuDpeSZ+i//FXjfwnBa+dfQE9iaBLTwuPbUawz3l
CuDrQ2Vt7fxJ3NMAvCJ5NMtacoR5HlxJC+LBbeGn22l8vagKrFL71/29Usxx
rm4hTc13V1qorzhi/h8o2Kep
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VYaULbXySUL2zHvDBpsxg/8ALKezjw==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1456959356227143`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04185403032376833`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "27.373610779177202`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.7069036693912344`*^9},ExpressionUUID->"dd37effb-d9c7-4c77-9875-\
dffef5f6944f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
r6Dbdvk5+Dy7Vu9ulzNq/n+yxLCx
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
QZm1Kgd+3mWPB5ltGrX+P+Q2rXk=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1423878370204168`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04177175263278324`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "27.348333862435304`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.7069036734957495`*^9},ExpressionUUID->"b4ef299f-846e-4ba2-ba91-\
fe30faec9486"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
r6Dbdvk5+Dy7Vu9ulzNq/n+yxLCx
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
rm4hTc13V1qorzhi/h8o2Kep
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0WLxkPX/ATVlmsA=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9503069788786894}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1621917812403237`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1379919213486462`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.039631504154518715`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "28.71432577758708`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.706903680952386*^9},ExpressionUUID->"97c54535-97d8-4274-af27-\
f925a36880c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
r6Dbdvk5+Dy7Vu9ulzNq/n+yxLCx
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
rm4hTc13V1qorzhi/h8o2Kep
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wD2XnIPrtbpqgfDth7X/A1H/tDM=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/f3wvhXOzJ/h1K8ejz7hoZLzv3I2ksCZa6pC/sqk3l64vsF9qySbescfZZn1
dTJ3r4uo1xLmhea+HSemPcvhRrN1TQnkqLfw6ClTnYN/p17VBJw/ozt+dAP1
LoZHy1jLppdTrzucmxls4EwWdcKmqTvn2BXRnmOP4ftV8Y34h0t0P5jBwhWS
PH/qMdoFi8KeX96bRf3HYMHHlMDAy7SnQiLL7GAORMoW0J6mcJHuQF5QHvUL
4Cs2f3Qur6P+ePjI/14+2FhJ/UVwjE9z+fUa2nN+En6+UH446EC9Qme4wmD3
yP7j1B8Ln5mVtTqV9mu4Bi/XdvbOPEv9z+DjQ7kaAam079ZkXP/maRrzTtC+
MbBn+O8jvlepvwCWifcK30j7arbCl2TCh0OKqV82Bd/PGaucU0po34Pw/dsG
N9dcoH3z4Yl1tZf16Xytm2GbZZmFPWQh7zh+fipVSC2lfUX68J5RKlMr6P1G
F+F66doN4mu07yNYMD/zuyK9P3kEdleKeeXzG/XrnGCZx1a53SnxtGcD3FBe
drKEPk/8BW5LdnvimEO92ifx/5+j4XzNdOq1g3901fFILaXeUFgS3BLjSns0
fIZ3NAeHLXhCe04/xTIv1LuyCzqpdzWss32SuV039QbBpvG2pWbkZBG8eknl
zK1ttOe0VPw8bR/9TtBCe9rCt5Oc9zwjR/nDVfz135SaqD8b/pK17Z5VK/Xf
gdNTVbc87aE9l6exzGs3peD+N7SnEHbjP7lwqoP6M+CKkad/ttHxvBpYlT/m
e+Ir6n8HGwx42/nS+Ul8TrPMyZPRPUf76X5IgxODRJkjdL6aVfDp+3lVFWXU
3wfvUgrwjqqlfrV07Lmg2j3jOe17Cm5JktEbP0D7VsKeex26jIepvwfOdXao
j5cb4Pp/ymCZ2tBS2+1TODfwYZ8tpWV8Dc7JXbB87FT15fS6RCWTZbo38ZeJ
ZnCWmsOqDq092pacNd1g8W+rXznacBa/hpX9gtONf+HcrpTFMnMmbJTNX8xZ
ZRHM/5Q+t5Bs7QJbZDkJsk05CxNgD/6y71kmnHkK2Xg+rTG6e4u+npEJ3OV+
3erlas6CHfB+e+slvuTkI/Cj4PmH46hHch2O/7JW0WIVZ3vjM7jfDZb4yu8a
sPo/4G+wOg==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9492797637401315}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1827360840114851`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9492797637401315}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9603967313721006, 
        1.1827360840114851`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"SCIU\"", "\"OUSA\"", "\"PUTW\"", "\"JPUS\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.149177962014356`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04247575919355177`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "27.05491282163622`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 
   3.706903690999797*^9},ExpressionUUID->"b4eff291-b1f2-4f2c-a782-\
e9394dd792b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OEUR\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OEUH\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SCID\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OEUR\>\"", ",", "\"\<SCID\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OEUR\>\"", ",", "\"\<OEUH\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCID\>\"", ",", "\"\<OEUH\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OEUR\>\"", ",", "\"\<OEUH\>\"", ",", "\"\<SCID\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.70531496953419*^9, 
  3.705315104771555*^9}},ExpressionUUID->"24ead3c4-5f8f-4f88-bee0-\
28c49916db91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.8754733632451533}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.8874850928808967, 
        1.1277196855957643`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.8754733632451533}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.8874850928808967, 
        1.1277196855957643`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.107630806951327`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.056391980788882516`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "19.641636833045816`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.706903695524887*^9},ExpressionUUID->"e303c875-96a5-412d-a725-\
7b435957de4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
SOTwFfucnwHrOZVYoEP3Lv8/YGO81A==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
SOTwFfucnwHrOZVYoEP3Lv8/YGO81A==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.9526078380598121}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9637937054484225, 
        1.1875110532206286`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.9526078380598121}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.9637937054484225, 
        1.1875110532206286`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1824071018382498`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04884857140643295`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "24.205561550619606`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.7069036989770384`*^9},ExpressionUUID->"968f8d44-00e1-4989-a688-\
703f703a6a51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.8672479778630809}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1835582117042354`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.8672479778630809}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1835582117042354`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCID\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1755960515141313`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.06788540982643786`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "17.31735956989535`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.7069037023365045`*^9},ExpressionUUID->"8ce87520-bdcb-4301-ba29-\
853ddc6e1456"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k8lGsbB/ApESnGmdJJymRtFYlRYjzlcFIxRUqnGBKpaCJL4hyVRJZG
C9knba9s04JepSa7TkUpSxR1TqRnymg55Cjv1X29/4zPx/L93M/M/J7rfu77
vszx3rthx3gGgzEK3z9+wxfTwpum8E8ZF37Y8sGBun7fVy8lFhwHa44WqjrO
JBbdAAuk/OVBccTNL8GXFFnVkUs//DB/23aaCuHYcQJi3v+w8Bh4OHcwqqKE
jEuuglttOG91lg78sKwTvIUfuUo6kbwfW8kHxodWCmqmE/cUg2f2fL3Xe4pc
z+wAX62NffUygNhWYQdNzatQOjfflViwCFynMS434zQxoxDcqssaLB8hNmkF
X6mQ1XjOI+/PZ/jSVNTrNffFOsTC+eCNBlPb1zkQS1zBM6R7LDq0iHkt8o7+
Bj7+8HW3y3hisZEfTRVtT0taPwvzrwcbSS4nZbOImZHgmgCD2WZzsJ4jYNF1
XxevaVhP/Z001fAsipllQMxwBkfVPhoJ1CU2OQBWD1SsZhlj/vPgwiDnP+o5
xLI5/jTVWbTy+QY1rOda8J8L1n/OMMX8oWCWbV1gJ+aNFoFDH7O+NszF/Pfl
bbt6F02ZKEc/08f5EATvkhsXZYMLVb7bcVdh/nrwCdtFnjoumP8jmK1taKG2
C+sr2E1TI7mhw2VBWN8McKVHtMOSg5i/BlzdVOf3UYD5B8A6jotWlMRj/hl7
aOpxVm+2TTDWNw18YVYPKy0A61sFfm12plshHPNLwZ2vDcr9cVygGUBTkzu/
3gnnYn5bsKHDsP37JVjfu+BM3U+lC62xvv1gFc8jJ1Yvw/ysQPg86ZeoApwP
iTX4Kv/Uu1uGmN8P3Ot26cZN/Hwxcy9N3b9819M/HfMuB0/kPJJykjDvDrAs
ctB3NBnzngBr2/lpa5lhPacIaMpJZ8rL+/+vpyU4+mzVg/Z2fJ69wde0FJaq
fybmJ4J1T3MMA3C+hGXgX92Na9SekHG2+T5YH/V5dw98IeZ5gnl9ygNbFfF5
iAcb96Xev4zPo/g6WDWpJjjAEfO/AA86ZbaF6WE9twbB/O2y/T6qjvWMBXs/
+aXTaDbmF4Mdx9y+DuD9MDrBZ3LcnNKfYX7FYJo6NdvCSxfXv+QI+EWAl/LA
IO4PReCKxd3Jjbh+2e3gZ1ohm2v+wvzj99NUvbVLE+sicfRCcBCHe3jKdNwv
CsDXp06uWmeN+8UzsKZe9ouuO2Q/EoyBlecvCJteSCyaF0JTXZd8bj8WEje7
gB22pFTWN+D+9gRc13j67NkoYuFoyI/9j5s/rwn3N8NQmiqunlZl2Uks44Fv
pfc7uL8gZh8EzxWWJNqXEou/ggtbrvICEoh79MLg/v0153XziZlOYJWziiLD
ZcS24eBNEcVh/1HH/HlgI/fkoHMqxIw54TTF3ZF+nKVBbLIGXN1y4U1FA9mP
+SHgwiiPFI8W3J9zwbc8VVRSrxBLGsE+p02HRRnEvF8PwPy5svYnVBBHB4EH
Ks+02z8gFmeB829VdZpKiXvqwJaWEbUV7sTMQfBY+g21PTbEor0RsF6+RB04
1SYl9U0Hjxt6te3NEDGjBvyvRkpi/V1ikw9guyn88+J+Yv7PB2F/fRzeYFNI
LEsFj/l4Klq9JmbfA7csVvo7rZ6YR4PDJygfijtKLOZGwnnTN3TA/iGx7R2w
es4hmnOVWPAW/NsspxND5cSin6JoKjI2955WLuZdAZ6RZKbn4It5/cA8qWH1
5Txi4ZsoubwS9d9hP/DZajqZSe5ftgysG2ltJOYRs33Ado7FFudnYL2TwbKO
RjUh1r9n8h805R6Vw2nJwXpywC2MM2+fKOLz4AU+esQ4ZVMVGRckgBsTjFSd
D2K9S8ENQza+/Dxik6XRsF+sFWzqL8XnwQP8bvx3ZftMfB7iwAxaq6CkHJ+H
a9Fyny/rAh/eqOI6Vobzf/QQzF+2jo3RDcxbAlaYxNg0xwPzPgebX3Nazqkl
tp1wGPqHxkqFe8r4vBaBS+uVZze9xHxt4FqNt9qrNHG9jTsC8xMxW/8chett
wRG517OvgA971n9sNCbmPQUHpXl9MzEgjv4u/3rx3Bg4z4pmUCwbXG8bYuTG
Rf+Cl325GTRlFa5/g6Nwf3kPNWVWmJcHNuvrTBlbiOsrAkzFzayRzsT1Pwy+
l1Ln1+qK6183Vu792OvAbdvszjusx7xh4OAszSc+mzHvObDJ9j3tai64/tnH
oB9hGI3qTcL5dgRnVo7s/BaL638/2HyS1dw8tCgHvJDJTCxdhPkbwKsP2/M7
9mM9HeJoanrgmg1elljPfXFy+SSZcXLXy2rBw1xL6XLcr9gycE1oRfnyd1jP
wHjoXzKfn3J9jPU8C/6i9z7i4iXMXw3uW5MV8FmE+d+DS9fuN+7pwPzTj9PU
rrY9Bm7/YD0lYO2bCsn1HzHvO/BYydxVuj+T/Vs4NYGmstKDyvXnEktswI2p
Y5zBMaxnJZjL3Vcc/A3r2QdmXQ7hpEwg14s1EuH9VVee919I3GMFdopQYafq
43nhC8539c7ytCAW/Q2OmpCmNIjjzWpJcP69fuOf64P95TJwoVVvWz6N+beD
rxWxn6pMxvM4CVymvuFQhh2eZ6rJNPX28SaWfyieZxbg/QXtj+yd8Tzjg5vM
EjY75uF5dhx8smz6uhV4votvgFed1iqx18B+wewEnO+xVhUZ2O8JtoETfv+U
uuAp5j8G3t5RduiDKp7HV8FuW+a4KingedwFdp+gUSbDflO4RQj7s+s/rUbY
z0liwE/ST+Y3YT8kKwaHf96qPc0c+7MO8Nf4xCuR2M/yFFJoynnx7ncfsb/q
OQTmW6+l23CcWQjOSR4w3bke87eC3UPNStSwPxYwTsJ+yhJ3GWN/LZoPdllc
xeHMx/4sHxxRlM6tY2N/1gL26z040wT7I+E38LHCVlORM+Y3OgXrOz6M062P
/U0z+MpD/xL/tdjfjIAtVv6ZFIb326N/Gv5/qctXbcN+jukMHtkoXdJviXkP
gN2enxi/G/M0D4En/N4b230R66l7hqYejHpsbG7GvGvBn9IiNKfWYd5QcLaH
1GHFQ8wrkh9n66TC/ejNsFRqwnquBqd7MwKtP2P+YHDST8eTqjowfzY4P6ZL
+ZrhIMlfD27tyvi8x4VYYJ8G8//tks14c2KRADyLeXD+hcXEzRnyZtSCxyp3
tcXrEJsMgB13LtP03EosCThLU0JTru+s3cSyNLB0uLvoeR4xuwo8T+g+GONH
zJPKXx+tmU5TdHbPVrVzxMwzYDdeTY3qFWLbu+DNBdXT2gswfz944Nrhjl/K
MD8rA/rpxgv3lG5jfusMudcLe+UtYWbSlNXbowHmDzDvcrD49o5bo92Ydwd4
3ETVB3qqH0k9/wK3Fvz33NAg1nNKFjx/uak5QXg90xJskxOj/qgJ83qDf/Oq
KheUYN5EcP/KV6orc7GeqtnQPwdpD0+LxXqag/v6XlWEZBPzPcEfXLq/X7qA
+ePBT6cNhNtEYv7r4NQC59XKxVjPJTk05eFxZ2rnzUHu/wArvpl1
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/kibPM42KqGp0asRYRJbP9j8F4eKkLA=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.8672479778630809}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1835582117042354`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.8672479778630809}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1835582117042354`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"SCID\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1416134292327291`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05989163697715252`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "19.061316184565673`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.7069037065350213`*^9},ExpressionUUID->"12f82251-c4c4-4d6d-be0b-\
b7e140a71f8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k8VOsfB/CJVkt3irpos3UVLdNOIadFki2lDWVpkNQMlWSJkmXspRJF
U9pETEq5LUxZCtFcpFuS+ZHEiQbdiqjft+fbP6fXS3m/zpk5n/M5z3meJy03
nj1XjsViDcLPr3/hD3uxG03hr7Ll8JeZC/jiFcuGJlNifgy4W8/fuHgOsfA2
eMoPE9krLWLJW7DR2OZ8Y4tPv+zi7E5TfvfPt3Ffdv9yUhR44aWe6rYAcr74
Jlj7mafC5avEskawR7n2IWtWzy9rjtxJUxlpM+87jSaW5oKVLK9FUFnkfPYr
8F7fqIo5Mswrz6Wp+6vj9+iMIOfzZ4PdeE/+M/lGjrNywJtOWs9bcIgc5zSA
AzsnLGzkEruwPGjKgdrXN20jcZI+OH/3CsOXFsTijeDS01eMDJYT29WBm314
sS7TicOGwK5u9pTuT3I9kZ4nTflcnXY2Zi7mXw9WyzVK85pGzA4G2zgaFWua
EwsHwDccJ4S6LiSW6HrRVPVL20fhq4hZtuAJcV5ey3Ux/yFwt/6YVL15mD8T
nG1ebHMG71+mtYum9Ete2H2Xxz6twAf5psWu90k+O39wUkl9nWY1cZiQeb6o
Eqxdkh8/cSax2VpvmrpjXaB8txXHwz5vxvnCdG9m/ifgOJ1tTTnYF6sXfExn
icbTndgvfzdN9fMaeuNdsd808FVrXlTXbMxfCnb3yvn+z1+Y/xN49+OJ19vm
YP/qPgxLU8DP2Rvn1S7Dfh+Dg3tMg3kzMP9HsKWl0LBfC8fHxD00ZTzMPvX0
WMxvBm7t3dL37hO5P04x2PNvpY8Px2C/HeBwqfaeogWYX2UvTfnLOcZqTsH8
JuDJgka968Mwvyf4eFGnjZMl9snm0VRH6vubPBPMuxRc53pbq2gq5uWCU9Uc
hnj2mDcR/FOdt79NHftU5tNUzsDW4qMjsU9DMKfB4+qRfMzrBjYdPHa/NZLY
JY7PyJ90B1xZb8VRoslxzUW+NPUx3NDWvQTHww5wQfXRuhp8X8IEYIVi6fwI
Ocx/C7xdZHpimRLmbwLXiENXJtfheHDyoynx2qJbioM4P0SCG6VJTT/w/ZWI
wIXtlQLTp/g+Nvoxvp8zYh9NmTjafMsawvkhHHz+haKKQy/ODzfA/gWvZu8Z
wPz/Mm0nt59xvbBZYCcDg+Z5L3C+yAaPi9E+3Ij3b/YCLC+o6zx5E/P/BLt/
8dGPLsL8Mw/Q1KjMSReGH8H5bQP4fZlGc+kj7LeWeTxpECypzpy6Dt8v8V/+
MB9cvbC2/DXmtwNf0K+NXPod8weBueMTHLJqcb7oZ1qqc5CmRh/Ie7mvAPPb
gHUPjmprSsX8AeDDoqqAyemY/yJ4lagpsCUO+9UKoCn1nMeKGWY4PtaBF+Vq
qI+ejvkPgB3tm+59+gPznwdXyLcN+I7B/BXg8avPTHYYhv1aHKKp+oeXH5vP
wPHhx7ToHNjMq1H6ZiXmLwc3Z9cr7+Rg/h7w1i+b35s+JeuDkBdIU1arIzUS
x2G/qYGM67FKweWFrUtmDZLzOd1gSc6uPOUHuL6oBdHUVK/NI893EMtOg3cY
GxQbKmO/j8DPdlfItfWT43Y0eFKWwcTYAmLR8mBYP34YL3lWSGxWBL7l0liX
+oaY/wG8fquB6T9lmHd8COO4xDiE8XmWJ9NJbeDYTBvOk2xi8R+HmXmNwJtb
G4cfkMe8O8HebnHb63/3nQC2CH5dKLLCPpVC4f37LnOZY459LgErci//ryUI
x4Mr+Gu+cKrJHhwPsWBubdX2JhyvwgLwUovZDfOv4HhYGEZTTzXu2IvO43jY
Du5VC9kYn4LjIRpssfdzycdTOB7ywT8qCwK/5OF4fhPG+H5RxBFYX9YHFxqL
MW8euL7TlGsuwbyvwYqiVI7NQ8w7/Cj0odKcU5SAz/sGWDDrepv3B8z3Epz+
umMorgbzDQunqUvsoRMlOB8kGYAHUmzsEn/vF66D289WKI1/i/3Vg5Ov+0Rl
9eN4/QGWq5q4aTLOL6IZxxiW2oO32HupfFDA9eA72Id1zUChB8fn9AhGPpYd
2HXKth36ON9wAsGqUZyKA33Y1zdwaLH/hIYT2Jd2JE2drG0r+ob3r2kNDv78
scq6EfMeBF+Y3tvuUY95L4Dvpw+M2YDzJVsziqZGsEasiLiH/VmCuWv29nVk
4PPeD97y2bUyKBqfdwY48fKs9qHrmP8p+LO6Ld/5Iva5Jhred60j1qMjsE9f
8Iv98f7+ZzH/2WjG+bIycMRtWys53G9pysBqGq995/6Hfe4VwHxzu0PIx/VJ
egYsypnC26yM61uJgHG+WRd4zk9D2rUd8/8ZA+9LkNoGU1XsUwyW47OaRi7C
9bcT/OHr13saFK5nqrHQr8xAMOz3/swUbFWrMMFID/cHD8GpXguzu3A/ENYO
Pudao+sxC9ezcXE0lReUuZHtiXmXgTuPj+p0xPWX7QF+YV543tsXx8M7cOTd
z4kmPriejY2H9SJU0HXOHddjo3jG5znuYBsfjVWBhpg/nnlcppgA+2Wtqv7o
zTh+Fycwvt/OBVzmIlezYivmjwFz1VMnv92P+W+D/1ZZa9iN+cwWJNLUn6ZP
Q44H4v7GGWxeuc1EloL5o8BN4d1zPx3D/DfBwgmTLP+NxfxvwDlO1fnBV7Hf
bUnwPKre9y3Own6PgXuct+4qKcT8ueDP4zYMM3yA+V+BVTONxCH3ML/8cdg/
l4pbuLnY7xGwkUrz3cPV2G8O+LDq7r1lbzF/A1j96Ldvhs8xP+sE43yhPnjw
kmKtZz32mwUur5A9COvDfuvAuyoXq+kOYv4hsO2FlYInw3tJfr1kGL/B2zNy
27BPCVja27quqRP7HEhm5JfqnoS+D8U8qinAvLbgrpYbfd5lmPcQ+OSH03nd
2JfkK7iKp3DjoAq5Hkv7FOw3qjWzPTWIOVZMu/iDN7mEPJHXJ04SgjMq7wqz
1Yg1p52G/b9RaUKVArHdWnD4CEndc13isH3gFmfVh2tmEIvSwdLkbY19HGLp
E3DdqlElweeI+eYpsB9vl5XGnSIW8sHiTr7/Rn9iSRo40FJ2mBWK+cvAC7pe
hbEDMP8ncGHotC/Ca9jnnjM05RzwrsEnk1iWAvZrzvhhdRPzPwYrnQg67haC
+T+CT41WDVCLxPwTU+H+zEOdRp8kZp8CK64/s5V1ltisGJyW/HZL0e/8HUwL
VdIYlpgwnfQ+jXF9MfssTa2w0RyZUI55l4JPrPaW9LzFvFywX+hAqko/9tkK
FglUUhRZfaRP5XPw/4Wjfl0R1ZjXEOxalzNcoRLzuoF1KpJHjS/BvHFgJ4sW
nZ23sE/FdJgvHPbtr0nAPhelMz7vsgOswC7QyijE/AKws6DMsRyfl/gWWE8l
SOTwFfucnwHrOZVYoEP3Lv8/YGO81A==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/B+oaagv
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.87248379486391}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.8874850928808967, 
        1.1875110532206286`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.87248379486391}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.8874850928808967, 
        1.1875110532206286`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"OEUH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1450189543947884`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05124896110961179`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "22.342286157680554`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.706903710415008*^9},ExpressionUUID->"ca6475b5-e1f4-4783-ab30-\
3634069f5613"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
SOTwFfucnwHrOZVYoEP3Lv8/YGO81A==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.8670503357872614}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1875110532206286`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.8670503357872614}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1875110532206286`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCID\"", "\"OEUH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1790015766761905`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.057152508963616754`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "20.629043204852866`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.706903714770674*^9},ExpressionUUID->"ef8d313d-6306-4b53-ab47-\
3085dcbe498e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
SOTwFfucnwHrOZVYoEP3Lv8/YGO81A==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
7q2H1/8PM3+qTA==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6753696*^9, 0.8670503357872614}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1875110532206286`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6753696*^9, 0.8670503357872614}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6753696*^9, 3.7068192*^9}, {0.882310369950755, 
        1.1875110532206286`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"OEUH\"", "\"SCID\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.155211320101236`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0555225946087304`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "20.806147987896626`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9, 3.7069034296503954`*^9, 
   3.706903724066393*^9},ExpressionUUID->"d0bbe5c1-6899-43e3-89ce-\
e5851579a318"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<VTI\>\"", ",", "\"\<EDV\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<TLT\>\"", ",", "\"\<TBF\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687720875048324*^9, 
  3.6877208755336103`*^9}},ExpressionUUID->"450dc594-3d9b-4fdc-9103-\
d430ebee1359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
s0M6a960AgGzY+mfN4Iy1q5rCwa8P8YH3hp+3W7sK8qfAH8MKJz525fyV8Eb
Vc/IHi5lHbL6qYCZLpZ8WbmCde5huCzvQl7MC8ofDwen8yJEeil/BVwl73I3
R+4Xm78Ptv6aMy1+GuuGg89wfg4IHdMmy5obB3/Z7PDddxBr3is44+ufhKYO
yt8LH30/V2G1Cvt6zKRC9HXyptXi+ax1Y+G04IPKenNY2xbDokaSn2/PYx3y
C36QpvuMu5x1p/lzAXNF8u4ETRPWPi/g7MUVF0QNWfO/wwZlyvrqqpR3wgvc
L7fItBiPp7xL4AWPPufXDKO8bi8G/L6yTriv6+asr6tYcxRe4vwy8phgDI/y
LoZXDXo3NJr6st0D/7y+xWApfd+QS3Df+vR7E7qoz7FF2N8P2f69PJb6XAD/
sgpVjxCn/M6wfeWs1gw7yn8BDl6hq/R6A+XPhV/YN35o92HtalwsYI7o+vup
XKc+d8LZVzuWiaRQ3hx4a1nXrSOllLcFzvQru135knWuQwnW56r3p24XU58h
8DFZ0fKhnyjfF9hxkULto3uUT6YU11/VWdq+d6m/s/DfUb83GEdRfxlwO3PK
ySef8n2CB3t8+PeskPJJvRrweWWzYINj/8Qmv6PjnQqX3hvexwuj4/0B/m25
8G9BBeUdWiZgEu5vzhzVSXn14Zp4X5FXQtZKm2HD90PDZlVRX2LlOJ4mly7n
tVDe6bBM1eDax98p70Z4ikPhKJk8ynsS1mae9BsvpP5EKwRMm2rz9khF6k8b
3jIks3UZzYftOvjnjaDviTQ/IcfhfdLufteWUd5EOMfZpcZWg/rUfC1g3B+o
5c+7Tut/DZzomnFlawmt/6PwowuhrysLaP+6DR/LlJ8SLUH5K+GRD6PFLVZS
n6sqcT7qnFEuso76PAS3yxz5ZnOJ8sfDewftVlt2jfKXwxZb29dkFlD+P/Ck
b1e/lDVQfzeqME/WHRmCLspbWjVgXnx6Br7OV6nG+T7aRUbiK/V5Dc4rq3wf
Jd3N9lkE9/2QO6MlxTrmJ5zIuGcvGcG6bOIbXH8rxV7aPZ01xxzekjSsxtmI
dchz2C8xXJ8ryzr3GzxVfXNwowvrzvE1Amb4+RyDCXtYK5nC8/4kRCgcZG25
F26/MXKdyQHWDR3wiL+LVTkerLnjarGextXK7VzFmrcI3hY5dUfSWsq/G86S
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3HlcTP3bB/CkVIQsWQpNRCUpCqHtUCRiSIUsEwqJSrYWqWhBy5BKpcyN
FKJNiYokbSohtFjGGjNFyhItfh/n8sev54/ned6vyfh0net8t3NuqhtdVzhK
SkhIfJKSkPj7f/E/nF3uIob+31YT/C/uafhE6tVBk/VY+5XA3mOfqWY++PLX
Cua7REzZDFFeggn7uakrPCpO/fIgbdZusbB26OtPX3RYC+7CTdNjFKWMWde0
wGGD0hSDa9jv47l4iJhPMQqNzmrs5/xoOLVJZ39xA/t5qwi2L1TqmTCA/Zyj
uFvEmHysrpsyj3V6JOx6w1wof4C1sAB+FRm+qSWGtcJH+J297o14sunQPSLG
6zDHOa6U8hrCAQZ8eU4ea4k82LJMwVqzgbXue/jGVjOPpKuseYP3ipi1pqJG
/YuUdzas5XAguCWCdeEmeG/Lw0TNR1TPN3BPTCrPXvorW0/5fSKmXGir/8qU
dfpMeN4aey2uMWshD3ZKrlLWGMpa4Rh8T07qZXUc1VNuv4iZ5DRr15tcqqce
XK7TFNb/CeVfD6+6GK9QnEX5Q+AHVkeF4meUPxOuWF2+29SNdauup4ipvVkQ
2rGT6msP55UsiZKaRPkD4fbXS6pOylI/pMGTRaEtxl/Y65NeD19UFKo5KFJ9
V3mJmNL8Y/4nFai+AXBJ/Ol3ozzYnxekwpzXPQOn3fnM5n8K++/p//T1KtYS
fbxFTEgkT2R4ijX/ILxjvkE/uSTWhRdhXxf/GZ9esW59DG+ReDynIYX9fk4P
rDzxc/muR6y5Gj4ipm2wetGuItbCC3Be7bw326WoPx7Ctr6Lr40eTvk74c/x
M/TrOtifd5t4APWcvPTqQSWq/zL42KH43NNbqJ4dsG7YCPWZ7tQP432RV/Q+
pcaS+mEJ3P3fzs1b71M/74WXP5//43M0a7/vsJF4gF7DKaqnykHUd0Sh3Ek7
yrsI/lzd8iu0hv19FXbDiqd/RCw8yNo0ET47Wzw4YEULW88xfiLG5dXKopK7
rCUWwn1nn+qW7GGt6w4Llh4zUNnE/nlePNzHpuDBnwNU73uwfJPUru9BrDlm
/iLm6d6yMX3fsObuhM2b+w+tXEn5T8Gv2rdcGCGk/EXwPpMxYQe8KX8zfD01
5WypD9Vze4CIWWYyxnxKDvVDFDzBwf9KXjzrmtvwu7UXvl9KYC0hgkMjg95K
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
q+Cm8lVfRntSfywxwv5L+1JxwnLqj72w9avxH2Ko/9wEsMbz0U5raf4XVMA6
zf1+SOyh/v4Ge1z7vCeY+pHnYYz9YPJNteH03xPxE+Dd4yT77z9D/V0KX3q6
dp/5Jervr3BMykGp9//GuzEmYmbaWe0/ZjR+psfBanZnNsfSfC4shrPiO923
VFP+L/DB2rKoGpr/3eabYr80dL7dfbr/JIpM/86fj+9ENlM9m0179QdvBIP1
8VHXk0X/+tkUPif5YeCaRMrrDK+Ye2irN/33SdxP8NLsyLKv9N83+Q2bh/Vp
7nMrWwXqB6N5va6PcAsc1Ffrbd0g6ucT8CNBj/OQQ9QPCvN7Xd+aOfDi1y4C
hT7UD47w3CDmesVXyh8BS9kqjKgwofw3YPPnW5+6UX+1zjLDemLU4BJ3G+rn
jbCxg9PizXR/cENhI72gs4+ov/xyYLUrE9SXK9P9tcEcf36+0+Kds6h/j8Az
7Pc9rK2j658FJzWYVQ+k9VfNC7hxaX5UKvUXP2iBmInzHNZPmn7fwnQ4XuOX
cSiNN60N8GHJKdrHF1M+6YWoZ/g1xzYyVwdeP2t35fdtVL8r8JK+ZXtd1ah+
dbCvQf2jQzQ/mUpaiJkBV0bbPbpNeafApcZlDtfpfhfYwlcVXn68QPMJ7w98
OuhQiPpbut6ai8TMms7owxLKtF63hiuS8vrN/Er1PABLdlaVcp/T9e6CsyS+
Hdb9Rdd7kqWYGf5yg+36bsrLhf9EnVey/El5vWHZsbFqD2h/YJoERx2vTxk7
i/ZvExaLmV22Z70Cx9B+YynsPW2O66ho2m/sh8t/rf86n84zeGfh6QfUHnvR
/pZfCWvfvvvzfRDthxYvETODEz5XfBxE+/k9cFzQPN61iXQecQaWd0oq8dhA
5xHlsMtJrQ1KIayF7TDf+/bZ85Pp/OG0Fb7f+NaWViHlLYEDhzgla/3bH32F
/QSW3qldlFd5Keb3yNj3N/uzf74wFq52rTKo6ab92114goOy9S5lOn/4DHeF
S19/OYDyjlomZo7/sbLVUaO882DOec9zv9/S/u0OvLz70KJh32n/JobXfRj1
Qi6E9m+KXMwHAZb8NQLab5rARpuvLgiqoPzb4EHNxnGfzlM9P8IrfI/Uy8ZT
PYcux36lWsbu3AfqB0P4a7L3/Mf/9stOcIP2gIUVV6nex+Etpza7HNtO+8/B
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
hxN8aP9ZDPcU87UPZtN5ymc4+Xl4Q4Md7adGeWN/miBvvtWK9kvR8Na6rPEV
dN7HueP997zP9skCOl/hiuHWj9H1R+m8KN3EB/urA2/i71rQ/ugWvL4mqHHy
LtrPfYS37Xzb9iKU8g49gPtnmaLXRw7lNYT/GJtvCPj3vGMLLHt/U4MynWfx
38Pjd93+bkb788LBvmJmU0jdIlf690xaZ//1OFmlQ3Rew9ns2+v7uOGwvX1y
sxu9vyGUP4j18cFUq0nn6PxhFlzqyDjvoPNCUwf4dfXtplo6H3Y7BocVPn63
xJ/2z9lw3BqDz3b0773o6vth/e6orz7w33nxenhogUzg7f9oPx0CH0j5+0CX
ziMy4Wq/9R6RGbSffg5/4/KOrqLzxfRAf3z/cLVVKvQ+ijANbvu+z247/Xsu
Cg3weA0JvojOS0ylAv4+L5frW0z7c4krsNGoIzIucnS9n8Ft4druc+h8gNfn
EOavZKeCuUeovlrwlhvjOMstqX6X4OpFl++tpf03txZuk6o32UH95tcDx+fP
WdN6nK6/xmGMJ0nPd/ykfhOugOu+mh9YRs9PBZ2woeW3Of3j6XpPDET/3S4w
q6HzGgku3JH75NI5el9C1wv2+rDILG4sXe8O+J6s/be4lXS9xweJGet2ozcG
UymvFbxh9P2R2c/peu+DE4uuDDpH56l+/8EdPZ9Mn1O/KHCCsT9LPP8rt4Xq
ZwlLGjuN/K1C/bobzrh8KsaOzlcEifDgca9yjOj7asqCe9WbtzAE82e9zYVO
Oi/iu8NtFqMb+8yj/PHwg0n/eRXSeXnrPfjj3ZCdl5dS/taQXvVI33lEzKz1
OrtIT5fqeQp+84JT81SG8t+FTTzc56ym/jZtgWWvjm+Kp/NUt5FHxUyjq0Fn
HZ1H6RbC1iMstJ8o0fUXwfPNpA09NSnv8GMYv2WHHmyZSXmN4edvBz/Y4knX
vwDOUDVzOkrnpX5NcMfyY8W79lDeIaFYL/mq9fDo+YVwLny0MdrvBJ3nKzjB
1wpd9OUpv+Dd358vNjgZS+edNYPCsD+y69k/sZ76dzasmVdySePfvx+0CeY/
Sfbvc5TqHQZvivoUF/fvecuAcOwfE/zU+tL7V5yZ8KINS8KEUdQPvL/u6JOc
RueJfkdha8Hp9Wdv0f12Dd7mvXy261uqp15Er3q7rYvo1W+CYLjTRtg6eQn1
cwb8K+D+BwH9+0kSz2GJ1T+klale/DV87P9luLKdVK/Cw/AO8WO51hXUD1fh
g+KSmhN0f3Hq4dDWljf3zan+fY9jvxw7x1yb7k+hP1x/dsW5a0HUD6nwRP25
Pf/OD02fHu/1fW4SJ7DebRVe3Enn24LJJ/72Y4/rJC71x0X4zaSvM8t3U388
hj0jpUapXqX83fCCrFMDTzyk/OqRYibcSf6TFb3v4VcDX90+qUjzMfXDb/iC
4eQHzhzaL6udxPxxp8LsuwTtN5fBGv6RxqZ0nmfqCavWTn2/v4nq+RM26ad/
raKS6jk+Cvf//Ylni+l5ke4S+OqCwClzTlHevfAcmfkPEmh+5Atgv6b/BA9o
vOGoRCNPgnnfmXRez10EqxzK2P0hmPJ7wF2PLez0Eil/Avwr2cWHT/0vLIXn
vvSRE9N5r9uCGPRz4sL3lx2onm69XRMHt6x8OSib5k+Je3CsUs7Rb3S/636B
nY14UTZ+VM8dp3B9oxQVnXdSP8TAb39JM9b0vIVTBJ8quB3UTO+XcJvhs0az
RUafKf+IWDGjeIEZGCZJ9Y2CS8y31cl9ofrehuNO/iqcfY/yf4JnBkRxcl5S
/mFx2D8dvTco4BXlN4LXrmsYJU/P6/gf4DrztWdSh9H5iUI87l/rWO2fWnR+
Mgf+Vt7ya9MkOj9xhPO3/nJLp/PO9Lfw/MklU5vo/QnhwNNi5nd8+0clJ8pr
AHvLTRh3zoLOHzbCsv8pdVrr0/lJKGwrPYoXN4HOdwYk9Pr7dGfA6hf0a3XU
6fxhA5y/uda0hd4X4R+BHf3W7bcJpfxZcFSmzSBLOp/lTk8UM/3bYrZ/iGwz
+R/0imGv
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/rK2sFDqc9BM3J/sshEjQ2g8zIRbRxbXdNHrU9bBPNcpTqszKP/B/73K3PLm
SerzD1wleXWXAb0fd/os5DsjKBDQ88dbCwf+zBm5KJ3y+8OS3cMPbCmk/Bmw
8fTNdUfe0nhQnY33c/MZLNlK42E1vLnWSXs8jW9pX3jmJ5FmvyeUPxWOV9Ls
UyN7lMHnKn1u9TdTv6vmCBn79gSzRrLGPrjH1n3Tsl7Kfx42Wu619dJXyl8K
K3z/5rqoifJ3w0c9rpqV0Os5PnP/z/+8+JY8zW/JsKbsvQhnWt9yn8E7zJf8
vv6T8nfAM62ibe35lH+SBsaHn9l8CRq/KYnw7r3vZcp+0/miCG7bMNopIJnO
F22wyMubK9LpPKGhMA/jf+qwu5WylH8ZfHymnu7lidRvIZwu8+OucQ+dL77B
ptp64SLpdL6Q08T8MvT6LG4RnS8YuPjwlUUFr2g8u8G3VvplZRTQeB6rJWSW
DLkinPaFzmtL4IRtR1/fpfMP3xneGT6zZd8zyhsNF5gz08yFdN4ZPR/7nfHl
3T+a6Ly2CA4dt2CVIf1923ZY+q3kvgXvKC8XTil680eZni/OPVgh5ofyQfo+
DToLMN/tKc9Qo/OU9Db4Ezcgay/1Y3gS7tF+5T2e3t/jNswpkBh3ls5nKY1w
i0Kwxdjb1KeDtpDJGTPj/csoOq+dgK1FNXz8Eyj/TVjfflnaMvp+vDr46B8f
rWo6j7UNWyhkxjdG9nsp0vN2DL7ja5p2fCaNh2twqtDOQ5/mz4b38G7LlVXz
DGk8DNERMnuHf410MqHxrAFz0rYw9+k8xM+B0zu3vnu6ncZzNZz556bp8X/n
NzFdIfPz8Mbr8VtoPMyGx46QvZpxmMazDdy8afz0Nno+lapgfWbV2MN0HuKI
6GE8a/E2qLhRfnV49bp3r8K8Kb8VbN0QYZlzifIHwi565YmutL54/IbNrkk0
RxTReFZbhPPo5WTN+geUfw3cFHDWaAw9TyL+sGF25Zf39H4a6bCjeotDOr0f
b6o+9uftK9eFltN4toDNDh5JufKU8h+Ayz37Vr2k9+dchLU+P9MaepXyv4TX
u3lF8YKp35WLMT715IM7qE/DvfBZSZ79IVqfPFLgS8ck4rfQ+pDyHLat+S4V
QfM3vws+xpmptvrf8+a9RMhIXIwyW2BE/Z6FB/aEh68ypvxP4Q3jsm/kBlH+
dvhrr6iqbCTln2iA81dZhLHpaeo3AbavNNT0PUv9PoGnf2gS075A+X/A0a1x
Jz2oL4+lhkJGOMrrQd816rMQXlJfXGeXTX1+hUMrzhrJ0H7KQZYRMknvHu5U
p/Mp1xAudLbh/qXzM88V7r087e/DNOqzFT4aKPd3IIv6HGOE9WGe8ZOD//Iu
hn81uKyYvJfyOsFzX4neqqDvK30KrjkgHpdB+6UU6aVYn7lyChG0PvP14Gqn
oXwrJ8q/HTbuKfK/QP1oRMKPwi0zdtP9c7gLjxqWvCCZxnfbwmVC5ovOPu0W
T+pzK+wzVkG5keZTTjjc6t112IrWp6BbcFzA6Yk+tJ4Zbl4uZBbLzpVZ+O88
fxzWWBr8yuMU5b0B58psXTybxj//A2x9plX9wlrqL8QY4+/0vBFv6PcPXi78
QnGmcZM25auBI9pqBk3Wp3yDTYTM6zfBV62+0Xw2F5ZNuH8tkOa7hivwsI0D
qyro9ynpd3BnypSu5F6az0RNsX4XJi5fUEzz2Sz4nY7t0mf/5jNr2OSD/Rvd
5zR//YUvzZKdbFFI89eMFXieqiSvuPBo/rKEm1w9+g1p/msLgNecErQ2fKX1
YADummJc10jzXe40M8xnr1obe35SXg68Obwrdhh9vrQfLCf9oexdPeVNg7mG
TRUBtP/iq5jj/gQcnFmxmO63Bez1fobzetr/aOyHowUTKqz06H5fgCeXFrff
p/0M9wXMW1G3ddBo6tN8pZARXGuTGj2N7vce2FHXPCST5tegc/CTzVO3utP4
zi2Bz93cYdq7iMZrJzztxZ2LVvS8piStwv7XUnG8xL/9WTH8KnfGxRgaXyLt
sP7tU1q9YZR3goWQ6UieV5wSTfc/Hs732N6z4B7d/8cwr3ShhCmdT5S+wycG
Lq3eQM8vR361kJnRyxlsUUt5jeCe0mWDs2m/L/0IjtqTFKhGz5+hEL5/ZsKj
9/k0XsdxsF+9MNH5KT3PKQZwToXZwrt/Kb8LfC9VvV6c9h8OLXBd0dkrD/qo
T5k1uL9n1P2NaD/D04e/Piky+NxN+XfAEZd1Z3+j/ZdSFNw2Icyo9g/1OWqt
kDnyK9l2J31egy789ahplTP9vbQjLFoawP9Ev38YRsDhg7SPXf33+8md/+07
N2fRSjp/LrTE/v7zJsUp9PuJxhZ4dEfTtI0L6PwZ9r8zqjcdX0rnzzzY6kzI
sBYDOm9ushIyaiPHJYksp/1YKDxtTlPw+MN03rwOK7UvnBvqTefNWrj53N4N
+nRdeug6nM9/mxe2JNP5PRi+ZScqJRdDvz9chbf2zvgYGEd5a+DdPzuMPtH5
WkPcWsj4pTyY45hBeefA/epV0k30+rbLcGCBnHw0nbeV3sJb0vYH65yi/INs
sD+QepzsXUT5Z8KbNj749PAG5V8HZ+o/Ozb5GfVZARf+vLxErYr6/ANbqSSE
elZQ/um2mO+TXO5J3KT8a+Gb91XnP6LfF0QC4H7XwbZt9PsY99f/14N8Lu3a
Q+d51fVCZtLsjqlH6PejttXwneYryvb0+4GSL2yhNNzein6P4qTC4g9E9/jR
7xMNyhuwXhR3z5pCfUuvgo0fKGfN9qH8++CGuy8/qtB1j/PwsohXzHL6vS+l
FF7rtfi8O+XTMLMTMroX635eor4cfOCsoh+OyTzKnwwXbThWsiWP8j+D+x8q
lf5Mo/wdsO+SzxpLyEGe9pivQlMs/G9Tv4mwaIbE5sHxlL8IFj/QpClPv2dK
t8FLes82/9pN+RU2Yr6+7XH9LuXlx8G3xw07tYd+jxN5DM9f/OJz/CXK/w0+
tfvUxUf0e5SD3Cbs98wfFgyl+81lYEtvjuL5EupTAB/LHtFjwKe8Yzdjvrxr
3OvbTHmXwLMMyt71SfayeZ3hg9zd2mKzWHt8gT2aXT7PUWedMtoBr8+Ti09f
wJq/CN4t7Z552pq1yA74xOkH6eourDW4cO6vGwbB61jzRm7B/lPim6GCCes2
HXhZi2Gf7FLWStvgkk23hA4c1pyTcKGJTba7M+ug27BmiM6oPfT30tpbhUzA
i5uTXlMeQwdYalCM/dV5lP8EXNxZH3ONvk/KTdh3Dd/q3nzKXwd7hCvmS8qw
dti4Devzo2v87YqsucfgiEt3NtXS5/OuwU5NgXncY5T/PVw54FZb/ITyD3EU
Ms4J2/l8sZ9snzlw9dzSu9byrKWr4Q+ZMf7mWqwNxbYLmTnfF0hUa7L2mA1b
1Hw5+fAoa5HL8Km435+U9rLWqIL38jWPr7Bh7SCyA99P0yjn/n7WXHV4+oPj
91fasuZZwUvureP30edx3sAdJU3chwtZB/2Gz845dLDHhHWumpOQ+fZkjsra
5ZR/DZwt82lGjA7l94dFl7usk7RmndIPz9qRER6wgjV/qrOQOaMTHGewnvKv
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
/wFu/3rr
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 2.0044819209547606`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 2.0044819209547606`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VTI\"", "\"EDV\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.5827951693698468`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.1755087465276858`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "9.018326440615125`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 3.705314944965003*^9, 
   3.7069034649383307`*^9, 
   3.7069037328449516`*^9},ExpressionUUID->"78aa1502-cea4-4498-a84c-\
01da6a669cea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k4VV37B/CTqGRI0aSJkqEQhVLCJiElUSoapInIEEJSJIlUhkgSooQm
UyVKImlSRykaRCnlHDOFSO/32Xe/6/r1/vNen+vknO+5973WXmvt88jau1pu
F+BwOE2CHM5//4//yexx5zF/2P+16cEWCbD5cMuHZWPb/3PAQ7hHyPJd7l32
dQmjPTzGI/zU2T8T2df1XWHTnJ1/7gmzdjsDa1VV9epJsE4uhcvmHXxnKc2a
2wLfOiW7xOEx+352zh485nlC4qFr4uzrEbGwlOCdGNWP7OvtPNjF7Lp/21D2
dZmxnjxmc+XyoSNnsc6Khs9OFYoJMmddfxeubVi/p9+atcR3+JCW8z71DZR3
jBfer7PKucqX8urAowUML913Yc0phA0KI8csP8Ra7Su882u/iNQW1naj9iLv
jk3vbLdSXm24e+ocJmEd6+KtsJmX6r27x1hbfIZXRiUNO5xK9RT15jHXJOK0
R5VRfi04c1BbbjqX8tvBpQ3asgXplP8YHOOfcNGE3j9Z2IfHzPYxmBPuTfWc
B/vO13MUDKD8m2B9+0O1jbso/1F4U/a7zNv0fexy4HI5UdXDuqzb1Xxhy9uP
ZupTfW3hEvNI4eSRlD8YPn4p2+JwE3s9Aq7DVzXG9F5oYJ31Fp49QW/3lmFU
33X7eIzNoRdB4tRPbofgD01JBeMjWCdfgXvVnOyDp7LmvoHHmnv/SXnXyuYf
4sdjNKaLl8wcwr4ecRAur9ki7T2adXEG7GSzSfKmBvXHK7gq6KZxRD5rmUF4
46F1VwPeUT8r7ucxQsuVtl9+ybo+DR5omdymOITqWwkv7enS7KLvq98Plyu8
seN0Uv6Z/jym2PTEHy3qz+SVsIRqg6e5CdWzF1bsn6M+bQn1w/QDPGbU+VlO
B9WoH5bDHp5j3H69obx74Q2G9t7C2VTPH7BD6r369AdUz2kHeUy0Z9q0C5GU
1xR+ma1a9E2Zxp8nnNslsDVQjLV+ImyQk3dBeyFbP+7kAIyfI1N2TD5N9TSG
nxl+32hbxFrNHebGNY4R7mRtdxaW7t76MF2I6l0Gm+w+F8YVp3ouCcT3veE6
+8dyqqcLLO1sc186gfLHwbmjtk2W7qL8JfBcXdlNn+l61DfDb7q/Juyl+cPN
6RDqpb7j87n31A8xMMf+brAvl/rhHpxmNtdxwivWHB5sX7zg8oHdrNWkgnjM
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
zQ9L4Addu8wtPSi/C7xZ32+fx0zKHwc7psfV/M5sZvOXwGN5w24fVWVtwVzD
ePRZuHL/ctYBTrBk08l5LSKss2Lg2uYtrUELWdffg4Otuh5uPcxaggdHnzff
aH6TdbLDdR7jKicSN6WMNTcKFmqZP3JPMWvO3ev/ja/KDBfKYzc6C+vva3PH
mmTx2XqehFOElBx+d7OWKYAbtgdEWw2wtvjy3+uXfbuXPWAdIJ6N97/lsvbq
eMq7AC5xYQyvjGatfwvOW8pZmDOftdsnWHbvwg47C8orkoP6zEhqvLWR8mrC
D25ZrvsjQHnt4EN6mT3bPVlHfIRNcn9ZSh6keo7IxfxvZNVlb8e6fS7MeZpw
e7Uga5mN8MMkRSZzCNU7BN5YIqiQrUL1FMrD/VDV++RgL/t9JNRgvUlbL1j+
ZK1vA5vaVZ+2lqD8h+Ha9SKXvgezrydfg5V4K0v9XrFWU7nBY5SDvPZfTGBt
txZenhygsyWbdUQgLCe+30izkXXxZThHsSI5vo/q/xr2X2KZ0Ev5A1bfxP7l
2xIVhSr29awDcLH83NOzdrOuT4erlpQo1npT/ldw/7FFm75NoPy/4dsbFUyr
OKy5frd4TFyXBufCAx5b3zRY0Srim08fazUuXFo88t63q6ztfsHNK6OTPbpY
R8jlY/58E7TYRpf6IxWWm+jgI7OF+qMCfn/zitLO29QfPfB6ExfdLwcpv+xt
1DOv84FEPuU3g/1T0o6PpP5L7oY911vOGb2c8k4t4DE6LS/qLuiw5pjCHIdN
b5zeU14P+OBs50mJv1kXd8AOoy6q9dL3bZ9UyGO8nrh4ZHPZ12WWwtzTr67f
EKO8brBKs9gNS0HKGw/v6l0dIjeN6jnxDtbfmWIq9e3s3+sbwvnxcskfldjX
3XbDKn4dbjn0/ZJPw7s5U25Ps6b89+GpmS4ZHD/qB/272J9wW5LPX6N+2AVb
jL54d3Q/9cMpeF1op/hLYernIrhs9bmDR6up3k2wzjXzhz3fqZ47i3jM6/Fz
unU+Uj0j4ZABy9DTjyj/HbhSwaBuHfWnfiM8QWxQn19O+SXu8ZjRXuMKw0qo
vidhG42nyXvqqJ9vw47DM+d4f6L8DXDucaHNlumUX6wY949UR+PiXMo/Hx54
uS+6kPrd4iZ8f+W4tad9qL718IprVpmfPSj/yPs8pvCO35Oup5RfA36QMOyX
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
7ewlZWaUXx9m3mp5D3em/Ltgq/sCBnUOlP8U7BJR+mmuLdVTchzmT8OBs31U
v+TF8HNVJXu5y5R/J7z5zsbWPQLUD1GwRp/CyB88yn8Htl2wUEd+KPXDwvF4
P1fd3WG/qb7b4OmrRnJHz6J+OAm7dRjLVND7WdyG7cs2hvELKH8DXH5eSGpz
F9XXfgKf8bL60HzqA9U3HNZvi/qwnfrH7Sa820rlUCz1f3I9/EPm5rjtHVTP
0Il8ZlmV4bB71VTPXNhTdthNkUHqh1p4rlB5uMcfyjtcms+ETVbpvkX9JjMX
PmedNHv7E6pnFuxqc90wn0v1fAf/rpuUKEKfJyE0ic9UOZaaqbZQ3jlwHG9W
+No3lHc9nKF84lr2SKpnDdxgdiemjeYPNYHJmL9lRudpUH/ZKcNmP77fTQmh
/NZw9MKGlh/xlD8AXjP6Yv/oW9QPf/51gNIUXO8NGX+O+FB+K9gn0qXiJkP5
/eERvnp33E0pfzrc3vZEuE6M+kF+Kp9R11637SrdH7gWcGRqjmD2R5p//eAG
0zHcYrr/qF2EbwaMOPGkgu6/L+CxPp9GOL6l+9mKaeino+LD/d2on33ggfFD
+3b40f0sBc57vtQwntYrAc9g9airvh+30f33JywkLF8keJvuZ14y+Pzul0bq
dD90S4IfR8qI1pnR/ewxPOdJ8+MmS8rfBTt/sK23PU75p8ryma7GHeVTT9L9
9yGs7NS4NK2a8rbD+lZVcoc+Ud5J0/mM8YC6SucbymsE78u6+tCjntYDpXDt
9KZIwRy6f7XCHSeEftrT/V9/wgzM9w7lr1LnUl4DuKIiaX6yA+V1hldzQnfs
pfWRGh9Oceg2qqf1id1YOT6zqK3n3Cj6/XiEHqyw+uRiuRraXzjCIT+Ov3/B
UP7ofx0wZiaf0bw5x+sw/T43SwdWmXfq62pHyr8DrmkNdP1Ir0tEwjnb5p7Z
SetF/UJY1+HA+Ov077na8rifTNLf3UG/9+Nsgy1cJq/Y/5PW6ydgmQkGX49M
pfz58v/m/wwnla8Mv1pK6/UtClgvBWq981xB9T0GWy3gPQ6m7x9wA776u6FL
sYPW63Xw4dHnHATp99VuRxWxfhNNfShC1zs5B26+PsV6Of2enfsBXvP2RFD+
Oco7XAnzaem60iZTqrc6PPG3t/rj4dQP12HJ2BKvyfR92t/Cplu6O/zp94oy
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
iuC6ei/HY3+ff32HBe+c1ZzlQnnH+POZPgM1i3p6fszVgQ2tp+89QuefnJ1w
nWjIEpvxtL/7CjfoGL2Lo/1j8agD2B9vOfZqxSjKqw0frh17NJHyyGyDpftK
sy9zKO8JeIJC4ryQJ7SfFz2I8VUVejD6JZ0/zIdlNGf2ttP5o/4WeIWS6/20
bDqPOAa7L3PW0ymn/fMNmJflEm97l/bzGgG4f7/M7/Cg/b3dJvhBzrwtH+m8
IeIo3NFis/oLPV8vzoHTVQQEFOjz2j/Ap9zepnU30XlJcCDG25lNwYJ0fld/
Heb8ass/2U9538Ea2b98ekZSvQUP4d/LpwVG0vkS5yp8PsbGc6kcXe9qeKrK
j5czNel6DwniM7JuL85L76P6zoatat+1C9F+XCYT7vlyfk68J9WvCp47Y6TQ
ZXfaPw/Cb+rju/OoH7MUD2N9dUPzVMVe6ldLOMWfvz5kC13vftgpPubk5Ai6
3jODMT9uS44/Yk15LWCpdkG+1ALKuw8uy1zsZDyHrncvXDCkQNaM+ql9+hGM
t9CbGW+pX2VWwMLyFcO86TzXwhuuby19P53OJwPOwwbn1kV+p/NNCZkQ3F9u
fdLMG0f1WxbyT33cPGFzAa+P3+n8MjkRbp0fdGAMnadwH8EWe9yrFtHf2xkf
xXrW/NqsXDWqpzts47tPSJTqWXwWjrXiJ68+TvnL4DveKx0D1lP+drjrwfn7
LVSPLJdQrJdcyp//oPFZHwcbLYgR76fzUIlSuOVc5P5S+n76LbDho7gJ6XS+
7zY+DJ+Xlcvcp/NMtWLY+cz0BcL0PN6OB/+6Eym1lV6PkDqG/d6srHuJdN5S
rAu/tJS3rz9M9bwL53i5T3XcRfX8Bi8ObIruov7JGh2O+8Vay/s9dL3qF8FH
8xPDZOn8VGIHfHnIbOvw2VTPLzBfYUDjBNWPK34c67GZ4sOWC1M/aMMlV5QE
Cv6en26FWz6+2zyJzq/sjsMr4nMENem8ql3kBOqX9Uuqu4TOH7Vg3zM9DdF0
Pm9hB6fn+q/QFaX8YfBFgVW7Z9Lvb7LyYPWWgGU7aPzozzvJZ9SmnEpVpfHj
thG+e2FJxgW6Hskh8OXBSjVLG8qfDY9uM7EftZryf4B9I5o9vm6l+tpEYH0Z
XD5WgZ4PFx+O+Ofv26/BEULy+9/QeJN5C4u7zHlfRL9fsBgayWeuHeTfStlI
9Q2EdXWe6Oyj8y+JK/CNW5/Dp9LzF/038EON6WYP6fmLGycK/eGyOVHWl/LP
gh+Wfh8UofuHWgb8sktn2C0/6o9X8CXZGQ6KaZT/N5wetSHvcxHlV4jmM0P6
vWSbnlE9udH/vJ71C05Oclps/ovyyp3C/UnXJ1yTnr9LrIQ7DhluO0DnZ/q+
/5rbA6elXxzRn0/1nB7DZ44UeifbHqK8y2Hr2dp/xp6lvHvh6e4ZoxLOUN5k
eEKCESeazvNkpsVifngaqypMz58sTOGRTxcv7jlF+T1gw5liec2nKf85eMjv
yPbCQMpfDjPSO7dU0O833Jaexn7IhXt4226qpxv8IfDAdyEyNx4uT5nkVEP1
5ZT9a7U2WNiMpxlA55HFu+PQDz9sisz8qR9OwxFWZ9a003whUwIHjvSP3kH1
sWiGY5vqJE5VUf5xZ/hMTeTwihV/f98TAwtYyN8ueEn1vQcrDU2yHEG/l3Fr
gpvdShcdp98/JEvGYz09LfXL8L/1XwyPdg7SeUa/p4hohPsDH4Xa0u8tiiXO
Yn/0Z/bNl72UdyEcI7ltlHkf5d0O71wl6PSYzrOyGmCtJO/b9WNoPSaWgPmG
OX9SSpnWYwtgpu5nefVYWo/Zw+o/RxX833lgOBx/56l41N/fx4icw+dNDg8Z
N4TWY5qwWss3popstxme0a3C/Dah9VgoPKKqLSH673lgLizuvzahehmtx+Ym
Yn+l/PvB7CWdev8DaaZTEQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Q/B/rl/JV/DEAEFhRANrvqW2mvFr7tUrTc5acR+8wejHrTkvWWsawb6p3/0S
B2LeAR3UTMunwJeqTph3HnhMJ1ex0QP28xIX8ObFIUHfallzv4Avxxd2Ekaz
FvTtqGaOP+n4r/dO1mIG/DjfxyR2GmvZdnCYrLnu8BjMGwl+9L3Db9V1NVvP
Xp3UzIx3FZ3X3mUtnQP+KFj+q3YHa8VW8IkS3/Sy86w1YeCK/mZebgOxn2+D
zxZm9CsuZI/LTTurmUazX2dv3mSt3Aze/aI8bMhizC8FL9Duc/yTAeb9BN5/
5pF3iC5rzkYd6Bdb2w7Mc/bv+cHgXidqVwblYt5r4B0HQ1o6nsV8erpqZo+d
5LP7JtbC4+Dx+rn9K7+p2PpdBrtXGM4q9mItrwJntmYEfAhgreysp2YOt228
bfeWNXcyeOuhTc0/oljLssDjZltUjt/LuuQNuFPjsnFr3VhzOnZRM1+iv5hk
zWXN54NdA96mXiutY/OuAqv2LN/SYsQe57XXVzPWM+t/1DxjjwvHg7OERQPq
BmNee7CD42gPlymY1w9c5ZZ1Zcxb9vMCTlc1M6t69CX9BtbiseDR3SJ6P/7A
WrYcfOGf/6FnHqxLfMB6kRHCbQmsOefAIYcP3RFPYi017AbjIaJq4E9L1grb
biSfZv//j2+yd0gpYM1LA0+QbnaZosvmE5aAFXt1E8QSrOdiLqkv1xNsdW1e
UshN1oJksK932KYvV1iLn4KfeGTYmBdjvX+B65rSe6T0xust665mMrw6Tjnu
hv35CGxq/Cduox1e/+/gX33qwo32YX8O6aFmcr9usOy3jbXkJHhlpWR4nyHY
nw/ALh1MbB1zMW8TOPj5irMFsZh3UE8143FO5un9G/POB19P6pfFycfrnw8O
N5DNqZrLfh+nESySqK2nOGC/9u+lZpoi+5reE2J+c/DYGyePvlyH+XeCzfzn
TdrfwppXD36zY0MXTzn2b5/e5PskAvCBsW7Pa3iYfxu4oGC5ccAoHF8RYKuj
t6tmzWQt7tmH5JfN7kPOt2QLOPmvblm3mdi/YWBH5e/istXYv7fAPhn9DedO
Y62Y2Zf0t2YT+E7qiXX32mE/h/Yl3yfMAV/iWa6MTsB+/ghu53LwxTdrrO+G
fmpm9pWkxps7sL5B4HMHKid6rsd+uNqPfL9MCV6ou3lypJC16Fh/8vfS7P7k
9xVvqTWdBpB+5BkPIP0ql4NtA02C2jywH16DR93a7Z9vg3k7DCS/L5gI3tA+
PDHIFfM6gHmmp8euHoX1LAcfmqD2PbsO66k1iHy/aBx4z5FO5x9WY367QaS/
FJJBpH7Cf4NIf0rGDCbXV74M/MRyVGCTDfaDN9jl5cUQ/dmsuWfB3n9U3SIT
WctGDVEzwvJOe5crWZcIwZsuJnSPVmM/7wf/DGfmvliP97NUsJ1DxdPbnViL
iunnNTZD1YzBkZN97yXi/WAfeL+H+c1Zx3B9cxqsneOtWJWP97Mn4LT5HfPd
s1nLfw4l9xPBXp6amZ/149fbELw/JPLI/VNWCF68QsRrKcT72TfwwA/Gjcmb
8P4xZBjJrygAGx3vc9//LebVgL9ulu4TF+P4GzicHBdagJ/2TXyY+ATrmQfu
pgyd/aw33r8awPrBrhceSTBvPwM14znCYIzJd8xrBq6ou3GNF4d5dxjQ9YGa
fl7Ue4SaOfgw2Hb5RFzPzAX/Z72mcAYf9azZ0a0c1w/h4Nlv2+u7PMd69hip
Zt5tC+Iev4v1nAUetlF7gX4Qa6XTSFJ/7gmwgHOycngN5r85klyvkhmj1Mwq
+/bPi/rhemzTKLIe4oeAy6LiRg7ogOux6+CG0Icnuo/A/B9GkfUWb70hud7C
QENyPpIrhmR9JX8HTvlWPUk8BNdfAaPVjNSm3N43Aut5aTRZT5RUgu+bZ7yd
yMXr32kM6Uf+JPB/1tOKTPBar4Qk/3G4vq2gx3naY0l/CSeMJf0oWQne7NN7
icU2rGfZWFI/QTsj0o9iI7Df6IRXvyZh/hVGpN9KfMH++29tbSvA+0WbERmv
0tHjyHpIsXQcHX8HxpH1HO8M2Knd7eSTErxfjByvZkbMeDJhxzTs5yXgzqEW
Z3JccX7wGk9+T5AynqynxEVg+dNRBdJOOD/YTKD3Ow9w7nCVzjY1zm9JYPOO
9Ydf9MD8jyeQ+5XixwRyfxfumahm4n+dGLO4Bee3U+A3CXVFjyZh/ofg2NJm
h9hanJ+/gpPOqubppOL8PJhP5ndZPHXJfXDnO0+c9ZpwftaAA5dcXObij/kH
TCLrB9G8SWT9q7kHXpn+2zE/Aev7hR4X9jVWM8NrLiRsPo33a8aYfL98O/j6
rhMNF82wnr0mqxnLKScXmaTifDwHLD+Z2H7uEeyHrWDOzWW3rLKx3uFgrzJb
gTIQ69l9ipoZtPm1eYsX1tMU/NmlQ+7Cf5h38xS6PpdOIet74Q1whx3pZdpr
sB+mTyXHuRvBSzqHTktbj/0QTC2+NpVcH9n7qaQefJEJWX+LjoPPL1qx01CJ
97vL4KWrMwvTf+L9rsqErL81naepmanvM7UXybEfjoJ/O+uMMtbHemaBP4rf
5MxswH54Aw70ndpHoY35O04n6yEBH3x1cfOQPxOwvhen036ooOa3n6FmuOG5
y/dnYP7xYK05f7mnCzG/PdgwqF7h9gTXE69mkPxCzkySVzJ2Jrm/y5fPJOtf
pc9Mcj7iVvp5maEpzMcTky4PysZ+tjUlv885YErGNz8N/HJgP/f1utgfI2aR
9aNm8SyyHuV5gvvAQ1jYMuyP5Fl0/fx0FrlfchfNVjMvYsTDdL5jfd3BcXtU
pT+qsT9k9Ljs0Wwyf5V8n036X7R7Dnmek56cQ8aT4gE4caS5Rh6C+Zvm0PyD
5pLnA3ncXHJcmT+X9C+3cS5ZL4nNBeR5gnNPQPqHXy8g/Svqw8DnN/itvVKG
/SAA190dKVwagXm3MbSedeAh1/+81OJiPXuakesjn21G5kvlFjMy33LDzMj6
T8Y1J+OrZCZ4ckiom8VAzL8ZfILTyXXMOMwfak7yinLMSf9pps0j5m2YR9an
wiBwV8Gpe3v6Yf6r88j4FThawP1A7qZ/5DX27zELUl9ZtgWpR8lbCzJ/SI/M
J+NXIQcn7dt48JoBXu/X4LeNOuufFWC+DpYkr3CiJamPMgNcHDd/cPMHvD+U
g+MN+9cnemNerQXk+UA8bgF5vpfZgfeNW1D0shvW698Csr6XjrFSMzkjFB0c
XuPz8jIr8jys8bYin5e0gOPsZReb2tjPy0dZq5mSwQ27hL9ZK4XW5HmHux+8
fvKADVUafN5PtSbP3yUGC9XM6ksLdPYW4vP8YnDOcsuH51ez5u8DL+tapbQL
wf2H02C3N63Tcp3xef8JePTcgeWDNuHz/MJFsH6zHrR4dVktW8+94FU97EP6
PWEtSQT/HNJ1xuNw1vJC8I2yhkHt3Vgrv4FTLs5oyHnGWpZgo2YSXlu2t+6N
eQvAra4riz/MwLzQF4zyx0rdg9/Yz/MHLlYzu/QO/+mmZq2IpdbkgQtbxp46
Xsqa1wBeO1Wz9uk7zNtviZq5Miqq3YJCzGsG7j/gnV1kO/b3uHfBN89sWZWl
YY8L1ODGAZGBOna4f9JbCPNNrpVv9izcP5kLHhovz2wbjfmdhWR/RFQLTvW5
ZLRViPXsYatmnssiC852w36YZUv2VzRO4Ppff28uN8N6n7Al10febSn0g83e
Kae9sB9mgNdvTBrBd8P8m8Dtm8aMXrQe+yFkKckjvr6U1nfaMnJ9+evBNsFd
Ar44Yf5AsN79gT1vDcb8V8D8nvp5QTzcj1q3HJ4vg+yWefZgLQlYTuovvwTO
WJrSp7wL5q0EL7odbj23lj3O7bSCfF52GOwrWjCnroh1SSY4/aBRxZgQ1pzX
4Lz9DhbDMrAftO3UjNi0y+31O1iLJtiRz2vS7Ug/8srsyPUXtrNXM7WF1j+a
MrEfjOzJcfkKcHVa1sjZCdgPpfbk98Vt4GENJUyHXMw/eiU535KlK8n15Xiv
JNdX+nclGY+KkQ5kP06zxIH0G8/LgVwPYYoD6Sfl8FXk+7k24PMT9SwNfmN+
D/D0z20ZLZWYPwl8avzWSOF5zP8YLC1PsfUowPpar1Yzl9q3Tgq/gvXdQy09
tZrUW/EQ7PnOvdr3DNb/K3gx93KlhTfWd9caNaP74/RL/USsbzxYcFMTsyMW
54f7a8j442rWkPlGMGCtmukZq99m9Br7Iwa8/Xh2Uloe9kfeWnJ+/C9ryfwh
6ruO/L2UWUfnM9U60n+SXo7w/Grb8H7jdcw7Bzw7xr7w2mHMuxVc+/vZNfNJ
WM/P4MJxl0SVK7Ce3UVqJrTzuF6FlpjXFHxqbaP9aSPM6wTeHTJuydZ2mFcK
fuz7/OsH1We2nl3Xw/NqGyfOM4+1Zjr48pGUI+rHrHkbwZ/HOHhFXmItDAYP
eKrvMjeWteQaeFKB6WuT66y5JhvgeghME6PbWAtE4J+LI/8O6o35j4OfcVIW
LuqB+S+DK1K67tlmg/mrwF32WY91usL+vWjtRlgv5X341tiLtfQouIMhJ2Jx
N8yfBXa6xRV9noz534Azpq7SvBiJ+TtugvVm9f0QfmkNW8+LYNH2gsLiYNbc
CvC/l1daTZxZC9pvhvX178VP1QdYi8eD7R+sTspaypqTTo/zX4FP3FxltPsd
axHHCdbPRhPdDyWxlo4Fj/g+VH1FxVqxHNzZOnZjewOs5wvwc/+FspTRWM9W
8JnLAdHb2tjPyw23kONKW3Cs4/1lJwZgvQ+Ax+5tMh/ag7XsD3XJiK2w3vpi
Y5+hw5qzBJy/rtvQwQWY3xPc9W+TT+5jzJ8Mzn07uyD7FGvNMGc4/+jSKsdn
rHmLwLkZV9tvGIz53Z3J9ZDInMn5yh85k/MVWG2D9Vz30mRFX9bi3eB/qRNM
qz+zn5ed3EbylTwAH3SK/hz7F+v/FWxs9XFCaBHWV7wd1ndaXpam7bAf4sDK
8q6fvLtgP+SDXaRaC+01mL9xO/k9Yf8daqZJuP2XnjbWNxqsLo49dboS++Pe
DnL+gnpw0uRrc9qVYX/02QnzwaPLR5t/YH7BTlIP/h3wkN2LwxblYX3rwAV+
ZxueVWD+ni7kfBSzXcj10GwBr+2XNq2wGevJdSWfV850Jf3N3exK6isIBZ89
1O5lP2/sB32xmnn6/OuhOl/sh+liMv75G8Bmc2K+5Gfi+AsCV5RGmtwqwvF3
FbzJWfNUeQrH19RdZPwLHcF73y967xKF/XAMPDI/ZvQmZ9by7F1kvCrfgvMn
BKx5PA/7YY0b6W/ZETdy/iVyNzI+OG/AVmbd4498wX7usJucv8IfHKirxb1u
gv2QsZvUg1cO7vhr37OWYMyvtYecj2TcHlIP7oU9pB6Cl+Cw1YvSiisx/z/w
msi2D+IPmH/MXjKfliwDb57hrBc6GO8Xz8Ezt6VprfiG9W0B+31sDGOqMf8o
d/L9GiF4wR3n+RPKMP9+cOj07FcDCrG+v93J7ysNPNTMTv3VP9sqMP9iDzo/
7wPvN472ODIL5+fTHmQ+5gzbR+4n/IXg5Xe7NHNGYf694I4Pmrpe6IL3u8R9
5PsUhfvI7wkXeML65oKy0+4JeP9zA1+2G5wfa433vwTw6g/Fjwuscb1RAHbu
1MVmcQauN5rAI+v/WPQpxvWxqxesZ4pb7vr+xPVQrBd538nJB8/LGXDS+zyu
PxvAy6rshnTQx+epfvvJ+05NFHhwP53VaT3w+e7ufvL8JVSDLY6FvzYag/sn
cw+omVen7jzK4eHzXC74iJ9ej8xvuB6uPUDz9vAmz3sls7zJ+xjOFm/yvkda
DRavtPu4eRnuT3XzUTORaZbhJnaYd4YPycPb5EPeBwtDfOj7xS6+xNxpYPsu
nau3JGL+9b7keVUcCG66f6q153N8Hr3iS/aX+FMkaqZ0YeL07ECs5zoJ2R+S
BtDjiksSsl+qqaTH5Yf9YH78+eZ7xRnMm+lHnoe5r8EzwzrzOjlgXu2Dauba
s8TdSy2wfhngbnkWfZ9OwHxlYDOnP7oevTFfO381k53ckN54CdfHRv7k/TXv
PLh7H6dzL/Jw/VsKrn+w57fWXXz+aAOHrGhtGSLH56XRh9SMQ2jmDMUV7Nel
h8j7atlf8L41xVLDE9ifIw+rma8L5i/dUYv9KTxM+ofvRa1oBre/e3rzn3e4
Xh9+hPQvz+YIeV8q9DhC+keSdIS8P+XyjpLjAmvwlsvqG5b98HrvAYf5X8zz
M8Prfeooed9a8pBaZBlA6ivdFUDqqYgPIOevuQ+OeFW0IqAM660JIOcndzkG
9w+dzDZeC9Yz5hipBzfvGLnegi/gv/Vyr+MGmL/vcTIf8BXgT98Odg3Xxryq
4+T7pb0C1Uzf6Glas9WYdw74VdH8YL3TeP1vB5J+kHwOJPORvHsQOX+laRDp
P65TEMkn+xREx3/XYPI+lzMjmLwP5m8MJvvPouBg8u9BNHohZH+WZxJCxo9Q
FELmD8nxEPK+WH45hNZzciit59pQUh/Z0VAyn5VkhZL9J05lKNkPkq6Sknoq
DknJ/Ky5COZtH/Ml/Qz2Q4WU/PsRYfsTaqbdKZ0oiyfYD37gk+cVguZwvB+k
nyDzu+AVOEuy4u3MRJx/OWHEsrFgn7eyOul17I9z9LjoRRjZn5C2hpHnXYVh
OPxeXZJjsRH2Qwm4fNiWoT2mYT/8ARu6no5zqcbntxERaiZAO9upky7mXRJB
9jcEnuAV69vc1hpgPX9FkPsfZ3gkOV/+okiyHyNyp5bKIkl+3tAoNVMzP1kW
G4v1tIoiz/+S3eBZveV7HF0x/0n6eeWDKDJ+xfOjyXwnE0eT+bQkDvzA09/K
OBfz36fmN4J13P5KrgRgPXfGkH8PpImOIcd592JIfYT14Br3sRvVAzB/n1iy
H8KNjCXHBXdiST3FdbFkP03WM07NeGU2Dp8wCvPPjqP7UTVxZH9DwY1XM1EO
7ueVX3D/YWY82R/kbQZPNI84XJWE65mP8WT/UqmfQPYvuNMTyP6OYEMC2a8S
ByWQ/QaO3km6/zCVWuR4kuyHSI+dJPsJimyw9p5nB1I8cD/C+JSaiUmPmvX5
YO3c/wHn8XVB
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
58BDImwq+A5k/l1wpr7Z4KYDmP8q7KQ5b8zm/qpeOUbBPSXorKo76zsLrukU
MW9OL+bfCW94Mmibfw/mvwK/+VgY27Mz87+D5Rc6VFzA/fXTc/G+59Xo1YCu
rK8anvXloZ036ym9CF8+JovvTSsK4PfB5++V5/Wqa+Th+CUz7+T3ZH23wr2s
9m1z7MT6noOdK9UxbqVVL+EKE36k3XNn/qr5WN/3XOz/vj3zd4J/LPCo7tSG
9U2E19rmtClox/rmw1ETmu8skjK/zQuMx6Ve3Qdye1EHOC7f5Nmd2+ty4NJp
zpWmcHtzRQPWZxuDP2zk9hIpXGF9xZzNrsw7Du72PvdhnbbMuw7OLX4Xu57t
4govjcLDufeHT6JlbeCLJ7+9XtyaeUfDPSL3fvZyYd5gOHlpYsZetuuPw4r5
Xa/nO7GeLq9wvA65Ed4tWE8feEfVoVsqsV23Cj7qFZN7vynzH4Ub2Vkd8WjG
/Fnwk9yqXaRs1w5/jfetQsm4eLYblsN1QxPdJ/B44jg4bs/fba4S5tfDe1Ln
ja5MK3/DtcqZS0fSoqUFeF4zDkWtbMD+cAhW9a6d8Kgx89+Fm/Ra2GaYI/P/
gCemLokOpHVN3vzf/qo7cIfJ3w63rs+8xXDqsrMN+tGGRm+Nwubfl7bY12Pe
gXCEx9idbdmuuQ1/77vi4Sla/wUOdatg3bkh8zZ8h/G6575yokbM2x/u9ybg
71u2K5Tw6C2zRg9ju/kTvKacj+wA80nqvTcKkZ2aTO7M48v7wF1+5jfux+1V
c+Gy60/9T3B77W749GjPNpkOrKfDB/SXvJMbttNK2X9uPW78d1ozG37rPMmn
sT3zh8NXL+ydr+b1iq7C50uMRZW5vbqnEfli584bUJv1nAlvzyx8kVOT+XfA
yuWuDX7QksvwxqAGvu52zP8WvhFivcivFuvra8L7zvVXb8aLWd/t8JS7HW7L
mUd2AT4TWH3mA26vfA3bnB0qDeH5pVsKjYL9lLjVC3l8RTIsK9eofRVb5jXA
8kORbddUY94qH41CX78d569b8naE294LPHOf26vOwvHtNgn+NVjPPLhRA43N
V9pQ6ZNRqF5t7a5VtNgNnjfyVWFcVeadAKfpg0a4VmE9s+Hlj3uOU7FdVPEz
6rHn9IgPlZm/HXyvcat9Cm6vGAsPalT9nTetXguf1Vl9uM79JeXNRuFK6ZLs
Y5VYT1f42dZ1lxbxeKpR5v/bX6uCVwwZ217M7Q3x/21fWVZxmTXr2eoL3hdG
2QZPYbtmBLzshG2FFbR+JVygcajrQIuOwu47Qsoe2zD/Q3jxRcngXmzXyYsw
f6fsSl5ZkfVdBm9ZsPfTaJ5Pcvj/2+X34W4NxbIDbFf9gqv1KhzXm8cXB33F
fBVQ9efBcqzvQTgmreHAIBHzZ8Ihx5N2tubxNN/h9dsqd+xfnvklxUZh5Lsr
DdK5vWI/3OLxSI+3PJ46HU7tWJKzgNZ9hd1DViyTcn+z4zejkDGi2uJBPL7E
Ey5Y06PiXLYbzPD1X3WNq3l8cYPveN6Xriiz/fvpX95+8K5ZIUeUf/5ZGQB3
ORzgl1f6z6JPsPtGp5ZStkvr/jAKE5KXaAeV/bPCA95adaP19pJ/VvvD5ref
6trTugi44fnWixW//1le+yeep++fhS6//lnVGxYNqP2uPdu1fvCogQHX53B/
QxjskJX9uvT7P4tT4D07/SRbfvyzpscv9O8+O+xKub9+Bix5OWb+DLaLdsDW
U3sNmMT9pZfgld13hd3h+RVv4PgzAwxNfv6zedpvPN+dFA8+c3/JNjjo8vPP
MbT8PGzVrfqV/Zb8r2BN0uqrJ9murVaC9b3nb+sLPJ9sM+w87uL1FtxemQSn
1F6yfxateQEnD/92uQqtr1xqFBKDR858Y8nfET629qzyIa9PfQYuWyl55877
o8uFvQpKztRl/zBb/zEKS4vLGSry/kvaw5dXL5W/4f2Sj//PNWusqGCp73NY
az90ghX7g9iqDHni3M4lWvK3hRPXaz+7c3vlGLif9JrNUrZr1sD153YQHjKv
tNxfozBm94NJUd9Y39bwjcm9s+sXMf9IuHzpw69P2K5bDY8acerZya+s/zE4
2qX68nbFrK+zyCRsWmvf9Db313rDffcWBtzh/oYVcP5tR9+Xn5n/CFw/YfYG
4QvzP4DtW9+LGs68+mHlTELKDRcfD55PtAz+Ee3k6mdm/lh4x7vcVVd5PMU9
OOFq5fkLLPl/witqJDsPZz7JkvIm4Uxphnktt5cfgJfv3nxkM7dXZcDTcuZd
f2hi/m9wQVHHtyt5PkPjCiZhXH/byHLMo4yBy1q4xnpwf00aPDQ+tXxNS/4i
+E49j0F12V+kA6xMwtEV7datsTxvN+FBTdSHvjGf+TOsLVkeY818kvoVTcKE
IUXLtrJ+8r7w0ebtryjY/1Xz4IT9LVtuYD7xRziod88tnjy+rI61SUjLLvKU
sP8pBbhK87CVVzm+aObAP3PHn17O+UC/C9a2GNffnvORwr6SSYis47ezJ+cD
dS94gV9k8BTLfD0LLm7xXN2X86F5Jxyq+jrfmdcvuQI7LvbP28jxXNvdBvun
L3nlz/HZMB0uXyPq3Upej1gN35hUlnefz4+yAHbdpLjeic+DaFplkzAmb2vq
Rj4v0q3w8H5Dq2+3Yt5z8InZlRQJlvG3ahWT0GL+op4ZXA/IN8HO7/Pvj7Ks
dxJhx4IdQ6UdmC8ffuaRPbi5Zb1uU9UkFCl6XNjD7cUd4PrCXI/yXF9rTsMJ
v59MH8b1vj4Hjh6RX/1dR85v1tVMwgZzx9cr+f4ilcLxT5pdKRvOvOPglsbW
G7bzfUlSobpJuLliSa+RfD+Tt4Hd+pqH57BdNRp+9MFGNY7vP9pg2M/t85sR
PJ5MVMMkHBgVN2KR5f3NBW7rU5LgPIR5feCUyv5zg32ZdxU8SXLMbjLfD0XH
4OY90vdX5/c8dUtbk6CxcdLZ83uEbjis61ThljvfZ83LYauAgtEH+b4piYN7
Vp8Zt5/XK9fDlxX7f7doyXoOFZsE/c+uEdZcv4uXwjvPNd36oy7zH4J91qic
trLeyrvw5RkVP7Tm+lbz47/tp5xp/oD3U6GpacJ6/6PpgmU+uwM3/Pwi+Y1l
/VAMbzm1aa4v282N7EzCk6t3pEPYP1T74ITZlSZVsazPbsMDfRfO+8U8hi9w
eYcdfy3rd3HDWiYh9XCM+KllfdYfzu55V1TA9az+BuzsvH6FL58v0We4hfWJ
BZ/4/Enr2eP5sN7cuiH7t6IPvGrUwbCNlvxz4T71HGZufM/npxC2eVH1l8rI
59+htkl48KvF7MmW518Gr/4UYFjG42tnw8nN2oxvShvCYTsfp+HDub2yloNJ
uLc7c8x5Pj+anvD69jeq+FjWlzNhabfXz5fx/Ue0E/b90KzIwHpIL8P1bW/f
v8n7o+tWB/m6J9lM4/uQ2Rcu32zE3yK+H0q2wx4Bd6s+5vHkF+BLI4PdO1vW
l6/htGe3/jzj8cVT62L8b3uyoIjrb9kWOLxN8CKnOuwPyfDgFotPL+H7oMYA
14+bpT3F9wvFxnom4X2CfVlD3k/1Wbj//s0HavF9RpcHW60dHLSc/clcqb5J
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
3VlY3FmXbfm+L3eLwf1Z4zlt//pPvf8HMO2c0A==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0.6689444148699543}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0.6975944663556487, 
        1.2705954960695367`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0.6689444148699543}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0.6975944663556487, 
        1.2705954960695367`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"TBF\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9538113536001067`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.015682282934794144`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "60.82095046786166`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 3.705314944965003*^9, 
   3.7069034649383307`*^9, 
   3.7069037415144215`*^9},ExpressionUUID->"e29700bb-1d11-4e86-9129-\
1fe16038009e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IWM\>\"", ",", "\"\<RWM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6877208799567623`*^9, 
  3.6877208858208823`*^9}},ExpressionUUID->"4277d921-c313-41ad-9dbe-\
20988045f588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
59kskHRizfsJ9xoaani4sW6dKC5koq0OVZlyWXuch9uSHOakprJOroWnqkx1
fJtI+b/DGdPvbs/MpbzLBgmZcdOdRpQls66shjP15jirerMWfYXlDDUWGtPP
q4wfjD6t/syIKqa8pnCnxvJs8zzK6w7fG6ZbJn2d+vwMq2802T/iNPWpMETI
NBrfv3g+lPIy//fN6l+PqO9klyH9+uJHwf+4R9Z/pfXLkRsqZPQO2G40zKF5
WATvOJVTeobWX+UOeNmv+ib3nzQPkfCxE37au89Q/hswd9gdg5WUl2cwTMhE
5notPfGQ+twK7/3iWunzjPJz4Z36rjsVnlPed7CzhHKgawddf2cJIZP6OyZq
7U/q8xS8YADvb85juv5XYa/WDf4KdH0qh0sKmfjFyj+iw6i/E//3mZxJ++Sp
v0I4Ztlaqd9NNK+v4OpbnArjaZRv2HAhI7uwoeZUPOWbA+/0uzp78Hbq7wo8
KKlJWW4u9fcSfnBdTfPLJMo7RAp9iyq48n9ovenAXWrbjYIqqd/1sJrv7qNx
o6kv8RFCxkVffdFK+nnrGfD1GO64aro+gXawQ7fVJ2EK9RkEZ+hcvvvtAF1v
sZGYl5bEAfqnqD9NeH+ZwvVv8yjvaviRrZWi5jvavw7+//1DPsrJTKS8GXCW
srL+7Dq63lNHCZmPltNMnylRnzawp6zL2jo/mld/ODnd/9ovDuW/CHdHPOo6
TevBmg+X5ygO3EnXo9VSWsik7M47qUzzLu0Hn/gjpnjsGuVPgw1n9723L6P8
D2F1/pmmwj+UvxvOtx+wQl7hN9tfsoyQcTPXFzs3iTX3Hmw4QH+mwWTWlT/g
vtEHXHwmsBYpy2K9bHYKiVzCOjARniCXJnPelDXvDryxO0rumh3r1m/wa9G4
Sb02rKWVRgsZSwvHg0PNWBsvhQ/cc9dUnMOafxs+ZB7p6r2JtdhX2KP53epK
hrXOODmsL+F8m11qlN8E1hnVOfSGFuV3g33l818crKM+O+CMz0m5rZ+oT/kx
QuZGW7u2yUGaB2N49vzvXb/daR52wWOu61+tukl9n4V7z0cp2MZSn6PlhYzy
qPj4NyLq0xBOWXxZfUoLze92+X55xCLhrKCha7RGUv4yuPf3+FSpFdSvvoKQ
OTWlUUpkQP1ugdszHhnOkWetEg5LNpQ0rC2k/CWw1ypfjawLlL8N3lhcMrGg
gObBaSzmO2Z4wi9x6jcMnh3Vp3L7LuUvhms5emdd8il/K6x2ZZGU/D1a/6Hj
hMzfC8cVT3TR/l8AT+bd1u58R/PbAgszVyiupXkSDR2P9alvPadqLOWdDecv
sV8z35DmgQdviI4of6pM8/ACHuUidyJ5Os3DYEUh83Z2/D4e9WE8E96RHidf
vYy1xzp4haeEP+c3ra9G+Lyywogp86nPgUpCpslqDaM2k+ZBC57ETXg4xprm
YS08xqK1bdhm6jsQfv8x7UqhB2vrf/Dqs4ni3NU0z9MmCJmANW+tendSfltY
fn5CrqYl5T8A/zO1mMiTpPyX4YeTW8K6VrFOVlcWMjNDN4vUt9E8Wyv360fM
Hy7/dHcs00v7bzpc+2CU9YP/1uMj2DTPWaZiN82DxUQhI74o4amnFfW7D/ao
fy5nTvNinQoP0rBPPrOQ8j+A/V9P3ZEYTPm74PW+Ozf9CqV+96gImTu6X16P
TqJ+k+CIizMKnyVQ/rtwWrJroeQ5yt8J+0t6Zr3KovzKk4SMrssMs/B46rMG
bhdsLF5Fn18kgl1lhXnLIymv4mQh89jvkyj+BOVdAm+f2aq9lUN93oK1vNJa
1Nypzy/wydub17tvp7xjVXE9S99L2/lR3sXwQ6lYu7HGlNcVXrQuuuHsXJoH
4f+tbRFhO5z6HDNFyEhNGzHXga4X1wjOKVEOtllP+XfC8++n/ZWmeRCdgZer
n3vG/NenrJqQqY+VWeU3kfpcCNt2xjZ+MaH82+A1KgkqdTQf0hGwgZTr9Maz
lL8Ubq6+E5bqS33qqQuZtSbfyu1iqc8tsOT7eanTzlP+03CTQoBvtivlvwaf
cG4bqGhP+d/CZz6/GVK/lvrdPBX3Yx+9By60vq1P/t9DJQ8a0v0/sAj+NVei
wUSK8r+G3QpvumsMoT6PawiZiWOEobM7aT/Ih2UFCSd6lChvM2xoYlf2OJvW
39BpWI/paj+K6H6jMwv+6zdsbRL1XZkHDxihUjpvDfXZBHfcHjhkjxflHaQp
ZBynGS/U/W/9acPCD5V5IRepb3tYN/cOxyKb+nwOT/txcuezPOpzwPR+/XpM
hzepbQpOOU7zsAaO5n3Ncnai/IfgI84JVmvo83D6YMX3OdFedP7hamgJmaRp
o17K0n5TuQpeHVLzZN0eyh8A55oN6/tB10/lkla/68NTm4G8b5PXv6TP22oF
75hiszx3OeXfDzeFZN1+4UD5L8BXU3YePjuV8tfBRyxfVJaMp3mw0Mb+EVuu
3EHrQWcvfOvLHq2WWZQ/Ba53qah9r0fzcB+eFlLUfIJer/wJc+JWmXbTfmrt
MxPnP3ejci7tJ4HnYa/q9q6fGyh/LbwuWuN5ojrl/w539jIf6+PofjJBB/vn
gOejgp/S8088nNtmN5hP32fxq+GG+CoD9WB6fhPBdZLycbo76bw2fhau//dT
wbXidH8xhS1N6njjB9H9owr+dJK/dhOfnj8/w9dK3Tuq6Psua4XZOD+t2j/w
xjF6PmLg+7sP+SwMo/OmC2wzf6TMhBn0vCk3B/fbM3emX6qlvIvgqHVvpfje
dF7bAb8ccDKpNYqel8/AA8d9PrWfvi/gyswVMpojI+oHxdP53ADeIJ8nqvxE
5/Ot8Mhq0ZchdL5U4cJmEUmtXFlaf9fhE3mhi3Po+a51gS7uhxqyMRb36Hne
Gc7RVBzwZS89b56CS6csKRC4Uf6r8I37snUW9P1S8pv///wyq128NdQnZx7u
F+2dK+xK6PvKE/DaWwbt78roebkQ3lvc7bZMm/K/gl2iFRe5L6L8w+ZjHt0y
ulXp8wUeg3/5O+UYDKfzzxXYP+qKjik9j7S+hM/2pevG0nleesgCIRM+8VJw
uTOdN3Vgh8KZDefpPM/PhUXrDoyuouc9sSbYW/NtRKkp7RfiekLmtFVi1TU1
mocZcJ+YX1/EcVqPdvCbrut/V1ykfp/B2+YsHnokg/oV0xcy0gdmvlCm83ug
JhzfsVq4ax/lXw3/Oy6xNPIDnd8Owqv0XRYzdD7w6IWVU4aU36HzSPJUAyGz
r+3Ts5cytF/YwG8T6uOq/zt/BsAvP9+d+n4drceL8GLrUI96uj9UTlmI+bmv
x1sRRvuFJVyarGbUR/dXFT94X0l3oc1JWo9p8E9XjXvHQ2g9PoTPZ3Es/wTS
fmFuKGTiumxvZNJ519gXDjjXtV2Lzs8eyXBepsGsvHmU/x4s7S1UGNBE/f+A
uRdrDIvo+ZXjvQj7ebRq0pzv1G8iHPy0UWfDZzrP3YHXXlk8IZPuJ6Jv8KBq
3cgmOj+pKBlhvW5wDd/233koDvZTeHkvnc5Trbdha+PdnCu7KP9X+LRcjkkJ
vd/DxBj390XlH/w8qc8qePUDI3NH2i91OuC3kacbL0XR/ibPCJnDqwqnzf3v
/GYMS3Q7Sb35Rnl3wR/yqphd3tTnJzg57tIbZ3qeCBy9WMhc+LhYQZOeV3iG
sIFbuIQGnf9bt8OifXu6ltJ5UjoSPjs7ZpozPY8lS5vg+dWsVXot7X98fVjW
Qi9uymua561wuBd33Qg6f+iEw2Lj3W5dpP45JbDu3YxPN2l9iOab4vmmaqIU
h54fVJzgCyHTDj5voHkOg++4Vgwupf03sBhO4cf65irS9XdcImTmyauX7qD7
t0coPH6X3YNIW7r+BbD98Z+b6lRpflvga6tk/Vpa6XofXSpkwkQxCcYh1B8P
Fl40tLAIp3wv4ND9aja3FlK+wcswP3Z2elX0/aL1TPjo9ux/JzbSfpADh6wK
Cr3qRPtZI5zj1yElT/up8cDlyN+o8HcS/fuDhxbsvttt7Cv6+eS18FblqR5/
6fs+zj94tWignxL9+wd32gq8/++1e/e59H2fLexXM/14DH0/Ljqw4v/P/5G3
pWbS/vUXbolYHeD7mP69Rd0M5+eP7vcvTqG81rCl770TTvTvM9L+8PNT86QM
BlDedLiy+/tgiRi6P6iuxHlINSu86izdHyzhu4673q5Tpf13H6wpv4Oz9b/v
U1PhEaYSGmr0fSb3Abw7Z55BKH3frrLSHPOf5ui3ir5vtN4Dy2WpRKaTA5Ng
b/VRV73o+3veXfi2+RLNyfPo+8pOuHu0mvkFHn1/mmCB881u4xwxBcpbA0us
kde+4U95v8FFi//ZydD10VG0FDJLHXR5UxzpfhALPxZul/cvofvBLbg73j7j
BN2vVb7A1yP1pqoepes/1gr3m5hSwxn0/XPgYjh+0r2uU7fo+t+E2+03SzyL
oD6FsKW0wh0e7e8eY6xxHjIpSU5YTOvLCJbaEX7o5wZaXzth5cfyO+U8af18
hLdduHx5mS/Nr6wNzpvzuvdMmEnzuxCOn9P29Kclze822Lvep15jNc1vBGxa
93zbffr+gzdqFfo2Kc2wp+fnVj3YtG2tbxLdT6S3wGfuK3AuPKL72WlYec62
tvAeyn8NNpq8TvHKaNq/5tvi+aau6uc02l90NsNq0p2mkeNo/zoJn/zg8c2P
9lduEcx5qmoQKqD17rAazwMLih76fKH713F4RsqtlmZ6Hublw75aS8IW0/mt
tRmWMe7N+ryA9teha7DfHq7pvkTPl8lH4IFz1XOrab/k58H3Wg74BIygvC/g
yVf6FtjS/q4zaC3W09aXBemDKa82bG4j2JVAz5+ibDiDk/7py1Da/5/DN24X
2/fR9z3WA+zwfPR2c+4Xep4MnA6PtFW1WEzPd7w1cPDKxdMr6PnTuAFOsJCz
2Z1P+1cfvHGp94S+O5Rfwx7nxTHckKN1lH8V3BM8ozAxg/If6G/uH1jrUg/n
ZSLdf9XWCZkJVtvi/lyi/FbwePUtqkOLKf9+eEjVqsLuvZT/AtyddCXYifbP
1snrcd7OTOzspOcHaQt4pOG6cU8tKP9e+MPbTq0lGpQ/BX408cuVLtqvk+/D
ci/H8fcYUb9mGzAfXl4B4tQXxweWKHKKTqHnae55eOyEEyNE9DxXWQt/fxnZ
/p6eR0XfYU51+InxKtSv50bs5175u8bQ8wwvHlZMbe6VpP2+tRqe4b+1R4y+
D5MWwfZzK749outvPH6TkDn+ZEHud/q+hH8OVjnH9XqoTf3egn0Xj6rMO0L5
P8MCzbjPNwoov4ID+o2f7FxQRPkZ+LzxlDnjnlCfAvh6imDLsBrKK+eI55t9
Hz+PbqC8i+CO8NsBfz5S3h3wgU8ZYdvpdY92OO/54Qvru6lPGY6QKdPybpw0
8A+b1wAeHBmdmjWWtdg2uPG9Vu3sUax1uPCBWysvn3xIfY7c3K9v0QJ46sn2
oYZ0/lJxhmf19FreDqL8p+DRK57fHBRN+a/C5h8Pu+QFUJ/znHA/PK2zf/1l
6pMD+4Wsiyoppfwn4Pcyic/DeZS/ELYdUNEWKkH5X8FR2xdO65OmPjc5CxnP
n4WT/ek8wD0GZ1sV/c4ZRfmvwOPuKk1cTvlEL+FRG2Sfvmqh/EO2CJkKHkfP
poP6zIVvy5xdfuM65W2C3VLzFWvbKK/4ViGTaL5B4/BryjsD9rUdEt65hPrM
hve0rLx0xoH6fAavO5tUszeCNUdsG/Yrg/Xx/lzWXE24ojKv581V1pWr4RXD
F5pvzGVt/QTu3ZB2ZPtN1oG9sPqsAFvt66x5U7fDjNKA0uesW23gHs4JXl0Z
a+kAOOaPb9OlZtbJv+G9wocJy+9Sn1N2CJnIOkeTiAeU3wo+0uc7c1A15feD
U7c7u+g9pPxpcFrsZq2rjaxFk3YKmc/JjFldPWsVczhvheR7zXTK7wsH2V3X
flFC+ZN39vs8vHtwiaHy85A/rI1X7EJfSnfUjbtZe3jv6vd6ciKsPrH8891P
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
T/1DK2keZp8XMq1H0pPGDxQz/h8VZZxh
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
NeF/a/VA0w==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2mlcjG0bBvCJiJChUKRGFEImS0Iyt62EmhY7Nci+hSxZaiREqhGyZxCy
pLIvYVCWhxhC2TK2ZMaSrUjyHjr68j4f3uf5/66Ze477vM7rupfeFuNn+02s
JhKJ3huLRP/+jX8kc+foBf5ncW/8j3wHfHuO9tuMP5//WXkNHnml6fDzHBf3
n6sXAobtTXaqqByXzYazBy7zyeB4yFa46c+ht+uUV46rr8Il2959aPi30tqP
8J15ZVs6lFVaMWOeXoiyaPR7IK1KhAPn7rU5Thfr4ScLY1WJpZWWNArVC1r7
p/dkJZVO3wAf+xzWSMtx3QW4cFaHT+U/Ky0ugg17CnM2/2LehvP1QvOCyPIP
HA9xg3/WMDu8mhadhzdMmH8l9kelpW/hvMRqo/d+Z976C/TCns7KkCB+XtUd
tvhi/akxrZkAz3qxq8lOfl7+Cv7+pn9GV1pZd6FeaON0pMULOt0Fbuj46vB1
/p5OAXutcfYd8435Y+AWk7tm+NDq2ov+z9rO8I1pnmNiPzF/IPyt0bB9u74w
fzS8d5C5byLHFcfgAvmKucf5e8XSMMyXu8WEY19Z39Fw0pF7Q3VV+VfCFVGv
L8yqyp8GqxOrv8vl99Mfw+VNrX7nM49sxGK90Pfuy2/5PF5IJHzx8pOIeVX5
j8Bfw922F/N42kdwxrUJfiM5fyKjJXrB++PR85G0KgLucLpH/2Ocb81B+J16
f1pZVf5c2EwX0ySV45IKeNVK9/mXef7yNkvRLz3CumfTuv2w7tauwFtV9b0H
Hz9a1+s988p+w1m2xWUi5guxX6YXTNUzyjtxXO0DmyXOybjP31P8hB+9bfnZ
iJ9X2YXj95zcwyL4e5rBcMv65vpb7L/iBfDyZQ/fXuD5KX/AFxvPvjOpqp9t
I/TCaI+Oveayn3QD4aA/c6KOcD2IQ+Elb7YtnMP1JkuCq1vanxpqVGmttVIv
HJVOs1jMcZEHLDp6MuwtLZ0Dl3q8yrnI9ajYDu95bPqtJb+vyoY/tg6Nyebn
Jf2W6wVZl4CzXbje5bPgnmcC7L+yfsotsLe1iaRaVT9cgcfVyn4r5fnqPsCv
to9+t4HjIdMjcb59tVk+HFdvgmuvSDZfyfPTXoLVep0okRbp4Xm7dQETmVdq
sUIvOD+YEbyJeTQJ8P0Ls2fHVu0XmXCrOPceGs6H5B18w9H90iLOn7xBlF4Y
sc/pymFa2RN+VWFZ/3Ax63sOPpQW2Sud8yF7A98IuWS0u2q/MFuJfB2abzHj
/qh2hWuJok6EVOUfD+sje03syeMpXsIFrnMcz35mf9RZpRfiZ16b9v0983eF
JwUmtT9fyPxB8DCfa+uLaMla2PHT4A1fiphv7Gq9MP7lmtaDPjDfalj5rsuB
HXRIBqxdEGI0kd/HBoD9dMvhkcHvWL9R8NS7HfaU6ZkvCv5kHeez7QXzHYUl
bf1S/Z4wXz68LWDpgyfPWL/ha/RClz+JkvNPWb/lcL9s87fe+Zz/w/DMuHO6
oIec/4fwrEM7Fb55zC9aqxfifiuXaB+zfuFwonmq0yN+X5sCvw/a6evDz4ty
Ya9n70xWcFzROgbXo1FzYqvpWK998IzZp1q6M69EC0cMT7S9y3zyMjjqqN98
I35e2WqdXrASLzV7XMC83vDSlIP9Kl6ynjlwo9sjjEfxfENK4Q4LLu9rzM+r
W8Si3/zyRZc5rh0EB8550+3Lc+ZdANuN+jOqhL+n+g4/uDxvXCytsYlDvSbW
rzHqDfN7wk6ZfYrcack82HSUmfQh50O+E54a73vQlsfXNYvH+Uxfu/g3jyce
ALsV5itXcz5lIXB4w7Uvx79m/m3w0d4P9kzk/Kuz4H66g3I1z0faV6UXcj58
qe3P81Fthjusv33DqyrvZbhrx/JBufz9YsO/z1e0aOPD+VBOW4/1ltdaP4B5
dRfhvw0K2zWuWk/v4ZDuP353Y//KzBP0QrVqWYr6BtZvPdx0zfJrv7keRJlw
ao8N5h2q+rUQ9lRZeKznuEK8AfVf7DJnANevqgd8YWDm9iRe3yRn4R55/VbV
5O/LX8PHnDqPfUIr623UCwlzKzxHc39O7wbXHS/LKOd6142DRUM1Dw3cr9Sm
m3B9dgnWpXC9a7vA478flHpz/xEFwbXCP92eSkvXwG8H7etfvVrl/qkxSdQL
U3qf0Czj/lrsDLt1to1MpCVj4E+3f74Iqrr/WgVv+/G59WgeT5kOD8yddG8f
jyfuuFkvbKoxbsEG7jeykXBTtzL7aI6HrIBtcjp0TqleaXUqPPtUVL8HHNfm
wSlOdbY716y0YtgWvRDt+LlmZg3u/0rYopPVjyyOaw7Bm2U3pzYyYf4H8I3i
3QNnc1zyF46skBa+5/d1B7aif02e119pyrz34bHZvy8kMY+sHA63KXlgX3W/
6LBNL+x43f6kqzGvV/vgEtMhpWWcX+ld+G/ucuuC35z/X/D81teb/+TxVC23
64VmnfbalvD7miHwrftNGvWi5bdhh7JIdZ9alVaWwE2Nl3ka6lQ6XbJDLywe
3X7O8LrM7wXr/Xx+DajH/PPhVPMhqali1vMbrAgf/Ellzno236kX5Jri3jYN
md8T3pa5Pd2Ols6F52d6po5oxHrvgPscMDVMtWA9myYhzzjz370asJ794f8c
HnzfWZ/5Z8OjV3bZ+Zm/p9wKnyutdcLIjPmvwuJbTX0Pc1zWZxfqMX5b6D1+
P2QGPKfrkQZL+PvqxP+3VgPHXBixoUFT1nOqGnm+zyuM57hmA3xp4r0pCy2Z
9wL84X3gw4CqvEXwmlhPx878fXnD3djvVe/HHuPv61Tw8alOPw/zfMXn4XZJ
YWkTmjDvW/jJio3r0m2Zt/4e7L+i2jkzJMzbHZ4852D/BFp6Bg5Y2U32mPOl
eAU7fPGMX8rjqeruxfPFGp/Yj6yPxgX+0+q/sq+c/2IFvKGGuLsD51P5An6Y
aXF5HOcrvXYy8vqtsTrJ89V1hrdt3XU2zYr5A+H8q2165lozfzRs1Oey0WXW
T1tzH65HD1oVvOT5iJxhv2kOf45V5R8NJ64O7HmXn1eshE+cejphqB3zp8E3
S/dp67RjfZ326wXLJZ6WXWn5CPjciJ49/3Zk/ki4ofTFwL+dmP8I3MNi5bxI
Z+Z/BK8szrWK6sz6Dj2A+TyVop7YhfWNgLcrN15o0Iv5D8ID3tgM+NyH+R/A
k3JuPGrEcWkFnFrrxCJHD9Z3aQruP7ZbVXvbn/XdD79ZsfzlQk/mvwePH3Z8
eIKM+X/Dtzc0O3fNnfntD2L/qeu1w4nHl92BlVvWG4/i74f8hCXqrgP1bsxr
dwjrKeRSUa3ezDsYbrR5Q1R1np/iFhyVNiF9dDfW8wec7ZyTaMJxje1hvTB8
8M5lpx2YdyDs/q2kuDPrKQmFK0ptWma4sp5f/9866yN6Ibl25m1vfl7sAVe3
8/P/3pr558DVZnfZ06Ur82+HU/c4Z07n50VNU/XC07aCczDHpf3gjS6Oh/fz
/BWz4P29x706yM+rtsD6NW1dz7BfNFfgQqu9d0TNWU/hqF44+frXny3sX+V0
WDHgQ/2O7Nf0TXCYm9UsbQvmvwR7Nmic6MXzF+vhGle1zz61YX2npGE/C7h8
uh/PR5sAr1qw8s0FWnQBbtb/Xe3N/L6iQTru5y37dWgvZT3j4WETm6t38Pwk
5+DuDkXLbDl/8jfwacusnGW00iwD6z9uZ2gQ+yXdFZ7y0t+xuhfreRpWTc0y
3TeY9XwJP7N7eHf7QOatcwzPL206rxrBcW1X2PyAj29DX+ZVwCd/uWpG+7Ge
BfCYGxGruw9lPWsdx/zO2nynmj/zd4IH7EjxDvVm/rFwH4fJe+P4fflqONAv
36YZP6+rcUIv1JxmNHyND+sphW+m751Uxu/LRsGFwzYPeihn/ih4htVEv/LR
zH8UdvRNeHVkLPuhw0m9MHHa28SlHFcMh2t2Vt2eybyq5bCZU1nAd56f5jB8
eVydmt85XvwQnrnt9roS5lMGnML62brYaR3zp4fDiYvLmtoFMH8KvFTyp7R+
Vf5cOH2Uz8IlAvP/gYPit1fMrdoflpzG85FTO3Mbri/RfljaZlqygvMp1cKm
W358OujC/GXwPssaxgFcr6pWZ/D8u8E6eBLXt2QvvH5/6pU8Hl+eA8vfbR3b
14n5S+HAZ7cTO1ftby3OYn8+9SOunOtZNwgec8fm+jT2n/o77PD9QJvW7D+t
zTm9YP/y9XIX5hMNhE3mx4++UbWfzYP//lfH6h2t+QLbFefv9hzAejY7rxc0
Rpanzgxh3gGwzi996GvOpzwEPjN847w8jiu3wYLzj/ZjOS62ytQLz+MHLTEe
xnr2hXfESNvt4vyGzIRH6F1zb01m/s2w7MNHYd1E5r8MRw5KcN8eyHrKLmD/
7zY+vvZI1nMa/CzDtmFSVT9vhFfbF4wJ43wXX4SdLsxzihnO/O//uWGN4Qns
n/TJF/XCqNJ8RWPm162HvcM8IgrZH+JM+O2oR47R7CdZIbynt3/MOK7PEPEl
vfBl8pXHCv6eKB6udaLFj3JeH6RnYa9tC0LSWX/Fa9jscEKMjlbV0+D8FpVE
9+H3Nd3g9xELBmwcwfqegidk1VHGcX0odXB3UdiYIuZLN72sF5pUtBIXT2D+
LnA15wqH5zOYP+if61n8ej6P9X0Om3TsfLlGKOtrcgX3O0EbbK8tZv5OcEjj
esdnclw6Bo5ST3L6uYj5V8GabX5hduGsr/FVnN9a9ZU7Sta3I2x0vd8Hk9XM
PxLOffRi+S6OK1fAtWs3b/1qGfOnwosUr/wjOC5rn4X1882tYm0U6zsMfrHv
YtvLEcyvhN2Ve54l8vjaQ/D0+PnjDy9g/odw86TwWtc5rvLP1gvBNmMi3aNZ
32Ww8YChjgE8fvEBuGC69fUDccx/H24Qrv7VbRPzl8NBgll2w22s7+JruF90
Kp8u57h4Hxxc7p3muIH578LuB+cd/8zjhfz6Z0n3Lwlbmb/ldb2wRbT41mM1
67vn+r/r6xonsyTW9zZcuNzzzoRdzF8Cb390cMmLPczrdQPru7tf4PrdrOdN
ONLR2bUDv5/+Ddaa2Gft28y8zW/i+rysX6u3tNgT9s0rOZW1nnnnwjZPwz6b
M4+2GJ6i7tlMvpf1bPafXvhl5zDdnceX9oe7t7j1fWE8886Gc8anvwmIYd6t
cIzx1041aInlLb2wbNxAqT/rI+8Dv7n9IS6C31fOgB91WO3mtI/5E+F1EWWS
2vx9nQaOTLnW2eww69n7NvqtpsXEL8dYz6nwmD9RaY9OMu9F+O+nY+9SLjBv
Ebzy18l6XzM5/5NysN8332KzmC5Wwd6mMcLiLOZ7C786cuWWLY+nrH8H19/h
K04HnGL94uBmJ35fm5zB+p2BFe2nHI46x3yvYM+o4EM1aXXdu6ifpCJg+HnW
1wV+cr7/lNEa1u8k7Pn0Yv2pPD/VC3jNWsWEDH5fU1uL/fbOnYNDrzBvZ3iN
k3X5PX5fEqj9v+Prat7D/A1pNcn7EvM6w3nrI32X07LR8LZ6M1wsjzPvSrjL
OJMBNRNZP+P7eN4wzK9Wzv6VOsGLkvvabuO4YgQc9dS8W9+1zBsJj5qpKb3E
9aA5AjcLqXdqMudX3i4X/dh3cOvMOaznUFhp8Lt2nvtNegRcp6LnsF/cX3QH
4Uc9nIzq8/jiB/CRGrE9fbawnn4PsD8uLkjqsZ31XAq3HRz2+f0h5j8Az6pl
XbcxLb0Hd2t5+0cS+0XxG77l0MzWmPWVJD/UC0Nb+1zvxvrJ78BDzjq2Psj5
Vf6EpXWb2jnw8+l2j3C/IbNbHHOG9dwNTzz7flb2ZdbzFvzrtHdiKudH/QN2
+f4x4iGttc3D9Uo04WnbG8zrBbuvf//a4TbreQP+s/zwRCmPp/kKZ52rP03y
kPNvnY/9d3/LZjfymN8Dfmbz0cv+KfPPgR1K2/XyoHWfYY+tnyY9fMJ6Nn2M
9aQe2z/0PvP3g/scbfLzv1zmnwWHt61uuZK/r94CP/qzrJdP1Xpq8gTzce9z
nZj/WE8BXjGp/ax7zKeaDqvsA4Pf8Xw0m+DxheOFQ4+Y/xI8u3R2wZW7rK/7
U72w0zNOm3uT9Z0Chx+ovXnpPeZPgK2HbN9eks38F2DdupsTO11l/nfwz4oP
KV2ZRzvxGZ5nTz3Y7MffE6ngOh9utPHQMf85+MEA3xoZb5n/Ddy49lJrozfM
b/Yc9ZLeqt6dvy+Jha80mL/jD9eP/DTsdj/zbBbzKF/Cbd8v+FXI80+vU4D5
CGg1YAj3D11X2GvLLo9+KazvCfi6h1f+Kq4/dQFsuc/2vhvrq631AvefySNq
rcth/s6waPf9xsGsl+Yp3OL51sE2Vf1QQ4frd2nJTu9nzCuFx5xZ92Qv+0M+
Cvaaee74WPaDMgo+M2vL9vs8vrj6S9T7u+iXI+df1gHuXf+v0pr9EjIcXq3N
WVjwnHmXw9bTp12+UMC8h+HUla7hTvx9heMrvbBk3gHbLS9YzwD4yqei6aas
pyYc/hx68XIYj1+cAr9o8Xpx9cfMnwtftLI2bs+86b6v9cIg9aK0RXrWcwl8
39zZd+MH5t8Pj77k360u50+mhX+/Xd9+MOc/pOyf55+PXMjjicLe4HlwiMb1
/kv2w1743rA206JZL0UO/PXa50B79oeqFH61KmLyvCLmb/EW6+Fs5MQRn1nP
/+A+yx+99P3FvN/hS0Hl2UdLmdemEP1S8tMtUvSlMu9AONY41XZjtUqrr8O/
85Lj3htXWvsF3rzlULUR1Sstsn6nF8oqMou7m1RaOgC+dmfIrXoNK60IgWXz
a083a1bp4k9wF0XQ5ijrSkusinB/OEtT0J+W94W99ru22tO40sqZcPndTys/
1K50+mb4ytDhr/vVr7Ss8Xvsb+7FLq4NKh0ig7WqnievN2L+aXBAjzU2W1sw
/0Y4b8mEu0Etmf8SXPHJxHtFm0qreun1Qo8wL5f1rSutmQznXrwzsHlV/vVw
3SVNWuXZMX8mHJgw8stzWl4IhwSn+YgdKq0LNuB+KeXb86WtWN94uHxqfsZl
KfOfhU3vmw3/rxPzv4bX+28fq+jJeq77oBc29p01ZGoX1vMUXCw+LB7alnl1
cF1N5ydmzsxr+hH9c3tSZJEj83aBZcYRok/tWc/j8J9zR5T9u7Kez2FVkP+C
I/y+zuSTXpjWcpzdKVfm7QRXt3kQH8D8sjFwsMnbyXNdWM8n8M+avpMfM7+o
xme98OPx0g3HuzN/RzjvnDjjhzvzj4RluaE2Ilq1Ata3r124lHkk1Yr1wuLh
r6d4d2M928PVDj09F96R+YfBK5N/fXjsxPxK2P5JaaBbHeY/BDuMDL4/uSbr
2faLXsgsdRjSh/2o9of3v515KMyI+ZfB00a3uzKd/S5KgVWjr68//5Pr7z78
S/QoZUld1lf+VS/4K4usJrHfihfDTtH1r/QxY/59sLap7+KfVsx/F95Rfm7i
K/aH8hd80tS2/TH2o3jRN72Q3WvB1KCqftgDf28tWviO9Qu5Dbe0HJJaQ8b8
JfBxt2AToT/zS76jfoccu9bpw/rugo1LG/a9N4j1vQkHSTLe7KY13+AOo+87
f/Ji/uY/0O+rj/nJaYknnFbTsdcEH9azGD7/3/vMj97M26wE16NpcU+dhzBv
f/jd8k7rf/H4IbPh5N/hnoV+rOcnOPhB3Yp6/L7UshT7U/321adX5e0DLwhr
9KzrQOad8W+8XfHj01V5E2FJYrz3Wp6/vNFP9NP23K/n2T/K3nDAt/ZmIcyT
PhW2XmWaOL8q/wb4+5B6r5NGMv9FWHrB1OvFcNbT7Rf6Sd60ca4n6zkJ9vX2
OFyLxxeth0uajRKvGsz85+Fyy5/SfR2Y/y0cnL3OOJPrtXhCmV7oFX84NZfr
RxIH63OdT3zpzPxnYCFr0KjfTZn/Fey+O/pZde5/6XV/4/ubS58p2O+yGLiu
1+m4qfy9kJNwXOOEQ7/FzP8CnvStdGodfl5buxz3c5k9Xq3lehB1gSOCY3f0
4H6vOgafmtl69jxebzTP4JxokyYZvD4W1/yDflnW5qCG11uJMxx7MdVkGO/H
5KPhhxMm7B78mtePx/CSARvrzfrG651xBe4P5Fuuz+L+K3OCfwoTl0XVYv4R
8H6LdbcWNGf+SNjkQ/MxZ9qxvkZ/9UJi5juT19w/Fe3gBtZp95r1Yn8MhUtO
zEvc3IP9EQG/Xzm5yG8A638QjluT4PduNOvbRmQQXM816NF4LOvrB7cze358
1FD2x1J4i++6ws7j2R8H4B27jf1E05j/HvzN/lrS0Omsr4+RQfAIyXzRfC7r
uxh+MMhy7/Z5zJ8M91u3/OPREOa/A5tWLGyZxXHVTzhEnZgXF8r+WFjNIHSc
ffpixHz2x2642rOQfmOVzH8LDhQ3iA9axvw/4P1f47MfcVxnW90g3E4XnsXG
sL5J8PMZee+/rGd9b8BXvo2tXz2e+b/C8Raufu02Ma+HsUHoGbakcLaK9cyG
baReaxIiWc/P8IKebp9k/L6kaQ2DsOTbg7I3iczbD+6yYWHoUh5POQuu3WTj
PfMtrOdH2OJ0S9e5a1nPJjUNQlGzlmkj1jCvADdxSmnzcTLzTof97wf6NWF9
tZvgo48imoj9WU8LE4NwM9JpQFg/1tMd/tF+mbczrx+aKbBzzu9L4VzvxQmw
7/vr8nf8fckFuKuhr8yY9UnvWcsgTN2/f+CR7aznRDh529qToUnMr4Kf/Jpc
FrCLed/Aa2/m1I7ex/mfUNsgpPnc7fwihfWMhfs8r91PvYN5T8NF/ot2No9m
vjqm6LeK0pamtHwtLBiqzbAYx/qdgPevkz7sKWe+Arh6QbKtLeujq1XHIKx6
HdTAjPMt7gzXnr4pzWMx65cBH52krzeE/at9CgetWxGfMZF5a9Y1CKnOEbZP
uf9JpfCkUd5lkz2YdxR8ddPluC4K1qt6PYOwwW+iz/EJzNsBPtXLrPjWTOYd
DvvHtZhitI55l8PPjjaNGLCc8y0yMwgBM+1s50Wxfo7w52p3ynYynzoA7nSi
ie90X+YNhxe5XuuRyPUoOgiHDf7d9DD3Z1Xr+liPr2+eN+G4xhcekKp50zic
870ELrpuFXlsAfPvh2ddqNsrmv0m18Kv2nreGcs8Om+xQRjhbaN7toT1DINT
zFVXt3M9yPbCRmlmB6MSmD8Hjmy2sNjkAPOXwsuHRgxqmcb6qRsYhAN7qw07
fYx5/4Prh0d+rHWceb/DISbJMfvSmdemoUG4P810kOoi67kTfpzp0Wb1Bdbz
OpzT3Hlzu6vM+wVe8fd9wZorzGttjn6WeH46col5B8Bjer31sT3DembBouhZ
Uw1ZrOdnuPruooGWmZx/KwuDUCK6tjOS+RR9Yen98bZmp5h/JmyhbdJtPde7
5APcfGzYppFq1rNxI4PwqK39/lXcn5QyeH9v466pi5h/GpxXM7dwFuun2wif
MG04dnRVP5g3NghRnpdClDyeuhe8dfUy399bmX8yHLZ/oPe4E8yfAFdMjfQ9
eoj5M+Ght+qmRbJemh5NsB/HRHXdzfMvDob31Gn3dkMq88fDg2t6P3rEfpWf
hUcuSjnntpr5X8PzS3N+R3FcPN4S+UON52/kepetg0t3RP5qtIH5T8GzzNP7
+3E9qnXw9OYFd8dsZD3XWBmECKfeny13s57HYWVM/WYHuN9onsOWXwIbjdvD
vCZNDYLD7NCkXUeYtxP8oW3tXw48n/R0OHpMwNqYo6znEzijjeDuwH4T12iG
PCe0L7acZ96OcG5oZ8tOdMhIeMrT3U7z+XuifPh5reSuPTnf0mrW6L+XKw6O
rOqH9vC9g9+2urE/VcPgpnrZPAP7UaOE546MvZN/nfX8C3cWPX19u6qf2zY3
CKHnsz+1vcb8/vDgZfNMPThfumXwglRtlP1+5k+B9d1datuwn9UONgYhxmxC
Wg77VyuHh7j9fD2B8y9aAv/3psbVg6yvdB98aaF5bs3DzH8XLvjx36cPzFc8
xNYg1Bn65HYv9r9kEbwxK2111Enm3wO3cGk4diutvA23L+me9OY285fAdj62
rqF3Wd/5EoPgKb890+oR67sLTq31Ia/sAfPfhGdmtDoo0NpvsCEutNr9J8xv
08IguCUPNC/kuOYafC2ixQwj5isuhuP3Cps/32PeZnYGYUJByxYpd5i3P9zh
c+HHOxrW8yq8/fC9FfOyWc9P8KWzB1b4s34yy5YGYfGwAP+gm8zbB06d71Jh
y/NVz4BdL3/Iq9q/pAb49Mv6wSPZ/4pGrQzCS/uG2T7J7Ife8IfU5JdzOF+a
qfCVJuu7D+LvF2+A34TOSfLj+lU2tDcIDTW99zRkf6e7wR32WHTcdpr5J8Hn
cpMa3DnH/Ovh8tQBoVb3mf88PO/hhKcZzK/t7oD9s3nxjCMcFwXDIV27zlrF
ekrj4Ibuy0q2sF8VZ2D3NUV5B1lf1Su47513I2tU9cO41uiX7+3958axvjHw
qjpb59hyvStPwmPPBpxoxfNPfwEnTJ/xqgvXU0h0Gxz/smuMOa//6mPwgwNZ
b04cZN5ncI/UdafbrWRek7YGYfLhUstXvB+QOsPB77dsPMHjadLgsuc1T3Tj
+i1+DE8vmb7uGM9HYuyI+7VmA6LTabkT7OUl8Xr/kHlHwPN7Fl1Oy2M98+Az
nZznX6dlRu0MQtwwi/uX2E8h7WD58nEdZ99i/qHwhgbbFlfn/Goj4Eeu7UpO
8vqnqICj/ig1q7ifqdq0x/1DwdnkvuwnjR/8yrq4WiL7r3gpfH/A8QMPaMkB
+OWulH5V/Ztu3wH3D9ZHOz0/y37wgfV2f6ZF8njixfCwnt06tOB8yZLhoLCl
xjNZ35A7sNX8Ge4juZ+IhjgZhHW6m5afLrO+C+HpHTwWzeP1QLEbXhSW/nYk
r8eqW/DojCzZY45rfsAzpvepVbtqfwjtiP150NopMl5/lUmwkXVj9W3OT/oN
+OORs0lK5tF9he9ffdHr/FLmby41CJeLzs41rXqe3w5bW3llvDLwfWU2LO5o
0SKh6v1wMfxra9uZq/g+QdrUGc8LTuNjy/m8o+gHt9zZ6kRi1fPPFXj/NMeb
/nx/IvkIt30xyb7eXz6/NelkEA565FpNkzC/AKsnNP0aw/cR6dNhuZ+H0eoa
rKdFZ6zv0NXvb/H9kNodbtzt5UB35tFOgZ9apMYU8vuiDXCwT2zjDnyeUzXo
YhBkD2I3mdiznj3h/srOSY2rnpcnwmtPHss6wudriQp+cjZwthvv9+Tn4H4W
ZT3m8f2czrUr7hdr3nUS832TeAK87njLrZGW7IdYePrrE0cy+fwZchpe2igj
exjfz6hfwgv975pH12M9FS5YP14e73bxfbFiLZwljb6dV/V++AQceCftVSnr
pymAdyekhAXy/VJxrW6o55F3Ky/w/JWr4VOZxj/m9WU9M+BaKcIVhRvzP4Vb
LB6ZoOD7DXFNV1zP0p7MzuPzqUwK91j9+vTBQNb3KDxFNz3WjPfjosdwzUsO
AQY+D0mrdzcIf15t6hTH9zeKDnDfvSOLY6ey/sPhyatWz/vK50/JI/jeF2/3
AFou6oHnFfGbLzl8XlU6wsriX7UeBDN/AGwWPbRV+irmD4flVqlOu3eyvn9g
07nHTC7yeU/duifyZvzMbsjnQa0v/DViTisp71dES+EfJ51N7Xh9lu6H8dN1
nKr2u1Zu6IdPuyUNeX9Q7A2bd9HdTqja78Lg6PZ7O5lw/cv3wpqfJTs13C+U
OXAjS3PdL15PxIN74fpjuU7xkceXLYBt3LOCjar2CzV8w7484DCf79T/wQEu
ycsW8Pla+x3uHVjPos0U1neeO/r3/aGurfk8odoJnziRdHdy1fPdddh1X6fk
SXweLP4CXxuV3bEd90uJdW/sdw/q95nOeqRvgxOOvD3YjddDXRb87OzgGCfu
R+LP8EV97Lqq54uQvjLUo97oP28zWM8r8HeDWXt51fPnB3j28iU3zrE+isaC
QRhY5BAzkPuhSgbfPpHreIXzqZkGd2+aNdKZx5O/h5vmXllwn/VSmvdBPx9c
sKYV5zO9F6wYb792xQrmnQy3WnpxqCfrIU6Af941e9ouiPUU98X6tDxgtJz9
qO0BR9fJvyKOYP6JsH5O54+vWH9pPBwW3OHMbD5PKM7CgSZf39rzebW4Wz+D
0K7Ze7OFnA/JeLh/XY8Se+6v8nXw/AHLJm7g84ryFLwoOOtGHq/fsqD+BuHC
r+xbfrGs5xr48h2ZsIvXc/VxOOvlM+lffl77HI4cfWNhBvOoVg3A+l8z/JeM
z+uadHh8vUVpM/l8XPwENklceL2o6n1qDQ+DsPm22jyL+5O8I1y2PVkfx7+f
6FLhRQ3iO+7jfiLOhyVah4IYc+at5onrie8S0+qF/HtRe3he6sDEbVV/nxkG
B/lbakfw71OKv3DTFW3ePOb7PFXbgch/0v+KP/8eqPGHjfNEAY20fN+3DJY6
vyhr8J1/LyqHT68aou6Tz78XOXgZhOEJQyoKPvF9nxzOUj/w3Vv199olsGD3
rGtZ1d+39sFdHDtvHcj37dqWg7Df/ZrhfZLvy0XecM+hTvOu83jSRfA9kUeP
QL5vV+yBVxWc7ZBWzvy34fXzp2zrzzySQYNxP1HrgNVm/v1XPh8e03Rw9h7+
/Vq5C64z4urw2heZ/yYc+vZ47xX7mf8bXDLRtEcy/x6r3jEE9WtceqPte15/
r8H+g0Rxl3n9E32B5wze+1dZwbzNvA3Cw9xn80/Tmq1wbHRqxY0mnP+r8Kgc
lzwV/54m+QS71mh28wzff8otfQxCeGzN/c1s2Z99/vni5NREvg8WX4aPzRKH
vOXfG2QGuE1wzf5H+D45pJHcIBw+siq7Gd+fq3vD0gMVZ6re32unwntmF0U2
4vt3RREc32GLbzVeL1QNfQ1C0QXLI7m8HmncYMOcXfvqVt0/TIKf32nfN5rv
gyTr4SZLHmU+53pLr++H+5ED1Xtf4fskXXdYfygnaHfV+9NgePoD96TiWcwf
B3fys+mUzPUZcgb+kdHKr1fV/W83f+z/Zj1/DK66/x0Hry2S1hPzeVwRA0+w
eWF1eiHzn4RNfRqn5fD9jjwwwCB4x+3dvI/jymh41+NJp59WvY86Bne/M8wu
mvuB7hl8sfrgFaZ8vyM2GYrn3XGtxlytev+wEi7wenPzXNX7hzR4a62ARhv5
Pkv0BF6c/Din/zbmNR5mEOoOaBExlPuZwgne23hO71K+3yg+Ak9Zm9LWwHFJ
Hjx2W3ytQr4fkBsNx/NzvX2qVrweKtvBD7NrKLzp9KHwmhPatEPc32UP4O69
nc/b8X1ASAU8pfm62ba8f1a3GWEQXt/KPPaA96daP3jAtvBreVXvT5bBtV9K
HnnSqt/weq+z3pe5/2vsRxqEEaLtZ2tyvNgHrjiz86qWvydZDE+euvDiN+6X
8mR42sHS9WmbWV+7Uein8NV+a3h9FQ+Bj+wNPrqJ9ZcthHVKncWEqve/u+GE
Eeeve9HqW3C0vZC1m+9npV6jcb2bZprxmPuxIhTOXHtr5HFeD1VJ8AWnmpPf
cb40N+DJHlP6zeHzSPFXuCTZMXxN1fudOWNwP/JiyaAcPp+lb4cfqxvlvea4
Lhu+tuG8aSdaXAy3jX5arQHvB2RNx2L/3/ZxoC+vH9otsMzO18OS/Sa6Ct9f
P95zBK/30o9wm2qjXZvzfkTRJNAgRHxb+no/66kSYJcf7YP8OV9yPZxlL/75
H58nlBZBuD9Jyn16jM8v6e7w4IuTf47m869uCtxueJfDzzge8g4uvzr3iSaH
9WygMAjvvg86tJDvD7Q9YV1iTnluPvNOgl0tbznP4fOgVAVP+TP+4B++v9GY
jcP66rz19EjenxS7wh/Li3/Hc34lE+COHx/Hj+f7AXksnPPZzKktP688DV94
Y22Tz/sJsct49O/H6rPL2G8yBVx+86rXi6p+XgtLipqYJfN9lPoEvOR4fkF4
LvMXwLluLcfOqFpvYydgv+03p/Ey3h+oVsN9u11e0oTXa00GXG9q/ZyRVe/X
nsIOi+bnSlhvSc1grOceoXcf8f2U7ihsneL66XnV8+Zj+L99I1pUPV/Lqk/E
9afsyIHYqnp3gO0b7ZUNecN6HoEd/r7sWv6B9XwEf423rn/+L/OKJhmEBY7W
tY9WMK8j7Fw4UG5e72tl3oB/43VUYfJalZbnwqXK66O31a+08g9cM3D23mb8
fHrryQbBJ6hPw42NK63zhWuu/jBxE8fFS+HozNnhplaVVpfB5Tv6Ni5oUGlt
qynYz02ffu9hXmmRDzyz0Z5BCeJKS8PgfjYRliKOK/bCf1Z3Pv4ff6+4xVTU
7+Ku8ga0ZDB8936gXfMazL8APlvhl55bh/nVsNegZjo/nk/6f3Dcuq+quS0r
LRs4Df2u1yY72FU6ZB58q798uVEr5t8JL2jW5E5Qc+a/Ds+bZtc8qA3zf4Wf
iTrEBDpUWhUyHf2ff/Hn3g6s77bp/94vDopqLmH+LHhCWn/zavy85DNs49gm
aIYj81vNwPOFtd4tn+O6zbBHyf52vVqzvlfgr+FX20S2Z/4PcOi+kI32tszf
eCbWp3PxDAsb5pfBZ09uOXXRkvW9BP/eNfSCkT3r+x527aj5VLcF85vPMghu
fz6sUDZl/l7w+Sv1gg/RxZPhEWfzL+xgfdLFs3H/FNu94ADz6HrALuG3etWl
xRPhyBCP1qN4PrJ4eGwDz8Ud9Fxf9UIMgtPNib2GsX9ErvDN0RsNUUXs5/Fw
qtLarg6tWAfffTXGOJ/9rToFt9eV+3Qt5frqOgfPY+r6zxNpeRA8d06/TWG0
cg1c5H38jpr9lX4cflAnv56M8697DtspnygXW7CeY+YahEntNna9J2I9V8Ef
Rn4/nsR+1abD2/yfGm1oxvxP4XdhmTFG7EdpjXno90Rt+t4mrOcK2K/CKbO0
IeuZCi/6M1M0kJ+X5MNrr+Tku/D48mqhBsGz1pVJCVw/yvaw6eW8u3+4XsWH
4fG11p915HqQPYTXxS+Kci/hfvEX/qVpOvPSL+5vbefj+ron9FTuF9bfH5ZV
W1+c85X1vQ/H7Vr898t71rd8/v99X+OwAPUo3zFsDOtRLIdvzrkgPv2b9V8C
15r66G2jP7x+/IKdZ7V03mPC+rZcaBB6+Gfsj+F+JPaG1UG3k0t4fNkiOGuw
i8Pub8y/Bx5VZOXuzf1N1GIR9uNrZibOVfvdIHjAiS6j2jxl/vlwvmLqSzHf
n6t2/Ru36TYng/crmpv/xo3Pp7Tg+0W5Zxj6edGwCxd4/sq5cEFWs/zT5cy/
A67Iu3TZk/Onuwa/kTj59+L6En+Be5qMuzme4+rZiw3Cjp4nX+7m/qfdCtf6
ef/4M64HURY8YKRf23rcP6SfFv/r/9Jly7tyPVouwfP9Wdc4FynrmwiHzt59
Nakv++MyPKlt8rUrnuwPAzz/Ud9+Iwayn3svxfP4WpcL7v7sh4uw3dPf02IH
sJ+LYLn3mEDZYOZtuAzXvz5Lll7oz7xu8DP7p5mebsw7Gd74u2jU2l7cH97C
3xulbOwwhP1cP9wgNNQZHFOGMm93OP9kv9dNFzFvMHxgZMmNQ+HMGwcvVeiX
SeJYz7oRBkHrOEW6Iob17AYnr+6lP7uT+cfBZxN29Fm1ivlj4M5BtQt/rGf+
k3DLkz3b117HenZRGoQGoiMnshNYz0A493xR/BAeTxUNpzwP2WWxifmPwXP7
nJ3qqWL+Z3B+E5N9yRtZz5XLcf9xutWlGduZNw12yX7wxXQl8z6Bn2yftcsl
inmNI/E8N7bM5XsY65cKDztlYRgVz3x58Df3HQvP72I+oxX/n68dPPlLWaLH
ftbvELxzdVqGE8flD2CnOuMcFtDKCljYXcsqYR/ztokyCMeza0fvSmJeP1jf
WLlpMMfVv+Esh1dpTXg+WvuVBiHw1nv/NruZVw6LWs4zW5/IvIvh9dknRvTn
uOYn/GNi55t/trJedquw/y/JdNUfZt4h8PJ9R+SpV5l3IWz0+Pmv1Rrm3Q37
/lnTvWcm6ydZbRBOhS96sOoQ6+cFp5T9eOhMh4TCi76GO/Q+wvxJ8CSlXfPC
VOa/AS+2uBRyjMdXeEQbhOuLXDLyz7Oec+BFdzYPrM7f02yHm2oDG/leYv5s
OK750eiaWuYvhlN6R3tcf8p6zlpjEH4aPfQ5ZGA9t8C/ko0PjCph/qtr/j0/
TDtuV/NbZf6PcMLzT2+Cqlc6pMlagzBo0UOVTa1KSzVwcPncDS5WlVbo4Wmf
TY6pGldaZRGD+/+IQ5IvlpXWuMPpdxa8dbeutPwCfDHfUOeUpNLKd3DR7921
2/J46Q3W4XnavFH4tD6V1vWE04bln+nWsdLiSfBFQ8GWmc6VVr+Bx/4Zc1TX
utJas1iDUDjiUHdH20qLusM1sp7WUDRl/gnwf7drnHezYf5YuPvVg/bj21S6
uE6cQYiKapu4pm2lJS7w77U9+4j5ebki7t/fu6JS/nRj/rWwzZMuFa06Mf8J
+GLI8zEF7VnPzvEGofhb92v7ebyQsbAsqe7f49WYfzXsOHHwgTBT5s+ADS4H
Lj3nfIiewVurv7zmY8z6jlLhee50fli5EesbBQdPdbQd0YT5j8K3tsf+esN6
Sh7D41vKvfxbMn/19di/RjyxCeZ86JbD3xt+yvvG+RMfgRdcPjWpPb8vewSv
uDhVPFjM/KIEPL/Y93QawXG1I3x+5OnPhY1Y34Nw3DGbwu/Mo8iF9aMbVX9s
zvx/4KXnRnSxN2H+1hsMwrgF1a71+M71pYXvuHXIf1+P9SyD99gqFLVrMG+r
jQZh4PCd/jF/2b8+cI+i/8a5sd9kYbDXjzSr3masZyns9rf4Tmf2j8huE9Z7
/31ysYx5B8O381ocyuvFvAvgJFndtLccV6nhwoLekxf0YD1tEw1CjM5+4zeB
9RwInzgXevoN+1U5Dy6Rbo0I7c38O+Exd/rNNerL/NfhzlbBCXV8WM8Bmw3C
HNMOYVberGcIrPQ+X+3BIObfBuc3Dq/v58v82bCHw4sFzTgu/Qyv7Wvx+GF/
1nPmFoNQ1iI1pclw9sNmuGfb9jm//Zn/yr/xJfsWnW3O/B/gDqmbT3V1ZP7G
W/G8e0q6cD7rId4Ea860mbFtMOt7CY50CR1ylccLeQ9f+mh1cdMo5jffhutv
r9YxA6cyfy94dq7zsfNTWM9CWGviYLxiIvOKt+P+dcuBKSPp4h5wxtnpQyzD
mXcivNysv6R3NOv5Gm53/qbpnZWsZ70dyPOwpM+WJczrCrvtn+J0fDnzjodT
t492a7WCedfBsb9Dzwfy+KI6O//9/xfO5WuXsZ5dYZe0cN2CWPZDEOzz7OjL
qWuYfw3c4+/wjdE8nuY4fN3XcmyrKNazU5JBmL4jVdI26Vvv/wFPuGBe
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 2.00102734302412}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 2.00102734302412}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"SH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.2261134411326349`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.057485633047825155`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "21.329041294762643`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 3.7050414278141985`*^9, 3.7052520522880807`*^9, 
  3.7053148130018167`*^9, 3.7053149500649757`*^9, 3.706903482661978*^9, 
  3.7069037513837814`*^9},ExpressionUUID->"754e3667-473f-4c7e-8887-\
8346a01fbdc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
YW17DM5qmxmusJw1f0Qx+mGZmYaPLmtpDbhozTSTJDPWZpuL/7v//ouUH6T8
R+D2VCfz6o+U/yZ8etL6T1eKqb5qTzDefsteShFm3+9qCXtW1mmu/E39EQjP
aOLVTPpA/ZEGZ6Z+avD0pvq/g//dKZjX95n6w7yEy3CjmvcKfaP6BsCrBO95
1fCoP1L/ez3pa420POV/A4/1XHx+yUzK/w+efvnt94L5rBv2P+Uyp8a8tGsf
zVoiBb4ZKrb9QAvlfwVf9M8N3NhE/dEDO+l7iPLXUv3lnnGZxvZ5y52dqb6X
4ATxt6k/3Km+ZfBut/tNuy+wjuyCf/FeXZ5TRPVe/RzX3/iCmuMT1oGlcFRz
6efVIawzO+At30XebHKivFKl2L+EROsaWFFeIziyb3zTKWvWeu5wsIluGucU
9QMfzkw5/+DMSeqHGS+wvxjDVW3dQHkN4TxFIb9Kuh62++CRXv15N+n6RsbB
3galQT3jqZ5TX2J/Fd6+f+5mqufyl0P6I9AF7v4sNu3iJcofA3PLlG+f96L8
hfDZt+Nsv9dSP+iWcZnPvZ11KtLdbD13w0vXh4m8X8haoAA+q7ep0HYRa04r
LPNitUvCfNaFjuXo3x6H+TUc1vxIWLLDws9Gl7VZM3zi4q7Xkv8on3gF7q9r
fbXWz2BflwiHzfUvBK38TvW7D/t6b//oIMm+7voFzhD6O9xXnvKNeYX3S6bb
TFJkXakFZ05ucO9bydo2B47RL2rt+k3Xux62kTe4Z7yM8opUYj5LO+4S5UJ5
58EGxuYfp3uylraGezPjlEStWTcIv+YyEodsJdSOUN658MVHO4x4l1jrbYFF
R494ucuX8gbD/klCYnE1dL1HvEEeRzHfFYfoes+Bn36I0CkpoP7cBLeNl28V
30l5D8OlAy8M7ApZF6bDQSvPrdOIpus9u4rLSEc0KqyrpvFvAd8p3hDhOpyu
96GhrzdchycEHHU6N4L69S28/liFj9lKGj/r33KZ/SaVB3mW1K8H4AHtx3c4
YZQ/FTbuvev26TLlfw1rNu369YpP+fvgV+YGci491J9X3mE9JsVX91xM178C
luoquPiHXg/shgWcJ36U12Ffz5St5jKxgn3Tj5pSPS/CS03lGvUCqJ4vYWuZ
uvAcqn/yHzjQds59jzS6/rPeYz1+5lDe1zLq19Wws/vRXXHZrCOfw/6+ZhbZ
p+n6/4YFp/F+Nmv0sNdfsgbf/3NOlYwaa+mVcLVfZ6fYbNZmbrDH9IT+FmXW
De1w8MT3M7ZPYC0x/QOXWSF6auy1SspvAL/dKDtpZBPl3wuPTag1MT1P+WNh
+fg9Y2/eofE0pXbI+20ZWF8hSX6BOvv5kc6wkLWItY4g68Kz8MXypogaUcr/
CPb4schU7yf7/sBldVjPZGeNT0ih+u6CL4Xt3jDtCvVzFHwuQD+emU39nA8/
dQjYnEDjUe8bbPopdP7NSVRfh49c5srz1n6Do1TfSLgqzZzzqpry58HWZ8Lf
OHZQ/iY4/pfK7LTbVP+xn7B/C8k39qH5RfoUfM4/7I3NU+rne/DNRP7IAeqn
wEZ40y1ff59VlF/0M9Yj3R5Fvedo/loAX83YsHWrAc1fd+BlXwJiJ1lQP3+G
b72/37rShfp5VD32i1fvVIXfpH6eB6fJLfnx5CWNrzpYrUjecmsr3Q+EGjAf
S0Y82q9EeTnwwZy7qy4LUD9bNQzNexR2SI/8NjWYxpdgI+bf7N/dI+1oPlOH
d/DcNeTcKO9G2NNGuXNsHOUNgt+dfhTeEkN5b8B+Yu93FMXT+FL9wmWKf8WU
zjtD88MGuEz/3qkRmpT/IJwysHztywWU/xocOLfc5nsPrc+qYHVvE+WPGjQ/
rPuK8ZoxpTTvLtXTH54mvniWvT/lvwqHMhd+5k+j/JXw3qDYX69/0f23F96/
8oKh6BSqp18TXj9impdN8wfnMlzwZGp1SB/dz8qbhnxe5F+4RqSgcelGyi/T
jP3Uh9yyo7FUzxewR2b5TZt2ytsJH1yUFHHyFeWd2YL9rtuVYtEmyrsKVu+/
PBjynOr5DN41s/DWhVSq56+WIfUWkPyG/q577fwyk/KugLXMNS0k6f5l6wr/
6JAY9HCm+8NPePeFFb37ab6XntbKZcRHtYeOj6F+0IebzYyD1vvQ+NsDCx3c
+XnEOurfc7BKxZNxr7bQ+Jr8HevngZ5fI/bT/KAHM1ZvcpmrND84wTv2Zuo3
0HxQeQbeLd88ypDGm8AjWD92lJopj8bXUi6X6VgzvKPlM81vO+Eir8DsNppv
+KfhLmaagCV9nvRDuHapmFBYCeVvgXm5RjNV+TQ/7OBxmVH7HJWDRWh+i4Dn
/paoe7matV4uvPaBUfnbuaxdv8JPvE9efbOJNSfsB+ZjH481Fd+pnndhhxIl
k20JlLcBflLWUXyA5qPC0W1c5u4pTb7Fdso7H7Y85rhfazPVMxt29BkUU/Wj
en6CdXK07fcsobwjf2J92rir+LIqzWeasJF6RrI5jW+9rbC/lIb4NHq9shYu
N5uSojGO6inUzmVmjr7zR82Q5jMNWDjuXHvRGsq/Gb4tlGy0Vo/yH4FdCt8/
7R1J9RzOx/y36Xa8JK1fzNTgVJ93Hi3/u99Zwq8+nBAzHE/5A+FnGfvu+9B8
0ZAGp68ebvlhN80PKr+4TKvJysO8JOpnc1i1VHawKIL6OQDeOnnxYA6t7wSu
/RryeZw38B/Z2Xadj2h8mf0ekoe/H16aW/v6Go0n6RQ4rsX4l9kg5X8Fd1Xa
ZQePovr3wLLDUwrjaf0m4duB/dORW1ldFtTPl+CJw/KnJ9N4cS2D2zRXlU2m
/k/ugrUF7S8n03qqUrqTyzx4lrBxtg3V9wJs8TY8b/cBqm8pPD5K9/6KHOqP
DrgoY5lEFN3P+FJ/8Hkr8gUmBlP9jeD5Px/Kr7xG/cCH70q9LWt/Qf0wowvr
l5fn6j/+b71mCCuJi9odPEF598FWzWdehCRRP/zsGvJ5nKl/8f7xUTdObqO8
y+GCB23Z1ocprwt8/8mn6/9oPVIYA18Plqx+t5PG16Ru1Df/W1ycHNVTF7bM
ePG6jdbPmbu7h/RfQzQc++XG4UlUT4mC7v/2Q3VHRtB6OFmnh8t85fkWW5dQ
PzjC86SXTz/8v/XaabjBQFJxUjH1wwN45hoRrvtWup80wwOqShcXRFE/2Pdi
PeY4sHc97Vekw+HPFcJ+U+j+YnYf7j2g0cn7ROvNL/AkLcmK2kk0P4/p4zLH
mAQVO9q/6p2EndbWBFmKUz/nwAsqLwbK3qL9Zj1cpevd4Un74UqRf1zmg7R4
WTmdBwjMh+13DrwtXEj7n9vwpNtrO39J037zI3xPaMosTXvabwr3436p09VV
lED3u7n9Q/KabYGXR6QfO1lG6+EPsJjCJfu/EtTPIwa4zOqfKomzab+oNwd+
4LtwwFqS8m+Cb6fw9dRpfCUfhhecv+J1kMYjZ9gg7hcGrWd1qP62s2FRTnnV
O9o/RVrAU9WveKmpUH8cguuSrGZ8oH7iX4cP9p4sScql/lAW4DG7rvc5P75F
/bEeDugPjN5H69eGA7CMUMmfappPJVLhOtnHX/vvUX+/ht8K82Y/KaLxZjqM
xwxobtPXb6T+3g87xV83i2+m/r4CP410lbYfzs7fthWw7Up+7CRaT0d2ww90
07VuFdJ48xnOYzqVyj2HhVF/X4Sneuhess+k/C/h7QM2SWJ7KP8fuOae69np
tB5vmCXIYy6ISXbcyaPxlwRfa53LcITZ709+Dl+9aeUxgda3lb9hg7hnUow0
3V9WjhiSp7AE/v/1bIctih/altL4lZ4uNOTvNTOAtx9+5qj5jPLuhRU1LGr7
uqiebfCVHl9V5VSq5xRhHvMseELVmHF0v2PgFLVW30ehNB6dYQXXyQZ5F6ne
Z+G+INfnyjQ/2k4cyWMyvT69Vp1M9VwGvx2YEb9fjPLvgsu5EzxPvKT8UfDi
989WjVSl/Ug+vMw9emrWItaZS0bxGEmZhaY3d9B+xAF2ajQIeONC9+tIeG+Z
097kQ5S3Cdbj122WT2MtYC/CY4q959jxS6iep2BfQa1TSy/Q9b8Hh8QXyA76
0H5DdDSPca3q5tmtp/3QCbiDt6Pxfh/V7w5sdaV21oRTdL0/w4Jye7X9aul6
jxJFvvYKI4cVlG8enCphs375KLreWXDR6zwnAdo/VNbBgVXhS1r/Ur8Kj4FD
zk5dTesbDgfOEzl55Ls71dcKnsKbFlNdQ9dbUIzHVA/zDJQpoOutDmsJp6R2
Xae8G+EP3sN/xFJ9M4PgEvHqMh1FWt8IjOUxR4ykUm2ovq6qsPJ6WUsTQ8q7
AfZf/mORMX1f5UF46R6L9WM4VN/r8GqNSl0Lut9EKomjXgK83hkf6Xqvg7e4
lJUJm9D+zR9euUnJRFSLrvdVmO+1RM31ONW7Ek5eeUbG6jBdbxMJHiOw3dgu
it4v4Scx5HrpXYbTWlx68/ZS/nLYx1Qjs+4+5f8Luwl2r5/eQNc7eRyPuT6s
zKWyk/abL+D+d/HRLX10/Tvhyy+mq7j/o7wzx/OYmx1tN/aO7WXrmQhvrVq2
tGci68xncHhba3aWFOuGX7D/k/wZ5gqsJSQn8JhFHqPX1C5lrbcCdtN23mox
jXXlE3h5/1bRmlWsBdrha71L28VkWXOmTeQxOzOnJm4UY22rD28bp/ekS5p1
5B7Y3fJQx/4yqucP2MCle7n1d6rn5Ek85gtHe6F4IutAPXi2p4qMA42HTCfY
703OvQ5Nyn8G3ur+SKB7OmvXCZN5zNpaLWet5ayTl8LbTbcozttA+XfCUXY+
s1ROUP4o+Nu7ZyLLzlH+h7DUnFNfNKtYF2pPwfz5/evw+eWs+TtgtawI69Mv
WUtHwEW7xQTvKbE2y4WVhh29cmQW1f8rbH77XITyaqqv3VQe46mjI+CdQvUN
g5VVU6LORVD+u3DW3zdbzaMofwP8r+rnuZYkqufxaaiPifiO7odUz2zYWLUx
dMlpyvsJ7ndeaP+A8vFHTucxKmHus2WyKa8mnLj/+6ef9PdlZsLalh9WmdRQ
PWthyX8l+9KqKa/QDNzvtDP0nwn3sXk14H3my/Z0DGftuhl2rzSMr6e8AjXw
3Tlv46PeUT2HS/KYw9E643wqKL8a/DdUzqWWvi/SEl7pY608opvyB8Knf6W/
EGukeg7Cus4q+uJnqZ4qUjxmzK7aI8/zKL85XLPEqXqPK+UPgIPlx6pxGmn8
XYN3PJw+bPsYqqfiTB4TJF6guU+e+sEMlh+5V0/hFc0P/nBd2KykGS00/6bA
roYbJy4fpPH4Cn7J+7Bn+Fyq79pZmO+O9YhWz6f6+sJqn5Q6KpQp/6WhDiyD
VfriRn3ZR/m74KVVDT7au6gfvKRRj5ZgoZI71A8X4MUFkQf9blD+UvjI+fTc
MfcpfwecMFXS0CGT6j9TZsj1KHwK6wf66VSuo7x8eOy+1WrWVyjvDFmMv5Xl
p62ov8wM4SUxfxI2e1E9i+GqomjpdBovEj/h4qg5v17QeNGbKof5I1N5ekwd
5V0ObyvRkcqOobwu8OjZ7de+PaN+4MHDMqNa5l6jfpgkj35zblvjHE39oAuX
hBlYqLRS/t2wk8/5mdd6KH80HBhWtquxieo5XgH1kbaeIviK6qkDa/T8TLgx
SPkd4UfXOdZGfyj/adh07dS6m+uonx/A4h3PRzuasK5crMhj1jXbXj18kLXA
DnjXVtvjhqdYc8IVh7zf9j68ZUyldO1a1pFf4KQ9EXH3tFlLb1caUj+zk/Ab
flLa9jTKnwOL/PHwTiig/PXwixe7l4iGUT1DlXnMGcN60Q/HqZ634TdOmwpD
abxXfoS5k5+0FqvQ9R+pwmNWPJ5r9IOhes+Fv/Wmhy2/QPXMgD17jlpL/6B6
foAfGgdbRIynvCNU0f/Zsn0lbZR3DiyX6RbbMZl9PXATzOsYHFFE41XiPay3
8MM8Z5pP9IbNxt/756OrMM03rrPh1x/XjDcqo/wWMPfRhaQjgZT/EPxHoVOB
mUD9MAC/qLBXKa+j+52yGo+JflBubEX3r8L1MM/Fa7kQzbf8A/CoxPvROtrU
z6lwQ2tpjpAN1VNBHeuNcZ1lIXQ/azCFQyx/3IlXp/z74TFtGpZ9OpT/Cuxr
FjBmxxe6P1fAG9p8G7k5ND+snYP5KNPELWMY1dcHvtb998HZ5zQ/XIRnb9rQ
0/mA8r+EBcKMbg6k0P36D9wi5eZqWEn3O08NHtPr5dw6OIn6IQkeccVhRgHd
/zOfw6caDUolE2h98Rt+cUd4/Nr/rYelOMjb2Hjy4g1a78bD53dJnZTMof1b
CWziPirY7RjtP/nwmYFLfsmzaL02fS7ud1+q6/tofWhrAHOfCzsL0/6C/xie
ne0+9y+dh0u3wW1Llo97/r/ziCmaPGZ/SVK03F5avzGw8Iz4DGYHrTed4R+b
4yaPXkD7iYnzeIzh9/ZpWY8p7zLYXjJv1w06P6rcBSuoTRRdROd3AtFwuFSc
6Of//V4wbj6P6U5QyXtCrxcugZOXpc+K/UR5HWDR/NJPhybS+iISlvulmetF
60mzPLjvzgrlo69p/btoAdanIzbs+0fnbRL2sLv/9l3fHGh/cQqeJH/aQsec
8t+DazaU9pYbUf5G2NvzuF9fF+03bbWwvhQflcwxpv3mCXhTV/uDF9J0vnoH
PtIv+7rgAJ3/fIaFSpcWG9H+lj9qIfYzS/zT/Ol8LDAEXt6hnVOzleqZBXtI
PfzePJfy18GeT/1e+F6g/MKL0G8HxiVq0PpXjwN3rMrb8YF+76i8Bat+9xMJ
qKP6foA/iwt8DKDfDziCi3H/fLIu6s0K6gf1xUP+feRGWKkz8LV2FfVDNbz8
Bq98Yz2t5wW0eYy1uX1UKJ2HBqr+Z6fn5Re8KP8GeJ2+YEVGOuU/CAeltH/5
xqX69sN19zXX7HpE9VVagvXdgt9ZI+k8tnId3DK3NeHd/9bzB2B957HcYT8o
/1VYRWVj25sK6g95HR5TJnJXoof2R3wT+J28VGKEJ/WHH5xUov2RcaP+uAw7
bVlnruVN689y2FOrrs/7Cq0n1izlMYWh4Q9tN9J63htWfCAve9WJ5otk+PK6
zyHtdP6a/AL+a5smEXeX8nfC5a0Zzs20P7X1WIbxb3HZqI72Q5GJcPG3ctOL
dN5c+Ay2vVQw04P2t/xfcCnPgONL419aUhfzZ+ykX8WzaL44D2+f+zc8W5fm
iyew/DET4bH7KH87PPGnlvDdi5RXXw/rv6xJGwPyqJ6P4X+zS5g6Wn9zfsDp
O6oktpTS/DaZ4TEn7jc5m9N+J1IPvrm+8PI8Gm+FTvCKVZda1Cyont9hp8vJ
2vdo/xg4YTmuxzqhbj86785cCt8y1t3nfpz6Yed/ttJMtabzPokoeNzr2Ue7
6Dw4WUIf/bIgPOt7M81v2nD0ftPhgvT7sYADPE1+gH+Pzl84EbDwT42aE3Re
bZsL3/Y7Y7mql8bbQgMekz2q/OlxZaqnHaxbsCNOj867zcLgo/8euvdnUP67
sN7n6GFtD2h82Rhifou1fJFIeV2PwxLSSiMvf6G82fDtwcqHB2i/WfkJXvDm
3LAumk8ij63Aerrv1ZxkOg8szIRv3Pepaq6kfLXwQPN9rQEPOv8TWonrqX60
LamKzs804G8tqaY9e+n87CZsdl03frIlPQ9TA5uXb9dcspOe1xhuxGPqR3de
n5hBz6epwV4WUnd+99HzaZZwtui5puxken5nEO7oPvZV1JKe31FZxWNSx2zV
vu9Cz0+Zw5uv5LcN2tDzUwFwQehLkbfN9HzUP/jDCp0ax930PJfiah5zdjnv
XHM1Pc9lBv+94Wox8gQ9P+UPj5FoMvsRSs9PpcB3b1tFFy2l51/kjHkMZ97S
gmI5Oo80gVW9plaEXafnu3zhp22CW/IzKf8l+Ni0Pk+Tp5S/DGb2j1l1U52e
7zJew2Osxj5PuvKWnlf1gncvNb58m57PDLwAL3n4bZN3Nj0fWrrmv88zVuqg
5z0bOuC3Uu5XAj7R82gJa3lM7FfnKTJb6Xm0p/BdjVz/mix6Hu0XvEicmbyW
nh/kzDDB/eulYWDHbapnHDxFssHsK5/qWQyLjl63zyuf8v6Eew09bk3roOfR
pppifT2gmh6iSOe/y+G+itRUv9V0/YtgtxixQyJz6frzYPdbIuZ6N+j3wklm
WP/K2A300PM8ybrwcVU/2a30fFDlbjizbuD9P/o917YV7jez3p9J562R49dh
//lZ5LJuJ53/6sDRM/1MJOl5GL4jbKbWeHuwkc5/T8MKmQpCoTZ0Pi2+Huvf
fRNmjaHnYxoWwxu7ZjvKd1D+HXDP3S0ySXTeqxcOl92oiTX1ofPf+3B2qMWu
oP/9frzQHOu7492XpOl5Is52uGOrtQmffp+2PQnfClQ/pa9M+XPg+gyrTYLa
tJ6x3sBjHJbYBC1m6P4bCgfMrM040kJ5b8Mn+wfLxn2jvB/hm2tH+ut303n1
SAvsd5M/artNoPEfDIsXrPlYV0/1zIAdhXfGHDtPeWvhrhSVgkefKe8IS+w3
Gt/HTv/fefUceNjn/PWd9HwHPx3O14kJnnqa5oP38Iw3efX9ryn/sI08pjO1
L8adzjcDZ8O7j8sev7WW5lsL2F86PVSLzmP13sLXjl2espXOi10H4J4li1s3
03l2svImHpNo0/jxGf1eWbkeDuCunqvqT/NtAHxr1NVLq+h8PLJv05DPK1TY
jPE4K9O0rZTWZ6Yw45YkLNVA8+1+eLvI72qPczTfXoHjXl4+2fC/53tkrXjM
+qXSvzbSek9iLbzt2LF6NQ3K7wP/1HrpoEC/f7lehI2Htablf6XfA17Cd2N1
l7+k3wM5q7dgvnzmInZyGt0PPOEpLc8Opm2k/Enwjy1W9qdHU/7ncP7036/f
0++H/N9wz16b3s30fFqg21YeM8dwponHWKpvPJzwfNeKt+nUHyXww6WDv9zK
qD/4sJuahO0len5Ab/o2HmO06PZeuWFU31j4ZfdAQBv9HihQDJt5BBntoOeX
OG1wYeLNJ4N0f7OdYo33j5Djl56l/Ax8ZIu/nc9bqicX7hVm+q/S+ipwog2P
afxkHMydROuFZbCW8qKpRitpvbALPu/x09+TzvNdv8ErX//7VOpA65lxthhf
ZX3hKb50/r8ELl89WefbNVo/OML8uDsBjw7S+iES7hmZtluAzm8Lx24fcv35
i2DRjATLV+XUD/bw+tkLFHXfUP5T8Lplx7dl0Xo98B7sY3gy6AitpyS07ND/
TglfVtN5t54tvOqVqtCUdurnE/C5PBl1GVqPJt+BH8/L/xlnSvk/wwtOPwra
8L/1wTZ7rOcL+3Ou0fiLDLEfcv0Ls2AJn92KErSe5dfBXO19U07S7+nSwjt4
jGuJ1SsjAarnLXimYf73fvr9QeIDXNxYWlP4ivIKOvCYLPX5znK0f3FVh5m/
3UwArUcF0uHtoffePXtI9ayGF2WuaWym/bCtgCPWY0F5SRm9tB5ThYNS27/Z
0v60cAPcpDLN4jntr82qYA1xQ177TNpv9sNb1y0J8OunflDaif2g7I+HPXRe
1bAOLjPflK8hQvvlA7CN+tqEN7TfTu6F93gG3HrOof28/C6MnxvmkTJ03iRg
Cvv9iimesoP2y36wo6nv0/L1lP8yvCH+yyaOLe3nZXZjPaDdNOmJA+3n18Am
o0Wdj4yk/N6w2sYU6wTazwcmw725hY0F+rTffwEHCLtcLqXzLb1VTtgfKwU+
db1I5xEe8KWt0mOz6PwpORFekCz5IcGH8j+DcwNmvP9D51sCv+Eb/UojUul8
LNLVGfX9EvBY9gvV9zwsfXWP7TY6z+E/gZfMrzi6is6/pNvhTtU7Yv7PKf80
lyFuOAcfPxJ8fyqdh0o8hi9MUDcUH0XnUz/gSRMFpR7Q+Zbr5D08RtB2T4bU
J8qvB/PMvluq0eucR7DjDKtPn35Tfb/DCgNBp7LoPCxywl4ec//Hs/Op9H2F
S2F1uRCvdPo8/k74VtD11NHS7PdnSuzDfLbl1P0HiqwbtOGdvhEcnfWsJRxg
c/H5nasNKG8EvGLD7RXaTlRPMdchf6/AInhjmOHVjwaU1w6++FSpt8eQ8oa5
Dqlf5F3Y4N27/bp0Hia9wI3HhJ79p+ySS/W0gUed+z7SJYH64Tgs0Bj5VZb+
3sxsWOnM/ou77Cj/Jzg6L/hxCYfOr7e64/tCD3+7zqN6HoMTH3QZJY+k88BM
eOnVw5pFOnQeWAc/dzkc2k3n4xwhD8yHi37r+Mqyrxcega9v6nhybQxr/k24
+LXI/pNcyl8DJ0yO/No2gX3dbLjnkH8fqAZLpiZJGtP5ucQNOEFG71egEtX3
HVzfVH3sFPWv6+B/r0et4P+5RPlVvDDfqfrV+v2v/ubwnvTY6PGmVN838PLF
u6yWraT6/oP/Dovivt1D/aDojfV55OPDVnReyTeD7b1TvRd5U35/WPBCuOMn
d6pvDxxmKrOpLZH6Wc6Hx1QFLxgn4kz5TeDAOXWtP+i8Ts8XNkr//dSEzvdc
L8FFGx8o1tL5mYCML8ZribGk3Fea74xht2FyOaJRtP/0gvdXjvK4t4zmuwvw
Q+crUo60/y0shc9mqoY8N6L9p5Ef5uv13SvEvtF+3h2eyb/rZ99N810CHOAx
ctaEEsr/FFZ0Oa6dqUn9/Qte52d/+NIb1sn79vMYsT4hl3ytf2x94+AFykv2
Sa5lLfAEbg9UFzi1hjXnJ2woa9Eh5sPadqo/jxmMTL1wJZE1Pwbm5ucKP37E
WroIXjpposbn4f1sfh6smPiIs2ou60zdAxivF/STmlax1iuADw/bInW2lX2/
ayvcUhFcndbEOnl8AObzcnmhdYWUVweOVAx0OpZAeXfCvNTNvPhY1pHNsMac
1a2uk9nPLxQ/iPt3zN2pPY6s+Yvh18wxVZ1M1tI74NOew5ZxlQbYvOFw/jkj
ruBC1g1jDmE98uTO0W3N7L+XWAjfrZp15AdZbztcuNLl6upjrF1P/meRcclP
C1gn58CTv0fHvaTv48wP5DGW/4Q9Tn9hbWsNvzw4fq6bHPt9kaGw4ZPTrTN+
Uf7bcL+JacvwDMr/EV5R/crD7T3VMziIxwzfk3L3dg/rhgz4jo+b28QblLcW
jk0ti3+dRXlHHMZ4roiSTDrDWuAm7NZ/tnNpHuV7D0d/vOOrtJjNYzvsCI+Z
pRZX9qmefT1yNswP3vu2tJjqlwYre0/a+eo0Xe+3cOOctSp6tawDB+C0cMGD
ed8or/JRrBe+c2qK0ynvetj2noJI2VeqVx98rPBsbqs/60qF4KF5zWCl4F+h
NZaUdz98VNNCOjaA6tUN23f+i1KwpnrJHsP+L66Kr/+a8q6F5W706ytMo+vt
A1ulW8Qs76W8F48N+XslpENwv43UjpjtRfVbDY81tON2Xqfr7Ql77Veo8E6h
/Emwz27PsTZRlP85LGnSZywmTPVcGcpjSusWqmuVUT3dYIej418cTaP88XCC
/Fav0YmUvwSeVph3++FI9v3SfLjYbU6W3HLWmXuPY7+V8/OvlSX1ayy8uqu3
UcOVtUQxrJLn8/tlEmu9NjhkRLdBcyhr1yknsH9fsTXo/RHWnEK42WztArEi
ysuFX+9/Nl6H3h858SSP+Tc8QTt5H+vCZfCd3AHr4U5Uz3x4l2XOz9c5rAO/
wcGeX8SO6VDecWFYD7Q83SPygvIuCRvyeRKOYUM+L7kJ7h3nu/X6fNaVY09h
PTi2cOWs4awFFsMPPRwen3lF/WAPr76zp5Ohfrc9Bd/b2BTR8YbqKRrOY4S5
8yN5TdQPWvBI7Sgf50LqX1u4+8jC4k1alP8E/Mq48LCnHuW/A8eu3sXZaEP1
nBfBY2an/jqTspTquQ1efTvWcp499UMIvKxGOPjLDuqHLPiwvnBDRiT180fY
0e6llWIM9YNVJD7vRvlN7SvUD0dhtSqNtK3Uj/xbsE1oqKl8N+X/ACfFfZuh
qEn1FzzNYxZ2Rv88vozqGwRHRnKaG35QP6fDa8dzJnym8aZXDcs3vQiVO0X9
LBCF62FarXS8ivKrwikeqkrKlVTf67Ct2Hs7sUaqbxUcJhdRXy9F/dEPf+pW
zpqVQ/mVovF9Cq49z51ofFXCl5jZI+bT/JHZC1f7v3nY9ITmA/kzQ/5eCVO4
LFfn0Quqv54fnHUm3NlCg/rhL3yw7E/9pQjqB9mzWB/UWpil1VE/r4EdnwqX
ao0YZPN6w5UC1t1/hrGOTIa7vl1cFXyOxtesGKynJpjPjn5C9VwF+96+/CIm
gfrBA/6UtqJVyYX6IfG/108wFZ7bqd7P4GWBnZwz0dQPK85hPs1ol+G6Uz+7
nvvv93J9mePU75Xn4ZraZMHuC5S/BOantC3cuJvyt8P2X77v1aa/v3BPLK5v
7i/RgAOs+edg9dEJnWsPUf7H8Ij1/ho3aX41+/Hf65sO5hs+p/pPjhvaD2fh
w56Ln2dKU30fwZNzooNHaVP+7/DFly3LputS/gnnMX/GtD6abUD5l8Lhlbrt
XIaufwtslxfiPlWI8krEY32QVDdKq5/6Vxu+nmdsa36a8jrAtSHrJghSvTO/
wu+uXWwQpPo1iCXwmKc7jJ5lnaT5YVHCkNf17OBpcZn1IwYobxicKGHvKqPE
Xl8B0UQec1k1J1h9OmvOAvjpZMeB3OXUDzbwD4Uxa5wnUD8ch0sXb6n6zKX8
2bBMvMU35ffUD5pJWO8tvPsyb9yg7v8BI42/iQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
95fqf8m2v9R5TnkKHC0LuNPjHVkvBaYsxb/rr3gO+N/1OQp8Y/xT3YmduD6f
AE9aY6KvW4/r82PwP+8n9VRRMDEqpuNqK4hZEeA7oUs+VJfjen0U7FhQ+Lng
LK7XVeBFV0yOtFcTC3+Ab3llb+n+hpi9WVXx7/7DO6RKfb6gEvzP/BF/A3/t
bF7a7xO5LhvWjcrHPwgO7CwM23eQWHQXzA+TThYewPxfwUlOl7tHpmLe6d2p
fJIK8L/rw5fu1OexB6spmIt3p8ZdvUjMc1ajfl6wFvyij1Mf0VGsZ7MalY87
QJ36fD4DnjnIJXR0G+ZdpU6Nl3Qf+J/1JqCfhuLf9UA4BfzPeiIJAQ8OLlxw
v5T8vHIv+O9WLS3vCMx/Dby5aLHuuGDsh8maCmbisqbb6rOwnsHgvg4XD7dy
Mb8Q/LVvRPTriZi3HvxtIvM5fxCOf2APBfNjnuacrV3vSD1TwAU3NKwvDMHx
vwLOGz5K45Md1ldbS8G0fL3QrycP65cM3ieR3tu0C+t3SYvu1zfgoQlRt7IP
YT5NbQWjN6RpkpEf5psANjrhNHZVAtbvvDZVX+krber9Weo9qfHhcHpS9Q9Y
0JPqH3a3Xop/zyO8Mb2o/hfM70XXM4Y2l6WjYHzFTXObHLB+ZuB3m7I8e3th
3rngy409WpKzMG80WDXv8cZR/pj3lA41v4QmulQ/S2aD1SVZdR1OON6RulR9
2cfBu7OqeufqYX6pLjU+Mg89anz0toD7L47oWT4S8x+hzX8IrrF4NCbkKxlv
0Xcw+8Yj1wnVxAGi3tBvmRkjDe8SC++De+qflw+sIJa0g+ckyXP6lhMrDfso
mLAncrPOC8SCXNriO2DV4kWpLfnEslbwgSGKojdHiPWG9FUwW9rOp9/LJOa6
gHWtw+c2niKW3gL73A/nX9pJzPrSl/p5zqB+CqZ02oi6tgLM7wSed+q8ev1x
zL8GzMg1186QEbOb+lHfj9dfX8FceF+VF6uC/cAF/wp7VDLrA+ZfqU/lk6Xr
U+/P79ufyidyALeOUc8+Gov5l4MH7X+4Z4EP5t8L9u+p4TxvHuYvBXvEFHho
m2N97QZQVgaBNXXCcvTGYv5UcNkyhcutdMxfDG7p6cipzsX6fwDbHHKcmbcN
67t0oIJ57rLQlcPF+u4CX/i9oMTNE/Nfpi2SgYVPjTKtnLCeOwYpmMKhxiMN
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
f1TMhyuGjP66k/1NvQfWvsmwD+L4L7gFbyyXDa9k+4t1cOp98Ulv1kPlcxbr
b/dDz4czn3YnLE5N2nKc7Se6CcfUL9+ylu0hq6/G5wuaav3dWM/tcMGkiGYz
xrCe12Dj4vHzvKcy7zvYoW5gh5fTmbfuOZ2wQLq7y30/5u0Nb589Sn14Iet5
Bd6n6GJxIJD1fA2PHV07T1jKvKbnsR6+d7vwxErm7QGv9Xw4a0QQ88rg68a2
vnVDWM9XsN+O4ZMKg1lPkws6of9Hk/4jeLykK6wOL1iYz++TTIM3lpimtONx
aSj8e0xSxHUF61nzIs4HH7LDai9nPR3h17tXt1SvYP4pcJ2NazL7rmL+YFg2
aJ7RiK3Mfwa+NbF54QLaseMlnJ9MkgeF7GR9J8J1h0R82sS8yvWwNHXd6/H8
PE38/07wFG9ez/xP4M4nr43Zt5b1nXBZJ5xu33L0X75fvRb+Xvho7WC64Djs
NarDkcnrmP8RLCld5H9mNvP/hUfH1Ijow/bSrrqC/nn50eBt41nfOPiRq8W+
47OYXws3+rnJ9oMn8/+Gf5hbOvVZwPytr6I+adtq2y9mfY/AHRcXve3oz/o+
gN9kNfj3Yyzz/4SnjXEOMXVnftsEnTAp++LzBcxTMBKubit23MP5R1UG6/vH
9+/hwbzW13TCOuO/B+bKmNcV7pXcK+sD7bgE9hZXT7XxZj2/wlHi0Mpj7E8l
za7rhN49iw7s3Mi8Q+Fp1l8svWmpHG66K31wDNtDsR++JJ3jpmT/E1vd0Akn
+/ae3C2U9RwELxq0K65wF/vDArh2/oHzW1TMHwGfOl5/hYrWJsEv9uwKuL6f
9XS5ifXTT/OTA2jlPHhTVuWpDoeYfze8dH9QQMMo5k+Ehzc3d50Yy/yf4Gs1
jxQNOch6zk3E/Lj+5bS6fH3BDvhTbfvGX88w/w04+EKNDYuOM/972KgwMa4u
v18uvoXxmjHcd0MM67sdXmY/t7VqB+ubAKdUNp21hONJ9hZefHljXMIS5jfX
YL6uVu1X4m7m7wWvPfzL6/AJ1vcy/GjhNvfR51jfAvjFsD+bnVgfdZ0kjJeo
I0bVLzJ/dzhnVXC3NsnMPx228xV9TH/E+r6ELUctSvmkZX2Nk3VC/uOElI+P
mb8rbFSWfvL2Q+b3hM0sqlekPWP+jfCMtN2dl+eyvjVScP0l7yiS5LC+neF3
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
t7MJyWHMPxfe3qRz9/YHmH8nbHqm0L1Mxfw34JnLSwd7XmR9+zTBeHzc4onn
OdZ3NmzpOeepGy3ZDiu3CbvM+PulCXBmythXPZlH8RZenpTX9A/ziGda6oWS
4qUWd2NY33DYZUK7FQeZR34ZrtnXZdqfKOYvgN+8unXOhflkm630wqtO0oqg
eNbzAjxuwrAlcr5e8/J/7x0WolIzr3FT9N8GhTWbHmfervCmH9VHBZxnPdWw
vRB29t0F1jMXHt6rtNFjWlyzmV5odam6KjuZeTvDXdtLznZIYd7JsMmMvU9u
Ger5HO5dp3HIHdbH0ai5XqgIOu197Szzd4AdGmZYHef3Kz3gvGjfqQGJzK+A
A9LE6UmXWc9K+PyDh1Ma8/cp2rXQC1MaRjZqy9+jHg/PaNv0bd3tzL8G/r3A
y2P/dOY/Di+0jQ4/uoD1tLPG740wnTlrKfuDFN55Iqrdfo4/0Sq4j3W/BVtl
zH8UVqeWzX42l/kz4ZnrF05zYHuXjLLBfBNvljOO/VuyArYIbKQSL2P+GFho
Efoti1ZkwKc0o92HbmX+H3Bh5qyCbuyfLsskqL/jX6PZsazvIXjqIJseRuwv
qnTYO0z80jiO+b/B3btfS2tzhPmtbfWCpvGm8Gv7WM9UePFU9bnvQcxbAqc2
+7Nl6UHmbdZSL9Rr39miO+srHQIPEVnZjdnGeqbA8nqdM1W7Wc8v8O4hdZzr
7mdey1Z6wSzc+N8h9jf5QPjC9UPVkvj9Kj+4xkDN7AUnWE89PObMjUXx/H5Z
o9Z6oY1H+fxREewPznDwlhXjlxnGny8cdupFk8oE5t8FT6tWo9Zh9h+FRRu9
0PRDA20Tjgd1PzjeqFGXejeY3xt+9aqgm+wq8++A/QrWPnd6zvzX4QA3ZZHd
M9bTyQ7zSd5Uz2EfWM/ZcMmcWuu7FzH/Nvjk9/Cuw/l62VU4Lc62MvEJ87+B
Fxq5ji/LZH1ntNULtyUWoR12sr5b4AutKhL+cLwoLsGDbijbPGX7qfPh2PQt
DUby9fJN9nrBvH7luJk7WM/z8FrRvZwVbA/tC1iqdAjqtph5jduhHprXc88Z
5uMu8PEOHR8Us76as3B5M6ttuaxfSQ7saW7aeugt5q3hgPZte/a8G8e/tBN8
tK/Hke88rpgETzJOG/L9Euv5DP4zf9+QMo5Hl2rt0b9T/67sy/aVt4cvZvQ4
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
ZFvgDs3DF2WOY/5L8M45n3zbTuR48pqA8T9ds7neZNZzE+zXeUbLPJ6v1efh
TifTu4noghfwzlnq5Nbcfxcbu+uFdjm9pvvvYz1D4J7r9vcO5fOA2rPwcMH0
SgM+/yjKhVv7SrPT+HyhYw0PrE/aRk4M4vOTsk7wz1Uzhnvw+deSU3Ba3UbH
1nJ/XfIMbrt19YumfP5QWm0irueuX3VN4P0BRXu45ceAne34PJ/aHfbKL/t6
hfOpy2P4nseVLn8Mz2/9g10t01voeL9LZT8J/b/tdtsMPj+mHQf/HRcZ6sP1
n2gN3Mpz3aLWXA8pK+De9Xrl3+fnadpMhgODT5zl/bKSMfCZSZ/7JnM+lATC
+aOkaUGcD6WxcJcJV2LvM19Byyk4P7/Ykd2Y3y8eBff/PMPDhfcvXJbDW+9K
0rbyfoL8MNy1aedQCZ/fVd2Hb3zPuLWF7eM4Yir64yB3T++9rO9S2OhEeomM
98OVB+EOA2wfTzPMx2nwtgLtt5Nsn5JSeP8cY+EX+5tisadeGPrI264vX68+
AF/0bKq+zvYtuAO/bGZUIuZ6UFwCn35gV32E4XnnptP0QunfkA3GzK/dB4c3
fZabyP4lSoGnzeweW9ewvvwMd/rjnfGG7SNr4qUXljtNcVrB859SgF85r5D3
4/1HqQ4O94j52YH1VjScjvHyYOFGNdcj6gHw73/xTQWenwt84JyGe/L9+TyR
/AM8clXz6+m8v6qqL8N8dmbriK6G+4V9Yff+vaLe8P6ByBtu4N5QOo/HHZVw
0DqPbm0Mz3PUnaEXFv8YGJOTxXr2hsUxJpZX77M/zIJ9Xy+OjzY8j7gV/rx0
gnUorbgCX5Xe9T/O6xdxz5l6YZRXm39zuH51kcEd8gInjeXvlYfBIwb8MInm
+ll1EZas7bHAgr9X+wp2qex5zYnrAdm0WXohavQp5bKZrGcovLwoIjGcz1dr
zsGDD98+eY39pSQP7vr1ZEYM+7ek1mycL9MkZn35/QVn4LxnYcZJHC/iHPhZ
83vFy3g/2KX6HL0QUl5SbMvxI+8In7n9V3+Y1zOiU/DQvy/MU7iecnwK93ya
Pz6UzxvIRN56YWzLV8uN7Lkec4CtLYzTI3m/RjMBXiqYv4vg+lX6CL752dnk
BO//K/7CMVfn3KzF5+PUbedifXe489F7XA8WjIUjVh7Umxmer1sN13mZdf8c
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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 1.9537906587078608`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 1.9537906587078608`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"IWM\"", "\"RWM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1840871949732692`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04876430768490456`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "24.28184160071269`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 3.7050414278141985`*^9, 3.7052520522880807`*^9, 
  3.7053148130018167`*^9, 3.7053149500649757`*^9, 3.706903482661978*^9, 
  3.706903760181133*^9},ExpressionUUID->"599383b9-0186-4ab4-8d77-\
a779e6192051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EEM\>\"", ",", "\"\<EUM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EFA\>\"", ",", "\"\<EFZ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68772110106639*^9, 3.68772110604591*^9}, {
  3.6877212572034655`*^9, 3.687721262025201*^9}, {3.6877215083368464`*^9, 
  3.6877215085778017`*^9}},ExpressionUUID->"b1d487e7-f623-4847-a8d2-\
c923553c7741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LfSZTDaLsn/W7wb6fEHm7+ujOQj7czvIA8zeFJdjf/6IeDFzesW7O1uvI68D
ub/F3GAdnI/zlOzomaaijvy8n+SyBNufyegrQy9BzIT5Nd8Ih0XzyTant16Z
j/3Z28kazh1dq/B7Ba3/+Y5L3idYODxRzLSUho1Ox/4se7KvaaCTCq6/6Vay
2HpkWgfMTSCnbz1p+xeWap8VMzFninuHoT+9OeSgf7pby3vGwxZyavr3n0dw
Pt5pcmcd98QX/L6MIrJiV2VCF85vM+sczR9KI+sm4e/9fMh9Wf0K5HE+QRx5
1KuE1Es94zmffKW7suUlzPcS0PppqcHB+1no8ziZPXxm8EycX5pL/uPA0ojO
RN4G8qxTO2wdYI7aeRrf66fcbr6JPvlkvtajb9GYL9jZ5EXJJes10bfNZ/Lr
CEdjFp4nfqoXxIzngZcjE3qeD1PJG4Tbhm/AfGKaRb5fqxSyBfMDt5ZcUdZk
0dM/v3+SmFlV45W0E+Ml35Ls6dW/YEEy8nPJlzTPPr6H7byP5JzZS0uLkTej
z0Ux01R+7MWGnvFgTl5rpVThivOx15LN/c05c9CnTRRZWlHUugn7CxWT6f74
+TF2Ss/8MJH8Y+Jh/5V4fpq6kFMzoxco4/7n7iPzW/rVZOB5zr9OtndnkvKw
ntAbf0nM6D0YF+P6Ef2uJPMGXiqrhXkR5OiOkzUeWO9kXCWLnAIX68GiCvIU
nretP9Zbfssvi5nfTTZi9Z71125ysOpRZzWsp4RXyLs0WSkxPeuv1+SZsRmj
eT3rr7/khIdzo1diPZkfkkL99HfvbIell8ivl3mVeXUi/0vy/WNjhzj3vE90
kvXb9HO1sV7mGV4RM85rzp2Lh22ek9mNLZ6fetbfv8nh7JpTc7E+FhikipnV
q389EWP9L1xIjh3wIT8Q7zPcMrKKivUpA/w+fjvZLtP9+sh65NVNEzPze7+/
dRDrJem8tP/W53nyRe+RdxvZ+k1teWnPevYHeePp6nVj8b4lGnZVzKxP2tqv
L9aH7Lnk/ryVqv496zF/8liNtrVNNcgfT17SPXXo8dfoU/uamBnmytQ8xPUz
tSUXawwov4nzcX3JK8SLpq/H9eefIjfdXf0yDeMpv5Dsudn5dCnuTw6TTuvp
OU/2bukZz5vIGw6p59jjfsw4QV6bNmn0UNy/ojxyyd4vvwRYD7HFZHGC+gI5
rNcEntfFTPOHL8VlT9BvDLn6ND8r+yny55JHJPzM34/fyx2YQes5nbV6tW/R
51Gygiej+BjWu08+48h6cgl9cerJbPbMvYuwfuap3KD12N0IL2O8j2RMIVuN
eWCqJ4/vC5nkXwtLIw70xveFT+RRE7Z2Jirg+0K/m3S/aetFXVWSWWhBrni7
W1SJv6cXXnpfNJQLHN/zfeED+ceIO2dH430mX/mWmOlju/dVFt4/pGZk6xtd
57t6vjesIbM2epy7je8dnP23/u/8ot63xcyp3/8OjsX52KZk98ahFZqKyO9M
/sNXixzYB/n3kh3fJxuxBiJ/Ollly4T1Tuoym467Q9fvYeS9Ng28nzmRU7QL
dg1ly8wPJ7u9PmyQqiJzfhq59btV31s4nvQNuSiuz6XKAfh+43iX3lddSg7F
4u8zwsjnnE92WWkifwq5dmxIVm815H9FDnWZcMBCDvm7yQ5r9FoO4/cJgzPF
zN3PkpFX0AfrEpm/cvS3s+jDVEj+c/9BkSv+nvuHbKbR/1dtX+QfmUXX65po
eV9VmfWSyC9S7yzQRn7OM/LbporudX8wPn6Rf2wZa2KM82Xo36PzD9ZbkYN+
RQvIJlcfvjDs+d7URnbjRW9cge1Cnfv0fpR1+rkN+mDNI+/rbI1oxPlNA8jr
ti9blQvnt5DL1nvmPxmMPodmi5llSuLmNcOR1468pcpdft0w5PUj3zNrq10A
886QdfZuazg9FH0OyREz3xaMnWmhjT5nk91Wt96eqofxsJn8ZvyCpmPGyH+S
/Di+fUvVWOQvIPdtFHEmYTvXJpfWF8WdFUOM0Kc3ec+EKyWOo5E/ljze+qVh
xwjkf0C+NOFymrcJ8jf+t39789EQHC/D44GY+fe8bGErjic6RnZeyFvVPBH5
c8ib3uVy2k2R/wtZfVlbpvoo5Gfn0f3T1e25axz6PUreUPgrcIIh+r1Hjpux
5OkvXF9uHXkX75goFn3zB+TT+8aqIUv3GCD/ZPJn+7fCiDHo9y7Z2I/X9hHn
54nIgvY7h6egn4y+BbTeGb4mLm0y8k8ihzj5hWhbI/868pQDxzeOWIx+a8i9
spJZvsvQr1IhrVe7kk/ugFlm5C1TBI05C5B/NXnvisjiIA7yR5K/cbzFK53R
r0KRmDk6gL9/2yr0O4FsaTQuMmA18q8ib/Swd3d3Qf49ZCvFbfeXrkT+a+SQ
4EVPcvH3NmOL6f5zPL/1MI7vt6L4v+9N9klusIBHfmBuKgmHhankDWv0dK7P
Rv435K6TzteilqLfZSVihnl+tsJ9CfoNLfm/7dLLZMc0s+l/XZG/nKygr/tO
cSPyd5FPNege0fdAv7se0vUaGTv5MvKyk8nsuzZRtk7I/4Js9ufc8CRH5O8g
3+pyUNzGRf4RpbSecFJQ4Luj3wvklf8az2R7o9+n5LNTBQl5W5D/J/lu9bHL
74OQd/4jMePS7u/VwEOfj8kPTDYvrwtGn61kxturyQgWDX8sZnrPStSwDEFe
e/LSXjv023ch71byykEmFn32oU8p2WutleLkg+hz6BM6XsGEyL4HkHcO+ZrV
1oA7Aci7hbzt5Hl+BMw/TV4dW3Wc2Yo+B5eJmag8pxT5nehzFtleM7NZuB35
fci9dIzuh0Yifxy588uajLJw5M8nn9hm9Dr8KPqc+ZTGV6g+d9tZ9OlFjrFV
HdYFsx6Q/WfPMO6dhLwN5HkNAexWbM93f0brw/WfMpUT0SefXN3f3r36MvJ9
Ju+Z9SP+6hnkU30uZnx0/m79w0d/0eT6tw9Pmh1Cf1nkzBLrj0NPIV8tuXJ/
nWtHPPL1fyFmOsI+a5mcRL+W5ENVWuafcHzuHbKTdOqAPfj9/I/kQF7B9GXn
kLePUMy8dNqyKfMq8pqTxypbRM6B9daSp0sLVrReQF+KL8XM3+nuxzPTkXci
2XiLYqbTTeR1IQs89QI6ryHvPrK9/cS6ePTLUigXM1cXTRB9j0B/48mLLp2p
0YC5K8kebqvcYnuudwTZO6K/Uwr6yL9KbpKbv1w5Cn2avKLf90acpuCJPpeT
/S8qFKz3x/XeTW74pVtT5Yv8V8g/Pd9PCN6N/K/Jf0a5XFVCf4Klr2m+M0jZ
0xfXUxhC/v7qYGXjdeS/TFZfqLI/7gbyvySXcZx2zcpB/k5ywzTD1mP56O/i
GzEz7p9li7QUeZ+Th6bMO6GUi7y/yfcVOvp3FiKvQYWYaVf9YdoM25wnO5R0
lsx/jD7LyKKy4qpVj5C3nRx54eLl+Ti+UPetmBmUv33Ku5fIO5+8aFt54onn
6PMROdUswn13Efr8QT6feiRoagWu/7DK/96/Oo5GvUf+ueSccJ2902COP/mA
uXrJznL0+Z3cWMDWXfIafWq/EzOa3WPtLJ4ivy35YWudvRh5/HzJOp5Xa43Q
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
TuF5kTGDXHA+pF2K+VfkQV6/a4XhjQTkjSEvXqf71w/zq4A9W8Kk/FFSSUE/
QiuyNCml+Es48m8kj0t98644FfmPkt/r/HR6h+3ce+SrFV+T7uP5LJ1sS/OB
fmXNc6x/9Nz+s+mk9schyH+YnLLB2YSPfLy7ZOWwHe+0ep4X6+ZImO45dRdT
o9HnAfKFY488bfH7BLfI/Q8dylAQIG8NeZrd0IMrQtFfpB3N15s+n6/E+iQ/
g1x82vDCSRvke09+5GI85A3ej/R6z6Xnx4tzUhO8H3MmkM9NmOrwqOf98xqZ
7dHR3fkI80ElWZ6bafkc319s5OwljM/8srFyeD/2G0t+oR6rtBN/L1hBdlGe
YC7G91HuP3LDpCZ9aTDmrzHzJEzNQKFGGL6P5i8jH5kmV56G/aWhZJOWnSOt
8f2A10VubQpmNPC+nTFqPs3/db+0Dl1BXg559acITcstyBtMzno78mBhNPIm
k7e3vDX0zcP8NWKBhDE+Ovb2QMyPrEXkQ6ndvh/5mL+CyCUNt+6E4/ss9wL5
dfXEJWNh/lNy3EqNt2fx/VBvwUKav5t2BDji+z1nO1mq/cGrTBX5z5EFEz6q
5GJ7xmOylvnM4mf47yWiVvK3tED/eeboL8FBwpyNWeFWvwF5H5KdL8RcLYpD
3hZyevfftHD0aTp0ET1P523zeReOPk+TtVZsPpWJ57m0iGwcNGDlMXy/1msm
tyxzVtfF8TiDF9PzelN67Iae7yezyJxxvsInqeizgGx7RaG5As8bGwlZse/u
tqCe70+aHLrfnaWH/uF5KphJvhCpepPB80XoRR7Bix4vj+9X3AZyr/TTDuFY
D/DVlkiY45+3HD+C7x3508kjbl3eW4TxJ3Unaynk3R5TgvzHyKsyls0U4X09
Q3UpzSeDxoW1tqLPqeRxATdeTYTZG8hybo125/rgfosmv5poqWiujPstizzj
i2bjzX64/ycvo/sxTuIUjueNqStZOXSqs5UO7v9D5L0zntVH4+/5d8jjXLpK
O2HOWkfaX5idpIvnIy+K7KSqsv1Sz/vFTXJQ4v7waLx/iKrJza2vQkwmY75S
Wk73YzXPdM0y3P/7yB9HzR4xtud98zr59s3hF43x/sN6TzaLE1/chvctU4UV
dHy1o745eJ/kjic7LHZVV8TzVXqV7D5oxNpveB/Qe0s2dbm1TYT3HU4vJ3pf
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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 2.3676431589733444`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 2.3676431589733444`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3475641336294686`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.08951839950794348`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "15.05348778616056`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9, 3.7069035229495983`*^9, 
  3.706903769915656*^9},ExpressionUUID->"6d7388df-dd2f-4ab1-bb43-\
10da07c7d7d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
piny7Bus/gPuXEVS
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2WlcTG0DBvBBUpaeIfuSyRrCqGxJ5iiEEFKWMLJlH1uKMJQiyQiRJSOh
QsYWQsYekinZt0SWmdQgWUreS1df3ufD+zz/3zmduc517nOf+5zX2nfBqOlV
RSLRJxOR6N+/8Y9k0UK9wP809sP/eOyB25wa8WLz36J/Vt6E97wtj7QsrbB4
wCK9UJJ629yJ+8sWwM3rHmn1hdsVMXD6+LgDy/5UWH3t3/a7l4bV+lVh3WfY
0bzBrir6CsvnLtYL79KNgSMNFVZFw6fHrRiQTBv1sH626tuuzxWWNFiiF6Lq
/ic+96HCmq3w8dj161+8q3DuJXiUd8u9Rz8x70f40KOMF/tpWb2leiHirMkB
6UfmdYL9Oy5Uyng80QX49+OJE315PGk+HG/SqGh0PvP+568X+j+7t+h8HvP2
hn06RPlPpbVT4ZDoBXuHvq2wRx480PL5rOu0svYy5Ln+IPM/Hl/TAxY9jvxa
8Ib55fA4cfdT0ufMvxGODWhd/dUT9mkeoBdkpzaMb/OAfdrD8XXuq3/Qokmw
ybNb2rKnzL8ePtXKEH3uMfOfhJ99mJb/Scd+pYF64cWu3gXNHrHfCfCzMP+s
VtzfYx2cnbyi8RhuVx6Hk3Iu/F2aw/xPYWHlj+exzCcbu/z/9leshW2qTrJM
zGb+o3De4o5t+/HvdY/gApfOX97x70VVVuiF8CafTu/j76tWw1X/1mwX9pD9
JsIrXj7ef482PoCL60RsO8TjS8rhGttSrqh5fh42QTieEDtpXgb7PQRf/TPA
3v8u+82CN7gIXsV3mL8UHjjO4+n4e8zfdqVeeBUx861/OvOPgPPGv7CuncU+
f8Lljdzepd1m3lar9MLXzjbpHW4xrzt8ud3TGudvMq8/PORoiUrg7yu/w3tG
Pjv6jftrWq7WC+JfAxPl/L3cwXBwrMOTizwf8RJ43B1zm6s8f1ks3DXEp0nT
1+yzuVIvfHOs+2wg+xcNgn9b1hh9mftLF/6/5bvhT8Vdimw5flQ34K2nq29u
T0tc1+iFmYbVLqHc32M+3KK8LCi5Mv9OeGN03r11lfmvwiutX1Ybze25BbBZ
oyHBWp6PYs5aHO9owYFo9qfeDveJzwzQZDL/ZdiYtn5UDP9epIcndD0e+PM+
89cP1gumReHj3Pj32ih4pVxxoD+3Gy/CjW87njHl9ZB8gA+kHXZYwv496obo
hVa6SFkotyv7wPPMJz9MYX5xKuy5an7SsBvs9x0snptWzYn9KyzW6YXc9XU/
iirHcy8440ZJvdjK/L7wipH3h73h78nfwDPazyyaUzk+aoXqhbSbu3/Ou8D8
3eGgwJAfybRxMtwg2EXuf435w+F7DWYcijzPfBPD9MIk836FSy4yXxh8pNPy
ssH8PcUJeO4h+7pO19mfdL1eCCvzCu9GS8fD3k2S5pfw/OQhsCqsfeZY/r4q
Gf7+tOuSOWeY7wlcMjsp/DPt4b0B/ch7rO5+lv2tgevNTCzYfJLX/wgc9D19
hOEor/9D+EzC4h/+ycwvCsd43jHPPFzD/lbBR6tX77bwBPtLgE+/+vvJmccT
PYAnZd6zbHGcedtv1Avtv9yvGVXZ18H/t0QHv2obV1y/Mu9vOLpw/LF9PL6y
TYReWFttY5cF7FMzHB6X/bTLQP697B78J9C2pDO3K37AwQ92vsu9xLzWm9DH
BLc2CexPNxQOOpMUpeH4EfnD+sPnHaUc76pieNy1IDMvzj9aq0jcb6HjQqtx
/Brd4OIM2YlFvL8ki+GizJyPvziePfbCscM2fMnmeMttthl9Z5aqnvL+FA+E
J92/9/XyM+ZXwK6vkzK3vmD+XfC7Q0N3lPH5pL4OywY3kP3g/CB1UemFdp32
FiXSqh2wu2pVTiznZ+0VePtTZfWanJ+NBrjg0agpTV6yz9lb9ILbdjvZ9SLm
S4MzbypCEqtUrA/En+DyvjnDQn4zn2WUXti0wCLfjOsH3Rb4QUnStGUl7O8i
rB/dwK4Dn9fS9/C0c54rF/H5LxdvRd91Oh45yfWEyhFWO2T2cufvS87DtQv9
wwZ8ZX9v/23/7hjjw/WEss42XL9teQ6eRl7/nnBkN6eaJ74z/xTYo+Wa7T4/
2VfN7XphfdOUrn2YT+ew/f9+TzQZFlssatiX6xnpBvhNbMhrA5/v2hrRuN99
LM1XvGJ/3eCuDmlP/Hl+Eh/45dDt+rqV64VQuGpjbfRfrjeUGrj16CRL10Je
76470E8d04KjvL6ycfDJLPkAS15/RTD85oCq+USuH9TH4LXnO9+9yPGmewxb
Torf0IfrA7nXTjzvqu9tqOT1VilhZUa3MYO4XZsER3y2CGpamT8HXvTH4F3I
543kL9y70ekxm7l/7uEYvfA2r1GTl7Q4G5a4bxpiy+PLyuApmbMtHl9l3na7
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
Zz4lM/9OOPjM5sGxR9lno2d64VLa81m/mE8uwOEpx/I8eHzVHLj/1pVto7i/
djv8+Ouyno+OMf9l2HSmNL+Bhv06P9cLjQfvm/qZeTR+sKqxzjUrlfmj/vnK
+eYHK/Nfgt2nhwTmsA/ZBzg7b4L7aB37nf5CL8w9dafR6yz2q4KTbno0LnzB
/Knwvff/9bbg/Sh/B1/LShz66hnzW7zEeD3aKdbuCfvdBNv5LWnR8SX7PQu3
DPrRccMn5n8D65ZdvXX2O/PXegUHn02e/pb5u/+/Fafhczeu1PzK+1P9Cu51
0XpOz0zmN3utF2YsmSaJ5u+J7OHMh+GT6nxgn89hZ9V+34Y8H2P1XPSdVtpz
PPeXSOFzCYu9T7EPj/Hw3Lchjas9ZN6Qf/tPOLCqmONZXO0N1v/OjXSWvB9k
neFro4Nr/81mXm84zOpcy360eg08N/5LgCX71R2B62+aON+K/ck75umFK+8a
xFzj/KLyhK/3rXEnk7+vXQV3PJM4xL8yfwI8cOypjZFPmf8BnFtw51NcDvsc
+VYvNJriZfWL82HuCjjX2qPBbc6H4kOwJmN6Ex37l+lg92rGj0puV/yGx3aP
31DE54ko8B3Wh0vTE/f95Hg4AM/e0/Nmm8r5+B6sqRN49tYP5v8BFw/PzbHi
80VrnY9+n61xW8DnnfIOrLweHBdUxLzFcIJXe/XfUua1ev9/+4sHwxFv7fq0
5XysvgUHnGhTOraAfX6Bx0de+dGe5yNq/uH/tksHwqF17RfW4vNQroCb1B40
J9qcz7NCOFA9rfGMyvVMk494/zx9fIh1fT7fXOAqhoXfl1pw/TAPbuZk3S+P
6wPNDvj0uTP1U3k8WcNP6Edb9npXVa5nZHCu1dNnk2j1bPjRnqyzdfg81W2D
56dcudaRz3vR5X+u88TgxfWGqq9eLzRtc+dbdmWfM+Gkth0+JnG9YNwCux1N
GJPM7ZKLsKPEqdS2OvO/h1+cKhlxpybXN9MMekH0YlGCB48v3gw7X3/5pozP
c9l5WNy6UO/E9YziLbzjyIgDzSvf1yIKMJ7z7Xt2bM31TAr85M9wx65cb6ly
4UWmBTPMuV7T1vyM9xeZxekxXA8ZHWArXzO7ng3Z5yn4kTir7ZM27PMlPO1M
++h1/L3cGoV4X86t6feL61mxHfwhNa3tRvYl84Hfrin/FsTf0z2Dna27rk+s
fN+sXoT50up1/Bi+X0m7wqem/jx1jO+38nGwuNVofQLXz6pgePLf1Up95ftb
VSP6c4quNZjvUx628KEbb+7H8e+VXvCT8erc51zPapRwbMfiQKe6zJ9k/Pd9
ufzCa75/Kjp80QsLCkKc3LkeVY+GbVVnh/zmelS3Eo7qMPHFFI4XUQLs282q
3jjeD9JsuDThbbIN99d6fMX4Xvdx9Qmun43L4SDHvaOkEuY/CHeZbcyx78D8
92G/2stmZVa+7/+Cl7T88P0084gDvuH9zyGkWV++b8jiYMWZUTuHV75fZMBm
AbUkjfh+oy6BU0ft9cljvzpJsV743FZz4hyPL98H61doRrnwe4jqNmyyt+f2
wXz/0X6DW9aqa3g0gvlbfMf89jIiLrsP87vBnsNTFcvYd64RthM9GDSX+cTN
SjC+No7r1JPvT7IBcNmkuco6/N6lWAD3f6je07zyfa0QdpeF2Ap8f5Q2/qEX
3gUd7h/I9yN5f3h5ldqh8RxPqrlw0PGS37UaMW80HND+QensGuyzwU+87/Zx
v/ztD+e3fvDxteYeebz+mlnwsj228QN5/XK3wq0Tmjndrbz/0mCzss/71cWc
35x+Yb1Roh7bNJfz2wx4pzF2XQrne9EWWO4VWFCnkOPhAhwl7dDgxR3Ob/nw
qzE7noj5vDFO/Y31yqdj2UVcf0gi4Scdsr/uO8nn3Tl40oOeiQ4xzJ8H588a
+/BIHOfn2qVYL4X+jA5O4vNiI3yuOH+s7CyfF2dK/+3faXvBEeZ/DSdcuPcu
kesNnXkZ5r8et58Hc7vIAZ4h2rm591Y+L07CoaP7S7328Hn3AjYmLykyj2d+
0z94P+l2ov6uLczfDc44dKn3+/XMPwEWPZGrLvB4uU/hTsc/dMzfyeeHSTne
B+pmf/zM48u6wOHjtUt77mD+sbDbrse31/Dv1WthYz/31fV3sd8qf/XCLU+T
2KJI9tsJrp+/doXfIeYfA8fvcm06jP1oV8Mjlbv3b2K/xkTYKtVsehnX30ob
kUHwT1f+cOD6TjPqn1OvBO+lc4Pg2aYrfw1m/+LD8J/Y+9e6RjN/FqxLc++s
5PXSjahiEKbljNttr2a/y2HRuTujnu9m/nh4uSo7ehzPX54Jvz8/Nn07/171
E37ueUjhzb+XLKuK3xu5UpMQxX73w8tX2dTRsQ/lXbgg9fDv0exP8x2WFCzb
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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0.6353926862371208}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0.6630365540746485, 
        1.2159139108252033`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0.6353926862371208}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0.6630365540746485, 
        1.2159139108252033`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EEM\"", "\"EUM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9176023879406043`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03457997810884901`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "26.535655547618465`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9, 3.7069035229495983`*^9, 
  3.706903778907649*^9},ExpressionUUID->"c48a0199-50b8-4413-8366-\
9994e2490a0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
dyxjYv7r4JFZ2UI6cVjPxWf+P8//AaGPZ48=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
F/8bRA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
vzj7fMSXGOYfDw8usbR15t9ThcJt7ndO8N/E/Mlwr2lVTySuY307ZhqEUe8a
pj7kduVYuKbszrl55vahyvyf7+sS4Z7SsPorWB/RfTjyY77TSH5ePfoqrm++
BZddDmV9l8Fx7Xt8WrKc+ePhxAn5ww38vCQXViyY574xgvl/wab5J/fHs376
4GsGoVn47uQ621jfQ/DJFvbloVuY/w481qOr5bZw5v8OP36wM23KZuZvdR3z
4+MO59ZFsr4H4KNJbetf43ZFDrwptlXlcO6f+gv8NqZ+m778fdPgLJx/VroP
G808qmz4hq62zwnm1XyC9RV3zM1QMW/TbLS/d6UjfBYzrzt8u3N83WVsX7JA
uGXV4GUnV7KeJnh8tKbyRH5fZH0D8/ta33psYL2krvBtN/sjR9l/FAGwU0zA
6/gZzLsTXumlXz2X/Uny3020x9BQ72bsT3IX+FLm+4va2czvB9/+7p3rwt/X
RMPtfN9n+i9jfi289vO2CTfWsJ79cgyCZdrhfrPN7Xk2vGeR/bfJO5j3Ijzr
fNGzO3uZ9y08xLJWwsLDPP4zbqF+LnPzi5NYTzU8+cHgURknmO813DbrTJ8n
/D1V7dsGYWt2c3tbWrwJDv50TWXD4y9Lh3d09/9Yi39P+RKO3DHSohH7S2zN
O5hfT0yovJr9RecAH2o1z38e/77iFGyz59cVW25XP4e/9Tq+ZUEC81bT4ft+
dle0x5i3G5w/uEntk7RkMvwy/NvIKUdYryp3DYK947oOVieZtyucXTOmQjsN
806AbW52eB0Sz7xh8Lwn92ecZL1FFrkGoVhzo1EM24u0MxyhnajawP6jGAdv
sHhjZbeAeVfBOemL5N4cr7VHYf8W4d61prGeHe6hPb3Z8ry5+XzsATdwv3eo
H8c/zQp4SOp4u43jmf8I3C2np5MLxzdxHrx2RWB5Ittj7Kg8nC+XTnFquZT1
XAqvvVf31yP2D1E83Fd5ZE4ztg/pXdimbHel7jx+ip+wZOv9Zd1Zb0ncfYOw
7Hf/A0t4POS34fzSOxvO8fipvsFLfc/dtmH70bTMNwhlkgGL83h8ZPvh+8vn
2Dulsp434Qnnu758yvYU+xk+eiE45SuPl675A4PQKWFQfiC3iwbD177L8s/x
eKmzYJ+bG45d28p6fnzw9/hOPnfjOI+/zUP0H5/vk11pyUA4aeKRev6XmH8e
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
b+btA1tOmjl5JuebopnwrB3p3/QTWc/XsNuOozM/cbzX1l6O63Pn7qt8WH9T
T9jjYaDHRw3zTofbjrob/Z7zEfkmuOK+Gp7e7P/6mitwPBe/s7zL7WJHOOVQ
yKiyG8zvDdeQy2qWHWD+9XBxvfTzrmzfsafgfavX1bXgepu0uwrny+QKjd+y
PSkmw2nzdzXx5PfV4fCoA0vnOdDaFLhLhZktNnA+YHoKx4+psLGJef4TthLj
QVT42G/7mPc43CPRNcea8y3xY7hf9aHN0s3zTYtVqE/2rj3jDrN+yfDRl519
7nK+JH0AZ97//mIGxx9FhVDsf1rPDyGcP6s7hP69n5e/IZT/HokkEZ7Vfbj7
SPO/v5IHh5z2DGhk/vcqymF/y8xPR/jvDWjarYaDL7tq+H6gfhQ8t1mTiU+5
/hD783+369qEGYVnQqzemfN5kRy+O3Ph9Kr891mkwfDiWhPc3pvfN/wGl3YI
97Ll75larjEKtQLGrijh+oVkGHzoSQ3nrXyfX74I/q9WO4M91w9V+2Gbod55
ZVzPEkvWYjxwarPrMM8XssGwjdDe9z3Xf5UL/m5PViW+5L8/ELsXvqPcfnoJ
3zfUZcHFftMrDzD/ewADwzGfE01eE2ReD54H3242OWgB/30C7W445mYflbt5
Pfgq3D9i04vPXI+RmOCBBSVfA/h+ucY/AvMVW8XQXlwf0++Ahw+2cKjB/RNf
gW/kmoI+cr1MVgwPXL5yfyLXN5WN1hkF12pxQXncLtXCX2LVx8/y+QiFAW71
6H6C3Px+Z/31uB5IffV8mnl9si+8dXi9MU25/ia/ACuPzJxwhVYV/XVODdco
rudp6mzA9ZXlgC/m9Vx9b1g36HOQM9fbxDPgdm+6v73F9djYQthL5XnqC/++
zmojxpvtygnjub4n6gnn1hvp0J77K50GH6mZNbsP90ex8e/nnSpVjuJ6qKnG
Jlzf+1SZVp/Pz0gc4DxlxgsH8/qvAv7t5FzSjM9XqNbBS8cn9U/m+4yaVLjV
5PIQT/P7ht02o56Dk4Yc4/NZyknwp1V/KtXl/azYtXDi0mzxevPzHCfgeXMO
9G/E3xM9hVsf+jNqDJ8PU3upMZ84Mmp9Od9/1K6Ga/n0/L2X70ObjsEZLT6U
3eD7zZJH8AG3/ecmDmb+SlvQ/vav23uFz4PoV8K6t+sXavk8ivgovNhztb8T
LcuHGxdGlPdlPqUoEt8vGF0j3ZzfLvJ/9kd6BD4c36Momu9HKu7BP5M+9VeZ
3/f8DSd9ONzbm8/DaG23or/67jk1ls/LqHTwMV1728p8H1PzAx4Q/yGnnO+/
6ltHGYW9V12Wt+H6tngE3PHNlLrrzc/PLIGfWAZIdvN5It1XODh0eiMv8/t8
LbcZhXsPD5wo5vsu0qFwhZCNc0aan0cJgp3fV4ywNb+PGAufTDoRfpHPb0ia
RxsFzQuP7Fze75IPgk8VXnWL5f071Xz4YL36VmfM9zv3wDMsm/22ND+Pch2+
WX7g2xLe/1W6bcf8ffhst8583yJWCY+bP8l2HO/X6XbB36/sHOzL+5eiq/AH
5zuFybzfKC2FM7r2813K9/W0c3fg/O9Xpn9+kO1hO5yWUjLrqfn9kgz47uSV
Y/L4/If8PTz//Z0N3fg8rqrhTszPelU9lsr7++Jt8IgFLc9F8/6/7BK8oucg
Te005n8Hx58Mz53E9xVi6+3C+WjiuIvNeb9c5wx7DbPYvMD8PMQb2PPUquBb
5vcfxLsxXxysXBZqfv+hF5zfOLH5LfP9ex8491hb+1fm55dfwR/kU5MD+L6A
vlYM5ospO5QmPt8vdoLz3zdcMJTP98umwvJOZ3o8Mz9vuwG+PrbWFxc+DyCq
sQfn803pYZ7m90l6wFVsQ108+byvYgq8v3qi7W2+36COgLs7+3Yq4/Mj2pNw
smSv+DufL5bb70V73Jrs4Z5h6vd/WyyCVg==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 1.5516739608371684`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 1.5516739608371684`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EFA\"", "\"EFZ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0474322649763037`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.022288602433952587`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "46.994075473334`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9, 3.7069035229495983`*^9, 
  3.7069037880766544`*^9},ExpressionUUID->"bfa77b8c-2688-4d7a-86ba-\
280f3e5c2597"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<DUST\>\"", ",", "\"\<NUGT\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<JDST\>\"", ",", "\"\<JNUG\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6984978302715607`*^9, 3.6984978560185995`*^9}, {
  3.70201941324889*^9, 
  3.7020194137295437`*^9}},ExpressionUUID->"9d865506-bd6c-4380-8300-\
cddcfd93fe89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Jw3m+Xp6HzQv4IL7oQIrWYT/yqzPSvpB91MsrWT3/qmPw/fF5tCb3z8TrPob
2ma0M11PtaiyRaiXexs1nuvDUfio57eLr82UH8MTuOD+Q+cqloLjAZkXPNlB
HJBwfdDDgVMKN02L5v08D+EC8aK0cFWL8EEMBx9wfWgCc3/L9XcI/Ox+q3Kv
NnN9uF/V1l7y/jNHN4uwBa31mldcnxu62V1fOxAOM6ZcvjKKjjdo4AaorYO2
cbz+Dx6SZXQ46cvxbv1qlvz5XG4f+sFeTq9eDy5HNkXBfuJyxWneP7cHLrA/
T1fH3SLsydhedNdFbh+U8N2m4gW4fYiE5+PtjH9H+ZXvhHvqJU+Cozj/12GO
x8jWntVRfzv2OyN7wvv3ZsKB9WPWZ7vx/rltMM+/cPuWDfP8Cln/Dc7p9qWv
ZxLv75sus7N6C/yrzc0pRbZy/jNltv6P38fP8CKx+j3g/Lt7WPL3/3L7cAnm
8TjXX6uHXXnLqtaw+71KfzgNrd2qHG7PLsCN3A7+SqrG7cMHmNdDuD5UqmnX
3qv9YK+eY+f4R9D9dGFw1cq7LUnBPP6xwI/2juwy/CDv7ytfC+2hGJ4ncvvQ
Hg4d7nZr2mseH4XCBcZ/1tW17N5PTZna6N99Au5Ju/P4sy285cjUovO68/gt
GOb4l86XroRdaMDD46OT8Cn8mjvneb+XTx27900ypo7d+yNfDkeLr/MjHh+l
wtPOLL+/cwuPj57DjWUTQ7O/k2Wj6qL+KMQBN4/nl8C3i4odBL3/mmOw5N+K
WjMzeb71GawI+y5NK8fzq3H1EE/5l3RTSOh43RGY1++pfTM+hnuL3csAnl91
rm8R5vpHVCxdlyxvCm/c97mhXwLPTx6Cy9TTdG0dy/OTD+AC83kypwZ28Z2y
MVwa0XbFORw/DoYLxuf34NZt2i2XpfJ6kIMn6scG35CW2ymeUnvCPP7n9awB
8PlC4oZnil+Nc+ETFaL8GsRSuuovnPv9Mkqc49t6DdGfF9uzo/gCur6hL1wn
Ym/5ge94vXM23M9TXDDn/Ry74Yd5tKBN5Vm7kUVI/Bl78VUErS+YesOmmhsD
c9RkaQTsV2/neXRplP8d8JG01gt0j+l66mvwscadBs1ZTpb0bGyrPxTPyWfA
Qa/kiAB4fmorPD9c3GDI84FZcIHxj+Er7GN91L7WKx7/TGtiEdq5+8trJ3L5
JsLi7qBZARxPXoaN/x4uuJTO86uf4PZH1+etLcX7A6vJEV8hWhtylZ6fbqPc
Lr41psOegSaJo4nn16wwTbeWpfKRV2mKePeUOEHO+e8Irz1/SojX8Xzlebg+
FQ/Hu7nw3BVhi2Mv8Piioheef173qklVefwpwIcniQEir3eMh3eIy2N+PF4r
520RBg5Mlz9ZwuO1dt629oHXN0O8bf0RWbIarvBuRMdNCrK2dDNLwfGqoQ3c
2H35kVOLydYguNKwyjHPe/F4Uwvz/imeHz4BF5iPNrVqbhG0q6ZuQEhC5Tka
LrCfULEMTh0y8tib7TxeToEvDxU7QJ4PzIELzJ/LVS0sQq3wd7tbuHJ5LoaN
nXP9PL/yfrtkOPytOADg+P0pfOvUj7LFdvN4uWhLixCXIW5oo+erWdjSNh7k
+P0wvGX8jbo7+nJ//QguO63v1DPLuX0r0soiPF87cGvdudQ+KeSw+Gv79KT2
2ngQ5vUvnl97ANPuiXPcXxfyseSvF1L/o2oE83onx8uD4NeRB+5cKMr93V0f
u/ZfKWltF59rGsCVacGa7q/v39qu/zLNaW0Xj6v/wE20XfMc13N/V7eNRXjb
wrL/22zu7/rAbcTtDkN4v/tsuJP4OUEZ7l92wYXE7a5POR6q1RbxVmaFZoZV
3H/0ggvMZ8pmwQXmT5Xb4fDIpKC3Gmp/NVfhpo6F0YXzelIPX/z+/v1fzbrK
62HhcIH1HbXO1y4e1V2Beb2b488vcIH9wqqp7SxCn1RN6s6mPF+1GS6wXmHI
gCerH38vXZ/b67x2dvGjzK09yvN91ZtOJXg9ZgOcdc3DqXEox8cX4QLzzdKP
cIH1K3UHBdobcTg3hO4vOa+w+/3y9/BVMZx+xvFnBcFScH5Oq4Dz6mybklOX
94+Pg3k5hevDO9hVnN7Ywv11WT9LwflavS9c8PuBsTDvf+D54lWwoqa4AMbz
ldIOGG8jmltjoPsbW8P/fh+aEDKc5weDOtg9X/kKuMB6oSpNtLj8MY3ya23Z
EfVzZ4lvAy1cHwI72sXvyqUd7eIPzfGOdu+PYqS/Xf7Vi/xt7RHn9yhcYL7e
+MTfLn7QLuhkKTgfbtDDBebDrQ/he+LnZekcrxXubMmfP+TvW5rAvJ+Z47UD
ne3ie+l9uP+L9RVcO3N74NjFbnygbghfzhU3gPP3AgPhmN4PEaHxeuc/OKJ8
U7XEgddr63e1q0+GfnBt2tDG6xlRcOr2PvWGKzi++d3V7vfr63SzCPvmn1v7
dif9HpMSfp8UPHh4EOVfGgmfXrRn+I9MSlfshM/+ETe0c/tVszvKq2Sw11Ql
fy/UC7629FDYDw21D/KZ3W3xj4nyvw3m9Y5HlP9s+Gf0tH4v1t+l8uzewyKI
0ZDc4Q6V53R4Uifv6fJu9yj/W3rYxj+Urs+EK5d1zoiqfoPy/xl2r95Z+vjA
dSq/TT1tz+cW5fcSfKGB79iMDDpekgdfcxe/2LpK+a3ay5I/30jnG9bDNXvJ
Ho/ZfI3K80IvWzySTfn9AL9IED/gyqL8VuqN/sbwqMr+/Vcov34wf59A15ee
622LhyldYYHrRv23O3cppavLKzEeabjIJ687XU/XHub1kcuU/1D49tkuu3Td
yKq3Slt5pFN5luljEaqJzcNDSje07WOr/2RrcB9be03Hy1bCoz1HKx8vukTl
6doX/aNW/IA0k8rTB65R6MyykCsZlP8xMK/nnqf8L+9rm5+5QPlPhXm/DFnS
sp+d5aPgK2Lzv46sWgLz+gflT3sMvore8c4syo8yoL9d/jRx8Jlfoze2u0/3
1x+BE8eWPjF/Jl3P9Bjm9feLlF/nAbb+j9J1sfBNR8/KAaH0+42HYN7vyPl9
CPP6N+fXaaCtvpyj/DaG+8YPKl3I2UDlmQTzfsITVJ734Pdf337skpVG+XcY
ZBGOvy3bt372Scq/J1zk3a5L3o3OUP4HwIt9xICN0hW37a3+O8hW/imU/3qD
bfMLqZT/vvDXfhsXDt1H6ZIoeHWCuOGd7q/9Ndj2vlP+DLWH2OoPnW/tDW/6
OiCy3Tg6XxYBhy0qjxFqMuV/B1y43/P6bRbqqXxrDEW8OvFIrxWdD1P59oR/
fWmyqv6eI5T/GfDfwz2rhy06RvnfOtT2/I9S/rPsz5d3G2bJ/56S7qeaBoe/
yZj7rzNdT5s4zDYeovsbLg+zza/S+dZP8MszK7rMq0vWTB5ua2/oeP3G4bb3
+RDlPx0uKS5H+lF+pFbYt9qd/pv7cP6rjED7WmFr9zgPsnEdTN8jJpMlF2De
j0i/T54Lb4s3x5Zqy/mvGJBff/qStQLs+vuba9eax6k8zQG2+WQ6X1NupEX4
FB/1s2ImHa9vB9N6+lmyKWRkfn+5bj+V5xu4S+kei3ZXIutKq/Lbk+pJlN82
8L3Zwd4vBu2l/AbDLWcrul3z3UP51aryn3c7Sje4jLLw9wljyNZW8KyPnYe1
K0PXl42Gn1T75Xvkz27K/zJ4SqE+jlM991H+U+B9Vzs0utOSzpe2CLQIIxZf
8y+VSlao4P4N3Q7+us/5XwyHezW49suJztclB9raS7LxaWB+ff+2k8pzxOj8
+ZIWZO3C0fn1s+0uyv9heJ7juh39Hu+g/D8anf++btxO+S8yxlZ/dFSeB+E1
zwt71Z+2hfL7AB4Tnp54f8omym+hIIvw+NvWniFVKF3dKCj//W5P6ZKkoPzf
/28jledduLU4XdiMjldJghGfiNP5XnS8tgF8+nbx/V+OkA39YVoPXb+ZyvMW
TMtHdciaP/CMqKVuPyonUn2oO9ZW37dS/vvAMWJ3KaHfI50N5zhMOdmuCln3
E/ZIHdY+LIeON9YKyX+fplK6pHeI3e+VzwrJL/+5ZNX2kPz+rNIGKk+PUIsw
x92jbkbF9VSePULzn598HeU/PNQW31G6RgdrH8YONEdRuv4K/Blvd7kjdD1F
13F211dPHWerr3S+bvO4/PivIp1vzBiXX/4JZMmncbb+jKxVj7e7v2EDTOvZ
TcnWi7DDpPFJB9vR/WQfx9vqO6UrK4chfhGXs73oeZoSwmzzIVQe0vNh+fk1
0PNRvA/L7/9ctlH+K0xAfRWne4KpvHWKCfnjz4Nk+VmY9uutJqvewa6d3kWf
Lk31VVt2IupDv3AXj1pUvw2+cNX9+6ssMND1rWMn5o8/rtLz00snIZ0mNCl/
ptbwtZBdLp1cKX/SIHipuB+rKNVHxQo48dfXLRPK0vWMpdT58+tJXB9awbOi
TwVt2UTp8kC4+RtL3IhVZNVS+P72szUbtSFrj8OBYnd3hCxrPjm//QshK0dO
zh+fRZI1i+D04l/Cmw2n/OmPwtdun6s3YjHZ9ATufVQ56e9Lft+GT0G87JhT
xzKc6/OCKbb+guuzHt7e4Pr4b5U4/4/g5DPjrneeTpYXnor6fHZ8+5pPyIaY
qfnzWffofOsBWFwtH1iO2jPZfdgcffpORBK1J0qMQ4SuH2s8d1pK7aWmITzR
fdzeAAVZuh/ul5M28t8FOl9xB06Z/aNlmShq79T/YN/bfU/rsyhdV3+6LX6h
6xv7wVMTmr8d9pjSVTfh+0N9lyqyKF37G37u+Dz+UhjVD0Od8Px46SDXByVc
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
K70SUV7D4j4sf7Ol/f/cmWxF
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
u6MNv79jBziBOiCQeSn1dw+s5VpzqeRWjqeLn9Qn9X83xzMawdwei+L8sLQF
f1bb8TWXU19xkvm433S0ENezuQiY5x+OcD3aWoH/b307I8BqtyrtGv6+SZfc
pyEbfZDiD9eztWDyoD7FfjUHc/vawHb3WLDEx5RHtxF8v13xBjnSUh57vhQ+
DdNxffQxsqsJWNUHE83j7/nDwZIfiPzrwBXVhlsOymd2q+dZr+D89zTS+7Ql
KsGYwN/TjwIr/57yIfVpWg1Wpz+yzKL+rBfBseHu9nUWfX8Dq/2qbwfIFkfK
kPlt/w/M+sIDPu/6DGZ8VEPWV7ZUAf35+D1ty8HqMFE2I9udZ8DqvNTFo2z3
fACzPqrjePosqX3aEOSzqSPIplrgK5jOt2ZRHvdJsNofm36S4+neg6XeyfGM
GdP4tIF/F/Z6OJzzz1IdnHcJLMgSsr1/muD35/w2vFH9VX69huvNnC6tj6dv
7jabQflNYKnvcP04+4Al/yJ75oFzl9C9LVGEbE2dzqclUfW4hmRHZTD3U7px
fHdPsMrvn3fi7+siwV9XIcFOIOvtMDinOvC0RtZXhfQ+zXz+6+h157i+/N3S
h67/OeA/icrmeeFif/MBcBgUVPMZx7M9BavTXleqk/VdMvgkftlG+2CaCVan
yQZPEvn3ghmfpOF4Dg9Ync+KPZXPW6Zl9GnqeEjzNmL/d4EZX3xmu+sBWIXv
mTaIvUqQycf93EtVRd8lwDx+sEjslRM8Cg6za1LxX3fBKhzaZyPr42UOsS+m
YmCJZ8nWNuCjSOcrlyfrboNlv4dsjJ3FF6h/i70tDO7csubBvhk4vr1llpDx
XDawxBuiz39ZQsa3Fcjqk/yuCueTsxn48xD9ydLvyZ4xYDkPIP5iA5j59GCy
I282n9Qzn4g/MINTqgC4JVkXDmb+ep+/b1wLVueFyhYX+S+DZ9krXA6bJfOh
YXb4k+/PKs9cK/NhJFil+7mGczzzKrCqf+W+Jfb4QvYQ/+/8Cub52KNk0zAD
/GOnd1sznCFbV4DV+SXbfI7vOAdWq2F5DNn9CYxw/HarDqL/bDmgT5i7XGlF
n6fBUj+U+eAHS7wv8yFzTtgLtdqbi75r5gyJRzwncobMR/078J9iVw5/vk42
ZcjlC+SvHM9aDaxOC5f/Rv/m6JcrZL4bfWDZ72a7JW3uEH9prwqW/QW2u3rn
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
Pq5dy0P2r8wlon28Hxuv/4iq/wMAnfKd
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt2nk8VO0XAPCRpaREZVckJaWMJUlkbkJKjKVoH1sL0iRLaZtCKsogQotB
iLZJyFZNKlokURLRlKXMRBOV0vY773l+7x/v+34/z713zjz33POc545pvjvc
A0bRaLQ+GRrtv//CP7qhO0UU+V+JLfyLeRb8Tmr+256Rz/+ZUwsuiij3GWOL
40r2oSIq8O6bqaImHGfsAN92nqF+UQrH2RngRZUHx0Qpo3n3wBe/qBidsEY3
9oNZYddkFl7B81nBu0TU0ar7vD1FaG4aeOJgmX+PMloiAo8sD7X0m4vWVQkT
UY/v60/J2YLmp4Az099MXbMbLbwFLv17/d1hBRLvRzC9LlcUvhLNmBguooLX
9XSd2UbitQbnCK/RXQ3QtCpwfVbUnPjZaHoPWOPRTVf/dWjWhAgR9aKlKLEw
Ac1dCDasVTSYsAEt8ANvU9tSctWNzOd78A9z6zlSlWjOuEgRNe9lbPOhKjTf
AmyY21pZR+ZLyAILbat9NxzF76MUD66NknqYtAzNk98N85PWa+Ulh240A3+8
7Kye6IembQSbJj2QyF1G04+C9f/1ae2RkPkuBv/YNktb2ofML32PiHJd8G/P
7voBnN91YD3ZzxWcBDQzFhw35qzkWgqacw3cLTDLytmO5r8Gs1ZYjHd0RjO8
o0TUasPvO7z2oNmHwfNDl769TK7Huww+LNi/9/N+dGMLOP63wnb3wX6MX2qv
iJL8K8899BPNPQj+Ps7421wRWlAI5vlt+pP6FC1pBj+9nNWxoxit+xfseTpk
+47raOasfSLK3dXwVUYZWpgPfrBjKO3VcbTSc7BkIO/FnSw04xd4+rzNFecu
oNkz9ouoqFMLU44XoXmu4MFys8jrO9CsH2CWxqOQ7hASr94BOH7vHbXxbBKv
M9j7/LNIxZMk3giw1ReVp7/eoznfwMxelSfXEtF8nYMiiqEc8DM+h8TrBBaW
dvTtv0ziDQM/7KH2jk0j830evGxrQ8P3DSQftDkias6A4R4zd5IPjuADzk7T
5EpIPuwEn1sle+fpaJLPZ8BGinl19WXk+XsArv2kOmojGdddekhEbSq69exn
DsmHEPAB/eluiZokH9L/c4zEuIwi+VADDhyOsFugS57HT+Aj8tPeuf0g+RB0
WESNu2//8osayedU8GGpee3yApIPd8BLZi2cOckFTROBR8oaGcrzSPyTo0WU
c8DO2gVPcVyQDBZ61nQ/I/kkqQbzdvW3l9aQfPgAvtx45tHBXpIPyjEiKkxm
x6e4j2T+F4H/dq6+MYfcL6VKMC9o/NHkPSQfusGh1Yari/tJPijGiih2ydGW
akuSz5Zg03UrvsouwvFGX/DylRVqpUtIfrwD158eI7U/j+SHwhH4vnvC/uU1
f8L454Pj5I/E9LHQkk3gVues3as/oHWPg/cdk19yrQ6ttCFORNl0dD+6mEDi
iwNvvtypfGksie86+OtU3t+zFWKcP/pREeW/QHqizhU0fS24q7BagTeEZsWA
ObfZvy+b4fW5V8Efe7WevvYi8bWCN+tL/KTGoplex+D+Bh8+OP8hns85BL7w
cNf6iVw0/xJYvfvhIe12Ed7/l+B97qNW/KxEK9GOiyi5zKdj+wvQvAPg5JPv
ZLsuoRsvgn0P1zwTnkPTmsFl4y8WV5WhWQbxImq3fNLVWx1oSR54fdZ2o0mN
aN1GcEtcxomOWDRzBPzjr6mPeQyao58goor733beO4nmu4AHkt4csN6PZjwF
J8sb2natRrOHwfevzDxr4EzinXZCRC3Q0PRItiPxrgDHGCcaqVuSeCPAgqOz
Rs02RnO/gjN7qaiTc9CCqSdFlPzBM+YHDEj8y8CzmyfPnTiXxL8LvM980vxl
w30Y/znwBO17zaJBtFArUURpO02+dGMEreQANp9n+u7fZzSDDb6o+nes4xCa
nQmO0VnXueEPmncfPM63Y4aBHH4e3Y4L+TrJJsDgO45zT4PTDIsXXxGhBXfB
V3IDpX0+oSViMHtwSkSsGM0JTBJR7W+saxxqSHy3wSWHj05d/5jE1wdWTmi6
/juaxDcpWUQtTZfJnH4I3ZgEZq2M7zU/gqZVg1v0nlR+34+m94L7rk14aRyP
ZimliKjmm1na6RtJvFZg0yfvUhvXoHUrwEuEbDdFHzJ/XeAA47r5d1kk3vGn
4PvrP3A0JuP8BeAJ++KvT1lL4vcB87c6WfaQ6/PGpsL95k50K3Al8ZqDl5d7
1N5gkHg3gT8FKr4yDyLxHgMzEv3fjNSS+RudJqKSJO3x6T/J/JmAR8XfPcBO
I/GuB6+Q0Qu6epXEewR8khNlYN5D4uWDZ7XNVlkWS+bT+LSIOm/73o/7//lc
A+a5+i0oJPPJjgbny8x8Hr+VxH8FzH+epiZPvl/jK/BA+JpuxzAyn6vTIT+f
fq21ayDzyQEv3/dXdDuDxF8ETmF+/zylm8T/AtyUMe3ConoS/z/wzC9J/5bG
kee9IENE6Xx4sKhMRJ73JvCF6D/KUYlYPxi/wduu51qtb8B6wZ6ZKaLemEjJ
xX0j9SoP/JFDXS/3IPXqGXhkh8exsOfk+f8JXv963QnbfTjOnX4G7jcrLN03
kNSrlWCLeXs8dR+QelUPnhy9Y0Q8i6xX38FhJzfsOWFK1ivdsyLqfeEj1QIR
Xk+4HFzCmNRn4EPqbTj4Ko+qPkeheUNgpcn+tdM80I1Tzomo5xsjIsfQSfzL
wO1bFnLXueE4PRT8/qdvwaRXpN6eBcvJt2dfrkZLNM+LKLu1a5k+aWhde3DY
1R+fQ3ehmTvAvNS35TakvnIywMcNRssFBJL6dQ/cm+dSUZxP6teSLBFl4v7o
l9lUMr/BYLWq8inBYWheGjjgyev2MgGpXwKwZl71eOk+Uq+28aA/DdA6cHAV
Hi9IAVvdtR92m0P6l1vghvAl7D+HST/+ESx2ffxYnE/W14nZImrrYoUx0mS9
FXLBKzOnd9sm43wrVYHzX30f5Usn+dADvi19UyN+KukPJuRAvP+yW407yPq6
EPw7VMqk3e0Lzmc5ePK299a/ZnzD+XwPnqnY/M73CJo7Lhe+D91caZ/bD4zf
Auwmcv743Pk7xs8Cr6zljz+zH4/nvAU/CLF4ol7xFedT/gLUk7qGyuZ3OC40
A097lRoau2IQ498IXmlirinehfEwjoLv7Ylxnq48hPMplyeiXJwM1Is24fE0
E3DN3fBnytdI/OvAKkd/1GwuwHFWLNjMcZ176hM09xrYpGFUs+U1tO68/P/W
4wmLY3PRTG/wQ+lLTtsl+Hmcw2CBXuZam4V4ff5lsMNCjlCnEy1sAd/PZjtd
/IpmryoQUVnhy++EqOD5vIPg4iOXxh/kk/gLwdLjin0DRuF80V6AH858nn3y
Kc4H/S+YF7f47P1FZH73XYT6vb0g18gd50+SD4413aXnGojH6z4Ha9cmaqzL
wXHmL/BSv/jm97ZozoxCqD+qQc+kyf1kNIAXtvhq3QtFs3+A3SKnr2ttxu/P
0yuC/J9uMnqPDtlPOoPnj2c2RbeSfvYJuH1YMHWWLelnv4GjtcTb3niQ/ZnO
JehHLX7TZTTREidwwo7Aemo+yecwsG964Peds8l8DoKzrhR9LjUl86l9Ge4/
vVAt9xjJB0dwkMXuhSEmaMZOsK1SWoJmKZnvM+CtP+lzVu4j+aB5Bb6fINfd
LwBNXwqemczM0q3A+WeFgOckawT2BJB8Tge3tupUrU3/ifHXgA8Nrl2k/hrn
n0ldhX591xbu7IFfOJ9B4HUd/dPeL/+N8aeCr/z2tO3aR2P8F/8dsNuUM/+8
+X8xfhG4pqBnTOY5vB5v6zUR9ccmuM7vO97/xmSw3KNdW2bU4OfTboEX0PnJ
EeF4PEuZD/lcNH3YsGkE5zMRXHbs1aD2Svx83UpwR9KammeuGB+zG+y45lRK
mAWJV/G6iIo8yOVI+eL35VuCh8aM+dS3Dz+fcRPc1GC14dRbNPsd+MLV09Py
fUn+KhRD//8i3LSoB/OpcT7YR3bvTZYmXg82vCKqKGTiu5ZL5PnqBHsoyqwy
6Sb7hzE3RNRNozdb5fxI/20K/pmXkJjSSvJhA9j35/e53Y1k/xMHjuh/oL+4
ndQ32RIRtfgd7EPySX2jg6ekZB6qm0Hej6wF71vTP8wn+3l2DFh47cK3TF3M
D95VsJXfhsZ8XZIPc0tF1IlXQ26jfEl98AK75QXtj59C8uEQeKOb+ZTH/mjB
JXBiVHFA4XSSzy/Bx18JIu19yXrnWQb7w0UeCelqZL04ADY55vvo61uy3l0E
R2wN8Pnc/wHjbwYnGM91W+zfjfH/AWeUjZX3durB+d17E/rNs8FHwkx6cX7z
wYL429/jFuDx9EbwjOa7qXkUjrNGwNkm6+LM9+L5XP1yEaXgoHWz+3MXzm8u
+MqtBfmP8tHMp2AH8Y6D2pl4PGcY7D8nVnY7DePjT6sQUfbBLVKjTuP1hSvA
Yb1zvD+vwnHeV/Ambvc5/Vocb5xaCc/TO6crx4+QeJ3ADVohvKQdHzHeXeAf
2dm9pUF4vuALePErYYGCCo5LtKpEVNuEfVTUAdKfO4DVjh6fVzGG7C/Y4Mrb
Hy18b5L9ZCbYMb5iSVgJ6R80qkWU386yk6M9yX7NDvzmtRpN5QVZn7eDLQpG
JVA/cP54p8GuncYBnVkk/rvgj5eK93ssI/0P4xZcT09B7STpF7iB4HVH61+b
15P1+hQ4pkduo0Eu2V/cBtvIqHOUzpH+og8c1WmeEHaI7Ne23BZROY8Gra6+
J/mQBF4g57BnyQ2yH64GD/6qn5QRSeLvBXfu9b/kSCfrtdIdEaU4h8VlBJH9
eiLYyCy5wIqOx9MrwIsmr1316QZ5/9QFfjuUYTtkTOrzeAHsVydqBL9cRurz
AjD3Um7G3uX4fDChT6Fq1TQM75qgOUJw3brL27lnyPu/sXchPyXekUfPkvdn
5mCGyc6cfmsy/5vAPR/7m2jkfvA6wGZ3s1fZkH6ncXSNiHKv9A4YqcP7TzMF
F761+MmsI/38evD+GK5e8jQcZx0Bz3EbLXv8LN4ficw92L9ZjrnNt0TrGoP7
DyX91GrB45lrwHFTp/WOL8RxTjT4+h2mk9CS7D+ugLtSBorO/sP5Zxjdh/2P
Dcffv5z086vBx574qN2KJ/tPDtjeWv2paRnp54vAS/aWqamxSP/5Ejx2Ufy9
E39JP+fxQET9jTl7UuUT2X/uB89LCnpyPY/UuwJwVHxwTguDvG9oArv0Nr0Z
M5nk92/wvSlbTF1mkfyIqoV6EzTu5PF0Mr954I4xWfyqcNLPPQOnn9SM27mD
1LufYNndFxp83cn74Ol1IkrdIC9yTgt5v5oD5viL5jp8Jut3PXjLUd9jtvNI
vf4O1uJaumi14f2XLH8I148frvasI+9TH4F329trhabhesAfAnd68MKPxeJ6
IJzyCOqvS+rbC3fIer0MXPGxLdFEFscZoeANLp6XRaPJ+iEBVzUfyR4qIuu1
1mOobwKFnV9TSLz24Eh5lW0FZqQ+7wDPeDCyeNlNEm8GuNXneLPuIdK/qT+B
9X3r+opxz0k+LwGP+fK3bcJ8HOcEg4fvKmqkTyLxp4GVujZLvx5CCwXgMxEG
U2d/R7Nt62F/2Dv/9IbXZP3bBq5U3jg1chqJ9zZY8suJkUP6P/pHcLDJsliL
LWjB5qciKnBytMe/h3i8hAseNXG4h51M4usBTzux0yJniKwfExpE1Fy/GFOn
dPI++iTY0U8+f5shWd/KwSOvzySk/SH14D14p0pF7GMLcr/HPYP1Nlrv6qlv
pF+zAI9JkGY4JOLxrFKwVEOU3e82Us/egk+PUts59QF5fyrfCPuv+ad/WraS
fDUDDwo7J5b0k3q2EXzk+9R7wXFk/y73HOq52X37zc5Yv5VMwArWHw/t/v/7
kXXg7V4FT4/K4zg7Fjxo2O6rqYimyTSJKMsAtfKv3uT9yDyw1/aXs9Z9wXGW
N1gtrMv36id8nrmHwR4T5EZrL8JxwWVwuG9hho0fmjmnWURN32h2hFWG5qwC
d41LTfP9R9azg+BDI30ad/7iuLAQ/CxHbqqGKtnvvwDfqU1apfkBP4/n/kJE
XT78M+nLB1wvGveBN/fNz6q89x7jLwBfjSkcl+VM1uPn4F8mG1g9f95h/L/+
O34o30hPCa174aWIOvii7KhsvRDjbQAf1x79ZYUyXo/zA+y4uqK8bTOO8/Va
RFRS2HfTaG80IxtcNn3uxZ1GaPYTcOus3SKjajTvG9iupf7AeFP8vEadVyLq
376q2wc3oGnLwXIqZ0e7cNDch+CR7L3UJBKPYBDsus3s7iQtHJdot4oodsjk
TdEHcVzXEZz9pHKxzd+3GP9OsG2TZvqC1zgu/Awumb/i2jo6nq+k+Rrul20G
TXaExL8U7JPQ5TfRDc9nh4CV4tb80VnZgfGn/zfecm/+2W9vcD7V2mD+VFXC
Omfh8SwKLNwV7rlVF6/HDQI/1ueNXVyMnydIBW/UW+JcUUDivwM2Lr2pJp2O
5ixuF1EGtXEN8wqw/+FvBX96XcVq3IQWJoNn9tM+lOzDfkjpFtgwLk9DuZz0
Zx/AbKnjPZvlST4EvIF4CuqK5Cbi8TQuWFHxpMfyryQfKsFysntb6PF4fVY3
eMYPsVv3WzRXsUNEyWzfFbwymvRnJ8AbjzVPSwki/dlNcJVZZuSIAcmPd+Cv
96s0hx7h9+ErdEJ+rx7K21SA48L54HT33O/i9Xg+uwS8obSwrOo+jvM6wSvk
o4M1n+B445i3ImrN8zuK8+wxXpoZuNHQgL2oBS1oBzumePLjf6MlskJYf6aL
ls8wQevSwQccm8O5U0i8a8FtOpb+rq1oTgw4xSXw5sp8/Hwl6Xciivn3dFpy
Ko4z5oInnFxePX4Ix9le4HuZI7dneuI47xA4onWM4l1pMt+XwMIxLo1RdXg8
a/Z72A+ZJRyuy0BzPcE0hueU4la04AD4woNjfW9G8HqSi+AHt6M/zBok890M
VqAVLcsZg9fnu3XB+s/lnH1O4hPuBTd0aSX8+oFWygdHTB9lLhNO4m8Er17z
LjjDFs9nj4DFT2+OowvIfO7phv5KQ1XzVgXJh1xw3ssb8xc8R7Oegn+5VIdW
nkBzh8Fzh+uL5pSR+Z/WI6Lkd8v99e1Hcx6DXxUoeflMIfXsK3hDpXuBHJ3U
s6m9UG9HK9rIVJL9hRP4yd6SmeldpJ7Vgacfii+wjsbxxi9gnRfT55xbSPox
7Q9QD/8VLnQn/TndAdzacdipeQvZX7DBbE+7BT5+pB8bAAev19768DbpxzQ+
wn5l57/F0r74PDDtwHpHbriVskj828Htxy1N2W/w/vBPg63qva6c46MZqn0i
KnZG4vNTH0g+MMAvB6eoeueS/A0Ez7tUMCnTg9S3U2CTi5//RhVg/aDdAb/+
F2ns69mJ82kjElHJtz8YnpuI44ItYMsd6vqac7GeSJLA/h0zLYXkeN1qsLzn
qlyfW3g8sxecMtnH+G41WugvhvXzc8L0sa5Yn5QSwaGDx6cLmtCMiv8syHJc
Yo1md4HvmY1j/tAn9Szhk4hS3hIw2tUBr8cqA9vsynq2cDaOc4XgLftXNJ12
a8N4x/ZDv/BE66rQqx3jNQcf7U2PvnnzNc7nDfBx/cYc2joc53eAt4+bVHYu
nMQ7egDqUVqCyigaidcUvO6j2yNvFbw+Yz24KWr3k6ZV6MY28P3ByRPnOqFp
sp9h/jIYl+f/QtONwWMHTpkqWuLnsdaAQ58YGvqtIvFHgz+om7H45Hq6oySw
X9x2ymHGJ4yXaQS+tW36uFebcZyzGvxi20J77zEkfg549GPvkbZkvJ6wCCyr
FRG4qRzH2YZfIH+LBxU/BOA4zwM87GtIrf+L4437wRuOq10P9SXxXwQXLrpp
aLicxN8E1hz/eKXPAjK/zEER9TBvaU9DFcYniQKv8/BKn5LXivHngWf+e6sx
7Qqa+QwcKvfz9K/FZP5/gqMc7y+79R6ttHsI8jOlw7uai2bkgO1ThpJsTPHz
2PXg+oKNMg9XoHnfwTerDxlUFpP4db+KKP7r3oS0IjK/WeCqaQu+vflM5vcR
2Ex15+VnLjguGALX3+Vk5+wn+THlm4hK+PZs+agUMv/LwF5i5Y+PFdBCCfil
yT4lmWkkH7S+i6jyFyVjC41I/tqDy4ybewev4fPA3gHWF5taW+qjaQPg9PNa
XKstuP7S1Ychfy6UavtHkvV5Cbh7WP3dhziyPgeDN9/pKw1YQPqLNHCtsfai
212k/1H5Afk1lPN0bDuaYwt+UKc0FFxJ+p9tYJ6qTansDXzehSngZX7Xitq9
yHpyG1wWGPIvN5SsF9Y/of5/l8mnh5L1YjN46/KR61IVOE5LAg9JHXjIIuP0
KnDcqlzlZZNIPe4BO7yyD188CuuXxG8Enq9DWeGm2Wjdk2Dn37nXdR5gvWOW
g/d7Dc3ecZ7sN9+Dx6ekjLUfxOP5435Bv9k2op9zDeszIx58MXX+wKxRWF/Z
peDVJ7anya4kvx+9BZf0mqt5N5P1Wf43jLPnWKYmkP7CHNwzPNE/o4f0w8Xg
8glrCoPO4bjgDbjAT7i9WYPEL/cH5mcuR1b1OlmvTcAL4y8+eiRN6vM6sOOo
jTXvfpL3O6/B8x3jzr/eRfofmb8iaq13vWk/+f6MeeBl0Tn6bTkkfm+wVmfD
9zQj8j7oMHir1pKSidvJ+iH1D/bL2TbJ7FLSz88BayW/yLSlcJy7Cnz5iU62
hwLZLx8Em1Atnrd55O9lCsEWhg6nXbPI/m0WTUylD/r33CJ/L8R3B8scFS/c
9IG8L94Hpl05KOvZiPs1pQJw4on67MP55PeD5+BjcrJWGeT37EZXKTH1JnB2
UkYU+fuNKPDvCXFVsknk97AL4PqOHa1ufuT3pAZwoOnj4BMXyO/3P8BX5U2O
HC7A76MbOUpMndJZOPG5F8mPbHCrS6LdJzvSDz0BV5654bB9Lo7zv4HzXZ3v
hMfi/RHqSIupOaPWn2gdJv3beXAJ49dj+n3yvuohePRsXlLkRsz/xkHwF+lT
lvtpeDzdUUZM9c+916rRQ96vPQBv60/9tzcNj5d8BluPO2P1s4P0P5qyYsrI
aGaJ+0bSvy0F36qNXnjvEok3BHzANT3nhBLJh36wWlw6N/MO6YfV5MTU2/4l
Wq4f8PlkU+BRu+TWt7mQ5zEILGM6xcriL8nnVHDBrHc1nnp4Pdbk0WLqo07b
go/e5PfQxWBvxWnnfdgkH7aCf9hc2K2cSPqNZHCZlZk8t4jEfwt8b6+hziZr
0r8tGiOmJq+r2fzYEr+/MAC87Pd7yYTXpB/igvWKFQp/k+eT3Q1eaiWe4f7/
/tdPXkzNVik9t/EYjtNPgD1ntub3kvrCugmef/KvnX8yWqAwVky9uh6/lzuE
3595HHyiSrX6VwSpZyVgi3FxkUIVrK/8TvCf8y1OqWyyPo9REFMHq6XZNeVY
X5XMwNqV0VVamWR9uA7uC38e9U30CuevHXx829HHhWFkfZMbJ6Z2nA87YHsE
6z+dDrYZtrMLdsDjWWvBcs9syj72vsD5kh4P+XCJfzGxtwnjnQvOrbKdaPW+
GeP1Alcc61R5roHH8w+Br77b529V9BLvN01RTM1d5bmMy8dx9mxwuXpvybM+
vB7PE2y31bqh+jmONx4AOyhd9Fpai+fTCsHdb6eLh97g53ENJsD1tKMFM0PR
Ajfw+1R37dUP8HzJXnBd1NR9qzNwXDcf3DBjevrgDxJ/I7hD0e/wrFd4faGL
kphKC7G/+JjEp7QHrK7U0EL/ROLPBX/dcSh36kALxv8UrEoNum7VR/OGwTIv
/jFGk+uxeMpiqoezrGjDU5xP7mNwr29c6wZvPF7wFdy0NGqyeTmOS6ZOFFOs
MK3spD9ozjlwzq5bWSk30fw6sKjo1Kwl+thPCL+AD0W/Ype8xuspaU+C53n0
51GHfNAMB/Bs5+ztUTsxnsb74BzlAc/WLhynfQYnqmxdOW4Ir0/XmCym7rRZ
Ttumiv0Hyw4smPmzMEKMn8fdDl6uEfslYDnpdz+BdYZDa/fzyXqsqiKGer2u
xiSU7JcZ4P5rn6l75bi+8wPBad4l09mOZL9/Crwq5fSguyF5HzFJVUwF2B/5
m6BF3kfYgPeXRthJktCNW8DC8Fl2Jn74PNCSwX+8jqwtEJL+uBqcmrjbyPE3
xi+wUhNTawNVxj5KwPgl/mBxFVO2opj0Z4ngywx1gcwV0l9WgKVTNu652En6
yy5w0khqjHITPh9Kvupi6txXje8Bu/D5YySAlTcFJiyKJv1OGfies0pGIekH
eUJwCEfPPTcer8c6piGmroRrvhoQkHy4AW6oe8Y8Fkri7QCndPkFr+0m/eRo
TTF1UUH30to9pB8zBfuoTUsxXIHx8/ngiCFtJ20FPF7YBu55/FbpQBSOK8lq
iamdL4742ewk+WAMfl2w4c0rO/x89hpwaq+c1DVjNK0VbKPQMbjyPR5PH6UN
6416+rKafWiWEfiDaWTxokiSD6vBoi9yT0uGSD5zwOMvZLdWziH97j/whNfn
B2Ke4TjHcApcv3Fa8anVpD54gJviZFObqvD5FO4HB028/1JqNear0kVwcGjh
lu1v8HjezKliKnxh7NkKP1IfmOA6xZVOp4fQtL3g9s6Xsgd2k/jzwKFp9ZkS
RRL/M3DjI+uOrHN4fclKHTFlErxEd2UoWnc3WO+QXfn+crweMwectMfd7K0D
qW/1YIV2ocrEWWj+d/DyNJ++6e5oRrgufP4tP3V/YnYWeHV+bGTxfLw+7xF4
iHri1SlHnsch8Kvjq6rlg0l9mzpNTD2JNM3/cB0tqAV/Te8bW3KC1AcJ2ElD
+9Hlj/h9dLX04PtvuN1vFYZm2oNlng6/jQhCC++B1c3+Ucx8Uh8GwGHt2RGD
T0g9U58O9zP+s+3QMKlnS8BFF2/7643g5/GCwXdGDFQ3v8P7SReD9093eu5l
hGap6MPzPTbopo065h/XFhzmOP64qx+OC7aBdyq/DDQwJvmcAvZIDvmWSvKb
M3GGmHpecmxDrQDNtwa3DlU73Kgm+43N4IyK0AqjiySfk8DCE7YDd/kYH6MK
vO5G8OaghXh+48KZ8Py0VreURJL1zR/st/gDfd5Wsn87Ca46aWdy2Jk8j+Xg
bT8XVKSOx+eb+/6/8z8IxW1+aF0fA+gHasPMzi7F+sKMB8uU9GsuUMXnn1MK
zjk/yd7agNS3t+AnleYtnEgcZx+dJaaOvgyOLdpM9pvF4Ft7Ww8u1yH17A14
lkArdSkHTRttCPU2O/YR353sj0zA4dMNRdy7ZP9zDezAlZlaeA0teQ3WPhm9
pUdC3q/KzBZT0dp3XtVpY7/GnAc+MOfW0Rry/oPjDT5WaL/32XjSj70CR8RO
GeKTv+9iSM0RU119nimtleT3rDngSrOG8qpesr9YBd779cpgfTb5e6qD4Jy/
55afOUv+Pu0vuITb07hgJelvZxmJqcHWCa6ZZ8jvne5g3/tHo3r/kb9P2wcu
ljuR1XSc/J5VAHa8+/oqc4j8/j1jrpgaXtbSYkf+HlvoCl4YKg6zjSG/d0aB
63/t13z+nPx99QVwLruvyUWC12M3gD02nL1mnYOmrZwH4zk+MgVOZH8RCfad
9cxjjZD0k9ngbM+x9E3Z5P32E3Dnd0f39zbkfdo3cFdMXPX8P2hmmLGYGogv
TWstJ/N7HjzacHGTOJK8H34IPiM/Y4/VO7L/HARvCGr5fHgF5ovSFDrUo7IJ
MQ19ZL07A/brey319xPZfz4Ad2YdnM0ZIr+HS8BNGWH5+vrk9w5NEzG15Zfe
gGEPiX8p+GLOyxeyZeR9ZQ3YrnZB8kmyP9XtB+v/mxqS20L2b2qmYK3AK2vm
kf0nBU4d1yJqdSPvB4PAiefnDch7kv3aZDN4/gzPH7Ui+1XeYvDx2eN090Ti
/qxxKzjylJZLQAr5fSYFnOBTcSbdDc1VNhdT28s11nq9I7+/LALbMS4823qG
/H4fAN5ZuC2V4Uvi5YIZoc9+0S+RfK4En6GO5NX3kfm0nA/99CyBSthJ8n7V
DzxNhy7db4HxMU6ADYLu990oQbNvgp86qN9XHUXeB74DB/mpXuGS69NZFtCf
TShoHNQh83kc7CBYlmkgR/4eogTs3BEac4FL+vdO8Nlblzd9u0neb49ZAOt7
79arZXV4fzlx4F8FnzUYu8j7qevgf7rqG6ziSP/WDl4zRn/s3RpS3+Qs4X4r
rz8x4zp5/0MHH93y7JF3HFkvroIXbxzLme9F1uvX4MC2cIfPpH7TpReKqTae
8zfbcuxvWXPB+7o1J3leQHO9wB6Wy8zX2ZF+vgWcPovrvzyPrB80K6g3ssfc
nkvhOGc22Nnizc+KCvx8vie4uGlwTV8BjgsPgNck9c5wNibr3R9wks9Q+r0G
sl4bLIL8/Gk5/0UxWa/dwAu3aY9jniDr3T5wV5iTV6gtWV/ywdq3Pn3YMJb0
Q/rWkO8nObr826R/cwHP85+4eHg+juvuAff4MD3f3cN6zswFq0zM3PT5AqnP
T8HesxuGB8vw+VJytoF61+6VOOMz9muMCPDD7qshD7ik/+SB86QsnGeQ36d4
j8Fzeh928tNJvf4KnrxqR91vRTRr12IxtWKOZP8Gdzyeew7806vNrvsB+T2p
DmwUaK0ZYEnq9RewwcPBp/GaGJ+utq2Yin2hKpigSd5XZYLPP01xF0WS/vg+
2Cz6SMhOezxe6TM4aPXv8T8lZH2xY8B+vJlt1k/en9FqwJ2fbqQ84+E4/RN4
9ArmqwujyPtAVQrqDXNZbC8Nx7kM8Na5xtLDTuR9YCDYVC73Y7AG5hezD+yw
3+jO7btkvZ60BO7PyjFti8j7Wb4NeK1O/DHpzaT/3AI+t/ByV20GeZ+ZDG4S
h8/d1YT3j6dkJ6aq354/uasT18NGK/D8Q6dLYqJIPx8AXnv9xfkUIzyfnghW
DeTPzTxK3ndXgB827b21M4m8r1ywFNb/HJW5kWNJf+wLnrTU0UUjguRDAnh+
f+I5r1f4+Zwy8L4/N6wuLSX9wyZ7iKdjSw/LFz+PfQy8uTtU+kURifcGeK61
a8wpQ/J+uwM8dXJF4Z2fpN854gD7YwXjf4Gv8HoCPrjG667xWB2Sr21gO9+V
d2X/36/JOoqpvxPl1cyH8XlhGoMXXe7ZI7OG7D+vgBW3zYtr7MDrKbWCu+kW
HVH+pB6MWiamllYEhXnvI/EagTeVrm2IHUv6i9Xgdr1aF1dfNOsfeMCyxsRq
HHmfaugkpmwnRMxWtyG/Z3iAQ2ZWX3I2QUv2g1e6ugQdWIPnc36DR3HjL+6e
Se73zOVQ3054VV+6T/pLJvi69JHdt2JJv74XvPJPZ6U5+b6MPPBuqXaNfQGk
fk1fAf3Elq7ihF34/Wku4Cg/7133srE+0HeDTy9PsPvi0ojx54DTvZYwbXc/
wfjrwRufHf54X7YO53OFs5i6+sDoQmDYA5zPcLD58VinbD6Oc7LAKyavstno
UIvxPwKbTbumEZN7F+MfAnOCg4MPBwhw/s6uhP7QZfO921b3Md5a8I/xMw3f
L6rBeL+AvStmcE033cZ4tVzEVGG37grFGXi+IAP8wqlmLy/rDs7nPbAL56d1
W/8tjHcArBVTyhiWRTPVXcUUbUnB38ymKox3Cfh4d3xGQgxeX+kumK8262pc
CI4zxOBwoXf0yRM4zlZhQv4d8kjU2VSN8duCy1RGSmJdKzD+bWBPJ2Nn/b1o
1kcwPeBqwJtZN3E+J7rBej4tpGrsLxwXWIPX9ZbQuFfQks1gL/OZqytzyzD+
JPDLccOO++/g+fwJ7tAPN69Rkw6sxPlcCD6euclDTlSO8fuDnUtPGy1yL8H4
T4LfaCXOHTAqxfjLwbV64p/633CctsBDTN21WLN051c03Qf83e+7rnIPmhUP
pg5WtQwqYHzcUvCfm+3jC+MxHuZGT1gPuvaUGJ9Bc46C9f1f5oxTw/P5xWDu
ndsKeoVo4RtwlNExL5+NGI/S6FViatcEQQRFPp8XC464tJSVtxe/f+O1Vf/t
Z1f/u1VM4m0DS4Z1bXeeIvHKrBZT98tDeFoTbmC888DnOzyiPIKv43xeBjcl
zmhYU3YF5/MVePBdVJ71HDRTyktMNWR/cenrvorxzwG3znmjcorDx/hXgS8+
SSmOq8Jxxgvwtlc6OR6VaPZfsMxOLYNxTpcw/lneYoq1X7pi5cLLGL87eE7x
R4ur+jhO2w92kchIPanCce4v8KuuuvrZRhiPYMYaMeW6vHG54QU8XuIKXtk5
+1lbZxHGHwWunhf69IH7RYz/Alhvf/+Am0kezq/eWlgPjRfaXr6BVloJFtk5
3ioty8f4I8GNE+5uXfADz2dngwtNHNX1Qwow/ifgqZLAgOaDeD59+ToxZf/a
rautGMdZYeDy4fOjEpTwetzz4LqWEfO+jgsY/0Pw6rh8Zuk+PF8yCP5+f8mu
SVpozs71kB/ttRM1PPB4/hnw8fPFk878y8X4H4DtK45d0EvB6ytJ1v+3X+6t
+FKP5zM0N8B+z8k4cHIuujEdvOVf16svang87R541Tvf7ek8/H70frDeiMWp
GnsSv9pGMTW+ZfjFey80lwK/2d6aSxOR+RSBZ2Uy+Woz0ZzJm8TUg4vVky1u
4PH8xWAHi+unRl1DC7eCXcYtK3Msy8b5/ACua1JUkjqM5imzYH3/5Ttw5B26
cRH4bealA9faeRjvZnC8JHrjsoNoOhdc3+n45HsDWqDoA+vnR4cpvh1oiSW4
8bqe4dcQvJ6uH1g5+elK7TU4zjwB1nzA+/xnNI5zboLH/axUfXcNx5UsfGF/
6mQvnUuux2CBeVufpYWnk/iPg/WOPD9U/QnHeSXgpHa9EX89En8nWBTO0O3p
Oo/zucFPTIWFyAjNd6O5cWCGtUecl1IWxn8d/MHLmlVpieOSdjBNwqlYt/8c
xi/nD/UoxC/lnvpZnM+rYG7sC+MdtWcw3tfgGz2OUXM2oBnSAVBP1xsEXz2A
Zs8Ff2q8OL5zHpp2GbzWfE//VQM0vQV8L2Bj3fvFaBZts5iKYazPkG7OxHhn
g8exN2r6d6MFnuCxB7umO/Wjmc1gi9J1Fa5v0Zw/4EtR3H7eIJpvsAXm47HC
4PjdeH2hGzhzT8CELbdwXGkf+GbXW/X0+2jeCNjZX0fLIAiPb9TfKqY+fxdZ
tN/EcZorWDEiVbX4fQbGvwf8c9Pwrr1CNCsX/N7nydDOLLRk2jYxdcrMOep7
KlrXGWwaPRC7MgPNjABXt+ltvstFc3hgX3N3nz3n0fzH4JHHLxMW7UIznALh
fpb/EboRs3eBdS8dljobjOadAzvbpPQ8CUE31oEvz9pmdDMITRsEX/Nvddyz
Fs1lB8H8bHvf2LAeLcgE33/cdjFtA4n/PvjXPMlVS28S/2ewwjv1kzVknKkR
DPXCPqlVYQVaeBqsu0Tzl04AWqkG/LCqcol8NIn/E5jfrjA7eRvOJ1t1O9Sf
YqfUbGUy/wzwsffiuvUMNP0OWPvPWn6oIZrVB5a7l7h9Mrk/3EkhkD/6DkwT
bcxPgQ34xdUl72ccwOMlW8CaQvvYbyR+vtIOyOeSOceCzdMxXiuwqPZZcwEd
rRQA/hjTHfjkBJqRCDb6Wqc0kEfmczxbTAXbuUW6PMRxmiWYXfsrWPiK5IMv
uNhzR3X6A5IPCeCEwxvco1PIfJeBC8uVN2W+IPM5fyfc71K7u8x8Mp+bwJUf
izziikk+HANfX2J7MNjnNMZ/A+w5dplU0Fq0sAN8l3dzu917NHt9qJi68Ghz
xDF1jI93BHxi8rkAYTq6kQ9eT5kdPCfE42nt4CWP5ROeKeM4XXaXmHKPSz5x
xBEtiAZfPjT8dvFLtOQKeGD/3MIBOZxv3VZwcs35fTp8vB/MUWHw/Kc6sNZM
w/rBMQLHru8qv9uHxytdAneuSqreeRjNeAm2fpvruESIx7P/gaf099BUd+M4
zzBcTE388cKEHUGeRw+wx7lfbysO4DirCaxxYe9gTRbJh99g923K2UV1JJ9n
RsD9Mei5WLebxM8EKzNsvwQcQ+vuBU+PGX7zuBbN/wl2+egWHnWF5PP0SDE1
++wG47Z8kh8u4MrMo259e0g+7wYHX2/NnmZL8jkHfPZ0bbOqLKkX03bD91N9
OvQjl8zvCvDupY2L2Zk4/6xw8MFzXidDpuI4NwscsdShw5KJ44JHYPttmx2n
FqGZy/ZA/W17JAgaxuM5oeBw3pXOGRYkv8+Cv8+suV+vRPK7Frx9crDDGFLf
lL6AmXZOdNvtWP95O6LE1IYzq+vrz2P9b8wAr+0Wi28XkXp9H/xCOKOEOx3n
mz4A7tYxP/+Gh/eLpb4X5ufHDFeVlWT9SAOzC3i061Jk/bgL7p/VnfH4Dp7P
FIOvPPhyp+kjfj7fdh/0U4ryd8MPoRm3wfa5m6qsi/B49kdwzEzPgvypeD3e
xP3Q75kVyHgGk3itwfeCFbTrFPB82hawjalsWm4Qns/tAS9bd16elUjqw4QD
0P+pTnvd/gMtWQj2FXl1K2uQfPYHL/9bCOsViffkgf/245m3KqLw84TjDoop
t4C9g1PnopUWgM8dDu3RtMb4GD7gNVGx5RU7cX1mx4PHM/N27TDJwfhLwYoL
HOn++mi6OUdMpbUn28/7ges3ayN4y+i37uPb0dyj4EnBXj98u9CCYvDJ0R+3
TfmGlrwB3whoTVu9Gs2PPQTr1XSGbcFs/HzhNXAFi7d9xUsSbxvYqLPi8WN9
kr8yh8VUTv7ITD1Lcr+vgIuntymllpB8fQWOOGJVP+iKZklFQ76vii/Ts0rF
+OaAd+3e/HJ3fBrOXxE4xnAwry4AzXwBviRsyTusieb8BXc8EIp+maD5s2LE
VFGXYiyljBa6g81CzS3qXuP1eb/AhY8yeipKT+H9nhErpmoCn3hFUzhOY4Il
Kjlz8mLQ9CjwAZtbX8snoAU/wJMzWQ66khScL70jUP8qn7OOtqB1V4JjdcpE
c9fg9ZmR4Ab7Fd0bl+L5nGzw2flHu7JycVxJN05MzRtaMN5KgGYsBysvKO65
ewSvxw4DT34kf3k4Cc07D35YkLowpT0Z438IjtmjcVTlOprleFRMdZ1N9o4r
S8L53AneN5I1Rr0WLTgD1i54qeXLQUsegJd1K19cIYfn60rAHh0vHtpex3F+
yDHI7wmTI3N/ooXp4JMJUd8z/6GV7oH9fQq/S0nj+Yx+8EZfjYvLq3CcrXZc
TPUelXe308BxugD86/Waa6X2JF4R+OOVD/NUMtHcyfFi6nTwv820U2jBYnD0
hCehjxrRzFtgDeuBDxeCcL44H8BLt9z5YLMVzVdOgHx0lErna6GFi8DuQllN
VRHOv9Jm8MVt564r+JJ86AZvt7uh7HUA86VR8YSY0jLQefDpPpq2EOwbN3fr
WXWsl3Q/sF5Dr4Pu/+vtCbBsqa6m6Qw8XqJwUkyp3tTbwUvF6+tagA265Ce6
Ckn+ssBxN4/97fiG34dzHHxlwVzzPhe8v/wS8KHiF54p+9AMs0To19LGxenp
kXzYAO43Fcl5JuL5vDjwaU9ms1U0yYfr4OS+bteYd2jaG3Dfr90tg7/I/K7l
Qn+ik7JGZRGZ3xiw/1mjL9/GkXy+CmZsPWU99RPJh9dg6TvinAWhOM6UThJT
hgOtIQqT0cJD4Oq1TfNC9uDxSpfBrUttfBUnkXxoAZcszaIl0NBsWrKYku+K
6H86lsQ/G2ygkr2jlOQTvRC8TJj/aH8zmtUMbvZZ8bJriIvx/wHbMZc+MxGg
BQYpUK81140V3EFzGsFRf6Y9U21E80fAtjdrBlvI+UL9U5B/Ry6xv3WR/HUF
D57h3zxA8p2xB/xp/L+pVanoxmFw04u2T5vUyHzqpYopwem8tHYOfn+6M1g3
SKnk8HY0KwJMm//MutQY84/LA9se3y7y9Sb1QSdNTLXtfLA0ej2pD05gTd7N
U4+sST7vArcU7qhLvkDy+Ry44KTOznsJmE/COvDlB97rru3CcbbDaTF12Dsl
uPo4mscGr/+5/LBROqlvmWD+BQelwgr8fNoD8IoVVgc9hOR5/Pzf+fPEI+Ye
JB+2p8Pxri8b8kh+SE6D91pT3zzJ861bA44IM4R9AM4P8xP4qZD1WsWF5LNq
hphaIBY+HPWbzG8qOEJWcYpXIpnfO+B8mq7U6qUkH/rA9QdTGMr3cZw3KVNM
TdjfcL+J1ItGGzCVcVo58impZ73g9KKPMRJLEq/SGaiPvy9Rt5VJvFbgypDA
p+MXkngDwKwBi21msmh+F1g5/kVMihRaOP6smDpjNmOAFYj5oWQJHlDXCp55
Ds3wBXtkN/p6qJN6lgCOE0++bJaGpimcE1OpKgfO7S0l+Tsf3LDUKpPLIvm7
CXzc3PDa2k3k+TsGXvTxXl5QFon/BjiPSho+zCf1zfQ85HP7+ilb4fn9H4I/
zT8=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5491392*^9, 0}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 4.05233553436048}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5491392*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5491392*^9, 3.7068192*^9}, {0, 4.05233553436048}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"DUST\"", "\"NUGT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.018437983314665517`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.39512918866348157`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.046663177116911335`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 3.7053149633465056`*^9, 
   3.7069035505908546`*^9, 
   3.706903797311335*^9},ExpressionUUID->"e80e7aed-d3d5-4bed-a32d-\
9af25a2cf441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23lYTO8XAPBR9izDN0mREW2ihoqkMheRUIPs22ihhIY2LTItRJRRlBRG
ZUmLEUpIQyhUJpQlabTJTGqUtajfcd5nnuc3/vk+n+d9773nnnc7d3xNcPFe
7q5Co9EuqtJo//4Lf1jN96RUL/5pnwPm0ouklNuHhAVP5n39Z9oxsI/dKm3v
ADSzABxxZmnUV7/Of+Y0gA2O3H13eN63f+YPFUmpUypJq6letGgm+IvK6jVd
3J//zM4DG3jl+ntOQ/MkYLvN38o/Wnz/Z+Hg+1KqfXLTLdWFP/5ZYg7WdBtR
Mcm845/pm8GsIS9Xl3SjBbXguvaO7qQy+T+LBzyQUhOuWMT+2i3D+KeD54f8
Dukq+ILxbwDbb7r9LE/yGeM/CG5PV63z80HL+xZLqbQfU5ZnNaMZpuDKVdmP
Mp3xevZa8P3zKfXPs1sx/ghwH/Nl6nr78PnCbLDuAKd+y7UwPtaUh1JKq8M/
PfkZtnNXgV0X+uy2jcd8Cnhgux+j03Y0k/ivgId/eGNHf4HX06rA4Ut+Fl/3
RfNXPJJSF793OIUdR4v2gX1f3vnaNAzzLb8Efr998aSZjjg+jBfgYC9ugG4a
Po/9B3yk3bxbsg6vlwQ9llJBAWbGtg7Yn34B/NB1RbnXAzTrOXiPo7pWBB/H
g/sbvOR4Za1wII6fYGKJlIqbMFJNOPUX5jcVfJkW0mdPA5pTBpaevmEq9O/C
+H+A961qf9hRj5Y7lEqpGSsduSevkPnwBHxs83qG+pi/mM9OcPPDvBPDf/Zi
vOOeKMb7D8ZrDx44aFT26UvYztoDVrvz2F3fjMb6l085+NbsXfdqNvZgPrWf
Qnw2R9QzA/H5TDvwWEHzh+l+eD+ON/ji8iEl72bh8/lJ4N/p62L+9MF2huYz
yEeLdfqo53g9ey44ZdPeMu/l2M7bAY70PTCp0IHEnwBek5R1iLGexC8C/zgQ
bTzADuPhzimTUk78xJoD17Fd4Ake3Sm8+JiB96PdAz9bM+Fpn95ujLcFXPk+
9twsQ3y+aGu5lHpZMvTLIA9sl/PBpQnb69ylmH92Ezg8gz576DhcX7zhFbAe
52z1MhuApseCq5fcfLijGecP6xa4pKUrvYKF7dx6cPrCiFHSTzj+giHPpdTq
A+5vtOU4XuIZ4AU+s0ObBXg95yZ4YFa3BdWL85lfB+41LHUxNybzdZBYSpk3
frGfmYjzUW4G9l175plPPfZnbAKPlKT9ah2M60vSv1JKrTA66PolpQXjnVap
mA+4vlnrwdErh+x2HCvFeA+ARxVtjjufRtZ/3xcwn9+a+n0egvdnmoCvyLoc
505sw3jXgLuC4yaXVuN654eDVetFjnf18fmiLPCBQ2Wv7t9Es41fSqkplh0j
fySS9b8SbKehOyDmF14v3A8e4v5twpMujEeSATYtTJKu0UDTX4Gvx1oe9B7U
jPlc/kpKLexz3nmjZQPmMwScfSZrQEWOBOO/BJ5+d3PL1Pv1GH8leEzPrDX5
ez5g/N1glQd50mT1GsxfepWUWn5s49t1m95jvBVg6cYLYwMkeD/eryrFfMP+
Qt1qKbWleqSDZD+adR4szAqYeb3+LebzGXjqklnFXSp4P8F3cLZUtGR0BT5f
PP61lMpMNTz0pQlNcwAPoq3OORiL5peCjSdlunydUov57ABP3THPQHsUWj72
jZTaMf/R9sJ4Ev9CsCDnREx4Dz6fvRu8/I2p4Goytkvawe+nWo/oycfr6Vpv
pZRGQqLpzr1o1nxwRNfWHgeddxj/LvBVnZFbrBe/xvhPgbOqA1NGuqKZo9/B
++cNbC7aif05FPgo68g9nQ34PL4XuKLwns18L8yf6CT4jmhUgu37Ooy/CDz+
z6MVW0rRPNsaKdU09PB6N3McT6EHuJ90/uIL0o8Yfxz4WlqB5bknjRh/IbiC
d3WyWhWOL+sTeGjg7Bfl7mix+3spRT+lZl6si/1pfDDfJ1WsGYlm3ganD/ZV
ubYM789pBK9f7+pz1xuv5w+rVez/2M6IAX+aIFbzPIft7HywdsjpP+PCyPz4
CGZNqb3zaShaqPZBSnnsKnk+Vp3EbwH+7OkhjovC67k3wJTqqLXX67Fd8AE8
/8L9OpMmMp8H1kkpRkJbbWd/Er8ZOF86uvvMhibMZw1Y9rP84qDxaHk/Cezf
y7J3PzyG1zOY4C2977LUM/H+7HXgnMjP1RlDsJ0XCS5MPnatJw7jpat+VJy/
JJ9TwZL/5nzIEWE7dzX47eLgB9RxEm8Y+PXEL1ss75B8Z4Jr4v+L8gok+Zxc
L6W697+6fPcWXs93BjtvfB0wUgvbRaHgP1tH7D2lgfHIL4MvfMw8F6JP4n9Z
r/Q+wmUNUsrTrndHSws+TxIMLt/hEdR/O7bTL4LNxBdPTZ9C4heDWz1MKrZN
x3ZuF/jQ1FC63QI0LbBRSvl/UkmVBqKZaWCZ86dxriVoTjk4Nem/muW2aP7P
RqX4RBOaoH7J8bZKzCD5fApujroUVs3B/Un4DVzefFCwNwEt0WlW2r/oi8AD
jcaPuFOA4ysoAevoxead7MTxFH8F79T+O+CwB5o29hPMn4aDP/reQDMXgMVe
Jntr1PF6DhdsHd9mxptE8tkGnnZZ09JoFcnnmBYptfjKiWFVV3A82PPA16eN
H66xhay/neDs7GuzPszE/UOYCJ59Ny/hhhOapfEZ6k/H7BJ2NtkfWOA7VuZ3
hQNxvQu2g7U/37oQlYv7g/gE+Oux8CkLrr/A+IvAPkW+1Me0V5hPGynMh7T0
w5ufvMR8bgNHuT6ojg+sxviPg/XO/r599C72Z9wFC5IurfsdgmY3gzVeDniy
xasK8+smg3h6jwx7/RyfRz8GTg1y9OluwvuzCsDZZUnmHhfR3AawzYGDBiFv
KzGfR1ulFFPnxFpZMV7PyQOXnA4VH67Edr4EfGvEU03/OxUY7+AvUmrEkJTq
mSwxxmsOXjg9v7P8cRnm87pyu7AWfG/v9DknOXh/yYA2OM8TraIznEm808H2
T/PUotvwetYG8EwdnT4bzfF54nfgJ4UuE9P8yjGf/dqllOHgA8Nazz/H+E3B
x57b33sTgM/jrAXftTcbPm4E3p8fATa5PtlbNxz7M1TkUqpIdXRQx3u8H3sK
OPPDa9sBcdjOWwWeLDM2aBuMFvLAj/frZ1u8xvtLrsiV3o9r9FVKFWia16Xf
x3wJVoAXR+4d+kQDLd73VSle2mWwMGrfOZs9JP4X4BXDHh3sw8H7idgdcP5F
GM+5Mh3b5UHgTIP9c5a+xHwwLoBzVod6P9LFdvZz8Ktczah0Gl7P+92hdH/6
3k6Yv3sO/DANQrNSwSvmPgqauITEXwY+rJ+2MTURLfgBLhmt/+hrD1rM+Cal
ni7U++7piO/DOQeexZJI68xJfp98U3pfUSd4Qc2LrLgZaPm475CvN8n1o5zx
fgx7sO6Wuuyb9zEeiRw8k/7x9rYm7E/X/iGlFr2ubGlJQrPswBOtuhI6eDj/
ud7gmZtnvah9RtZXG1jTa8DHcfG4HpiaP2E+n291i0jA+c6ZC9af8fuFfSNZ
fzv+tVe1rrkQTtZfAlizJafqgIisr1G/pFReW9OjDaOxnTcHzAo74PrCGp8n
9ASnX1ma5mOB/SXxYJNvdqy0MWj6PfBgy1EDrnriehZY/4bz86l1E1OA+4l4
KzjkxHNG0RHcL2jHwb0RQb4m/m8w/jvg6M33R0rf4/WcJnDoQoMNz7OxXe7a
BfvjkhlWU4bi/Rix4HfNqbqWG3E/Yt8CV+ukv1Ntxv2KVw+WrLc/tmQZqd+G
dEupE4/bhsy1wv2QdQS8+uTlvzfmYL3GvQmeOLWuIL4K90dBHXik3e0j+w9g
POJBf2B/izwU+9ESn08zB7sFzhVlh+Pz+Lng3vwgD7YLxit6D/6xxaRhVj/s
L+//V0oFvAhrv12A7YxpYO/f7zcNiUaz14M/XJavsDbF+0negjvHHrp4hoPX
0/v2SKlvN6LurT1E9mcTcLF64YMdJ7Ge464BlwxWa4lbQerPcPB0v70CfWes
L5l9ehXzEd+fYwxeGDZcbX42Xs9f2auYf+S83g8edHvUZ1VLPL/kGWCOR0qA
2VOsz3mGNBk1Wpcjeb2MnH/LwV5exyZMTsf6XhICNs2pDLP4iN8P9EvgJ4zB
Ol1Z+D3AqgQbli589WorqX+c+sioY9HbVvodwfvRgsB3xhwd2PKI1PPp4Bvp
zckvK9GcCrDerd83zuTiecj/BXZ6ouPgfgffjxGgIqPse/J6M9+R+v48OGL5
2Ngx93E8ec/ALqeSL2WOIfPjO3ivk1Gj7iecn5LxqjIqUqp9saoF+3PPgg87
aPV/HEXq41Lw+KystfRkXH/iDvCBcO17x+mkXl7YV0aln5n+WD0a55PoEfjI
ZY//mDrkvGsHr1n/s8MlB8ebodVPRslbD/nrjSD1/HxwPbc9mXuRzOdd4P8b
L/oX8NKaDc59L+H7sUb3V7qeS4HfhKf1nJlAzmsvcEaw//ZRUXi9+CTYODgk
JHcPxsdRHyCjTl+IG+pyntQ/tmB2Lm2PkQ2pPz3AD9+ZLF5K6jl5HLitclRn
UDNZj4Vgt4fXsoaFknzOHiijXpxzfvz1JI6HxB2cN2qQ+PJZvJ7OBwvDrhnm
p+DzuY3geR5Vmw3d8X1oroNkFDdl3/2lNzFeZgxYe/aGU9tX4PM4+WBpb2RK
7UO0SG2wjPpzrW/op0jMLzsa3E/kkpvXh+xnN8DT8laG6lwg59sHcE+BwTf1
VnK+DVSTUZfYDc59J5Lz2QxsNv6s0Zeb2F9wDXx0/bZuzpOnmL8asNfT1u3C
eHI+9x+ieB9yvjHB4984ZtqseYbxrgP7U/EOjhPweobqUJhfE8Krbhc9xnin
gnUzX9YKUksw3tXgyhAP1h+1JxhvGJj9IcqV9pTUC7RhMmrQvaCuyUK8H3cy
2LA5q25IFV4vcAYLZV+uLq7G54tDwWPMZunatOJ5SssAa/e/5yyYge18g+Fw
fQh3zd5ktGjZcEX+8f3kweBJV+r61ARiO+MiuNWjfGFWFcbHFoM9t6QXfQzH
/hJHOsw3oXpOXRr2pweCa8cnjNitj+2sNLBa4UEd9yiMh1tOV8qn4CeY6j16
Y60zvi9HMEJGnTy5ZMIAUg/wn4IfpgTePLYT20XfwD0LXmnF6GK7XGek0njw
zoDruqcllJB6QVgCvrli7n7ne+Q8/gqOPlRf+jcUr6eP/U9Gdc7a/iCigsS7
APwub+nW1FFo8UPwIGdbnwR/ks92cMaCN/qLt5PxH6Muo6y9rnUG1pH6bB74
96eEMwFP0fydYEvTxlH2kaTebQVfsBd9qL6D+wdbYxTMj3w7R/2DZP2zwNZl
1Ybah3F+C7eD3UzazNLyyX51ArznrW2w3SyyX/2nIaNW35rNfLac7Fc24KP8
fnOMm/G8EW8D08vLBotW4vqgxYEdQ1cN1luEZt4FUzZzHUb3IfWN1WiYn6/X
PQ8wJfWZG1jjqdx/Vw2pz46BBQ6XE1yG4vuxC8ADNi0672SK1/MawA2nJmWc
7kfWl4sm7L+m9cM9JaRePwpusRh9d+dgUu/kgb2HV56uCiX1mQRsN/yl4IYu
qccOj5FRzcX59zI9cTz418GGI80rG7ZgfKJa8NSjefNfepJ6fYCWjNrf9mxR
yDdSj03XUloPQiHY8LZem4U92Q/egVvOrZinMh9N76ctowq3CK5PnE3WnynY
0W/OrWkFaO5asIv+s0I/NtkP3mgrrVemylgZles8Y73WJ7IfTBmrNN/4q8Yq
3V/EA6uMcd89eT62s3vBUx37XB1ViNfzjMbB/O+fZz3pUinGvwLsWBc853EH
WrIPrP6scbl5X7L+LoPjE1h/y7pxvxDo68ioZ9QxW/5b7C9mg91+O8nfnMb1
TAsGD+OrLSutxP7MC+ABK6c7bTiH5jwHf7XadHbRT+wvXzpeRnEMipJmB6IZ
e8FmnRqWGkZ4f3YquG328qDhDNzveGXgzqEN4iwKLfwBbkpklr96/wjz68eA
/NMC96Z9QXPPgS9dGxh9oYzsb0/A/VbpG+uW4vXiTrA2t6vGnIvtNJ0JML4D
cplbN6NFj8HrV5rMO7uaxCsHP/bu+dSRj/ExtHVlVE7rxyMjerE/2w6ce29P
fQ6D5LMYXPjsvdUtXzS9DXw80fxt3CTsz9KcCOtfa5mFby2aOxe8trUp8fkC
fJ5gB/j7kPZvzZoknzKww1BZi2El3o8zapJS/vhzJik9T+QJbkmw/jrsBok/
HtwjpKdO2ID3443Ug/nddOPnITe00Brcr/VzWkwsWrIVbPnoUux1BxL/cT3l
+O+AsyKSJHPb0OJZ+lA/5FNzPWzJfHADf1zv2p4ahmbGgl34A+wGR6M5t8AN
DzNP744j8dfrK50PjC0GMB5n/DIq9XA+so8YKO3vvJsGSutXWAdeiz/I43ri
HjKE53/V9xhmT86HXPCdGUPPjiTfp+L34AufTmdYjCTfRwOM4Pxkf3TU20++
96eB6SpejtF7yH52FXxh7KwvvSZkf3gL9ne4kkJdI/tD38mwfl51pxucwP5s
E3DKvMA/XRVkP1sDlp7dvM1am3z/vJ6seD/y+3AfY7if/7RYTVvcb7nGYLb9
Q+kJVaxXBCvBnA7Gqt3k91PxfmPF/MX9mtMDPvvGPkmwA/vzDaco5j+2i5aD
fedG6as7kHoyBGydaNnE3kG+Ly6B//088HM09hfqTZVRS/zNTvz8iO0SJ/Cf
kK1W4zzQ9KCpivmJ5w0rfapi/pP4K8AFvxc3aq1A05aayKgZj5O3B/rg+zMD
wJPbnq+0It+LnPPgnPALffc9IvXFM3BD+YNWN13yvf/dRGl/ZvuaKu13vLPg
SS0nEk/pk/O6FFzdeHd4v284XyQd4J9+MwU3jXB+08cxlc5nQTI4o8CY9tIM
4xE/Yiqfd3LwzzofAwdXzB9TaxrEe+TuKu5KEv988LF1PuOTBaSeeAC+4LtQ
nG1Pfk/5AqZN5J5r+EPiHz0d1vNH15/L5pP5QYFbrResqrIn389e4DdHbrOP
X8N2rroZvO/RWw65Q8nvJ7bgglP6VwMzSLwe4J7Iw0IH8vsWLR5seCDqipcx
+f1hhDmsD9Gmi78KyHyeDd4U1/7nZA35/cEdvNPMQmN/OuaDwTdX2i/Yt82V
6keJpYXS+UV3tVAaL1aMhdJ4cfPBpvmL1jWW4/gKPoJbe/ii0Sl4PZMzQ2k9
caLBnVmFyWqnSP1zY4ZSPS76AH77bmrpxlKyHgfOhPn7IWyZ6weyv0WBJ9Xt
s7uQQOrha+CQRIsN4f64X0lqwKdnrzpYvg1N728poz43XfWoeYr7HYsJ3vHl
jfzCODxPxDng8QFG/ik5aNpbcG4nXT/QBs8TpuosGbW9razMa8F9jH8quD7U
ye+UGpq/Gnynj/c6+9sPML/V4ONlL8ZupPB+bJqVjGJ0W00zq8d23mQrxX7x
EON3Bvee3dS45Ekxxh8K7j+82ihCE/tz/4KnzwuFT0ZsFxjMhvfts6dBQ4gW
L5utWH94P1rIbKV8MC+CPWn7o1lvyfk3yVpRL6LljuCK3w5bjPuQ8y8QfNLc
oNXdiNTzaeDHVpx0w2SS/3LwNFnn/Zb7ZH4ssZFRsX7Wpq7FOP4sf3DIr3XH
JzLIfi0Amx1+JwxrJ/PjKXjHGE59yBVcv+JvYN+0rPU3O0k95GML+7v+o8w3
bmS/OAO+uu39txup5PfXEnBRsN8nPQvyPfIVbOCSPMn/PPmeGjsH6s/XzoXv
5mG78PQcpe8ByUPw0vXbI02LSD3UPkdp/nLnsWTUozzHz8e3kfrtAfhxvwec
TaGkfmsFN37gVfgcJfWPBiWjPuwadNjGBtv5LLC1y+nzB52wXbSdUuy/pJ74
DC7On/toNR/zy/tvLnx/dIx1uK5Ozmsb8EqtldR0PWyXbAN3T+18wF6GpseB
ow0K4zdU4XgJ6PNk1IFKrXBDHvm+swLnDenYd3MYmuYOvm1ftP6TJ5kPx8AB
6z1C2dok3wXga9692+sHkXpi5nwZdUJr+S1XUzIfXOYrzhNSvx2dr7S+eHng
9UXbn04/Tuq1zXawfzy6cOjVRVL/HAZf8XyYxfqG60lwHSwy12s+eIDUm7V2
ivMHzT+4QGn9iYRgqef9iXt68P7yd+DLFlp21jQ0o99CqGe3F6j92IXrgW0K
3h7Jt3s9BNsl2eCAR+n9mpzJfvAGfOqMd6K5Fb4vS8Veqd7iTgFr5TvUvhyP
4ylYBTbxqK4fnU++P3vBrbsbk865k/3LaJGM+qUnXjJRSubnCvBzX7unFenk
vNgHnjrG1WuxAOcT7w9438KKgfIZeD+hvgPMn3//+4o/qS/Z4PaVBjkjtEi8
wQ5K9RrrAnhk2RuTrimkPpu4GObD8d9aX4eR/csRbNll92LfNrJ/7QXvOlJU
Z7sY88NJBZeHsn9FbST7Vxk4q/HeqMbEQszn4iVgx+6UvZUFmE8/8Dgrj7vp
k7Gddw48jRHX7/qHOxj/E/Dvfes0Gvg3MP7OJYrzPxfzl7IUvk9mO/PaivMw
3sfgBteD7uKW6xjvV3CKWG+iT7+rGK+2o4yyUvG0z6wQYj6TwPHnVjuJjlzD
fBaD/7Dr7BfUYDujDWy6dOhLpxN4PVvTSfH7QTbGOxfsprJtbtlk7E+/76T4
vSAL8ylzUpzneD13FBvyw0p2eSrEdsEcsMZZzwOJjpcwfk+24vcVNKcFbHVq
yn2Nk+mYz5HLFPUbtouslym+B9DyreAHA65oSp9jf8ZxsMqX2v0r8i9iPocv
V/zek4H5nLVcMf6XMX438J55wSrv9qRi/LHgtEU3bqc0pmH8t8DBn1Kuqudh
O23mCthfs4qzL0egmVvA22aMuCLWQXOOgDnHuxni3AsY/80Vit/70OxNzlCv
TAh98icAzTsEfv7pVNqqXecx3lyw9OXfK/0t8X6S985Kz6cPWAn375552a0V
+wsOgIe6RW7+Oh/jFV8Fr16t0W2Uge20d2D2WJvfhf5oZt9VcD5r9KW6+wow
XhPwA7Npg+9vSMF8ZoF/2999oembgPl8vUoR70mMv89qqG8M88OKPmM7z3i1
ov5OwvhXghtMWib0L8P+rFfgd9GPfZ8dQnN7Vit+v+Fj/IZroJ4ZNWRtwIk4
jH/5GsXvEccx/n3K7fxu8MFv/QfqDI7H+aC3Vul+cifwtE0Lk7lH0Iwg8LPX
y/O7zx3F+NPXKn4PjML86q6D7yXPJ7PbYg5hfpeCDx2uTi++FI3xB6xTfD8d
w/jPr1PkC+8neAae7PQ9uqYJ78d0WA/5Wtrvzsu+MZhfX/Aeb5Vvwt7DGP9Z
sLrFhHelNthfVLpe8T2Pz5d3gMe9nRulGobtvN0bYH98Meg5a/hBzG8y+ELu
H3ev7xEY/yPwpR2HLv29S+KXg6Ny4hYJK/F6ltZGqM9d+RHGY9HiU+Bm3x9f
zrCwP614o6K+xHiZX8CMcc9jmrbh+3NGb4L6a+qvZT1SNJ8C3zz1YMuf8ljM
pxS8Y0T7yGHTMB889c1wHj1t2dSxGC20BW9Kur2IZ4uWeICv1gvOZDaFYT4/
gW1f/T5rL+dhPkdwoJ69e87qczS2i2eD+4Vnj/3tHIrxbuUoxjME4+WD19oY
mcT/3Yf5HLZFRp3jcf3PXUfLLcFvJz+rSfHYj/PBFXw27crKaqdgjD9mi+L3
SOzPywePj68oPWmP96fPcIF6gfbY8Xs29mdxwE6JB+6kTsF4uNFgi0zGjQ4X
vF5wAxwZdzhj1ga0+AP4xzLv17GGgZjPja4yasW1IQmu6mh+lKvi94UgjP8a
+Gjo+XeJ7nsx/hpwflWE9rdlARh/fzc479hN6xoe78F85oDnXYz+3jRiN8b7
Fjxr37XB/MidGK+qu4wKrTUsLbbiYrxT3RW/X3thPrPcFflAM6vBI39tZlQW
7MJ4aVsVv5dux3gnb1X8Xo8WOYO17tvs+aW/A/P5EsxRUf3u6ITm/QWfC20T
ftbD+wkNtkG9Fj8lrT2ExL8MPImVFrSA5Y3xh4CD1E7t1h+D8Qq6wF4DU2m7
WNhfPMkD6o/zsQ0hFLbTnMA/mfmFQ7VI/IHgphYf11PxGB8nDRxkKbF7s2Mb
5nOCp4w6XziNmThzK+ZzibLZ/uDlrxb4nRaieQJPxX7mjvE/BUtmjWudNswD
87toO6zHGNb90GfYn+sDZh1V1dabjBacAY/FggyvF5eAw/8WDDlxD03rAB/z
a6uacA3N53pBfTRfJLqahhadBusJzv7nx0HLH3opx98OniA+Fh5T5obxj9mh
FI8kERyVRY/smofx0h+ACyPfxa177Ynxt+5QyjdXY6eMehXs6zajAcdPwAJb
n1yZVBeG84lZBDbOWMjKW4DmfAbHbMwsj6Hj/OP/t0tG6cyqTfKfj+MlsgG/
6gq/93cnjq98G9h79Sb3LSo4PkK6t4z6b836gt63GL/ECiy5PSxuewS+L90d
nDduzJgNd/B9WMfALi7WYf3zcLzFQ7kyymeJUbKFCMeXZgk+u9DPObovmQ8u
4MkVqk2pXDIfjv7znoqGVXpkPueBnW4XnX5biv0ZFrtlVNvRk/SX1djO3gw2
njyrue0OmncY3C/ya5teCsYrvA4O2W3ddnkvxiupBXPNDwxpfoDxcDfskVHf
kvpW/TiO+RccBI8faZuhycT7iYXgMguvvgVVJP4a8Mxt8pJru7E/s5+PjFqX
TAWzzXC8RBHgYO+1qTNj8Xp5NligerGtLxfzz3gD/sXPXWVthWar+MJ5+nFA
rdDRB+OfAh5Xo/fS1wvHh54Jznk9vOBDNvZnVYHrl+n2sfHA/txe8A3XmNdP
OrFdYOQH5+/E+Jw/6ThfxCvAdzMDI27JsJ3zAnxioSQ3yJTMhz9gWWdvjYMb
zheRvr/SeMjZYLM9enG119GMYHDVmmS1O2lkfvwGG7y1vFqRi/NRMjEA1lNX
ktaT6dhOdwRf31wy55MOtrP2gl1seO/HHMX9hpsKLhimk780HU2bsBfq96CZ
995T2J+5GLxxuLZaazDml+MHZq4LU43NI/PjHNimc2dzSj6Oh+gJmG776oNt
B/Zn2wfC93pCY71xf3w/3h7w6rDbgmOLyX6XAtbMSGq4bETifww+XVWXoK1K
9uuvYIsXRensAD/Mr3eQjBp4dvQ8YwNfzG8SmBXbvDVBHfvTHoIDHm6z/sXD
8WO2gc9bn6drjcf+HM1g+J7Tr/7e3xYtTwAbnfRctEgHx5NxHywav+I/Z3O8
ni0D7/7PJJAxAp8vnBMio17M3xAbp4Nm3QPrZucZjYzB/twWsOEsc/u/L9CC
kftgvZWW8EKr8f5ia/BiL9UZzf3x+bRt4NvxVd882sh8aAJfvlSSPOc6WjQ8
FL7PHVSXXWpAy2eBl1529dQ1IfPZDfzt3gTaOU0yn2PBNt/Z04el4vMkQ/ZD
foZ+F208h6bPBEdangrSWoNmbQGv4TyMP/DDH+M/Ao4d5Vyc8wXPW8FN8LBL
Iu8dQ0k9Yc6D7+UL7wKSuvC852wCZ/QpeLopH80/BN619+Yv/RvYX5QL1iq6
kzU3CS1/D17mb2JYG4T9hQfC/uVna9eDQDzPJVfBP6efHrS/L8ZDfxemqMdx
PbH6hsP3TnHYfL1dmF9aNnjByayFW+k4n5ivwUZf39voCHE+cfpEQH1tctxn
vw05P4zBwXIHe64qzlfGFbCryLmiWEbOt1fgyALD04lc7M/rAfuUa1G7LMj5
ZhgJ3792F2+F55H9bDm44UUu4zYPLegGd0TMi9Pc74rjrXdARvHsnAb/MSDn
GRs8tSW6yHUNmhkE9iwvjvt0EfdL0S8w/0dd8Dp9vF6ue1BGza7NSruXjmYs
BRfk5SxtnErOswBw8rQbI7K+knjPgwemnNznl4TtdEYUfE9yexc6vUazHMDh
oZm5ZWZ4P64vuGymI3uyyAXjPwv+0/do8+vwLRh/Kbi9lZ/R5ycH87nwkIzy
a6iJWGK/DvO5G2wyt9bXtgAtSgYX09dcsxuHlj8Ce1fvKDKM2YDxyw8p6g9s
F+46DPuBStaCUtF6zOcpcNyRq5q0h9hOLwbb3fZoXW6F7awvh5Xuzx0dLaPS
TQ1975/EdqYI7HlxUurhOHweRwqekCE/bnoLzVc/At/b8ffn9y5Di2zBVz6E
ygy0N2E+C8FvnBbF0JZgfnifwIUDrkb2nYn5EY44CvXaJe6XW5MwP5LZ4NDD
kpBffuQ83gqWJh795PcCrxc0gkcGm48MHoPnl3hYDNQf09RE03k432izwEXj
uCX1i7Cd6Qoe3+7GPiNHc2LAKnTNzdErcPzkarHw/R2wP1RwC5/PmBGrXN9w
wKsu+tuF+GE+eNGxiv0c31d4A+xjFGsxrwTfl2V2TEbNr6XsKgI3Yj43ggdV
mY55LsPrBVHgoLjp3bnleL34GnjjUMuioON4Pe09uKQ+KsygHs1fx4fzyGKX
UKuH5DcSrBtp/mVu7GaMPwfc05ltuSYM+zPeguWpq1Zc+4ztbNXjMqrUtjDc
ZypaEgaek/3bwHQ/xkfPOq40vqxq8NvMu2FVtWguLU5GJVr1529dhP0Fk8Ex
MzJX+Z5DMzPAwW3b/vRoojkvwa1TNkRqc/F9+X/BvHk77kXbkPlsEC+jnmg3
Gv36gvfnieMV5xfGL+yKV3p/yaQTMupI2r1+rFZcL3QnsFQzNCZnIY4XKxD8
hak7tmc+WV8/wW5BqWPLd+D8oumehHwXVMro9TiezCXgB3n9/my/i+b4n1Sq
t/kC8E7qjG5EO7YzxifIKLVGveHFyWQ/WwQewlpPH/6J1Os+YB2LvYecynB+
Cc+AXy4dbNDmhee5pARM/n0d7o/cBYky6uuLvq76l0l9xgWf7m18YK2C57v4
NHhwZGu4mgWpzx6B74zzM/srJPG3g+1iP3YFZ+N6EO08BfUR23rQ9pVkf0sE
k39fhO/PeAAeOH7QZ9cUzA+7FbzQgX1o/2ayHjWSZJRVWEDqnrVo+kmwt/Fr
n2g/vJ5VBFZfVxt6cxs+n/s56V996b4+t42sx/9Ow3o45/w5shTbxTbgrWul
Kks2ofnN4PcLLFSeW5HvC3oy7JdsSVvpZvJ9YQWOGFyepxGJZriDbxz/qT7S
i9S7DeCMyJi7A0eTen1oiuLvr8h8sAQbVw48fSUUzXIBZ7rOMJrnju/LPQp+
JJizdM9cMh/Uzii+/7E/0wIcvNN/1eM0XB+czWcUf/+G1/MPg//bN3pTqype
L7oOXl5tdF8tmeRz+lmotzJrb1ZxXeb8Dxqc6zY=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
2GY5//+8/wc8s9bV
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Sj44FM22zILfF1uWK3xMiZr3Pw+D3YY=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5897472*^9, 0}, 
       PlotRange -> {{3.5897472*^9, 3.7068192*^9}, {0, 2.02497558129051}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5897472*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5897472*^9, 3.7068192*^9}, {0, 2.02497558129051}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JDST\"", "\"JNUG\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.012494899429317328`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.28488229897279316`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.043859865896794865`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 3.7053149633465056`*^9, 
   3.7069035505908546`*^9, 
   3.706903806424065*^9},ExpressionUUID->"c1daf6de-0c00-42a9-b350-\
bdd9fd2d4e51"]
}, Open  ]]
},
WindowSize->{1474, 812},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.35 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4635, 117, 352, "Input", "ExpressionUUID" -> \
"8c08837f-8e1b-421e-be78-0bc82eda6287"],
Cell[CellGroupData[{
Cell[5218, 141, 1304, 34, 156, "Input", "ExpressionUUID" -> \
"ca58564d-e2c2-4c41-a41b-4195dc58339b"],
Cell[6525, 177, 610, 9, 43, "Output", "ExpressionUUID" -> \
"99c819b5-a1c8-48bb-ba63-9aa87dace997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7172, 191, 1880, 48, 268, "Input", "ExpressionUUID" -> \
"9ec59700-6cdc-4997-9164-7d1dbcdd846e"],
Cell[9055, 241, 21631, 436, 509, "Output", "ExpressionUUID" -> \
"6910910c-d210-4503-9eb5-1bd0d0808576"],
Cell[30689, 679, 22153, 444, 509, "Output", "ExpressionUUID" -> \
"837ebb7d-f196-44d8-8f24-ee8d5438459b"],
Cell[52845, 1125, 22007, 442, 509, "Output", "ExpressionUUID" -> \
"d6f3f2e8-8025-4e52-bc7a-e3dcbe182b77"],
Cell[74855, 1569, 22131, 444, 509, "Output", "ExpressionUUID" -> \
"1c5122b0-4aac-4ec6-bccc-cd51ec5ced4e"],
Cell[96989, 2015, 29347, 576, 509, "Output", "ExpressionUUID" -> \
"711b4e8e-6585-41bc-b655-7ac85480a5d3"],
Cell[126339, 2593, 29300, 575, 509, "Output", "ExpressionUUID" -> \
"dd37effb-d9c7-4c77-9875-dffef5f6944f"],
Cell[155642, 3170, 29556, 579, 509, "Output", "ExpressionUUID" -> \
"b4ef299f-846e-4ba2-ba91-fe30faec9486"],
Cell[185201, 3751, 36736, 710, 509, "Output", "ExpressionUUID" -> \
"97c54535-97d8-4274-af27-f925a36880c6"],
Cell[221940, 4463, 44123, 847, 509, "Output", "ExpressionUUID" -> \
"b4eff291-b1f2-4f2c-a782-e9394dd792b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266100, 5315, 1317, 35, 212, "Input", "ExpressionUUID" -> \
"24ead3c4-5f8f-4f88-bee0-28c49916db91"],
Cell[267420, 5352, 22268, 445, 509, "Output", "ExpressionUUID" -> \
"e303c875-96a5-412d-a725-7b435957de4e"],
Cell[289691, 5799, 21986, 441, 520, "Output", "ExpressionUUID" -> \
"968f8d44-00e1-4989-a688-703f703a6a51"],
Cell[311680, 6242, 21039, 425, 520, "Output", "ExpressionUUID" -> \
"8ce87520-bdcb-4301-ba29-853ddc6e1456"],
Cell[332722, 6669, 29193, 572, 520, "Output", "ExpressionUUID" -> \
"12f82251-c4c4-4d6d-be0b-b7e140a71f8e"],
Cell[361918, 7243, 29637, 580, 515, "Output", "ExpressionUUID" -> \
"ca6475b5-e1f4-4783-ab30-3634069f5613"],
Cell[391558, 7825, 29001, 569, 514, "Output", "ExpressionUUID" -> \
"ef8d313d-6306-4b53-ab47-3085dcbe498e"],
Cell[420562, 8396, 36619, 707, 514, "Output", "ExpressionUUID" -> \
"d0bbe5c1-6899-43e3-89ce-e5851579a318"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457218, 9108, 489, 13, 72, "Input", "ExpressionUUID" -> \
"450dc594-3d9b-4fdc-9103-d430ebee1359"],
Cell[457710, 9123, 72713, 1284, 519, "Output", "ExpressionUUID" -> \
"78aa1502-cea4-4498-a84c-01da6a669cea"],
Cell[530426, 10409, 69340, 1230, 528, "Output", "ExpressionUUID" -> \
"e29700bb-1d11-4e86-9129-1fe16038009e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[599803, 11644, 490, 13, 72, "Input", "ExpressionUUID" -> \
"4277d921-c313-41ad-9dbe-20988045f588"],
Cell[600296, 11659, 68973, 1222, 519, "Output", "ExpressionUUID" -> \
"754e3667-473f-4c7e-8887-8346a01fbdc4"],
Cell[669272, 12883, 70533, 1247, 519, "Output", "ExpressionUUID" -> \
"599383b9-0186-4ab4-8d77-a779e6192051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739842, 14135, 766, 19, 100, "Input", "ExpressionUUID" -> \
"b1d487e7-f623-4847-a8d2-c923553c7741"],
Cell[740611, 14156, 70338, 1244, 519, "Output", "ExpressionUUID" -> \
"6d7388df-dd2f-4ab1-bb43-10da07c7d7d3"],
Cell[810952, 15402, 68587, 1217, 519, "Output", "ExpressionUUID" -> \
"c48a0199-50b8-4413-8366-9994e2490a0c"],
Cell[879542, 16621, 69246, 1227, 519, "Output", "ExpressionUUID" -> \
"bfa77b8c-2688-4d7a-86ba-280f3e5c2597"]
}, Open  ]],
Cell[CellGroupData[{
Cell[948825, 17853, 545, 14, 72, "Input", "ExpressionUUID" -> \
"9d865506-bd6c-4380-8300-cddcfd93fe89"],
Cell[949373, 17869, 70254, 1245, 533, "Output", "ExpressionUUID" -> \
"e80e7aed-d3d5-4bed-a32d-9af25a2cf441"],
Cell[1019630, 19116, 59729, 1072, 519, "Output", "ExpressionUUID" -> \
"c1daf6de-0c00-42a9-b350-bdd9fd2d4e51"]
}, Open  ]]
}
]
*)

