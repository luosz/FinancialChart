(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    444256,       8212]
NotebookOptionsPosition[    442529,       8152]
NotebookOutlinePosition[    442907,       8168]
CellTagsIndexPosition[    442864,       8165]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "=", "Today"}]}], "Input",
 CellChangeTimes->{3.668865213943282*^9, 3.6689641859036446`*^9, 
  3.669476949761873*^9, 3.6694777889920874`*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Tue 12 Apr 2016\""}],RowBox[{"DateObject", "[", 
     RowBox[{"{", 
       RowBox[{"2016", ",", "4", ",", "12"}], "}"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.668865216155445*^9, 3.6688652244696302`*^9}, 
   3.668962677789529*^9, 3.6689627763892407`*^9, 3.6689630029914536`*^9, 
   3.668964048816325*^9, 3.668964188757974*^9, 3.6694534905286837`*^9, 
   3.6694554583445234`*^9, 3.6694555190070906`*^9, 3.669476126678915*^9, 
   3.6694769502898808`*^9, 3.669477807458518*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"HedgeChart", "[", 
    RowBox[{"\"\<USO\>\"", ",", "\"\<DNO\>\"", ",", "start", ",", "end"}], 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<UCO\>\"", ",", "\"\<SCO\>\"", ",", "start", ",", "end"}], 
     "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"chart3", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<UWTI\>\"", ",", "\"\<DWTI\>\"", ",", "start", ",", "end"}], 
     "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9, {3.668032724636281*^9, 3.6680327747307005`*^9}, 
   3.668032842681288*^9, {3.668032886551777*^9, 3.6680329055850186`*^9}, {
   3.668078288605977*^9, 3.668078304671023*^9}, {3.66807873300231*^9, 
   3.6680787607888904`*^9}, {3.668079398596377*^9, 3.6680794079436197`*^9}, {
   3.6681123583237514`*^9, 3.6681123663217044`*^9}, 3.6681124067766967`*^9, 
   3.668865148002112*^9, {3.668865210375526*^9, 3.6688652109191256`*^9}, {
   3.668962642710268*^9, 3.6689626429272704`*^9}, 3.668963000681808*^9, 
   3.669476164099818*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTN//B/BJi6KSbC3KCJVQQ4UUzS1JiCFFlky2ihCJiJoKIdVEibKM
omxpWonU2LfKSFlaJxLNkGkVKr/357y/vz/u54/P5/N8nDt3Xr3v+55z7p2x
63cs2zSAwWB0wL/++y/8I7BJlVL4v3J7+BfrDjhWzan5/Ali7idwms1HX4X1
xHz1NCm10LgicdgTYtF0sLv5ulE79xHLueC6lPZ9B44T8xrAbIFOrIsHsVDt
spTa4tVxtnIxscQSvMqn/9Wh9z//s5YXeHfdihXeDsTso+D0Zf3n/d2IxSpX
pNSw5qagL99a/zNjKjh/THF98wIyzloNzt62zH/sAMx/GPw758tNl5/keH4W
OG5edOyHIGKmebqUmtDdHyxYSsxZCV6sNGGg2zZiXgSY+fPrvZ4RxMKb4H27
8vgFDsSSd+BaV0+/3/OIA9wzpNS6hoWlfnHEgjBwaOJZj6S3xOJr4Lj1nklD
X2H+SnDYvleuXqHErH6w0mKdwCEziUUHrkL9N6qPZKkRy9PBo/kl8tAlmP8N
2COxelH4J8z/F+yzPjnm70fMP+GalIoaFH7qRAcxuxw87+YixfJEzNsDfu6p
sWOvJamfwOg65Elj1Fj2Y95FYNUFO8O+3STj3Ffglo4T8q1GxPwusFAnY6z9
EGLRmBtSih8g0r/VhXldwLyoaRV/rmLe3eCz6lbaN6ZiPdvBD/VWCda6Yj1H
36RdHy1n8Nuvuo3v52L+nWD2MZ/ZP5QwfwrYd9vKOS8FP0g99TKl1D8zy0zz
DGLWXDDr5K4d52OIudvBY57kmI87Tcw/A74W1VajlYz1fgi+OJu3xvQH1pO6
JaVW7FOfOz8G67kVvP3mYI2mI5g/EbzuTZNz2UbMXwL2O2bsrNhNzq8lBZ9M
WlSVPxT7wTcL+jUi5nzUOTIuPgk+EP3xyVgrzH8fvDnFquTpje8k71ChlApw
GjKLq00sjwOfdbN+rm1OzLwL9hOb9G1pl5G8TWD7dMvNYeHEPM1sKXV0DfvP
wwJi4UzwiUwFSrCMmH0b7OJf27J0NnFAI3hDpsOM497EgsE5UirSZrXVpwnE
YmvwkeOjQ0oeSEleLlinjDESrgupZz14ffxu86Xq5HiRai5cjwzfNzvryLh8
GljllWvSsu1knLkW3PXTuMJ2EeaPAjurB7YKIoklynlSKnPDkldlp4m1WOAK
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
tlML+0EGTotUG9bhifUcMV5Gnf8oH/Q4l3yebw/+ckZpdYsj5vcbT7s+8lPg
mMN9UX/TsZ7aE+Dz3PGu2i+wnnYTaPWVbAabBQb8jBdi/niwxbu5U0NiMf89
8ITy21kG1dgPNsYwH3fwpSp3sJ4bwW7nhFbT/LAfYo1p9eHeAe/Ys7bkcRPm
/wQevFFsvLoV+8HbREaZzDmY/cMP6xsNvr/So+qlMvZzPrhkbcH5w1XYzw1g
Je+0bXfUcH9w1FRGDQ2Uh0WvxfUhB+zlDLsXN2JxLfhil8L4mkpixsCJMmp7
SlDCfS7Ox1PBkalHa05vx/UiC1y6MnFHdRrODx/BTsMj53uuwvlByQzm9xnX
lMb/wfnYHKwRO/+x5iycj1eCzadbvLzoRqz1Huxq9/xd511cLxQmyahl8dYJ
1HZc3yaBFZY+V9Kwx/2EO9j4rrXbwkPE4jDw2PoEN+E9Ym4/+HjyrM75K8l8
yzedLPvf78E4Hy+bTNu/yA+Ae/+uchZF43ycAZ5RK6jP2I77hwlT4H5P8O6P
ZJP5XbIEHFU/bLdHLxnX2g/2/mlsPWIVGWdfBi+32v8z/TLuL8rBkSNmPdA2
7yX1dTWXUW+ErVpvj+B6sReMz2NknHsJvOzfkewBXsT8V+DksZni9MF9JH8X
+PWK6nXr5hNzdlvIqKTYgSfm7CXmXQDnbFi+eOQ4YuFz8AmHhlF+Xv0kfzu4
fp3/RuVjxFoGLBlVLvcyW9JALEgBDw5eFjllLuyVoL5PwGdyx3jP6PhH8svB
wYNtVqd/JGbpTZVRj94wVyZ+xPxzwZkt5ffEHbjePQTf+P01e2g/rtc/wM5z
/n5RT8f926hpMD8rN46bb0LMo8C/PFIHLsrH/eZWsEm2eZLfRFyfh1vKqE32
VmYZs3F9ngPG3wtwffYFa5bv53Qtw/X5FNggNsrL8AP2w1Ar2f/eJ5DjRbbg
8Yo7Uob1YN5N4EfMoOBTwdgPfLC11+6Vtnm4Pt8F83Qb82wKyfGSmdawf043
5639iuvzBvDjUduLsg1wvxkDfjK6/JD/D8x/GzytWL8xPBPzN4K1Vcs9lvsR
s7jTId/jvON9KiQf9zj4Oudo6J5zmD8PbPS5U39rNPZzPdgxumZs72XMrzpD
9r/3nVjPKPDlMXZWvyVYz2yw7OPPexsu4f6tBuwpG6Dn0ob3o8pMmM8nWeSe
Gor3IwtssFpV+dhU3L/dmknbjzM+gisiXof1ZOH+XdEG9m+J+kbBSXg/TrGh
3a/8FTa0/QzzHdh9+MNPvj1YX8Ys2vXmmYHjmwVduUK8H5eDZ2yoZHZHYv1D
wQVLNOe2d2F9+8AHm37sSdxF6icwsYX1RHokUvoR+2MpuDwvUenPUOyPA+C4
Ps3p06Zj/dPBWzS2X7lSQ/KIxtvR5g/5YrDFFFPN4h7s533g1X4WgvwbmD8N
zJl31GfLKsxfBvYS//iSJsH5YtFsuJ8KZ9lsM8T5Yg8Y3xfifCEAZ/n8pWbf
wvwvwZ88Y+oPHiH3l7gTXHIgN3m+Mbm/uYFz4PlWxyTeaT3OF+fBsjmzDByn
43zxDGxhlLmtrI+My9vA6Wf/uVUuIePM0fYyKvuBint1AM4XyWClXTbN9RbE
ksdg7+rMPbo88nmtn+D8M84n7voRBziyoZ4ugTUPDcjxjIfgE5sZ0TM9iFnf
wZeaG+IeLca8IynZ/36fJ/MNnw0e7PR24pnzmHcLeLnP7/l2C8k4pwX8t1O5
L0KLzEe8YQ6w/iV6bjMZRyyc7UCbryQ+4IqaiF/TY4m1ToI1ukPVkvuJBVqO
MmphpvIH72qc32aBtWwtok6GEDM2gevU1osSNBX+MysOrFH0PNZwJzG3EHxl
QpD1EQGxfMZcGRU9VJsVnETMXA/uyct3dtpAzDkB/vHzS+/cJMxfAE7oSp0Q
E03MXucE9+vpZZMm6ZDjA46BVz38NKrzGObNBf9Y6+64Vp+Mi+vA+5+HjHdp
I+P8I/PgfLX1E1f8IRYJwend+tMu78N81eCzLO2gc2sHkHzKzjLqzvQb4W2P
iTkW4LBhV3Nv/iaWZIJ9rZdbd7Qrkvp9AOtkaxhnj1EieQfMh37O+9P12Y04
YDL4Z+rXpH5FYoEHeHsfX2HYH2LuP7CiUYxZxE1lkneiC/TvuVLJvWkqJK8b
+Guf/5cx28i4/CB4Kyu+R/8m+X5eL/i8M3dp7QwyLjReIKNSjhsctWGS80s4
4IGGStycfMwbAt4+sMKi9zL5e9hXwBPUrp4T3CYWj1sI65HpoSdv5OR4xmLw
hZbMBTpScj5WMPjy9lsHFw8n49xUcOJRM+pCNDG/FFwVe+ik/A8xc+EieH7a
qfeGkUQ+zwkC27m7ztS/RfLyLoItj/Pm2C0kf6/wBXhrZqR6+EhiSQc4Uuny
/O8DyfGCc67wvF/yTt6rSix+Cm6quFu18Q3mbQPP8Yi6btRPzNJfTLseorPg
z6cunzTfTcblj8C3b80uS1lHxpmt4OH9P7wFhphXZwncvw6G8YdTsd4O4CA5
I8T7KtbzAfhzzYP4eZOJ2TKwys7QdxsqST0DRnBgf5Tr9XdePLHAHrzLsji7
mI/19gN/0dd2PvQR759vYK7tIu9jfdi/2kvheA3/LcWPybjIDtz3e9OT2RIy
Lt+89P/fV+L9FQ/+cGHd35QneP8PWSajPCxLGia5kHGJDfjSLvedQReJtTYu
ox3PjgUfHVE47qIRccAd8PbjDfpJs/D+n+Emo5jv7dUC2cQsb7CeY5Gq3IKY
Gw2uc6vav7EC8+eDi+/dyDP5SczxWg71m5u/QW8U+X7eUfDmgsGb3x0gFuaA
1yt+v/QkBPPWgpe1aq63LMW8A91lVMT8lDYOG+t5GNwYO/dlIPazOAtsVvSM
m32HmFENlpquVy6sxPlKyUNGMS40nby+mYxzzcF7Xn274jsZ54Ob4A8eDr2R
Ggrs/wPZ8Zty
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
bt/qW0X5rWHuu9AZaSNpvXsI9zyk1baV9ge8r7Dq7C8jtrZTf2ia4PuHQeWR
xELqDwZeanEze1MErS9b4CCvl4N1nlI/DDKVMSeVbSp2lFI/zICfOLRmfhhB
67MbzPdZuHY7rZecs3B75fJRa5SongMmyRjvNP0FSyZRPadO+nd/Vq9bPIDy
rofDkncU2x+kvMHwR6fIw98vUN5MWKuXn51qG613UybLmNLyeUf4cdTPa+Gq
85e2GVJ/Ck7BzrWCyFLaT3ukw7X3zryf/5Xy18Lq9kGj82g954vMcL/+jBxW
Rv0nOg77asYc6t1A6/UduPcI7V5faqmf38OW2jYv3T5TP6uY4/6ZGLW/fkj1
PALP//g18G13PVNgh80tm2MmUP4q+G25p2kdre9cpSkyJqFITd2K/vssAR8O
43os9qT/nqT0Fuysf29V6XKqbwXcs6TAZPhJyt/TAvulhczb6fT9QzQe/p1g
WZJM+7NgJ7g2dOXIUSuovuWw56NEr3eRVF+OJeZbqvbQAXcovwHMze4a/7Ke
8jta/tvfKET6vqT8fnDUe+dLq35Tf/yG9TIN8hwMaf82dqqMiVH7T1V5MfXH
Irj/QM1rr65Rfh9YKH6Yrk/X48fC4TevHZhyhuqrN03GXB47QjEpiuq7EHb4
+j7TZQbl3wcvFWeNf+xD+aNhiY4j84r2++Ji2Mw7NMtUTvWdPx37q4/938TS
fBLsgVsPH9ndQM+DRwSsqvFg/SYLyv8U9tSYnnr3BOX/Du+8EsdbWUj9sWuG
jInXEUwf6UP9fQW+IDxyZFIJ9Xc+3Nmwx9XvDvV3C9xLGDjnzRvafw6xwvMw
p8eTPQ007y7BjrvunI9+RvMuD9a7Z/0nOpDmXTMc7lya+c6f+nmWQMZs+vwn
2+wRzbeH8GedP5LRFTTfvgj+1asg82Y55dVgZIzx47DRnQw7b4IF8Jj2oLaH
3yjvZth7y7B7XDOab43wZ0W/VtdvNN8GzpQxUrFuqp8CO3+Sp8M/v7fc/0Hz
SbIRNjZg2no7s+aegQv4nz4fS2cdwZ2F77eZRwRdF2i+WcJdej+U586l+bYe
1vy1cub+hzTfTsP/2ZYV2Q7+zua/C9/aqK4Ra8Vabm6N/e/iJO4FM9a8NfCA
d/kqDr1ZC0/CU5ZP0DFcwZ5PnAZHHIxqaXdgLVhlg/VIOD1uXgFrj2M2/75P
G02uXEh5/wcrawke+DyjvNVw/czRZaXXWAcHzsb9sB4vDrvJOicZTppyVz1P
i/JVwsKODa26lZSvl62M8bv/aPOUSW1svgnwequOT3FrWEtuwl2fVigvtPjB
1u8tbKiTeElhNWuBwhysNy8N+hkFs/YwgkfOOqeuOZd1xFJY1HtLp9eodrZe
f2FHnQG9FB+xDtafK2NWTXD1Elv8ZPMuho+mJbX0Psoel/v+O972fcTdVjaP
uAt+/9VW6dAi9njymHnYv041PNvqyF5PIoTncRdyrrWzr+fuh3e9cUm6rsxa
cA22NCxhDDRZl46yw/uPtCWmjGPfz1kIuxuGB0T3Ys/P3wt/bi19u1jEvl4U
BWfMWltVWMg6uAhW7n3gfJ0h+36e3XwZU72r0PJ7GmvhbvhecnGBVgp7PvFV
+IyupppIwH7e5ELYuXLkqqP9WEta4Zeb7N1cBrGvjwhbIGN46mPv6pNLn8Cx
Sz5Fjetkr89pgR9sDtmybDh7Pb7uQhnzvO50udF21jkX4cFqkedHXGNfL38E
vx06yMdnN+Vtgm0cLFq2TaW8Wvb4fvDmWuqJIqr3TNh81/g5o19QPXPhJ+Pe
Dq+n/hDI4Lv5D1p3DmLtMViI77uDnsXlU39FWMFKDU8Oar9hXboJ7pw+5Us/
C3p+PsOaipE1Kt7Uv+qLZMyRCWf6z9Fjj+dMgz0/eXxjVrHH5RtgV7/Ji8b4
seaFwP1TeG/0bOn57+8gY7LifXbw6fmWWMCxM2vkegrs+bjr4Jqxu64fnE3P
WxB8YGftqLJMdp54ZMAaY+dKV5ew5pgvljEVy4ZlGFSx5q+GP2iYVx/IZy06
AYcOMeioo+czOBU+XB627IAba6GrI9bblJnjF56i5/3oP39YcenFR8p7G27f
7hezTEJ538FO9y/UfjCmvMpLMG+suSNST1A9D8PWo/NTdSRUzyTYl3NrjF87
a04l3P+KXumQiaz5iktRP6tTr9ZmU72N4RvzXjx5H031vAHnTB26Oj201er/
rkQlsw==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 2.7867360003449675`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 2.7867360003449675`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"USO\"", "\"DNO\"", "\"USO & DNO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.668865224885637*^9}, 
   3.668962690770999*^9, 3.6689627769605513`*^9, 3.6689630067008095`*^9, 
   3.6689640495350714`*^9, 3.668964189633591*^9, 3.6694534977969923`*^9, 
   3.6694554628157425`*^9, 3.6694555203362412`*^9, 3.6694761309561095`*^9, 
   3.669476168858115*^9, 3.6694778092976646`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<USO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UCO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UWTI.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart3"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.668079430448698*^9, 3.668079543661236*^9}, 
   3.6680816042267323`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"chart1", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668962669523451*^9, 3.6689626724103975`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fmD/v+38//n4P4hA8vw=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pDzmquxhLYiBz8tPveV5lLVKMXzJtXa3SC7rPENxPrM+/MRvp2TWXDfYZ1u4
1drbrGWj4FqH745CSZT3C6w89XurPVnIdTj6XjBpswy9X/s4rBZ603LzWcp7
E/4e96zzWhjlk5TgM7+K0r8NHmdtGwn3h2dMDzBkHXwD3qFz+8FILcr3EQ4w
CjhfokH5xCX5TLH50ykJCyifHqxb87jYV4/6y4dDTEw1LeWovw/w7gNHQ9ZN
oLyiUsgT47hLbhzl1Yalv9zmXCY7O8IS5dUSM4ZTX0Ol+YyMytMxlaKUVxNO
kfd27ZChvKvh3U4OSgmjKe9BeLm525r5knS/hWQw38/3pEtRHs4MuPCQxbpd
4ymvPVwhc8hS5xOfzRsE50jIc69yWQtlwnGZgR23XrGOmjaCz2wf+ep2k4B1
6Qr4zMyIGXHydL/94SeutyKPDLLXVdLgl66j35uOovzVf13nrruKzLWW5TMz
5rS2yoygPvfD7oWDjIs05U+GbQquWXnQ53EqYXsfwTQHRcr/AzZbv6wp3Zb6
SxwJ2wQ65K+h+XwGjztwSvqFJt3/73DVtPO/hSdSXqVRfCZc50r5s399XoSL
t4+VviNMfT6Bz/TY71UUp7yd8Pz74TJGdL9kFUbzmaCVO5JHt7H5TM1hQfu6
mbWfqc+H8Mms3rKKF9RnB1wpv6q3s5a19oQxfEaqLShjyTvWzgvhnYu+zjaq
pL53wKKPpV4tv0p9foNH1T/+/DWDte24sXzGomGD4Z8LrINNYd8bqhc0zrPO
c4dDm2NUDOJYc2Ph+bVbi4tjqc/R4/A8a23c2nuadeICWOxp3Sthen31VjhP
M/rS1TTKHwOv6Z5TZHac8t+FI80e5Baeo3mYP57PjB2a/MH5LGvBZniniOHB
60cp/0l4w7o/hcV03bYIVva0FCSRgz/DJRnO8W30+bIucnxGTmLOgg3J1O8x
uCf+g1Hcv/yFcOPBtptelDeRC5+zbotmLlKfERMw/329/qa3qM/rsOpirYrV
JZS3Hj6vN/20Dn0/gZg8+hX3aNEsp7y6cIBNatT7KuozD04IipJh7lCftXCT
+Tux5CbKKzKRzzz+vXyH5ySa31mwhsLpYYO03jhr4Z2HzGU8flGf72DH4mbH
5WL0PBBW4DNF7dG67bQenTXgDS7vUnb1UH4H+PuB7xt1JGieg+F+3+g5Nd3U
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.684905373205651}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.684905373205651}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DIG\"", "\"DUG\"", "\"DIG & DUG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6689627135021515`*^9, 3.6689627910361853`*^9, 
  3.668963013985845*^9, 3.6689640600053825`*^9, 3.668964194244814*^9, 
  3.6694535023365602`*^9, 3.669455467793748*^9, 3.6694555231436195`*^9, 
  3.66947613526735*^9, 3.6694778111167536`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DGLD\>\"", ",", "\"\<UGLD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6688645395246763`*^9, 3.6688645435645914`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
BgA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVmnecTGcXx0fvjL5YjBJRFqMTrLmrsxis3ib6EjEkojNaSKLM6lFionej
d0aNbvTOLKvNVQart/d3f4fP68kf4uu5c++55zn9uQU6923WLanJZHqBP4z/
4z9PlYVBTf4aqoE/rNvA/bMm3Bo29r7Bjtvgx596Feljf2CwO/2ioJaQOXGm
OYrsqwi+Ma5+rhG5HhoccoCnJc0z5cIhsusWOKzLxDKHw3SDvWkWB7WjRztW
Pj4kaHCgHNh2ePSrzR24bu4I/pj79VlX08cG2yaAL54r+P3Q+EcG+1MuCWrz
Ho3buHoZ101lwHM2aaMufyRb2xncd9aEN494vWMc2Ps496QarbjuXgeeEXFq
U/lxZEuppQrbW4PH5TuXbebP/L1rNNi+d0Wf3mu47l0Nzhrjv3l/JdcDF8Et
c9btFXad8jtbLAtqZXLF9IyPIHtGgk/3Sczb5gjf178CfOFQXO6Ur6k/03nw
84Wm9O/nk62fwKmXn5g57OM96nfY8qDW9f3khFblRL9LwXG20b21d9wfyxlw
kXup5lT9k2x/D8bN/cHbvJ/ruxVBbdt4Q0Ky7RS4TA3/9abVyM434I7Ff/j5
7luyp+DKoNahb0L3Q2lF3uiVyu8dx8G3klauVfY85XG/BBe41LBuh3CyL/8q
yHvqdPNf6oq89cHTLrT7FLpCtvwKLjD138bD0/F+3ufg3uOrdA62IwfCVwe1
NNev5Oz8mu9jrgvWb9fLMGaoyN9vtSr/XPDW3uU/tZ8h+sy9JqituPr9H/2r
iD5rgRfMH9WpTnux55/BQ3d6f3s7ivp1zwbXzv1Q+/X6bcq/H7x0WI/bJV13
qE9tLfxjzcF3K5OTXb3B3w1cOfTDdl7vnbH2q3wByr8XnIb7d5PyB8HOTGtK
TT7PdU/PdUGtYlHzzr1z4qnfqeDzK/omCS9INu0Gw9gj9FiyI7P36/vy96Ep
4M1Nstzt7yNbdoB/vtTzw/bivN6eAM6xwT0uoivZlXF9UBvcNdK3+aLIWxnc
f/Hv+6pvItu2giO6FkjX5gjZGQ8+UcGrj83H9/Wk24D7Ze0w61V9rvsrgGO3
Ziobv4RscoA7jD99ylea17tvgl93OzjgzaME6jP1xq/+d5fylwVn4oZw3dIB
vCdvu1Cnk2T7ePCf51L0z3eOHEixCf4xve/ncRvJZiv49n1bv/Wjyba24GvG
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nk8Vev3B/BTyRCJigwZkjJWpEFSbCTRYG7gK2miKLeBknQaNKA6GZoH
Q0olhEyRIZkqIUnKkBKdkyFSUpff5+7VP7/7x733/TqHs6y9nvWsZ+8zxWOn
/eaRHA6nD//677/4J3pBLJ+h/+0xwb/0suB846FZ7xu6/7N7KyypZj2lJIg1
TyKOz4ReTxEe2MG6YB4cIuGlvWYp6x53uJ6TqLFXlTW3GU78Na52uK7rP6eI
3eQzfhffuV1qZ91iAP+JjreqL2It5Qb7vt76pOoYa9OTsN1sHdtp5CrheD5j
5N+zMHkva44+LCu35ezB3az1XOBTjubLcn1ZuwfDA5fN9mq6s+Ylw1t2Wlm/
I6vOvMVnihcVL//9P9a2a+Dv52Witnmw5h6BP61xlty5guJPhBvs0j+Ir6X4
6+DeWaLmguWsfZ1u85m6apt7GZtYRx+CjXgLhtd6Uvx3YGfNss1OWRR/Lay0
2Xj9Tvr79YZg9SKTiSv0Kb+BCXym9HHRqPnh7Os9t+BIByX/U00UfzV8x19o
z/8mse+3/Q1X53j37LxE8U+7g78vp3u9UxLlsxJOyDbwvZtK8Q7AmgMjI/OO
U7xqd/lMUp39gZ/WFO9yOOKz7aV/T1M+n8FHFBSfOC2ifPbDqc1cWe11rAtU
7vGZtydqd/XbU7zL4G2Pwi185lK8e+Cm3rkuLaGUz16Y+2ZSWPtWyufkRD4T
FheR4sGlelgK13S+Vf9Ov9/0HzjEsG6c4k6K/woc/vCne/ZKyqfCfT5jqj0Q
nuZC+bSAY1+L59yLo/h3wOFhKhmv3lH8F+Fkfe2sOSJs/RcUwZuNU1eJXqB8
Mkl8JthOY/+Sj1TP22HJ2DnFasLs+1Oi4LXH/J+UtbFuyYdbMpyvn/b9xsbP
h5vljJzfJ7OvR3sm4/WWShejBayrwuGBtNKrvjtYc/Lgtl132ubYsHaXTuEz
P9SNUg2LWPecha02CCue385aNee/172NiyfPZG37Cc6o5vMearLmSj7gM4Fh
WyKKFdj4Uwxhzm7FEFEZ1qaZcF5phJqbMmvfD/C0jaelT7dRPYin8pnf7UbF
Ovbs61Vz4cV7NyiMp9/HcYdbN5n8I3hK+WyCKxd/EDuW28nmUzSNzwgd5kZy
TrLumQ333k6U3jLIWvV/8IPbYy6vfsja9gR8aYJs9+c01i2j07G+dYr2D+ax
ltKDFz82q1v/nLXpOrh+z6KJOqOpHo7BuuvS9jaqU/xJ8JqLdeFZC6geZjxE
f5ln8LWK6sl9NWzW/Gv9jUqK/zC8zkHDT72M6vkerDb0a/WTIYr/NSyk2nFp
/ChaX44ZyKel39r4PezrKUHwcFphn28OxZ8A5/q+1tPgUvyvYPWDT87d/fqV
jf9fWKo9YNyLp6yrDmTyGcV4ccGPt6w5t2ClZ0omA6Ws9argu9siOHNrWbsP
wreUat+nZbDmqWfxmb3aOWvqtrNWjYPbTFaGLnJmbfsC3uOWeixkHmvuT5jj
qP0i1ZB1ypRs/P0xkzu2WLJusYHDbWQ9ilxZR3+Hncoei5XrULzKOdgPHjuW
bnOgeJfB0ie3aw9fonh3wzdfbVL+5Mi64Bt8YfboFa83sO5RfMRnPFyZH5+u
UryWcMchj7czyba+sLhan0zQXDZ/3Mvw3htX3zkZUD7lc/nMSCWDEL8jVA/m
8MCsvthKuh6+PrDJ1D6XBhWK/wIcO/NmrM0Uir/wv59vWV4rFk/5NM3jM0Pc
6IiMcsrnNrhV24W3I43ij4QVN7c5aOyn+B/DZsVBB5/Qz6t+gZMdvd/qbqV8
bn3MZ9y1BKv991E+z8G8jydHSFpQ/Lmw38igabxIqofPsL7W+Zs7uax9pfJx
feWFJTXvUn7Pwp+OFidts6f8ZsOmPiNbXP0o/o+wtVvgWJN0in9sAT5f9ONb
3Wm0HufDbw9cPtpwjNZbBnx/x73MVZQvbgt85Je8i+Usqucxhdi/thb4bzWn
ep4DL/Mz+TWoxP5+qfWw28VtolY2lN9GeLFq9vsbiyi/IkV8xtJw3uK7DwVs
/LNhfe2yVbtqWOu5wuojZhQWXWHtfhxO3f5FZ9Qx1j1CT/iMgpBlnFkQa9VZ
8Plxb41lolnbroUrt0fWJcex5h6FVzivOn/xA+uU+7CtTMYmMznKr24xPn8Z
t1dHlfLrDH9/1j7NRJvi58LckePGLBWm+O/C6m/F0n4zlP/X8K60ZaahNym/
Dk/5TN8bsR3RtH4LDsLh6eIWI6ZTv7gNXx8T7u4qTP2uBg6x8b73lNaH7R9Y
QSLWKjGG6iOgBOtl+bw99/sov/FwYXF609RBiv8l/GX5lpu61VTfv+B5U5wL
lZtYR08t5TPjy2NrZN+y1ouFiystx0rfY+3+HHbT/m6Y9YE17wdcNvDbPWIs
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.724864003338691}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.724864003338691}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DGLD\"", "\"UGLD\"", "\"DGLD & UGLD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.668864553971403*^9, 3.6688651553291597`*^9, {3.6688652180749407`*^9, 
   3.66886522633328*^9}, 3.66896271770475*^9, 3.6689627977432756`*^9, 
   3.6689630206242476`*^9, 3.668964066761972*^9, 3.668964198096452*^9, 
   3.669453504258154*^9, 3.6694554697248178`*^9, 3.669455524290285*^9, 
   3.669476137194148*^9, 3.6694778126068*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"btal", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
   3.667995156778397*^9, 3.667995177356733*^9}, {3.6681116088383703`*^9, 
   3.668111643226673*^9}, 3.6681123691444373`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hu2tIslFpPkFYFY++06C2vjafwHaNvP7
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
x/H2AjliV+iW2lpuzx/wunnMC+p/TuGGiCHcHvRoZQo5b0/k4UE+HH8WWu/8
EqxYTQ657XKl6j4eH06jdW9ewucbK74CWzqQm/isff3oJfe3k2jDK7S53GuY
P2Tt0abnr2G8tTtaqP/v0HfI3cjxKslhu8N79tjN8Q5F6/62YH3m8AbqJ5U7
WhuONsS+gfnVnIjWtMqE+Uk/IBPmN9P8TKh/7AfIuo2Jw+YO5/n3EdrY7y3W
Z9Fv4f3l+9EqMzm+hXuXM005/u9o2Zwsq+DX9ty4Sf48/8aTt9x2dumg4vn3
XhbM9/qiLMiXqeE7eF662+S8se46r5P8/AvfwXxrcXsP1+U93sP3MdwgR2+N
anjsPucz7z18vqzeB3j+ymC0RvsBPs+eQ15/Pz1topHbg+tHsDrwI/QH3WTy
3tGREzMOcPybP8L8qqqZDa/XqtCGCdlYP2wgn99yS7FxBbffS9nQX/WdrWDT
WCuM1/a1ZOfOYwf5LeD4z6PV760wP1sibDD/yOPQqrM2mI+1b/G6ctUnnN+S
P0F9ord8gvWJqcJnrH+9PsPz0534DM/H+PIz9B+LUw60H3m7HKwfh+XAesCc
kQOvlznmgpWeuRCvZghav4hcubRHK9f/OJ+l7VjftkHrBqGNOrTlEDm3TWGY
S1vuXy3zYD1mCEObY9CyA2jlwzxYH5jU+fD97XPRin35MN6oH+RjPfktH56P
fHYBWLWnANq79i7a8BVtVhSCNbsKsf65hTYVFML8aa//BazojrbY0fK6X8Gq
buQor/Q2S8dxvFPRspyv2J5rF1mFPhOyM/9cw/F2LYL+o5+ENm1Cq2sUg3Vd
0MbxxVBvW9YXw3wtv1gM9ZnB/xvEY478huPDWrTy3DcYTzTvvsF4Yx/9Ha4r
1pD9JxVuWHOJ4z/zHcZrXeZ3bM+VfkD/U638AfdrT/2A9ze8/gHzg7n8f1Zh
2HKHBst03J69yI0uuy2Ne8rzxXHyp96uXScP4P21F+Tdx1Pez2jA+2tlS6zC
h5qJGbEC76+1Rav/IG+Oe/LO5QL3t/QS2L+Rl/kJn6/yQGsHkw+svt0+cyX3
x4VoZalfVmG8pnvCpXk837Umr2vlm/dxEMc/kNz7ekhJhhf3xwW/4PvbD/7C
/LaQ2aQ29idL9rcs88iS95cnkJv8F37i2FCO/1+0uW8psGwuWrm3FLy/5j45
pVH4TfXfHH8xWZIPxazSYPVusmT+190hV7pRWPJ1NrePL+RRLTO6PB7P8Tdw
AGt3kiX5MdwkS/bPzPl4vzKkjE34tSTk/PD9nM9raHsuWbIfqqjjaBOSUn23
3dvJ8QY5wufpppAl+z3yz3i/qlZZm3T/USuQJfWUYSL5aZF+Z3hfjncjeX6D
jmW8B/PvB9WdbEKnr7H+Pc9yPgPQpnFkaXteh1ZcQBv9ytmEtLDcM4+/cD7H
oOV6tDaLLNnflo0uD1auRmtOo00VK8DzUK+oAN9Xd7IC5Mv4Cm0pV9EmXHjb
n17C+9nt0YZj5DUBYSpNT/795TlZ0l9lZSuBlUry+aoLI7yzON6haIVDZbDa
nSzd/w1HG2PJJfIno+sYeH9d5myD34takasH+7o+ieV4B5C1410nDFnA8c5H
yw6i9c2r2KS/Z5j6oe3R5N+7Dc9DOf79aLWZXOZTlnFZJf59oI8crsvnoFXx
aO09tKEIrTFUtUl/D9HfRpsK0XY3F5vQ8Vx3eQtvzucOFxiPjDdcoH9Z8lxg
fJHXq0b9acS2/fG+3L+Cq0H/MqeiZblopWt1sCaQXK9h98jAHO5fk9GKT2h1
zRpgnQptnIC2bEBrq9UEGzqjzWPRsnVo5Xm0qVMtsD0CrYgjS34PUp8lz14w
6m32FM7/W/KezwUum/ZwfkfVBqtW1cbxKxltsKA1y13B+hNo00uydL3pVAee
p6IdWVIfG41oSwZa7lgXrPIkS+pZ7RC07BlZsp5Slq5H47dD51XN1nF90wat
H4Q26ciS9YH6F1my3tO1rG+D/d8wcr2xvj7pzd+K8cfgdfkBsmT/0dDMDWxW
k+P2znSOuMf7U9F4XbmPLF0vPSBL6kN77wYw3yhmo9V70Lq7ZMl60PgVrZqp
sEnXe9pdaMMttLmALKkHZW4NIV7TdbTdjlbUbQRWd0NbrpKl+1E5aFXtxmBt
V7RhElppQ2tqNAHru5Al9bRpPNq+Hq1zaWqT7p8b/dGWSLR8LVp1jixdz3ds
BpZFoJVr0JozZMn+tD4TrRjZHKxeidadIkt+/zC+Jkv2t7TLWtikvw8ZjpMl
+ynmF2iZU0sY75Vt0aYktD2dLNlPUpRpBVZ7kCX7AbrBaPnTVlAPq0q1Bmtb
ow0DW0P9aV5AltT7mp9ofYs2YFN/tH1eGxhPFQnkuV8e+3nM5PmiqbtNyF5V
v/31EJ4v+pIl63n5XHeYD1V70dr77tB/Zb09wMpZHlD/anaTyzZ3e3kojuO/
gzZ9Qav/8gTrdpIl6yvjTU+oLy35nlhf1FfahPzjyd6bU7h+2EaeHdTy9A0b
n4+4Rg6ceS28xRWuL+1kyfkaZZ22UF9pgshx9T36OzbneuIKOSG7RZ8R7bj+
+dwW6g11rXY2QX/y2pa9ap7vBHIr1ag9ky1cv01sB/Ojtnp7ej4p26pUyuf5
LYB8ZPmvKYl1Od5xaNl6tL6qF+TD5Ee+5LbKoU51jncM2Vwvtl92JrcHvRd8
njrFC+pFi28HmzCy5y93z9Wcz9EdoD5VrSbnzYqpMNOH683TZJuqSvzyJnye
6g3ZoXKFXW89+XyPxpvGFyevFvPW8HmZFeRsx7Sosbu53jxJjipvX7FvHNeb
r8itHFtG9fqT681yPjbpeSLdUh+I13iMHJdZ2PRtPMf/nLzRdfTq+8kcf1lf
uF+lJEvW5+ajeF2W7gvtQ+nQEd5f405uE73tftxozn842aF74B3HE9we0jpC
e1LLOkH+dK3IydMSA63fOf4B5MfB71zzrnH888n63J+p1x9xfysh13nv3Knh
RG7Pzf1swljrkz7RURx/Pz+ot2XzyAn91zqZynH8+8mS8zOmJv42IbQwaoXr
Mh4v+vhDfaSYQ5bsF6jj/XH9dM8f6hF5aGebdH9fFYXWGtCG251hvW4uRGtm
BMD6WL8jAK6bbgTAet6eh9cV9brAetr4D/lDv6yye1N5vEvtgvVnLnm0adqS
Ges53kAVWHYFrfykgtdrago4vqkEXO9PIEvOE6mz0bpqXaE+NnbuCuODZSxZ
ch5Lvo7co8b22X8lcnuQB9qk58vMnQKhPcrG/PaxxL8jl3N7iCNLzgdqzpIl
5+nsPkFwXTEKrV4VBO1Rl4xWjegG44d2eTdcj57oButp80u0fkkwfD+TkSw5
f2fPID/eE+g1ZRKfV3QMsQkuG1dtmFLM5ys9yYfnBQQFVObzq0fIv6MJCOPz
q8/Ipef/syMrhM+vlu5uk55n1bYh79nw/O3MvqINg8jvDmhuvJzH51V/kSXn
Z/Ute9ik51lNYWRxutnJ521jyImCY+16K/i87X/ks2scJzsf5fO2zXrahJtB
U6JHHuB41WTX2anNYvZzvNHkFasTzn0zcbz7yBEVg46FnuPzto172YQXfIBH
fN59yLkTzr92apknPu/Z5LKGBhuvVBCt2UNODvhn2LizHP9dcofdMcFPi/i8
ba9Qam/bEh5MHSTer55JbtxJ0SWhv2jdLrL4c+8w0cZb5PKn+s0JnifaUkDO
9nPvEewt2rC9N403aZYfa9M53utkt4SwCwFbOd683vD9lHX72ITpg4PKdnnN
+dxKFtJ7ne52iPN5lWzO25zk9JbjzSGHJPQbY37P54Nr96XxtpKhQsEXznfX
vpAf+WXytcLSE8+d4HzayMojzV/4LOPnX0NtE3YFaR89GMrPvwu5YsmGoFBP
jn88WXenV/yD6twePpKT7h4ckFWK8+nSzyZ8LL7zdNE0jt+f3LFNo0W7pnL8
kWTnaM9M5SyOfy15f++kI/PqcHuo0t8m3D/qHdDNjdtDR/I/Nd74O4/j+CPI
GYl3Fq7tzfGvIcfVDi2+7MvxnyFPeh/2kypCMb8+YTahSOc4ZEttzu9IcknS
htwhFTn+lWHQP/SnyH+tj2k3chTnc/gAaP+6ZeRqhy7Ozh/P8R4nN9I0X9ot
guN9QT76/dmbRgM5XqeBVB909/nYMpLzuZjs/SJ5+re5nM8k8kJLzNKwJRxv
xkB4P2WZQdC/NB7kfS5RsUM3cz4PD/r/+/0PqoMOGg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/wNlrPVu
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.4714175076328049`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.4714175076328049`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9, 
   3.6679966014622297`*^9, 3.668024110181718*^9, 3.668031049318376*^9, {
   3.668032804112906*^9, 3.6680328286320314`*^9}, 3.6680328691426263`*^9, 
   3.6680329226453495`*^9, 3.668034039959835*^9, 3.6680783426206446`*^9, 
   3.6680785187740164`*^9, 3.6680795586876087`*^9, 3.6680816296349354`*^9, 
   3.6680817354333153`*^9, 3.668110915434724*^9, 3.66811167458549*^9, 
   3.668112417986598*^9, 3.668864555204123*^9, 3.668865155964558*^9, {
   3.6688652185436354`*^9, 3.668865226795666*^9}, 3.6689627219323745`*^9, 
   3.6689628015354204`*^9, 3.668963024295858*^9, 3.6689640704959583`*^9, 
   3.6689642018224144`*^9, 3.6694535065669003`*^9, 3.669455472066901*^9, 
   3.6694555258158674`*^9, 3.669476139169902*^9, 3.669477813895585*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rhs", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<RHS\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6694534770271807`*^9, 3.6694534775691566`*^9}, {
   3.6694545738929405`*^9, 3.669454580067218*^9}, 3.66945545284555*^9, 
   3.669455506605401*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTPsbB/AhyZqRNUvGvlaDVJTMUcoShhCuyyDZGVxZEhPXvjR2rm0I
ITS2kG2QfZtribKNZGmGmhYKN36P8/zxOx9/4P06Z2aeec53eb7f+TYcNbX/
mNIymayA/vr9L/0xdNxjFfi/9i70l/IMedjwOjH7daI1mWh9pXiwyZu8aVjl
GU47RNs1aN1rsv+h84q/T4s2lt9rFRoVXbyXtVq0pT15gd5l1pG1ouXDyVei
xt1LmyhatYy88qblQ90g0eay+8CytuTxmz5+rt6e4/+DPMQ5aZJsFce/mNz6
dUOPI704/iRyfEngjrSmohUe+8HqweRg78uRD+7nivEvJHuWGn6s+mfRxsNk
791eDzVpoi1p5HCv5JM7d4jWDkywCqUemqdfPizasIDsYr5m0keLNh8kW7dP
vlD2jmjZY7TyJ1npv/mlt1a0ad4BsH0/ed8Lt6To0qIV/5JDMkaF9m8hWv3j
AHyerulBq5DRtc7AlIGiVffR2mJyW4vv1bO3csR4Gx2C728OJb97Pu3oiIvi
dc0dckZMWOyLZ6L1X8gJR3Mbdk4SbWqQaBUuHHBNfFKZ4+2RiPH+RR5R5Xqp
yhU4n/nk6hV/fTr+U3y9pd5hq/DjyTaf4nridXkIufwRyyVPV45/2mH4vtpt
eL+szhF4f2UQWjOF3PfU9K2mDRz/liPw+aYr5Kvd7XcaFolWC0cxnxPRxo1o
yyVyZNL2RkMKxNfLrWjDuCSweR1adiEJvq+mqhFsjyN/crHU6PWveL8iBa3O
MsL30zkfswqpi1oWB84VbfQlXww9px88VrTqNFr7hry/1uDnOxZzvBWPW4Uz
h7OmVprP8XZAyzTkTQO2n7V35Hy+IvdSP9m7yYPzWe4E2N4OrfjzBLxevZT8
JNYtuFoPbg+OJ63CgzchTW+M4HwqyT97Oev9G3P8Q9Hav8n9Wr/LK7Ptsxj/
UfKoHEO14+9FK91PgTXh5DmNy9yadFO0PpZ87eKoJpElok2JaPsTctr58Okd
7orWDUgGG+ejLQfQ8kdoVQn5YJNRc2NPiTZHnwbL9qOVZrTmO3llwa3lJYEc
f5MzYEU8+dKQa57+m0Wr75Frxk7rVlSG20cR2tjwrFX4nJfS3H6E4++FNhSi
zW4pYFkPcvTwzl/W9OJ4Z6BNeeSUP/WF0504n3XPWYXVHg7JDW58EuMNJi80
Zy3b/ka0WkteP2Za/YoZonX/kOcpncepi0XLXc/D61WBaO1kcnq727fnPBRt
2IzXzZfJw1P9ex1y4HyqLliFsEg3t+ZunM8JF+C6aQM54seh4xtrcvwX0Yps
8sN1BQfds8X3N469CPFb1qLl59Gq92it/BJYFkce45316vRW0cqz5A7fQ0vF
tuT435JNV9yzt0/m+CubrILb5pSLSwvF+00+JsifOtmE+bWQD9100JSpwu25
wmWwxYsc6mlM9qvI7XnEZXhehpdkU0lkjUt2zq/TFbCsHdlpVHj5ey7cPoah
NUvI3nfr/9U1TbzfXuYqfJ7CE60egtYtugrty3iEHBFRbdLXT5zfNqlg7SDy
zG+7ZGPecfw6tPkQWvYkFZ6vPuwaPH9TDNqegFY8RKv/Q1vmXrcKiocF1oOz
uH3sI0/YFvvozS+O/wFa++06tGdD4xvw/ZV70Jq7N+B+/dcb8PzsPW+CdbfI
E9NSfjks4vZccBOej6X+LWp/HZa4xx/meLvfgvapmo4228mvHxps185xPuve
Biu7oTVT0fqtZM+NSZXCr/J4UfuOVXDdtnjRxQhuz13JDWSNZ3+8zfFPIg98
oY+a2ITj34T3W0x3IN/aLnepv/+aOevuEs7nePIVX4PwZgbHe5HcbPrtil81
HO9HcsZkh6JtA7l/Rd6zCocDos50r8H51KPV78hvKmfU+hjA8VW5bxViHif1
ftSP87cGrTqD1maSfbS/R3SOr9IDqh8yFqd2KrCJ+fUmH38Vmr7hp2jNqd/X
f3fvepy/12hTeTPVF89ujazqyvG2N8P7KYaTywnt6k7PFW0p+69V0HRKis8p
z/G2JctnGxb+WZrj/QOtXUxeX76aw5r2nL8yD3H88ngI+dQMRusXok2Hyb5d
9XeXvBDjUbd+BO+vG4g2LkBbDqLlj9GG/o8h3+Z55AZ+w/ZW6MPxJ6CV/5IV
ld1r3f3O+f6BVux9YhW6ZEZ+fniN473/BPKnKyY/P+Df+OIz8bqxURpYtZus
tvzht2eDaO0dtOEL+cicpKwJW/j5N3hqFfKDy61L14uW9UTrb6JN+eRvMVHf
UuNF2+s9AytCyD1Ui+sMSuT4p6EtuWh5nXSwKgitnZIO/cWwJR36p7JWBrRH
jZCB7XciedZUlyEHbRz/RrzffomcOiOdPkG8rgt4ju1hHLmvf8rABn7cHtY9
x/H2AjliV+iW2lpuzx/wunnMC+p/TuGGiCHcHvRoZQo5b0/k4UE+HH8WWu/8
EqxYTQ657XKl6j4eH06jdW9ewucbK74CWzqQm/isff3oJfe3k2jDK7S53GuY
P2Tt0abnr2G8tTtaqP/v0HfI3cjxKslhu8N79tjN8Q5F6/62YH3m8AbqJ5U7
WhuONsS+gfnVnIjWtMqE+Uk/IBPmN9P8TKh/7AfIuo2Jw+YO5/n3EdrY7y3W
Z9Fv4f3l+9EqMzm+hXuXM005/u9o2Zwsq+DX9ty4Sf48/8aTt9x2dumg4vn3
XhbM9/qiLMiXqeE7eF662+S8se46r5P8/AvfwXxrcXsP1+U93sP3MdwgR2+N
anjsPucz7z18vqzeB3j+ymC0RvsBPs+eQ15/Pz1topHbg+tHsDrwI/QH3WTy
3tGREzMOcPybP8L8qqqZDa/XqtCGCdlYP2wgn99yS7FxBbffS9nQX/WdrWDT
WCuM1/a1ZOfOYwf5LeD4z6PV760wP1sibDD/yOPQqrM2mI+1b/G6ctUnnN+S
P0F9ord8gvWJqcJnrH+9PsPz0534DM/H+PIz9B+LUw60H3m7HKwfh+XAesCc
kQOvlznmgpWeuRCvZghav4hcubRHK9f/OJ+l7VjftkHrBqGNOrTlEDm3TWGY
S1vuXy3zYD1mCEObY9CyA2jlwzxYH5jU+fD97XPRin35MN6oH+RjPfktH56P
fHYBWLWnANq79i7a8BVtVhSCNbsKsf65hTYVFML8aa//BazojrbY0fK6X8Gq
buQor/Q2S8dxvFPRspyv2J5rF1mFPhOyM/9cw/F2LYL+o5+ENm1Cq2sUg3Vd
0MbxxVBvW9YXw3wtv1gM9ZnB/xvEY478huPDWrTy3DcYTzTvvsF4Yx/9Ha4r
1pD9JxVuWHOJ4z/zHcZrXeZ3bM+VfkD/U638AfdrT/2A9ze8/gHzg7n8f1Zh
2HKHBst03J69yI0uuy2Ne8rzxXHyp96uXScP4P21F+Tdx1Pez2jA+2tlS6zC
h5qJGbEC76+1Rav/IG+Oe/LO5QL3t/QS2L+Rl/kJn6/yQGsHkw+svt0+cyX3
x4VoZalfVmG8pnvCpXk837Umr2vlm/dxEMc/kNz7ekhJhhf3xwW/4PvbD/7C
/LaQ2aQ29idL9rcs88iS95cnkJv8F37i2FCO/1+0uW8psGwuWrm3FLy/5j45
pVH4TfXfHH8xWZIPxazSYPVusmT+190hV7pRWPJ1NrePL+RRLTO6PB7P8Tdw
AGt3kiX5MdwkS/bPzPl4vzKkjE34tSTk/PD9nM9raHsuWbIfqqjjaBOSUn23
3dvJ8QY5wufpppAl+z3yz3i/qlZZm3T/USuQJfWUYSL5aZF+Z3hfjncjeX6D
jmW8B/PvB9WdbEKnr7H+Pc9yPgPQpnFkaXteh1ZcQBv9ytmEtLDcM4+/cD7H
oOV6tDaLLNnflo0uD1auRmtOo00VK8DzUK+oAN9Xd7IC5Mv4Cm0pV9EmXHjb
n17C+9nt0YZj5DUBYSpNT/795TlZ0l9lZSuBlUry+aoLI7yzON6haIVDZbDa
nSzd/w1HG2PJJfIno+sYeH9d5myD34takasH+7o+ieV4B5C1410nDFnA8c5H
yw6i9c2r2KS/Z5j6oe3R5N+7Dc9DOf79aLWZXOZTlnFZJf59oI8crsvnoFXx
aO09tKEIrTFUtUl/D9HfRpsK0XY3F5vQ8Vx3eQtvzucOFxiPjDdcoH9Z8lxg
fJHXq0b9acS2/fG+3L+Cq0H/MqeiZblopWt1sCaQXK9h98jAHO5fk9GKT2h1
zRpgnQptnIC2bEBrq9UEGzqjzWPRsnVo5Xm0qVMtsD0CrYgjS34PUp8lz14w
6m32FM7/W/KezwUum/ZwfkfVBqtW1cbxKxltsKA1y13B+hNo00uydL3pVAee
p6IdWVIfG41oSwZa7lgXrPIkS+pZ7RC07BlZsp5Slq5H47dD51XN1nF90wat
H4Q26ciS9YH6F1my3tO1rG+D/d8wcr2xvj7pzd+K8cfgdfkBsmT/0dDMDWxW
k+P2znSOuMf7U9F4XbmPLF0vPSBL6kN77wYw3yhmo9V70Lq7ZMl60PgVrZqp
sEnXe9pdaMMttLmALKkHZW4NIV7TdbTdjlbUbQRWd0NbrpKl+1E5aFXtxmBt
V7RhElppQ2tqNAHru5Al9bRpPNq+Hq1zaWqT7p8b/dGWSLR8LVp1jixdz3ds
BpZFoJVr0JozZMn+tD4TrRjZHKxeidadIkt+/zC+Jkv2t7TLWtikvw8ZjpMl
+ynmF2iZU0sY75Vt0aYktD2dLNlPUpRpBVZ7kCX7AbrBaPnTVlAPq0q1Bmtb
ow0DW0P9aV5AltT7mp9ofYs2YFN/tH1eGxhPFQnkuV8e+3nM5PmiqbtNyF5V
v/31EJ4v+pIl63n5XHeYD1V70dr77tB/Zb09wMpZHlD/anaTyzZ3e3kojuO/
gzZ9Qav/8gTrdpIl6yvjTU+oLy35nlhf1FfahPzjyd6bU7h+2EaeHdTy9A0b
n4+4Rg6ceS28xRWuL+1kyfkaZZ22UF9pgshx9T36OzbneuIKOSG7RZ8R7bj+
+dwW6g11rXY2QX/y2pa9ap7vBHIr1ag9ky1cv01sB/Ojtnp7ej4p26pUyuf5
LYB8ZPmvKYl1Od5xaNl6tL6qF+TD5Ee+5LbKoU51jncM2Vwvtl92JrcHvRd8
njrFC+pFi28HmzCy5y93z9Wcz9EdoD5VrSbnzYqpMNOH683TZJuqSvzyJnye
6g3ZoXKFXW89+XyPxpvGFyevFvPW8HmZFeRsx7Sosbu53jxJjipvX7FvHNeb
r8itHFtG9fqT681yPjbpeSLdUh+I13iMHJdZ2PRtPMf/nLzRdfTq+8kcf1lf
uF+lJEvW5+ajeF2W7gvtQ+nQEd5f405uE73tftxozn842aF74B3HE9we0jpC
e1LLOkH+dK3IydMSA63fOf4B5MfB71zzrnH888n63J+p1x9xfysh13nv3Knh
RG7Pzf1swljrkz7RURx/Pz+ot2XzyAn91zqZynH8+8mS8zOmJv42IbQwaoXr
Mh4v+vhDfaSYQ5bsF6jj/XH9dM8f6hF5aGebdH9fFYXWGtCG251hvW4uRGtm
BMD6WL8jAK6bbgTAet6eh9cV9brAetr4D/lDv6yye1N5vEvtgvVnLnm0adqS
Ges53kAVWHYFrfykgtdrago4vqkEXO9PIEvOE6mz0bpqXaE+NnbuCuODZSxZ
ch5Lvo7co8b22X8lcnuQB9qk58vMnQKhPcrG/PaxxL8jl3N7iCNLzgdqzpIl
5+nsPkFwXTEKrV4VBO1Rl4xWjegG44d2eTdcj57oButp80u0fkkwfD+TkSw5
f2fPID/eE+g1ZRKfV3QMsQkuG1dtmFLM5ys9yYfnBQQFVObzq0fIv6MJCOPz
q8/Ipef/syMrhM+vlu5uk55n1bYh79nw/O3MvqINg8jvDmhuvJzH51V/kSXn
Z/Ute9ik51lNYWRxutnJ521jyImCY+16K/i87X/ks2scJzsf5fO2zXrahJtB
U6JHHuB41WTX2anNYvZzvNHkFasTzn0zcbz7yBEVg46FnuPzto172YQXfIBH
fN59yLkTzr92apknPu/Z5LKGBhuvVBCt2UNODvhn2LizHP9dcofdMcFPi/i8
ba9Qam/bEh5MHSTer55JbtxJ0SWhv2jdLrL4c+8w0cZb5PKn+s0JnifaUkDO
9nPvEewt2rC9N403aZYfa9M53utkt4SwCwFbOd683vD9lHX72ITpg4PKdnnN
+dxKFtJ7ne52iPN5lWzO25zk9JbjzSGHJPQbY37P54Nr96XxtpKhQsEXznfX
vpAf+WXytcLSE8+d4HzayMojzV/4LOPnX0NtE3YFaR89GMrPvwu5YsmGoFBP
jn88WXenV/yD6twePpKT7h4ckFWK8+nSzyZ8LL7zdNE0jt+f3LFNo0W7pnL8
kWTnaM9M5SyOfy15f++kI/PqcHuo0t8m3D/qHdDNjdtDR/I/Nd74O4/j+CPI
GYl3Fq7tzfGvIcfVDi2+7MvxnyFPeh/2kypCMb8+YTahSOc4ZEttzu9IcknS
htwhFTn+lWHQP/SnyH+tj2k3chTnc/gAaP+6ZeRqhy7Ozh/P8R4nN9I0X9ot
guN9QT76/dmbRgM5XqeBVB909/nYMpLzuZjs/SJ5+re5nM8k8kJLzNKwJRxv
xkB4P2WZQdC/NB7kfS5RsUM3cz4PD/r/+/0PqoMOGg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
HfcTwxQcdlDfJhfhtUqjzU9SP4EP4ECF3T77aB74nXCIqP7d2X/zrNqB89Ov
aeHEf9fbBfhBpMLB03S+4qrg6NhGt2d0/ZW2w7qJQtNR9ZR//A8ho5kcpjqZ
vl/VGq5TL7t1nq5ngRg20D8+4zfl4Sh1Yr2dXuNTQr9vYgFXK0Xf//ae8m6A
Y/ZsnPaV5lPiK5y0pY2xoePTVfgpZA4WdC+3od/jmcJP/3iePPaZ8q6Dzyf6
JF9vpbwn4QcTdXrMKS931C/cr1yI+pBLxxu+AOZ2N7wM7qZ58IOnew085UnX
t+DYXx8IDtlM88gphtW7tXVlad75Rl1C5re2x0hTuj5qfODwcscaEc2jxBG4
yi3zT1kf5S+AJw3jTdKk4+F9gOcPGnZ8uoj69OrG83Nxk0wqWTUWjlXtUEzt
pPy58P5Ok8U76fjCm+H82tfl9fR6xqDfQqZS+U+VvzR7fZrEwA9aCzIVhrAO
zIbP57sad9Lx89/AOx8PG141g329Rr4H92NBBxT7T2MtoQevNRCrxjCs427C
MierVbTJpY2weOdu63ZN1mKZP0JGKcd1ybJxrFVnwPc3ueyIlmHNXQaP+xa4
66gsa8ErWMV7a1LBFNac/r1C5mw/Z4Nxcyi/NjxkTj+1znmUfzF86aZb0V1j
1vzdcMpHCWtPW9a6/fqwv/YPOargyJo3DbbVX2C2zYXyu8J/2vTT3awo/y54
uEHrZTcu5b8CW1fOt3++hHW4hoSI0c1X/S9zDa13TvALi5rQT6GUfwc8J/Ob
ds8hyp8Ma9/KNP/Ep/xP4LubD71qTKF+HfqJGI6B/araDOp3O6xkuYPXd43y
J8IqxTHTeKmU/xE8+m1q2v4iyv8LTjo+LHttGvW7VVLEcJVsLJzuUr8JsEni
tY1xxZT/PvwzhbvMvIby/4Afyy+bnVZK+VWkRIzifaXShErqNx5uHfgzIieL
+q2Etxm7NR4ro/zfYbtP3a9G0PfpWvUXMa/G+xp69PvO9nkXftMlSmsVU59t
8Ml3d6R+fae8itIiJrQnef/1t5TXHF7u8i7zHuUJD4CHPDh8y4Tyc1rhnG1x
+xubqM8xMiKm5G30rhz6fCADH21Xnv/qX15/+MMUz32771PeE7D5jbB3HBH1
OVJWxLiaXjork059zofDFxd+3ZhA8+ALK/7yPRkioPxH4fpOtbl3hrHHp1oE
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
O4+vV9qx4H8VrT7R
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.5871335057256104`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.5871335057256104`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"RHS\"", "\"BTAL\"", "\"RHS & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> D\
ynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.669455527495689*^9, 3.6694761408581114`*^9, 
  3.6694778154819174`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<XMPT\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6694540360666485`*^9, 3.6694540371310563`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Yl5TcFHLpl/OIuwzAzz+uI3u5tG9S/4HhakW0w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTPsbB/AhyZqRNUvGvlaDVJTMUcoShhCuyyDZGVxZEhPXvjR2rm0I
ITS2kG2QfZtribKNZGmGmhYKN36P8/zxOx9/4P06Z2aeec53eb7f+TYcNbX/
mNIymayA/vr9L/0xdNxjFfi/9i70l/IMedjwOjH7daI1mWh9pXiwyZu8aVjl
GU47RNs1aN1rsv+h84q/T4s2lt9rFRoVXbyXtVq0pT15gd5l1pG1ouXDyVei
xt1LmyhatYy88qblQ90g0eay+8CytuTxmz5+rt6e4/+DPMQ5aZJsFce/mNz6
dUOPI704/iRyfEngjrSmohUe+8HqweRg78uRD+7nivEvJHuWGn6s+mfRxsNk
791eDzVpoi1p5HCv5JM7d4jWDkywCqUemqdfPizasIDsYr5m0keLNh8kW7dP
vlD2jmjZY7TyJ1npv/mlt1a0ad4BsH0/ed8Lt6To0qIV/5JDMkaF9m8hWv3j
AHyerulBq5DRtc7AlIGiVffR2mJyW4vv1bO3csR4Gx2C728OJb97Pu3oiIvi
dc0dckZMWOyLZ6L1X8gJR3Mbdk4SbWqQaBUuHHBNfFKZ4+2RiPH+RR5R5Xqp
yhU4n/nk6hV/fTr+U3y9pd5hq/DjyTaf4nridXkIufwRyyVPV45/2mH4vtpt
eL+szhF4f2UQWjOF3PfU9K2mDRz/liPw+aYr5Kvd7XcaFolWC0cxnxPRxo1o
yyVyZNL2RkMKxNfLrWjDuCSweR1adiEJvq+mqhFsjyN/crHU6PWveL8iBa3O
MsL30zkfswqpi1oWB84VbfQlXww9px88VrTqNFr7hry/1uDnOxZzvBWPW4Uz
h7OmVprP8XZAyzTkTQO2n7V35Hy+IvdSP9m7yYPzWe4E2N4OrfjzBLxevZT8
JNYtuFoPbg+OJ63CgzchTW+M4HwqyT97Oev9G3P8Q9Hav8n9Wr/LK7Ptsxj/
UfKoHEO14+9FK91PgTXh5DmNy9yadFO0PpZ87eKoJpElok2JaPsTctr58Okd
7orWDUgGG+ejLQfQ8kdoVQn5YJNRc2NPiTZHnwbL9qOVZrTmO3llwa3lJYEc
f5MzYEU8+dKQa57+m0Wr75Frxk7rVlSG20cR2tjwrFX4nJfS3H6E4++FNhSi
zW4pYFkPcvTwzl/W9OJ4Z6BNeeSUP/WF0504n3XPWYXVHg7JDW58EuMNJi80
Zy3b/ka0WkteP2Za/YoZonX/kOcpncepi0XLXc/D61WBaO1kcnq727fnPBRt
2IzXzZfJw1P9ex1y4HyqLliFsEg3t+ZunM8JF+C6aQM54seh4xtrcvwX0Yps
8sN1BQfds8X3N469CPFb1qLl59Gq92it/BJYFkce45316vRW0cqz5A7fQ0vF
tuT435JNV9yzt0/m+CubrILb5pSLSwvF+00+JsifOtmE+bWQD9100JSpwu25
wmWwxYsc6mlM9qvI7XnEZXhehpdkU0lkjUt2zq/TFbCsHdlpVHj5ey7cPoah
NUvI3nfr/9U1TbzfXuYqfJ7CE60egtYtugrty3iEHBFRbdLXT5zfNqlg7SDy
zG+7ZGPecfw6tPkQWvYkFZ6vPuwaPH9TDNqegFY8RKv/Q1vmXrcKiocF1oOz
uH3sI0/YFvvozS+O/wFa++06tGdD4xvw/ZV70Jq7N+B+/dcb8PzsPW+CdbfI
E9NSfjks4vZccBOej6X+LWp/HZa4xx/meLvfgvapmo4228mvHxps185xPuve
Biu7oTVT0fqtZM+NSZXCr/J4UfuOVXDdtnjRxQhuz13JDWSNZ3+8zfFPIg98
oY+a2ITj34T3W0x3IN/aLnepv/+aOevuEs7nePIVX4PwZgbHe5HcbPrtil81
HO9HcsZkh6JtA7l/Rd6zCocDos50r8H51KPV78hvKmfU+hjA8VW5bxViHif1
ftSP87cGrTqD1maSfbS/R3SOr9IDqh8yFqd2KrCJ+fUmH38Vmr7hp2jNqd/X
f3fvepy/12hTeTPVF89ujazqyvG2N8P7KYaTywnt6k7PFW0p+69V0HRKis8p
z/G2JctnGxb+WZrj/QOtXUxeX76aw5r2nL8yD3H88ngI+dQMRusXok2Hyb5d
9XeXvBDjUbd+BO+vG4g2LkBbDqLlj9GG/o8h3+Z55AZ+w/ZW6MPxJ6CV/5IV
ld1r3f3O+f6BVux9YhW6ZEZ+fniN473/BPKnKyY/P+Df+OIz8bqxURpYtZus
tvzht2eDaO0dtOEL+cicpKwJW/j5N3hqFfKDy61L14uW9UTrb6JN+eRvMVHf
UuNF2+s9AytCyD1Ui+sMSuT4p6EtuWh5nXSwKgitnZIO/cWwJR36p7JWBrRH
jZCB7XciedZUlyEHbRz/RrzffomcOiOdPkG8rgt4ju1hHLmvf8rABn7cHtY9
x/H2AjliV+iW2lpuzx/wunnMC+p/TuGGiCHcHvRoZQo5b0/k4UE+HH8WWu/8
EqxYTQ657XKl6j4eH06jdW9ewucbK74CWzqQm/isff3oJfe3k2jDK7S53GuY
P2Tt0abnr2G8tTtaqP/v0HfI3cjxKslhu8N79tjN8Q5F6/62YH3m8AbqJ5U7
WhuONsS+gfnVnIjWtMqE+Uk/IBPmN9P8TKh/7AfIuo2Jw+YO5/n3EdrY7y3W
Z9Fv4f3l+9EqMzm+hXuXM005/u9o2Zwsq+DX9ty4Sf48/8aTt9x2dumg4vn3
XhbM9/qiLMiXqeE7eF662+S8se46r5P8/AvfwXxrcXsP1+U93sP3MdwgR2+N
anjsPucz7z18vqzeB3j+ymC0RvsBPs+eQ15/Pz1topHbg+tHsDrwI/QH3WTy
3tGREzMOcPybP8L8qqqZDa/XqtCGCdlYP2wgn99yS7FxBbffS9nQX/WdrWDT
WCuM1/a1ZOfOYwf5LeD4z6PV760wP1sibDD/yOPQqrM2mI+1b/G6ctUnnN+S
P0F9ord8gvWJqcJnrH+9PsPz0534DM/H+PIz9B+LUw60H3m7HKwfh+XAesCc
kQOvlznmgpWeuRCvZghav4hcubRHK9f/OJ+l7VjftkHrBqGNOrTlEDm3TWGY
S1vuXy3zYD1mCEObY9CyA2jlwzxYH5jU+fD97XPRin35MN6oH+RjPfktH56P
fHYBWLWnANq79i7a8BVtVhSCNbsKsf65hTYVFML8aa//BazojrbY0fK6X8Gq
buQor/Q2S8dxvFPRspyv2J5rF1mFPhOyM/9cw/F2LYL+o5+ENm1Cq2sUg3Vd
0MbxxVBvW9YXw3wtv1gM9ZnB/xvEY478huPDWrTy3DcYTzTvvsF4Yx/9Ha4r
1pD9JxVuWHOJ4z/zHcZrXeZ3bM+VfkD/U638AfdrT/2A9ze8/gHzg7n8f1Zh
2HKHBst03J69yI0uuy2Ne8rzxXHyp96uXScP4P21F+Tdx1Pez2jA+2tlS6zC
h5qJGbEC76+1Rav/IG+Oe/LO5QL3t/QS2L+Rl/kJn6/yQGsHkw+svt0+cyX3
x4VoZalfVmG8pnvCpXk837Umr2vlm/dxEMc/kNz7ekhJhhf3xwW/4PvbD/7C
/LaQ2aQ29idL9rcs88iS95cnkJv8F37i2FCO/1+0uW8psGwuWrm3FLy/5j45
pVH4TfXfHH8xWZIPxazSYPVusmT+190hV7pRWPJ1NrePL+RRLTO6PB7P8Tdw
AGt3kiX5MdwkS/bPzPl4vzKkjE34tSTk/PD9nM9raHsuWbIfqqjjaBOSUn23
3dvJ8QY5wufpppAl+z3yz3i/qlZZm3T/USuQJfWUYSL5aZF+Z3hfjncjeX6D
jmW8B/PvB9WdbEKnr7H+Pc9yPgPQpnFkaXteh1ZcQBv9ytmEtLDcM4+/cD7H
oOV6tDaLLNnflo0uD1auRmtOo00VK8DzUK+oAN9Xd7IC5Mv4Cm0pV9EmXHjb
n17C+9nt0YZj5DUBYSpNT/795TlZ0l9lZSuBlUry+aoLI7yzON6haIVDZbDa
nSzd/w1HG2PJJfIno+sYeH9d5myD34takasH+7o+ieV4B5C1410nDFnA8c5H
yw6i9c2r2KS/Z5j6oe3R5N+7Dc9DOf79aLWZXOZTlnFZJf59oI8crsvnoFXx
aO09tKEIrTFUtUl/D9HfRpsK0XY3F5vQ8Vx3eQtvzucOFxiPjDdcoH9Z8lxg
fJHXq0b9acS2/fG+3L+Cq0H/MqeiZblopWt1sCaQXK9h98jAHO5fk9GKT2h1
zRpgnQptnIC2bEBrq9UEGzqjzWPRsnVo5Xm0qVMtsD0CrYgjS34PUp8lz14w
6m32FM7/W/KezwUum/ZwfkfVBqtW1cbxKxltsKA1y13B+hNo00uydL3pVAee
p6IdWVIfG41oSwZa7lgXrPIkS+pZ7RC07BlZsp5Slq5H47dD51XN1nF90wat
H4Q26ciS9YH6F1my3tO1rG+D/d8wcr2xvj7pzd+K8cfgdfkBsmT/0dDMDWxW
k+P2znSOuMf7U9F4XbmPLF0vPSBL6kN77wYw3yhmo9V70Lq7ZMl60PgVrZqp
sEnXe9pdaMMttLmALKkHZW4NIV7TdbTdjlbUbQRWd0NbrpKl+1E5aFXtxmBt
V7RhElppQ2tqNAHru5Al9bRpPNq+Hq1zaWqT7p8b/dGWSLR8LVp1jixdz3ds
BpZFoJVr0JozZMn+tD4TrRjZHKxeidadIkt+/zC+Jkv2t7TLWtikvw8ZjpMl
+ynmF2iZU0sY75Vt0aYktD2dLNlPUpRpBVZ7kCX7AbrBaPnTVlAPq0q1Bmtb
ow0DW0P9aV5AltT7mp9ofYs2YFN/tH1eGxhPFQnkuV8e+3nM5PmiqbtNyF5V
v/31EJ4v+pIl63n5XHeYD1V70dr77tB/Zb09wMpZHlD/anaTyzZ3e3kojuO/
gzZ9Qav/8gTrdpIl6yvjTU+oLy35nlhf1FfahPzjyd6bU7h+2EaeHdTy9A0b
n4+4Rg6ceS28xRWuL+1kyfkaZZ22UF9pgshx9T36OzbneuIKOSG7RZ8R7bj+
+dwW6g11rXY2QX/y2pa9ap7vBHIr1ag9ky1cv01sB/Ojtnp7ej4p26pUyuf5
LYB8ZPmvKYl1Od5xaNl6tL6qF+TD5Ee+5LbKoU51jncM2Vwvtl92JrcHvRd8
njrFC+pFi28HmzCy5y93z9Wcz9EdoD5VrSbnzYqpMNOH683TZJuqSvzyJnye
6g3ZoXKFXW89+XyPxpvGFyevFvPW8HmZFeRsx7Sosbu53jxJjipvX7FvHNeb
r8itHFtG9fqT681yPjbpeSLdUh+I13iMHJdZ2PRtPMf/nLzRdfTq+8kcf1lf
uF+lJEvW5+ajeF2W7gvtQ+nQEd5f405uE73tftxozn842aF74B3HE9we0jpC
e1LLOkH+dK3IydMSA63fOf4B5MfB71zzrnH888n63J+p1x9xfysh13nv3Knh
RG7Pzf1swljrkz7RURx/Pz+ot2XzyAn91zqZynH8+8mS8zOmJv42IbQwaoXr
Mh4v+vhDfaSYQ5bsF6jj/XH9dM8f6hF5aGebdH9fFYXWGtCG251hvW4uRGtm
BMD6WL8jAK6bbgTAet6eh9cV9brAetr4D/lDv6yye1N5vEvtgvVnLnm0adqS
Ges53kAVWHYFrfykgtdrago4vqkEXO9PIEvOE6mz0bpqXaE+NnbuCuODZSxZ
ch5Lvo7co8b22X8lcnuQB9qk58vMnQKhPcrG/PaxxL8jl3N7iCNLzgdqzpIl
5+nsPkFwXTEKrV4VBO1Rl4xWjegG44d2eTdcj57oButp80u0fkkwfD+TkSw5
f2fPID/eE+g1ZRKfV3QMsQkuG1dtmFLM5ys9yYfnBQQFVObzq0fIv6MJCOPz
q8/Ipef/syMrhM+vlu5uk55n1bYh79nw/O3MvqINg8jvDmhuvJzH51V/kSXn
Z/Ute9ik51lNYWRxutnJ521jyImCY+16K/i87X/ks2scJzsf5fO2zXrahJtB
U6JHHuB41WTX2anNYvZzvNHkFasTzn0zcbz7yBEVg46FnuPzto172YQXfIBH
fN59yLkTzr92apknPu/Z5LKGBhuvVBCt2UNODvhn2LizHP9dcofdMcFPi/i8
ba9Qam/bEh5MHSTer55JbtxJ0SWhv2jdLrL4c+8w0cZb5PKn+s0JnifaUkDO
9nPvEewt2rC9N403aZYfa9M53utkt4SwCwFbOd683vD9lHX72ITpg4PKdnnN
+dxKFtJ7ne52iPN5lWzO25zk9JbjzSGHJPQbY37P54Nr96XxtpKhQsEXznfX
vpAf+WXytcLSE8+d4HzayMojzV/4LOPnX0NtE3YFaR89GMrPvwu5YsmGoFBP
jn88WXenV/yD6twePpKT7h4ckFWK8+nSzyZ8LL7zdNE0jt+f3LFNo0W7pnL8
kWTnaM9M5SyOfy15f++kI/PqcHuo0t8m3D/qHdDNjdtDR/I/Nd74O4/j+CPI
GYl3Fq7tzfGvIcfVDi2+7MvxnyFPeh/2kypCMb8+YTahSOc4ZEttzu9IcknS
htwhFTn+lWHQP/SnyH+tj2k3chTnc/gAaP+6ZeRqhy7Ozh/P8R4nN9I0X9ot
guN9QT76/dmbRgM5XqeBVB909/nYMpLzuZjs/SJ5+re5nM8k8kJLzNKwJRxv
xkB4P2WZQdC/NB7kfS5RsUM3cz4PD/r/+/0PqoMOGg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
A/hOb+fDSh7V8wacPCWkKC2n2+p/sdkAqQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0.5691408458258352}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0.5986143187066975, 
      1.1880837763239396`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0.5691408458258352}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0.5986143187066975, 
      1.1880837763239396`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"XMPT\"", "\"BTAL\"", "\"XMPT & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.669454039727256*^9, 3.669455474448515*^9, 
  3.669455529124706*^9, 3.669476142527875*^9, 3.66947781642148*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euo", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6680300623170033`*^9, 3.668030065558288*^9}, {
   3.668111631132517*^9, 3.668111631960491*^9}, 3.668112371394373*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
faPWd6+D71OLKpTyRnweOB68pqhi5fon+DxKD65Y1V5qdx+fR3WrJ8dFY+rJ
8yTpsnr6fPIr+G9B90dm8cxCiwa4Xua/tiTo8XmgewM5Ll8MHjblWsPSbHx+
eRSsUDe7lf4cn0+Z/dByyUFNFcfnU24/yPnKheCUwRsy1nHMmkPggvLxu68u
YubfoccVI3/C/T5i/7F0Z2b1PDC3ceWOEAnmPwCO5BI2mhlj/tvg93/Surjn
fmH5P4D7xfJf7d/OrA/5BfN9YCtJyEpmwT5wXvTuziF9mMW3wDNLt5Z5ezDL
3oHrQ1ys/hvKrGzzG17/b/PugsOfWX0jwT0H3Vtr+5tZeh38oXCFU2tfdr6i
DHwm0SoifzWzulWjloueadE2YS4zzwV8G2728ebM8mRww97gadnBzKq34NYW
gjHpYzG/0R/o3w4Sx+9t8fmg4x/y+cXTweLoD2bf77DzNYXg5R4p5bYfmfkG
f4lFDn9JXuk08MZ860351pg/Arxlt8/F7YuZhc3+I5bYgmc0f/Rw+23MHwA2
/OHeatp0zL8FnLd0VmnMX1Yf/QVwsLz9Xe94Zll/no7b/iz9+d8YZqUfePno
3xWtUpg1G8Fvr/1O/BbBzE8EWwmtB6yzwPo/B18+42lrO5NZ7dNMx91u5fD2
diAzbz24YNF3p+zlzMI4sFOFqXhwP2bJs2bk9eU/wKadrh//mMosWNNcx53Q
zYQthVl8FmwRnN7O7DHmf9ycnK+sAysCL8/Of4P5rVrouAOdAk9MtcL+OA3u
wm/a4ZkVOS3I+6trwZuTyo7EXMG84wxIXtUDA3K+vtqA1EPQ1VDHTY8Ml8bc
17G8ow3J+8uWgodrEuPmHGfH+V/A/ezSN8dHMos6G+m4P9sDg7lqZilnROqr
CAPPuH7mwpyP7Lj6CNgqyDeEG4X17GSs41Lu9pu/fzzWcxT4/60X1QKw9tex
5d7GmP8geG9CK7dvR9jrCTLAOa/tvb27MitHtNRxLznTP2/NmTVzwTBsO8Z/
0bL8crCizbbRSkPMW0HNC2kF/bX14LW32ex84V5wX1/vhbefMUtugn16Fd6v
kjOrTFrruGvj8/nxPsziPeCQXX45cTxm2TXw+bT4tW+LPrF8peDaLW+W7dvK
rGlpouOkbOBl5juDo483/WFWXAX/yC2rSDvIrC4GZwisNh/3YuYZtdFxeS9b
x02ZxiwUgs8fyHSv3fKR5Q0COwkOv7UJYha0aEsstgez9tjILJsKDs2M9E1b
WMXybgXPPeOxKKKmkl1vXjuoJ/vBhR2XDgAXJGbcj5YyKyY3edOh3WovZvVm
8PsO51baLGHmXaDH5dbtod7l0/u3XMWs8gVr21RnrTFjefQbwJ8/JpS4nWLH
BQngGdn1jXvrmcVqsM3out6zxzFrJvGJ+evAbPr3YBbFgh1C82c9cML8T8F/
Tx5s8edfzN8AjrolOdgjjlmi6KDjDjVfYDzhOuZ9BK5tub1L3C7M+x3Mfh6b
xazvYarjfIc9Cn2wlVl2Cpz57fnJ4jlYz2yw1F7afMI8zFtjSj4/37IjfL6c
UbzF97DeY8Hi4CCf4ixmdRa4ZF3/0sYMZl412MdFaN7xDLOwSycdVxGe4WTj
yCzxADvM7RoS++cDy78EfHj+49z+o5kFn8Fz7g4zqvRlFpubwf4VIukRcLOC
5ReB2c8XAmblInCU+2Q309XMmsPg9YuanoC9Z/XsaK7jXNvn636PYccVrmCL
530KPcXM6vngl+u4UY1O7P14B8EThaWPRu1kx4Xp4KbpStKDHVcN76zjjKRj
erllMutDwWp+lNArCvPvp8fFqWAzjzLN1nnMsvfgpulNsoSZP8dCx7HL05lZ
FAW2dGv6gsjeX3oD3MDL7tX4HvNrwAHsDztfsrsLrI/Vs2GExnqmgO0ksk41
XTFvCfh0113exo3s3+uNu5J6CZzAwvgvw8M8sZ5K8LlZdSu2DsB6FtHz+Ybd
dBzv2rb4ohPMooHgEru/qiIt5g0E+522t47lYz3fgH2q4NvBY6xnc0sdB5tX
kOkDZomdJbm+8ilgo14vmrn1xfwyS9If4v8sSX/IbLrrOBN5r+DYJGalPzgk
68XkaBfWb5pN4IDNQyLdlMz88+AkVjBmRb8eOu6fZWcF6pnYz2Jwv4U72q3Z
g/28Abz3sMXFSlu2HoTx4NJYv84P3mM/5/Ugr6efaKXjmn4ddZvNLFhrRdaD
+Bw4cUF5m5Z9cT0+saL7W70VWc+icAHs93uf1iU1x/3hDLim1RPLCH/Mnwv2
5X90KO6H+b8JyHrj9egJ9/cimxd5d7GeD8Fs+x+G/asHj9ga9c15BvZvt146
Ltgu6G7YDqz3GHDnX0btXS4yazJ70f79Ct7cN+ZirDfuDxa9YX/NHOhvk8cs
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
wRSoX9PlOozzg8MU8n1Wf2nK/73e/wDXoOzC
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
7xrX/wFpjT4C
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QWYta5dQdwl5Q8hcZ+93f5BfpiLndXzZzQT9kWX8SMGEVGgo3W8g7zjy96lz
D17B+/krydrDL898jf4vOkx2WjpvW/4F1LPnY5ofTwffWYb+ynP918LlZKvU
R13GYD8lOUAu0RTsPK2en6Vkvfr6rQWHUc8xBQpmhKY8Mgfzl3gpWaDb+jAI
7cG6Rb6VoyteBXO+knv3bJRfuIf2D3iiYI6sX3nU+gTqKSL3P8aNy5Ag32ey
s4eWZDPmL6HuUwXDMbNf2f0Y6reXXFnxdDM3EvW7Qs5wc1S8Vrf3R3L7Oqby
PvqPuMszBRPz2E+jAO0hcyDPbHdu494g1C+LnGRtUW6E14vKyDN8PSxlWB+k
HWUKxmxFkvGxXOQdRn5T9yzIF/2fPZeczRX+2ID9klz7uYIZxVh8vYH+rWdL
fjLXKUcH/Y07i8zXTDxsrR5f28kl85tLgtXjR7NQwRx4sVfX9TTqN4TsLGr+
shjrF386WXDUgNML9RJtIdsFDvEt3Ye86eRAS9sg6U7Uc9ALypu4MKd+B+rp
S54o+b6zGvWTbCZPWZ7g76bur2nkJevuxk7BfkHvJbn7IM+14d6op/dL2r93
vLtqBvqDLJycd2LJva8YX6wUct/f8c5T1e3/nNxrXlcnbgLy/yRH6c3Ol+xG
/c4UKZhrcY45+zD+eU/JMb9zHi5Rr79NZPbkpc5N6vW37ysFc3ln4KYn6nqe
JPcNjGiISEQ9H5M7f87MkaF+4nrykZraxQq8X2b2mu6nHnXYWI31kjWRHN3L
yOQH5kNRPjlyYPvTzvg+0hryFnnR1WjkU5m8+ec6252sfFiU9Vndf1eRb+ht
25OH9VleTZ73pGpxBca3Xu+3tN+tf+Boi/Wc60Z+VTXVZre6P6wgX79op+eL
fOJD5NHFncaaYrxzjN5Rf3MLqN6Lv8dnyKykK6I4zI+iZWTF/T4uFVhfpPvJ
56J2jA3ai/y3yXHbG5p00F+ELsVU/+0b5mViPEqWkFffvbB22xHkjyOXixJ8
NmO+07tJFt09GjUY9eR+IXfv8aMkFu+XLS6h/cSi4lMlaG+WiGzoO/+4Fvoj
5xp55nejzuMwPvjl5I7Lnh+9hf4g+u89vX+1V8h1vJ69hzw+4XjKMOy3eTnk
Eddr0vz2I/8Hckix9n/9kVfSuZTWl0zjfoPw9+TDya7N03VSMR8KLpPHH75Z
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
2ke6IqnNqnTyBE1Nx2vJVWP+B307N9U=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.4900732230968246`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 1.4900732230968246`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680300670903735`*^9, {3.668032821463683*^9, 3.6680328418687954`*^9}, 
   3.668032879070866*^9, 3.668032929583929*^9, 3.668034068744912*^9, 
   3.6680783651426744`*^9, 3.6680785301828213`*^9, 3.668079567034998*^9, 
   3.668081644195116*^9, 3.6680817488791685`*^9, 3.668110928922552*^9, 
   3.668111678434035*^9, 3.6681124217779565`*^9, 3.6688645564349017`*^9, 
   3.668865156480183*^9, {3.6688652190216856`*^9, 3.6688652272644167`*^9}, 
   3.668962726298778*^9, 3.668962802268225*^9, 3.6689630279484224`*^9, 
   3.668964074231472*^9, 3.668964205679905*^9, 3.6694535120509343`*^9, 
   3.669455476706587*^9, 3.669455530660858*^9, 3.6694761445111*^9, 
   3.6694778178487573`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<btal.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "btal"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<euo.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "euo"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6681116553181944`*^9, 3.6681116650122952`*^9}, 
   3.66811237640305*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<JGBT\>\"", ",", "\"\<JGBD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668025228046261*^9, 3.6680252311869135`*^9}, 
   3.6681123743627853`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fXLY//P/Dzn20NA=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
6/HXZz/T80UgLB8fFxhK/U8RC4ti72YH0vqWcwpeGfrpuw/93iTt007N+N8u
mNaZLJ8INy85Nfofrf80q2HjSpPXWdTvealwTlTRiS80vwgVcOyYiNrV7PtU
Xy7Gk4W+YS69j+GuhFOdMnkva7XxCY7Dr8oLWu1n15fF8NF4foc9tL6V/YTj
uhpveUbjQyRrr2bcr+g1HKX1ofQBvH+Rq68BzS/yb3DIo7fbJ/zVHl9jY6Zm
bFZnjIlm3z8egWcEP3R6zK7X78F5Iws8Kml+U36BQ87cWHCSfV9m3UHNfPTc
OjyI/T1mDPzNxkw2m/q9ogCuM0mclkP1zKmHRe/zu74q1Z6f38lczRR2qFPc
K9Ra5AErw4Y8+FVP/XY+XDK5t9Eg6se8j7D7otUdOzzTbhdadET9B5m/8X1K
/VYAn5jWtZf7E60zo+Da/IQZJa+1Vu6GOwdMWzIxQ2txBws18yQi6GDyB6oH
VzhF/HLeXsqPIhzOU052dy7TmpME5/a97M7pRfWbD1tzr33dyD5/jrDE+E6J
LMpgnzfmwr+2XXs1lPoRbyf8+Nn9iR/ZergCa45O9G3Pjr+3sO+5z8nd/2nP
x51tpWbazsz62aKc6mGblc71iC/D4+JHN1dWU/xKON+853PxT8pnQic1o2/D
iYmlepJehLdV9jvBo+3yCnhLibL8Ah1P06qzbrxO8MgXm1ssYt+nZ8Jzzv1Q
VdH8oXwFB+99mHKfxhu3ZRc1c/p1YHAuuz4bAG/m1fvE03gST4GN81+/f0P9
lvMCNlgfHvQ/Wk/w9azVjN7Yzec/UD8UOcDhl5Lr9Nn3J0H/bV9tFz6N5lO5
BE4vWpbMdKB8/oOvH6k6OpDil9h1VTPtrUcGNrL1HABPy3KT6tH6T7kWPhp0
OTiA6o2bDp9WOL/MpPEj620DH97XfRTdD4UQVnGSryy1pPhXw6v0ArY+o/UJ
/yRc4m2SYK9H8T+C433mHO7D/p7s0w3XKxbJKql+eCvg/F+cYzfZ94EpcETo
66YqWq9IiuBeLce8k1J+Mn/AT8LFj47R+QTLeGrm4JyGdV6UD3Ey7Hkmp+c7
dj67D5dEVws30/OL4ivMWfqkewHbj226Y/zc3rz3ED3fyu/CZ67uuzOD5iuN
BrYX31Rk0XZelx7I9x2bkFN0P4Sj4fbH7/mnUz6Ut+GwqXrn29DzFfdzD53z
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0.6489945554963584}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0.6817258537194998, 
      1.336351818182328}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0.6489945554963584}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0.6817258537194998, 
      1.336351818182328}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"JGBT\"", "\"JGBD\"", "\"JGBT & JGBD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680252337025223`*^9, {3.668031059959094*^9, 3.6680310640966015`*^9}, {
   3.668032816869893*^9, 3.668032833933844*^9}, 3.6680328714675937`*^9, 
   3.668032928110566*^9, 3.6680340567214584`*^9, 3.668078350073217*^9, 
   3.668078522638321*^9, 3.6680795594343996`*^9, 3.6680816341974983`*^9, 
   3.668081742856388*^9, 3.668110919950199*^9, 3.668111680071972*^9, 
   3.6681124225088577`*^9, 3.6688645576692224`*^9, 3.6688651569645605`*^9, {
   3.6688652195216813`*^9, 3.6688652278232803`*^9}, 3.6689627337509823`*^9, 
   3.668962805899145*^9, 3.668963031574*^9, 3.6689640779724407`*^9, 
   3.6689642095255737`*^9, 3.66945351442999*^9, 3.669455479042101*^9, 
   3.6694555321790037`*^9, 3.669476146242905*^9, 3.6694778190458717`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TQQQ\>\"", ",", "\"\<SQQQ\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66802991472351*^9, 3.6680299654683013`*^9}, 
   3.668112378900997*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
lV7Z
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732353500000005`*^9, 0}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 4.016244732422428}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732353500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5747136*^9, 3.6693216*^9}, {0, 4.016244732422428}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TQQQ\"", "\"SQQQ\"", "\"TQQQ & SQQQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.668029922314522*^9, 3.668029966891885*^9}, {
   3.6680328177136507`*^9, 3.668032837720002*^9}, 3.668032875289584*^9, 
   3.668032928798088*^9, 3.668034061143282*^9, 3.6680783575774946`*^9, 
   3.6680785234351854`*^9, 3.6680795632476196`*^9, 3.668081635791247*^9, 
   3.6680817474814653`*^9, 3.668110924402893*^9, 3.6681116810497675`*^9, 
   3.6681124233230357`*^9, 3.668864558949147*^9, 3.6688651574489326`*^9, {
   3.668865220000208*^9, 3.668865228292084*^9}, 3.668962735255577*^9, 
   3.6689628067207217`*^9, 3.668963035245594*^9, 3.6689640816749277`*^9, 
   3.668964213360017*^9, 3.6694535166004868`*^9, 3.6694554808536143`*^9, 
   3.669455533415723*^9, 3.6694761481922426`*^9, 3.6694778206851077`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9, 3.6680310240717154`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart2", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
   3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
   3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
   3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
   3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
   3.667989983816139*^9, 3.6679899846396537`*^9}, {3.6680328189012156`*^9, 
   3.6680328236945057`*^9}, 3.668032854896698*^9, {3.668032892840277*^9, 
   3.6680329128159447`*^9}, {3.668081685682143*^9, 3.668081688494714*^9}, {
   3.6681123817767186`*^9, 3.668112402824794*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.6680817833225226`*^9}]
},
WindowSize->{1282, 797},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.15 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3208, 82, 211, "Input"],
Cell[CellGroupData[{
Cell[3791, 106, 412, 11, 57, "Input"],
Cell[4206, 119, 552, 10, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4795, 134, 2106, 37, 79, "Input"],
Cell[6904, 173, 49148, 881, 440, "Output"]
}, Open  ]],
Cell[56067, 1057, 753, 20, 79, "Input"],
Cell[56823, 1079, 844, 22, 101, "Input"],
Cell[CellGroupData[{
Cell[57692, 1105, 203, 4, 34, "Input"],
Cell[57898, 1111, 50002, 895, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107937, 2011, 207, 4, 34, "Input"],
Cell[108147, 2017, 47963, 863, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156147, 2885, 359, 7, 34, "Input"],
Cell[156509, 2894, 46254, 832, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202800, 3731, 332, 7, 34, "Input"],
Cell[203135, 3740, 45519, 822, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248691, 4567, 207, 4, 34, "Input"],
Cell[248901, 4573, 44972, 814, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293910, 5392, 302, 6, 34, "Input"],
Cell[294215, 5400, 46202, 833, 440, "Output"]
}, Open  ]],
Cell[340432, 6236, 559, 15, 57, "Input"],
Cell[CellGroupData[{
Cell[341016, 6255, 233, 5, 34, "Input"],
Cell[341252, 6262, 43271, 785, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384560, 7052, 230, 5, 34, "Input"],
Cell[384793, 7059, 50650, 905, 452, "Output"]
}, Open  ]],
Cell[435458, 7967, 5203, 135, 321, "Input"],
Cell[440664, 8104, 1334, 29, 101, "Input"],
Cell[442001, 8135, 524, 15, 57, "Input"]
}
]
*)

