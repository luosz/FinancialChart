(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    462977,       8547]
NotebookOptionsPosition[    461249,       8487]
NotebookOutlinePosition[    461627,       8503]
CellTagsIndexPosition[    461584,       8500]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "portfolio", ",", "data", ",", "symbols"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{"data", ",", 
       RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.669542047962203*^9, 3.6695422049674845`*^9}, {
  3.669542602445753*^9, 3.6695426825577583`*^9}, {3.669542734256665*^9, 
  3.6695428691127195`*^9}, {3.669542926988121*^9, 3.669542953719642*^9}, {
  3.669542986551364*^9, 3.669543005039853*^9}, {3.669543055650941*^9, 
  3.6695431055115957`*^9}, {3.669543142737542*^9, 3.6695431497798443`*^9}, {
  3.6695431997422466`*^9, 3.6695432017683105`*^9}, {3.6695432813065257`*^9, 
  3.669543283927577*^9}, {3.6695433155207834`*^9, 3.669543318785554*^9}, {
  3.6695433734955683`*^9, 3.669543379562607*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "=", "Today"}]}], "Input",
 CellChangeTimes->{
  3.668865213943282*^9, 3.6689641859036446`*^9, 3.669476949761873*^9, 
   3.6694777889920874`*^9, {3.6695430187277384`*^9, 3.669543028737236*^9}, {
   3.6695433307573833`*^9, 3.6695433390804977`*^9}, {3.6695435515014887`*^9, 
   3.6695435943523855`*^9}}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Wed 13 Apr 2016\""}],RowBox[{"DateObject", "[", 
     RowBox[{"{", 
       RowBox[{"2016", ",", "4", ",", "13"}], "}"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.668865216155445*^9, 3.6688652244696302`*^9}, 
   3.668962677789529*^9, 3.6689627763892407`*^9, 3.6689630029914536`*^9, 
   3.668964048816325*^9, 3.668964188757974*^9, 3.6694534905286837`*^9, 
   3.6694554583445234`*^9, 3.6694555190070906`*^9, 3.669476126678915*^9, 
   3.6694769502898808`*^9, 3.669477807458518*^9, 3.669539967693761*^9, 
   3.6695400880908127`*^9, 3.6695401593984804`*^9, {3.669543025402791*^9, 
   3.6695430306661415`*^9}, 3.6695431232257004`*^9, {3.669543331980935*^9, 
   3.6695433397357316`*^9}, {3.669543565184532*^9, 3.669543594633626*^9}, 
   3.6695437125846963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"portfolio", "=", 
  RowBox[{"PortfolioChart", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<RHS\>\"", ",", "\"\<BTAL\>\"", ",", "\"\<SPHD\>\""}], "}"}],
     ",", "start", ",", "end"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6695433575869055`*^9, 3.669543360073406*^9}, {
  3.6695435380139866`*^9, 3.6695435754862823`*^9}, {3.6695436107165627`*^9, 
  3.66954361091661*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV12k8VXsfBXBRJJQhGYtmQyGSlGmnlAydSGgil8hNoVJJkSalkNJEEmUs
Q2aVRIUGERUhovEcdCRSGp519+954764934/x7DO2mv/9zHZbZudh6CAgEAf
/vXff/GPTlEil6H/5ZviX64d8F4F97luy1hHiSdxGYOfNoO/ZrIumwc3/jid
ODCdNd8Vnlb/cP4rH9YhbbCq4dyHT71ZZ4te5TJ/PsTMbYhh3a4Htxum+r3e
ylpyA3w9zmtG7BrWZmHwaKEo0fPOrGuFr3EZi4x1poburAXmDLfOWvjv3KPv
DthR/sNwgNbGOf4BlD8LlgpRi688xVpVK5nL9EmbHLDbwprjBH/c7nPTjvKF
hMK695yXuFyg/NfhYMMepQb6+vaXMOf2/CLhfax9HVK4zGPx51Mto1knBMOt
jttbI+oofxrM7C5UFBmk/A2w7WuhabfaKP8f+HWF9g8+n/oNSuUyl7OSU7of
Ur/JcPI/O7b/fkz56+An0pNv5uVR/iG4yeBzv/INyj89jcsIiqgqW5RQnzVw
BN+qdy99v+8gfM+k+o9uOOWdks5lVr3cLiURTHmt4SjRgtsp+tTnY9i6Sfds
+1Lqsx8eV7j+RcoGyquSwWXabmzcKqxJeS3h9VsC/LwmU94dcK7MzVkuvtTn
V1hm/JZQD3/qU/n6sOsluRRuablwX3kt5feDD539VXUqhPLHwvs6tH4f2Et9
Kt7gMrGRymV7E6nPxXDe5UFtPerHdSts46IhZrmZ8p+Hi8pcWtRufWHzl8PZ
u733PBSiPplMLnMuR1O2R5z6/BeW7RWVshlF+WPgIKXavGkGlP8uXFKfndds
Tvm5sFiXb8jP5dSvVxb2NtnGLGIF9RsN/wg/lRfNofx34A1c65alppRXKpvL
/LPqFMfajPqMhFM6I1MW7aE+S+CiXQb2NrRPzju490H9m79XKe/YHPQraNxT
2kN558Mz3JRLZnymPgtha07THr+f1Odb+NmPoc8NfZRX7CaX6a8tlu0YoLz6
cL7lbYUFYr1sXlf49YIN+fKTWUe9gasqgh22y7MuG52LPtt2XdMfw5qvC59L
DQyN6KT86+Gk563FZwTZ1zlHYRkFo9Bfv6jPUXlcxpD/44aoAPu6pA7874F1
drZfKf8aOLznhajjN8p/CA4oL50YrcJ+fUIm7HRq4ZL8max1ZudzmfKjhqJc
PdaujvBfTYGV3+dR/gOwbsk+hdRplD8D7nqsejjSiPK/gEeddvnsSd8fsqqA
yyxRXP9+HP2+7P3woWdOonr0+9pT4QKLV8bJwpS/Hua3FdrWFVL+3/DOg5Ii
EqnU795CLnNNzuno+3jaQzKs/15m18xM2nMtvGjrC96KINrHT1i9NEYp/zTt
eVoRl1EWeblfKo36TYLv3sj9mLmD9vEU7i7pTploT/v4Dsd0jFX4PZv2MbmY
y1wR9+cI2VD/VsXD9pnwDT6muSLImfZdO6mEyzjm1S798A/ltYQ/ep9M4v7/
PN4O14/JfBVK539ZL2yQp7Nd/iTtWekWft9p7aRxdP6oWsBu4ropnpcpry88
cWRv4r7/7/ki7GNzxj/jCd1fCreH78EctvK+83mRBNu3rw9s8q6dk2lOezgH
K/Cdmxaqs669B8cM1gUPidMezO5wGS3vY8cGaU9R3rDDTh/HRNpj2RlY+S3H
RqiK8pfC1mpzJoz//3n8Gd587Ns55zLq07OUy2hunKi28yz1eQre7ZwxOCqH
8t+Ge+PPTuNmUP4PcGvRntZJdP19Je/i+ouZ7GiifQhEws1fKuuvJ1C/xXDb
y9zUt/S8ce2E5y3/lNt1hvJLlHGZbcuf3575gfIblA17P5wCWH5mmIEj7TOk
HR55ti+n5QvlH3OPy/BmrbPqm0J7nguPuzPZfKQD7dkF3nLFsjtxDfXbCpuN
FBSXdaJ+Rcq5jLiQ82yn03Re6MIHNjodEomj+3EdzLU+fLj9DPV/BP6tm/gk
I5Hut5EV/13vOnNOI2tVbXhJav6+SX/ovHCGvQ+pLHjzmvIfhPPbxqYezaX7
8QZc4atUrVrE2mzWffT/IcfyZB7tYzV81SLZePMDyh8Cn53sqbSllfKnwx1a
FQ5GEZT/BawQoHlQK4nOC/sH6PO+ZNKeC3Re7IN9RS46/yLzU2BZTszWD/cp
/3M4XeSQmwGP8v+C9cKXmz3opn4DH3KZsPcdt6bWUr/XYMVr187I11D+Z3BX
Y+eVhATK/wNec7inculdyj+1kssUjj1W7PeG+k2EaxSNZA8/on6fwJVeS98F
tVP+AVi0MM8r7RPlXV6FzyfZx9zKX1Cf1XCi2hb/ZMqT3QdzuiTKx3RS3onV
6Cej9uJf+nmSy6qH9W/mDw+c6n77qIf65MPnOG9nrR79le1T6RE+/0xdV3T+
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2ndcE/f/B/AoIAhao9SJaFS0qCjnXqA5FBRnFMQtcW+Nda8a9eteQa2z
1lQUFVccDPc5UUEM7m3ERROBIGjB+Xtz7z9+9+ofbZ+PC5fXfe6z86k1fEqf
USVVKlU+/av4v/SPkLzbLvL/OjvQv/SZaFOZWLDUkpy08MGpJT6ynXq08SVZ
6HLN3qSFbEvpPXZxRYMZFR6WkW1rRr6/sEfQYrVs9VBy3uQDPnsf5hZbu4Js
ivp0Zfsq2dZSe8GqJuSsqIHdN4+TLQwiz12zZGoJL86/lPzhSrfIztvk66aj
5IclDL9l9ZKtaRwH1vUnV3VZe+nhgxw5/2LyzMO9yjcpkG05RF68qUvjxi9k
2x6Qp6YsXVVvn2xD331kl4/hdxNkmxeSb6TYy9deJtt6gJx++OTWgLuyVffQ
wg9y8pGJhzTzZEvz94OdceT6bo6cs2rZmgxy9YFDYya2kK37uh++z1j3gF2c
o1276/dhsrXpaEMh+Yxb+3kJj7PlvLXj4fmt3ckeNePfnkiXr+tTyWfE+LbD
s2SbPpEPWSKi3CXZUs2DdrGM2/SJ5304b/hBzDudLB3dEeJdhcvzI7nsDffD
5ctyeVY/ZBfHTrv5dXwD2erOZMnhXlKqx/mnHoLnNezAz6uqHYb7C53Q+snk
CSHTwwfEcf6th+H7pUvkKh8mrjzjxuUpHsHynIC2/Im2XSCnbd4UrS7J+e1o
89ijYOsGtOrcUXhefXkL2LmeHGnJSfd6JefXnEbr3ljg+Yy/HLOLA7NX+h1c
I9vSmqweHNouYq5sbRLa8Io8oZTHqkNbuD54HbeLrjO614gyyba2QKv05H4d
A4b06Mnl+YIcO3hrSreOXB88ToCdTdGaISfg73XLySeOLf5QNFi2ze2kXdx3
c+Xtb7/LVgvknBmuTbu25vwD0Yb/kfM6HVnY+uQHOf8Rsnvx43yXLTRKAOv7
keOHpAxpb5NtWkT+OyfuwnZvzn8Q7bxP/nx81/J/X8ufN0Ymgi1/oG370eq7
aO13cpMTa9e8uyXbOi8JrIpDC1a0/gt56S3/tQ+jOb9fMlgTS77nkRq81iJb
d4u8IVV87azG9eM/tKXWKbu4zeN5a9M1zt8NbS5AW2ucBqvCydlD3xQ2GsN5
p6GlPHLa7Nhcv7qynT5n7OL19FD/lHcOOW8YeV5e6IIZKs5rIHvrV5WvWSRf
N24nGzx76GdX4vKsehb+XtsRbZhEnp/w+Nz1PNnmLXjdepG8qE7q1Tm1uDy1
5+xi87DUav7tuDzHn4Pr0iZy2slyRzOacf7zaM2/ZEO6zZzqzvVhzHnIb4tB
q8+ite/QBvUFsGo9uVxiQNeLp2ULp8hh0eHG+mGc/zX5z6ELpzZdwfnLSnbR
L2F6y1sVOH8rCcpPlyhh+drILTyjB80L4PyeF8G25uSsk8uaWP25/KMvwvsy
Pyc/jP6rTO1yXD/cL4FVTcmLolstrSdw/RiM1i8jX/c8/n7aJzmP0/UyfJ8m
EK0bgDYuuQz1y3KYvNbzSuZML25vAVfAhiiy3xyPWRpXzm9EW+PRqvtX4P2a
Iq7C+5cWoJ370Jo7aN03tG3uNbs4JjEm4+w2rh97yQ93eKSl+3L+22hD0TWo
z+Y6KfD8wm60Pi0FPm/6nALvz9n1Oth4g+yzs+6Y83vkz1vyr8P7sfneoPmc
frRP1Vuct8sNqJ/a39FWJ3n5X3eeXH3K9dnnJlgIReunoE3byPPnTPrh85r7
iyqplK9uj6yRy2XrQshvPeuP/93O9Xki+XQXt97u4Zx/M37eJqVCeRs6pNnF
y35Z+nH7uTzHkX2GndpXfjPnPU+etnNVzqklnDeLfCHxc//k2bKl0bfo+8ps
ixnYluuvCa17S07dmTsjYTjnK5dO9xtWI7DsDC6/dWhtMtqQSU4dtiTRI5Lz
lbltFyuU/VElqiqXb0vytfyYI/38uPwSyL2Twt9aRC6/l2iptNUulho+laaA
nLeZFe6nGUq+llQ3N74il1epDBo/67l96x/IeZuQK4SPf1TSn/MOQhuWkisl
DbKd6Mfl53oH+6/Gd6A89f3RpsVo6RC5Z9kPvhEuXJ4N78L9jX3RloVo2wG0
+h7a3OcelLd1Pvm3MmFuw6dy/n1oIYN8IKl4gs75v6I1e+7bxQEFb9rqsu1y
3vT7UH7GQnKJZO+CfT/l65baD8Daf8jHk5+X3HVOtiEVbf5E/lG2uEBlW2s+
tIujRrg9zj8lW9UVbbqOlj6SjxWEX+qWJttZ/RFY05kcl/Hm7T93Of9UtC0X
ra72GKzthDZMfgztxbz1MbRPofITqI968QnW3wnk+Hkhh3+W5/rwJ37eeYE8
dPiDkBK+XL7tn2J9GEs+MqxMc89org8bnmJ/e4582+vVgtEbuD6/x+vWUc/s
omeZ24tHzOf6YEILp8nDi28/iPO/QZt+eQ7WrCVrbscfvXSV63MS2vjqOXy/
xesF2NaCHPjXpIib37i9nUSbX6CtHi9h/FA1Q0tPX0J/63SzUX+oj9RUSuK8
Anlm56yEypc470C08X82nJ+5vIL5k7YR2tAPbV70CsZX60G0vkEmjE+myEwY
36Q/MmH+49xPbu30z1w6h8ffu2hL79c4P5v3Gu6vjkNrreT6dUa3/yOE839B
q+a8sYsm59pxi/rz+BtLfhY6emPAYM5/6w2M96b/3kB5SbXewvsy3iRrvCpP
mXKP33/BWxhvbTXewXV1+Dt4HnMKWdCX2OSbw+8/7x18v6r6e3j/Qhhab3gP
3+fMId9LaB96xcr1oWoWWNcxC9qDcRJ5gt+Sx5NucP4tWTC+aiv9C39v0KLN
4//F+cOmYs+VVv16iNvfhX+hvZqC7WBpjB36a2cMOb1zj2Dvfzj/WbTunR3G
Z9tIB4w/6vVo7SkHjMeG13hdWPMBx7fEDzA/Mdk+wPpE8szG+W/zbHh/xhPZ
8H4sz7Oh/djcc6D+qJvm4PxxcA6sB6xPcuDvVW65YCEwF/LqB6BNS8hrwoTd
dapx+yrpxPltANoYhbYY0bZ48rPSX+4u7MHtq34erMfMEWjrArRqP1q4kwfr
A0n3EZ7fORet2fsR+hvd7Y84nyz6CO9HPTsfrN2dD/XdkIY2f0ZbNQVg/a4C
nP/cQEv5BTB+On0/gTVd0DYnWu3zGawNJY+ZW7eCejXnnYJW5XzG+lzlP7sY
kBibduEo5w35D9qPaSJa2ozWVSwEGzugLeMKYb5t21gI47X6fCHMz8xBRZDH
OroI+4cYtHCmCPoT/dsi6G+cI77Adc068r28eNepLzl/8hfor42ZX7A+l/kK
7U+7+it83pDwFe5vfvkVxgdr6W92sX3tIw1Wbef63Jwcv62ZryOHx4vj5M3H
vMZ/HcP7U8/IsZoAj13NeX+q1He72E2TYozty/trTdC6QeRtncILg+5ze3v8
HfZv1K4/4Pu1jdGG/uQ8jxBp9V5uj4vRQomfNP5udwgvN/P40ZCcMXTSzMDf
OX9fcv3oO98b9Ob2uPAnPL/zwE8sX3+VQ2lLH7Jif8s2n6y4v3ofOXu7LvnJ
DM6fgbb2KgFWzUULe0rA/fXp5FWzlkW2+JvzF5IV5aGZVRKs+4esGP+NqeTw
UG/35hs5/6dil97Xefn/OH9NF7Dhb7KifMzXyYr9M+tH/LzQ2dUhNp1V61ab
C1yeV9HOXLJiP1RTzc0hBm9fduB1Euft5AbfZ5xMVuz3qLPx89rKpRzK/UeD
SFbMp8wTin3ybO3H4znvn+Tj2TkH4ybw7we/ujvEnrmG9JgMLs/2aGksWVmf
N6A159CWdh6Ud4gjolMZ3i8ehVab0IY3ZMX+tmpEabCwFq1PQktenvA+dKs8
4XmNJz2hvCwv0DYPL4fYq1SM+5HdnK8Z2nyMfHVAUempUfz7wFOyor2qSpUB
CwI5baC/eUQ+5x2I1riUBesakZX7v/3QlkXkQ9Pfbx54jPfXVb844PeiBuRe
N/26lNjEeSPJFX0vt7u1kvP+gVYdQJt+K+dQ/p4h9UY755F/lhpUaa+e88eh
dVbyl8Hfe3auze+7pxquq+egtbFowy20+T+03lzeofw9xHQTLRWgnTUqOETP
nIhmu7tyee6sAP2RJaUCtC9bXgXoX9TVvR3itJPxvz2I5PYV5g3ty3oFrcpF
C1V/Bes7kv8+3laV48r5J6E1H9C6ShXBRi3aMh5t24Q2eFcCm4PR1jFo1Qa0
cBYtta0Mdo5Ea9aTFb8H6U4Vu9TndQcWcf7X5Le1wmPXneHyHV4FrF1TBfuv
RLTZhtavrAo2nUBLz8nK9aZ7NXifmqZkxfzYYkHbnqDVbj5gbSBZMZ81DECr
HpEV6ymhZHWHOMtr/ufxJ3h+E4A2RaElI1mxPtD9JCvWe8b6vg7Y/40gz00P
fLhkQ6acfwFeV+8nK/YfzfVqgK06cs+MhUPjCnh/ah5eF/aSleul22TF/NDZ
oyaMN5rZaN1utDGNrFgPWj6jtTM0DuV6z7ALbb6BtuaTFfNBVY1akFe6hnY6
0Rqf2mBdKNp2mazcj8pBa6vUARtC0OaJaMGB1lf0A5s6kBXzaWkc2rkRbaxQ
16HcP7cEoW2j0eoYtPYMWbmeb1MPrBqJFtah9clkxf60KROtGfYbWLcabUwg
K37/sLwkK/a3DCv8Hcrfh8zHyYr9FOsztMq9PvT3QhO0dBTtfExW7CdpXBuA
dY3Jiv0AY3+0+mEDmA9rSzQEGxqizX0bwvzTupCsmO/rf6BN/gFgqQ/aOT8A
+lPNPnJAaeHqivXcv9VtRM9bu0TS4hHcv/UiK9bz6rmNYDzU7kEb0htB+1X1
aAwWZjWG+a/+H3Lw0Gr2lgc4fypa+oTWTQ8EG/8mK9ZXluuBML+0fQzE+YWv
4BCjt7x3eKTyeLeDPKp4O/0Lj3dXyZHTF5eLvsPjnZOsOF8jVGsC8yt9J7JX
8fZBOx7vLpFzjhnyPofxeJfdBOYbuspNHWK3wc20upE83olkS43Qocm5PF5P
aArjo+HXZg7R7u7dYJsH521PLto67pcCgfOORas2ok3lm0N5SO3IG2i2urM+
5x1FtqfGjf9QxPXB1By+T3e6OcwXba1bOETXY8U/YHB5jmgB81PtWnL1zTd1
VTvxfDOJnOG6bMzFJnx+5hX5pGu5t5eC+HyPviXNLwcEfp2zlc/LrCKvcxmX
lhHP882T5FquZ/vfnMbzzRfkyb7+l6+P5fmmRyuH8jyRcXkryGs5Rr5hufnI
LYHzPyV7h5S7NCSF85dqDZ/XCmTF+tx6BK+rHreG+iG4tIH76xuR82sOL9o3
k8u/H/mzW4Dx+GWuDw/aQH3SqdpC+RkbkC9OC1wyujSfT4okT7WM6u35gPP/
QV47RPe0g4Pb23fywGO+o34s4PrxWzvqb7ce+/JzBefv3Q7m26r55KPudev+
VYPzx5EV52ckvyCHGHdi3GbbP9xf9AyC+ZFmDlmxX6CLDcL1060gmI+ouwc7
lPv72plogxltvhkM63VrAVo/rT2sj00728N1KaU9rOedeXhdU70DrKct28lr
a73x2fiM+7srHXD+mUteeeKjd+YhzttRC1ZdQgsftPD3+koi9m9aEdf748mK
80S6f9FG7xCYH1uCQ6B/sI0hK85jqTeQ9bT6H3yW64O6o0N5vszatiPUR9Uo
cnLxz2s7uD6sJyvOB+pPkRXn6ZytOsF1zXC0bk0nqI/GRLQ2OhT6D8PKUFyP
ngiF9bT1Odq0LAyeT7KQFefvnE/IkwZsWjxjFp9XdOvsEJdfuzWz6U8+DxhI
Drw2NrelRj4vajtMdqiKf7CVrX5E/u+9RciL4fOrJbs4lOdZDQHkyCh3aadZ
tjmKvG1yp00HCmXrf5IV52dN9cMdyvOsUgR5cPylngN8+bztAvL9YVueNSzN
522/kVf/rEOviM/b1uvqEEvmj+y4tB6ft9WRB1+ffeSoH5+3nUd2kxuwbO1e
cnzixm/PWsu21ulG411x8w2SrepJbquveFobK1uYTX6e0GfC+6V83nY32W3N
vjHurTh/GnmEV9Xt66fJ1nTr7hCvRLexhN2WrZtB7po34e8dqZx/F7lGhMu8
lHuc/wZZ43986Od8zp9P3jj1zzeVLbLNf/VwiO7Dorq1jOK818guSYVLHlXm
vHk94PkEn54OcVjxdG8Ql+c28sOWYdJAfy7Py+TDBwo7DI/mvDnFn//9wYyy
IzhvlV4OcX1KK9/TUzlvSC8oH/VF8vyFxb84cHk6yKoaidFR7rINFXU0f5ny
S6w5kd9/B3KvQ8VfyOebx5EDS94/8rox14cscrvDxRvgfH65Qm+HuKdv8LG4
TNlSELm/atTyry9kO0cXOygjbH82n2+OIWdmje30to1sS7k+9LxXXca2E7n+
tiF/i/mlsKeV6+9Icutqfn98/Ivr7zryjuCcV1umc/1NJucHR4zbGMHnr1tF
0Hi30VStbUs+fz2M/Npgurq6OudfHQHtw5RA7nJw7vAeV/m89dBIqP/GFeQ9
VTPyiu5y3uPkjaqINYXXOe8zcqsoU/Cug5zXvS/Nf4JapsemcXkuJXevOnH8
jwIuz6Pkgfk3bhrduD486Qv3E1yjoH3pG5MbT6vs7lKJ68OhKLif5mHU/+f/
P1xgw0o=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Bg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
47/0zKf81nDyobW5XXlU30uwv9Hi5rL7VN/XcJ8W88Jhzyi/Uj3WJyvZHYd2
yj8WNrKedt3hF9XzJRytsvz2wzaqp0KDhMnUDHq4pJnycmE7p7i9bR8p73yY
l5HhbiujvNFwkcytyeQv1bPnG+wv5nLHp5q0sPUcBfvu26fsPIR18DzYxXb4
L6uxrEURsH7STOtgM9aVZ+C7vbWaLxuxFoxoRH2lo2vMDFnHz4EV7PKMdg1g
XbQVllNabTHXkbUsG85bxn8xhcx5CvuFmdnW8FiLZ72VMOWuWRU29qwbQuFd
XdXr9jmx1jgJX/4kZ6ViRfkr4Yj9hcMKKF9wJzwx4+WC6vGs5Ta/w/rusChA
24419wRclzM0c98Iyl8B+3Vca942jvJ3wAL1Y9eG0vcXGb7H+2Bw8FNPsrAc
3uX65cJQyi/+BuuW7R2i5EB5DT5g/szXzAucR3mnwsJ+XcPXBVE978EKYmma
kh/VswUONrR13LuS8up/RH/em2oeH0B5J8EJGTGqfbZR3mA48/NPbutGqmcz
HLvl9IzMYKqnziecX7UCnmwg811gv5PlhX29KP8aeFrqakaOLD4EP+adSVrk
SfUc9BnvR2+WPptMvx/Mg4sfnZnisYby+8M8N/cW1z2UPwE24/a4teII5b8J
t8XG9fclx0+Q4DzccdzcZR/VcwUcaWJScXkT5d8PF62/nN6ylfLfgFUGb8n+
bwvl/wD7NRbqJZMbfKUSRlnG6xUfRfWNgz+PXdXz5k7KfxUunn8mccUGyv8W
lvU7nqFMv8/d2yRhFM980oojCy7D4fFmnRWHKW8DPCIk46n3Mcqr8gXvN79j
zzcepbxWcPUT7/FCEdXzIhy4eMHMrrNUz1fw8TtOtfMOUt7ezdjvbpenlNDv
aVjCYfk+AwPo+XkL4THbPSw86P7KF/C7WwpaTTuongpfJYzFwx3ckr2U3wK+
2PX8565wyu8NH/a0nbycxiM+Ch5gsEhcQv3CkZehv4pNzCRUL/5I+NoSztJ7
1D/CufAT9aAffgsovxDOm2XtGaNH+U/DZxeMD9tlTvU0a0F/JHk8uzia+mE2
vG7Fu5DVupQ/HOZEHfRLNKX82XC1uDLsjDblfwIX+U3ULqH5VsRvlTCONSfU
e3hQfbfA4qzlrYwb5c+Eh2UeWcfMpfyP4BrbgYm/fCj/T9g38WarCc0vjU1t
eF8ybzu6I4zqmw7rSgTWsdsp/wN4vHLAl1PUL6J22Ndwr65KLOXnfMP7gMqN
x7N3UX2PwzVRpcf16f74MrhoxSCld5GUvw2+u1Fh6BYaL9ng7xJm35gPE8/T
eHGmwAKz80ZrD1A9ZbD+6pNNs+Ipr167hDl9hemflER5XWGZaoZCWwLlDYIV
Ar6JZpykejbDH4QzY5cdonpqd2B9azd+nkW/L3CG2z34z9yp3+JXw5eb9/CU
6P6iJFjlec7iHSFUz4E/cP+Fros7qV+ETvCvkjjTOpoP4lVwTOjb55spb8NB
2MrTQ2RDz6NRCOuEXR4Zmkz1HP8T+9vVs16xNP8r/eDIQ6VLhPT9cvvhvvV2
JtUplP86fMQn3nRYKOV/D2//qVk2v7ueyzrxPre+JKSVxoMTCx+pmvlyKdWX
n9/57/3Mur2N1g9hI7y1QsstMYby9+nCerEqYs0LysPbA4dNCfjVSvM7OA/m
eshMNGm9ENXDbeZHWjVvUX7lXxjPNW+s5LMovxUs/l74+Ol5qm8ufMoiwz4l
nepbB+tUbFVqTqX8ir8lTKr/7aIGmp+cMfDDvYt39Kf+5C+A68on97tA/dnw
HDZL2VbWSOuJRq8/WP8Fmze5VFD+0bCkbtZPSSXl94Lbz0o9/ryg/JGw37Mo
zeKvVN8ef1EP8Z+vVd+pvubwzwa1c0V/Kb8nrL1oRfS2b5R/G9xUPK7BRrmV
zX8KzhuvfbtqMGuhqZyUGb1oTdKbEazFHrCyadl/3tasG8LgQ+Ga94z5rDWy
YP1tUxX+m82a9xiOsM6SGi5hXTmzh5TZl/y38LE/a7kt8GXlG+qjfVlzM2Bd
zl2hK90veAjHH7YedXgl6/gf/z5/fdar316sORvlpczugB/n5Day5qfBeXY1
e1w2U/77cK+/E4NyIin/d7hf8jC1oyGUf0hPKXP0voX/e7oefAweZphgy13H
WlQKx51xvj4wjPK3wl+ddbruxVLeyb2kjHCIWoznRdZFd+D9ko0NL7Oonl/h
7PfZUS9yKK+ugpSJVMtcvTCT8k6EQ060h5/fQ3kDYWO1pRyV7VTPL7DHE+XH
QclUTy1FKZMYGXtY6TDlZeC83QaWH1dQ3gD4sN2mv9nbKG8iLHv7+bAeWTCg
t5Txa/rk5zOF6ukIP/xTcnCaI+VfCb9Jnu9lE0P5D8CtOutNau5R/gI449WD
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
n7xPeZx2qp8YfrQ8QXk4/b7sBayz87P3vsGsOQqTcR7taD7Ut4PqawGfa3pT
qfeB6ncWPup4QHuyBnu/xjO4aPvzFZralFd+Ct4HEqZ46DfS+I+Ew2wKk+fR
94nmwmv3GD7NrKTx/gsnci2TE37QeJtNlTJe73v3nnmd8s6GFzfrVLU8oXqG
w1pLJpiG96N6/YInTE1Nj2+j8TaZhv25OWFRlw7Nfz4sf6yYp92X8obCiprZ
edvtKW8m7HrjjNMiIdVvqJuU6WE0lP8wmbWcO5ztVpKpGUPjvQk+0Dhk4sAD
NN7pcO7ZFv3E9VTvB/CDCzoOOhFUT7fpUsb4S+QvN/o8P2T6v3+PGL76AV0X
Hoc/jDzssSSUtbgMNg307b3dl/K3wWLVH80T9tB4H52B9yfLRf1HpVPeu/Cl
nqH3a4sobwtcOLLH48ZKyqvnLmV2tG35XfOIdVEyHLXH1nZHHY3/bXi4h2Sf
sJHyNsNzeZbbvNspr/ZMKdPeHGd+YtR3Nq8zPO5HtFrvH1TPYjih34SxaV+p
nlI4f+KTe/9psvcHD+SjPmP7mpeRRU5wSsNB93gj1pWr4DF99LQTLVgLPsG+
Xz4UbhjJOr7fLKwPeoGOSTzWReNn/Rvv9V4+XqxlfjCvtF6xaglrzn440qgu
4qUfa7G6B9abpJTq7ytYN9jBVt/PTzsawlrDF27l307h72HNi4VVbN1i1mVT
/nx4Ws+dy1elsJaznY3zwrMtPsJE1lwf2FgzYZcgjPLvgXUtbqsN2E758+B3
BVtDLXay5i+eg/stl1yNSKN67oTzcnptMS+hvLnwtNoBE5MeUt66f1ZolFws
ory9PdGPXz/Vn3lD9YyBvz/bq3+yiup53vPfv0+kli3Ipbwv4Akid40L9P3c
XnNx/hBfXDT8NOUdDWcsVOlYe4PqmQPfeTL3sUoW1bMW7uW0KXI3rv8PRgDx
iA==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.6091008056078064`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.6091008056078064`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"RHS\"", "\"BTAL\"", "\"SPHD\"", "\"portfolio\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6695429164260554`*^9, 3.6695429597567377`*^9}, {
   3.6695430101235085`*^9, 3.669543034099733*^9}, {3.6695430658650537`*^9, 
   3.669543081655351*^9}, {3.669543117977551*^9, 3.669543154121278*^9}, 
   3.669543204934156*^9, 3.669543290272893*^9, {3.6695433255050817`*^9, 
   3.669543384920407*^9}, {3.669543543311558*^9, 3.6695436137711067`*^9}, 
   3.6695437147642493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rhs", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<RHS\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.669539937288201*^9, 3.669539939815297*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV12k8VXsfBXBRJJQhGYtmQyGSlGmnlAydSGgil8hNoVJJkSalkNJEEmUs
Q2aVRIUGERUhovEcdCRSGp519+954764934/x7DO2mv/9zHZbZudh6CAgEAf
/vXff/GPTlEil6H/5ZviX64d8F4F97luy1hHiSdxGYOfNoO/ZrIumwc3/jid
ODCdNd8Vnlb/cP4rH9YhbbCq4dyHT71ZZ4te5TJ/PsTMbYhh3a4Htxum+r3e
ylpyA3w9zmtG7BrWZmHwaKEo0fPOrGuFr3EZi4x1poburAXmDLfOWvjv3KPv
DthR/sNwgNbGOf4BlD8LlgpRi688xVpVK5nL9EmbHLDbwprjBH/c7nPTjvKF
hMK695yXuFyg/NfhYMMepQb6+vaXMOf2/CLhfax9HVK4zGPx51Mto1knBMOt
jttbI+oofxrM7C5UFBmk/A2w7WuhabfaKP8f+HWF9g8+n/oNSuUyl7OSU7of
Ur/JcPI/O7b/fkz56+An0pNv5uVR/iG4yeBzv/INyj89jcsIiqgqW5RQnzVw
BN+qdy99v+8gfM+k+o9uOOWdks5lVr3cLiURTHmt4SjRgtsp+tTnY9i6Sfds
+1Lqsx8eV7j+RcoGyquSwWXabmzcKqxJeS3h9VsC/LwmU94dcK7MzVkuvtTn
V1hm/JZQD3/qU/n6sOsluRRuablwX3kt5feDD539VXUqhPLHwvs6tH4f2Et9
Kt7gMrGRymV7E6nPxXDe5UFtPerHdSts46IhZrmZ8p+Hi8pcWtRufWHzl8PZ
u733PBSiPplMLnMuR1O2R5z6/BeW7RWVshlF+WPgIKXavGkGlP8uXFKfndds
Tvm5sFiXb8jP5dSvVxb2NtnGLGIF9RsN/wg/lRfNofx34A1c65alppRXKpvL
/LPqFMfajPqMhFM6I1MW7aE+S+CiXQb2NrRPzju490H9m79XKe/YHPQraNxT
2kN558Mz3JRLZnymPgtha07THr+f1Odb+NmPoc8NfZRX7CaX6a8tlu0YoLz6
cL7lbYUFYr1sXlf49YIN+fKTWUe9gasqgh22y7MuG52LPtt2XdMfw5qvC59L
DQyN6KT86+Gk563FZwTZ1zlHYRkFo9Bfv6jPUXlcxpD/44aoAPu6pA7874F1
drZfKf8aOLznhajjN8p/CA4oL50YrcJ+fUIm7HRq4ZL8max1ZudzmfKjhqJc
PdaujvBfTYGV3+dR/gOwbsk+hdRplD8D7nqsejjSiPK/gEeddvnsSd8fsqqA
yyxRXP9+HP2+7P3woWdOonr0+9pT4QKLV8bJwpS/Hua3FdrWFVL+3/DOg5Ii
EqnU795CLnNNzuno+3jaQzKs/15m18xM2nMtvGjrC96KINrHT1i9NEYp/zTt
eVoRl1EWeblfKo36TYLv3sj9mLmD9vEU7i7pTploT/v4Dsd0jFX4PZv2MbmY
y1wR9+cI2VD/VsXD9pnwDT6muSLImfZdO6mEyzjm1S798A/ltYQ/ep9M4v7/
PN4O14/JfBVK539ZL2yQp7Nd/iTtWekWft9p7aRxdP6oWsBu4ropnpcpry88
cWRv4r7/7/ki7GNzxj/jCd1fCreH78EctvK+83mRBNu3rw9s8q6dk2lOezgH
K/Cdmxaqs669B8cM1gUPidMezO5wGS3vY8cGaU9R3rDDTh/HRNpj2RlY+S3H
RqiK8pfC1mpzJoz//3n8Gd587Ns55zLq07OUy2hunKi28yz1eQre7ZwxOCqH
8t+Ge+PPTuNmUP4PcGvRntZJdP19Je/i+ouZ7GiifQhEws1fKuuvJ1C/xXDb
y9zUt/S8ce2E5y3/lNt1hvJLlHGZbcuf3575gfIblA17P5wCWH5mmIEj7TOk
HR55ti+n5QvlH3OPy/BmrbPqm0J7nguPuzPZfKQD7dkF3nLFsjtxDfXbCpuN
FBSXdaJ+Rcq5jLiQ82yn03Re6MIHNjodEomj+3EdzLU+fLj9DPV/BP6tm/gk
I5Hut5EV/13vOnNOI2tVbXhJav6+SX/ovHCGvQ+pLHjzmvIfhPPbxqYezaX7
8QZc4atUrVrE2mzWffT/IcfyZB7tYzV81SLZePMDyh8Cn53sqbSllfKnwx1a
FQ5GEZT/BawQoHlQK4nOC/sH6PO+ZNKeC3Re7IN9RS46/yLzU2BZTszWD/cp
/3M4XeSQmwGP8v+C9cKXmz3opn4DH3KZsPcdt6bWUr/XYMVr187I11D+Z3BX
Y+eVhATK/wNec7inculdyj+1kssUjj1W7PeG+k2EaxSNZA8/on6fwJVeS98F
tVP+AVi0MM8r7RPlXV6FzyfZx9zKX1Cf1XCi2hb/ZMqT3QdzuiTKx3RS3onV
6Cej9uJf+nmSy6qH9W/mDw+c6n77qIf65MPnOG9nrR79le1T6RE+/0xdV3T+
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2ndcE/f/B/AoIAhao9SJaFS0qCjnXqA5FBRnFMQtcW+Nda8a9eteQa2z
1lQUFVccDPc5UUEM7m3ERROBIGjB+Xtz7z9+9+ofbZ+PC5fXfe6z86k1fEqf
USVVKlU+/av4v/SPkLzbLvL/OjvQv/SZaFOZWLDUkpy08MGpJT6ynXq08SVZ
6HLN3qSFbEvpPXZxRYMZFR6WkW1rRr6/sEfQYrVs9VBy3uQDPnsf5hZbu4Js
ivp0Zfsq2dZSe8GqJuSsqIHdN4+TLQwiz12zZGoJL86/lPzhSrfIztvk66aj
5IclDL9l9ZKtaRwH1vUnV3VZe+nhgxw5/2LyzMO9yjcpkG05RF68qUvjxi9k
2x6Qp6YsXVVvn2xD331kl4/hdxNkmxeSb6TYy9deJtt6gJx++OTWgLuyVffQ
wg9y8pGJhzTzZEvz94OdceT6bo6cs2rZmgxy9YFDYya2kK37uh++z1j3gF2c
o1276/dhsrXpaEMh+Yxb+3kJj7PlvLXj4fmt3ckeNePfnkiXr+tTyWfE+LbD
s2SbPpEPWSKi3CXZUs2DdrGM2/SJ5304b/hBzDudLB3dEeJdhcvzI7nsDffD
5ctyeVY/ZBfHTrv5dXwD2erOZMnhXlKqx/mnHoLnNezAz6uqHYb7C53Q+snk
CSHTwwfEcf6th+H7pUvkKh8mrjzjxuUpHsHynIC2/Im2XSCnbd4UrS7J+e1o
89ijYOsGtOrcUXhefXkL2LmeHGnJSfd6JefXnEbr3ljg+Yy/HLOLA7NX+h1c
I9vSmqweHNouYq5sbRLa8Io8oZTHqkNbuD54HbeLrjO614gyyba2QKv05H4d
A4b06Mnl+YIcO3hrSreOXB88ToCdTdGaISfg73XLySeOLf5QNFi2ze2kXdx3
c+Xtb7/LVgvknBmuTbu25vwD0Yb/kfM6HVnY+uQHOf8Rsnvx43yXLTRKAOv7
keOHpAxpb5NtWkT+OyfuwnZvzn8Q7bxP/nx81/J/X8ufN0Ymgi1/oG370eq7
aO13cpMTa9e8uyXbOi8JrIpDC1a0/gt56S3/tQ+jOb9fMlgTS77nkRq81iJb
d4u8IVV87azG9eM/tKXWKbu4zeN5a9M1zt8NbS5AW2ucBqvCydlD3xQ2GsN5
p6GlPHLa7Nhcv7qynT5n7OL19FD/lHcOOW8YeV5e6IIZKs5rIHvrV5WvWSRf
N24nGzx76GdX4vKsehb+XtsRbZhEnp/w+Nz1PNnmLXjdepG8qE7q1Tm1uDy1
5+xi87DUav7tuDzHn4Pr0iZy2slyRzOacf7zaM2/ZEO6zZzqzvVhzHnIb4tB
q8+ite/QBvUFsGo9uVxiQNeLp2ULp8hh0eHG+mGc/zX5z6ELpzZdwfnLSnbR
L2F6y1sVOH8rCcpPlyhh+drILTyjB80L4PyeF8G25uSsk8uaWP25/KMvwvsy
Pyc/jP6rTO1yXD/cL4FVTcmLolstrSdw/RiM1i8jX/c8/n7aJzmP0/UyfJ8m
EK0bgDYuuQz1y3KYvNbzSuZML25vAVfAhiiy3xyPWRpXzm9EW+PRqvtX4P2a
Iq7C+5cWoJ370Jo7aN03tG3uNbs4JjEm4+w2rh97yQ93eKSl+3L+22hD0TWo
z+Y6KfD8wm60Pi0FPm/6nALvz9n1Oth4g+yzs+6Y83vkz1vyr8P7sfneoPmc
frRP1Vuct8sNqJ/a39FWJ3n5X3eeXH3K9dnnJlgIReunoE3byPPnTPrh85r7
iyqplK9uj6yRy2XrQshvPeuP/93O9Xki+XQXt97u4Zx/M37eJqVCeRs6pNnF
y35Z+nH7uTzHkX2GndpXfjPnPU+etnNVzqklnDeLfCHxc//k2bKl0bfo+8ps
ixnYluuvCa17S07dmTsjYTjnK5dO9xtWI7DsDC6/dWhtMtqQSU4dtiTRI5Lz
lbltFyuU/VElqiqXb0vytfyYI/38uPwSyL2Twt9aRC6/l2iptNUulho+laaA
nLeZFe6nGUq+llQ3N74il1epDBo/67l96x/IeZuQK4SPf1TSn/MOQhuWkisl
DbKd6Mfl53oH+6/Gd6A89f3RpsVo6RC5Z9kPvhEuXJ4N78L9jX3RloVo2wG0
+h7a3OcelLd1Pvm3MmFuw6dy/n1oIYN8IKl4gs75v6I1e+7bxQEFb9rqsu1y
3vT7UH7GQnKJZO+CfT/l65baD8Daf8jHk5+X3HVOtiEVbf5E/lG2uEBlW2s+
tIujRrg9zj8lW9UVbbqOlj6SjxWEX+qWJttZ/RFY05kcl/Hm7T93Of9UtC0X
ra72GKzthDZMfgztxbz1MbRPofITqI968QnW3wnk+Hkhh3+W5/rwJ37eeYE8
dPiDkBK+XL7tn2J9GEs+MqxMc89org8bnmJ/e4582+vVgtEbuD6/x+vWUc/s
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
P1xgw0o=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
P8/PRZ8=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.6091008056078064`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.6091008056078064`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"RHS\"", "\"BTAL\"", "\"RHS & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.669539979426367*^9, 3.66954009421918*^9, 
  3.6695401656547766`*^9, 3.6695437165897827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sphd", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
   3.667995156778397*^9, 3.667995177356733*^9}, {3.6681116088383703`*^9, 
   3.668111643226673*^9}, 3.6681123691444373`*^9, 3.6695401570233045`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13k8VPsbB3BJiNKkRLK1yj5SyT5H1iwpEdqmIkmLbqmErEVkSQttiCjZ
BtlCKST7KIUQITFDjYSk8nt+5+mfuX/ce9+vw/jM5zzf7/me5QdObHfh5eHh
GYN//f+/8A+1KIlF4P9yDOBf9F6w4vWRqtdqpKPnJbOIWZTVD8cFSZdvBJsk
r/T3mE+aQwf/MrT1KdQn7d8NfpgZzEjbQpox9wGLMBW2kQ45TLpHg9uUveAm
dasmn5OkaaHgMc+AbV6nSTP5U1jEiSgJXaco0jzq4CcrxMXeXSNN3QW+E5PB
l4y/T78I1laoPdcdhvmzwT/zxb5ujSMtp5rKInoPXinkeJO2cQAPvijszsLP
8w9M5fp9RkYqV76e9+Dde9ptB4JJe9g9ZBFXf3vJlKMT/cDDj7LX6DzG/Gng
J44bCgZaMH8LeNPO386nizD/X7DPNd6FBzuxX59HLMIz7uq0y3vsNxWccSto
l0435m8Gf5v1evF4AeafBvMubOvzS8T8q9NYxKrsoT38+H1ojeCnOrmFUX6Y
9yeYVhwSlrEZ8654zCK2WEnIpZtgXktwHF+JlZEo9lkHTs3ZbZCvjn2Og/1/
abmVrsC8suksoipvOihl8BuZ1xw8POKn8XIJ5j0N1n62xDNbD/v8Dg5cZFGl
aoB9SmWwiEzlznOEBM6DKfi5zrBp/SzMfxKspnipm6GN+e+A7cdSNvauwz4l
M1kEQ8h+/AvOG9UI/Fte5cM3d8x/HDzC9OvuksP8ceDVsaWBlw6SectfgmUO
CfyULCZtQ2TBvBQ35kUEkPZ3B5/8piJ8/w1pxg2wj6GQ0y78fj3PwV99yrW1
1mJ+Fvh3ccmvD4ux38PZ8PNyzE5HCvYbAw7X7dNwxPXDUwZeJRRQ/3OG/Hz6
QgbXdU4U2GxQLb5vE/b5FLw8VLXUbTve/35wzByBILYj3n+RHBZRNJ73wvse
9r2J27RCsJHpgMGGHOzzEzj+CZMvPRXzCudyXWduAN/66NpoUoF56eBWxiPT
15XY50dulwvmsYiX9dNLGmsx/zqw5o9pwyT8+3J7wJKO2ycz0zB/CLic7bpu
0xPsc84Trr9PoYIdla55qKVjfiewj69Wq/QtzB/8hOv3E7PALhd8j718hvOg
ks8iFifZdeZl4zzsBH8/8ixrTRLmDwBT9WbkHyVj/nRw7J+3Q4wMzP8O7PlK
t3RlAva7o4BF5BYO2Sz4tz9cAOvWOnvxB2D+R2C1s+d9Th3D/G/BXbrh/Jtx
Xml/wN/vb6dLSmK/3oUsQuSrqvnddvL+86SC3+8YnjVLGPMzua/Tf3Ffj15V
xCKeCTvoZKzCfpPBWua1Avwi2G8DuFNn1tX0XpznSW4zlhdzfX6PBdggcfes
CCbpxB/gNPOaQOVY0kyZp7D+/bSbfKsxrzm4t++Gwb580tRTYJPDEx9CGnB9
jYKdNfYOTAtgn8tK4P5U9HjLSmNekxKu/DYeYOkrA/oUXD/+t8G03exa5r/1
tbSURVTEa7hImWKfm8Gdn2PaC7bhPBwD/yrde8gb98PEWPDpO4/PDuL+z3wB
3i+6MqOTjvNAK4O/X5v8w9UF+zwCTgky8m9wwnm4DlYLdq54aIH5n4FvnT45
59VOzD8EVj+eMR2gi/Pg+oxF1Lh+GdVbjvNwFbyzmFfgqiHmL33G9fO0AXC7
3ZoXV3C9e1Cec5knCqz0Y/KxL/ZHLQbvSa3+e/kTzkMfeFep36tsDuno+eWw
X/Ec8Faywvya4A7O8TJz3B9sCsAUN8+PDvuw3x6wtmfCKyctzC/0gkWciXM1
48f57VkP9mrXO3X5OubfB3bzLQiXwPWX2AW22HMo8los9ivwkkUsiOVfZlCH
+deB3aPy+xWrMP9usN6ijzPrX2P/l8D3LA/+SB7CfvkqWMTnsM51eqPYrxr4
naqdRf045ncEd9reivHuwvxBYCGmx9mTHzB/JjjeW/vV4s/Yr3IlzM+OJ4pF
37Bfe7DLLbMTw22Y35/7OvMxuHnkgpx5I+Z/B+5Y9bJcqBfnw7aKRSQZMt16
32G/vuBec37BpzWY/yFYU/pk2EQH5n8DPu/ia7ttEvP/Bs+9KGp3nW+U7Pf8
KxZhZZrEOT6N/aaAhcYcA8y/Y/4mMJF+pvFzO+afAn/a7JMkPoD5V1bD82u3
644KDvabBJatzfI/9xH7rf+/N01kqNRj/gnwbptPe9v/nS+2vIbnTdpBee0m
7LMGzDOYu10T90vGGHgq3e5GGQPnQbqGRdzOTbrxAM83FDOwXqfyHqsbmPc/
8J5na8Mj8XnA5NRwfT7PslpYDxzRXzV5mNcY/KaNf8EEnk/oJ8DezFTXg3g+
i74F7m42y+Gcwz4l6ljEqU8TFqoXsU9DsL7qivchvpj/KFhciiVn+xzz3wT3
NHW9a8XnW085eO5Hg5YP5dinQT2LeKwUVxKN85roBnZfodx9FeeJ5xl4L3Uk
JacH8w6CJ9v2mHl9xft/qIHLnGjwkj0bli6fwHyfwWfjQ/etw3n3X9DIIsy1
jl5ZgeuBEgk+ZLr/QRjmoRWBLeN3iLDeYL5ecJCdfen3Esw3r4lFKORfLzlf
hv1ubOL6eXo+eEf+63kVudhfN1jHVMXWEL9f+Vwmi+C/wmcZhfeDowFeZd/X
0PZvXveCn6pyLD5VY1/8zSyiZffaLwtwPVHUuU3bBfb5G75f41+fF8FRw4PO
8/+d1/newPxs6h2pCMT+VMGpyf5yPXcxrwNYe87IsytemDcQvPT8/q1u8Zg3
A8waUGrmw+ezjdJbFuHBPCEkb4t92oG7hR5vv4H7N8MPXKoSLPQO9++eNLCe
T0T8YCjmbwEP76ln0LGfxO0tLGLoxepaYzzfMH3Ac2enKLFx/fA8BLf+bGxQ
xPM7tRm85XHa+A/cj+jTYJ2ytVYv55HrWe7BOy7bNIKjD/G9C5pN2v8n2L6x
PrVGjjRjxXsWEVoc46koRZp2H/zAjGfZjhWkPerA92KX2xrIkk4cB7+w05yX
KEmaKdvK9Xk8W8DOM0OrLuqSjn4NXkWlikqrkC7/Dp7/8IGBhhtpjlQbzH99
ulaBPeY3Bc94hrw4a4X5T4JXrr93vs0M96tvYK+uc7y3DUhTJNsh353Ikl/a
mN8IvMdaeI+HFuY/Di5+VJVhooH548BRF/kLhDaTpop/YBGvlWMLqnaRphPg
v3WmAtuPY353sHrEE+ebRpj/BvgOv7qV8A7M/xwcFe/CycLv46/fAfe/ss7R
7ST2exhcYzzBcQvE/DHgG+6KjgEXMX8ZWC6sdxEjHPN/AU9RiUWvE7Bfl04W
cXeb9e/Jauw3GhzFXOkyWYD5n4KdtryxXlCH+fvBCY6qGWsaMb9IF5xXKqw1
gz9gvxFdXNdtCsH/Wcr7UkYw/ycw1Ti9SZ6D+YU/wvunkuT1nkrMvwE8EVxy
/TUD+33yf9+TbDraiv1+BFt8apC5PoP5Bbshv8z5YN2V38n8GuCmyZBxQWnS
5R1glUSF1OzlpDlzeriuy1HBdpm8y0Lnk7Zx6uH6PP9gMMPuUmyyGmnK7E8s
4qaMvtSavaRpKmBnY2q6ozNpj51gmmGexmAw6cQA8EM75elZoaSZ6eCAL4ve
aZwgTVfsZRHXZeQGb3uTjt4BFrgX+St3H+a/ALYQGVTrjMH8j8Aibikvl4Vj
/rdgFeGHcgHnSDO29cHzubVDyvMS6R5vsHlm2JZdQZg/tY/r52lMsJ78zO1V
ezD/L3BOesV+p5PYp1c/i1in9+cyC78fNRncsbCjOs4K8zf0c/189CRYNn3I
WM4L8y//DOf5uh9rHPywz1pw3zv1Yc04zPsDzHuysrHqFuaVGYDrP7K8XuRj
XnPwp2YdhfuN2Gc1ODPYyTq5HPscBbcJZR4OKcO8Ul9YxKs78zy7ijCvCdjO
nofzvhfzenCb8xVMp/HOWtiBfS4dhPPYFy0J1/c4D5vBEUPV7mLPMf+xQa58
jFjwMumAmP9eYJ9LhuB5yjxNCezCPmngzNDEauNWzH8EPHxQyWnt3DEy/3Vw
b+3Dm2FypHmegxPfnvVjqJOO1mOxiAaPtRqzVUiXu4Kbza7KUMVJc66CTyTd
9pqWIS1XCi5zekV9LkHaZgC8eQ6r6tFK0j3ObOhz75jcaSXSlCgwcWuDTYwq
aVoxOD59Jsl5AWmPPvAeueBZ98VIU68Mc30+vWCY63p0D3jBYYctXcswr9AI
d971YPWgt1bWkqT980a4vj+jCyxksChTbQ7mFfgK8/rYulWOgnnXgXmbhsTr
8f7RdoP3TeyfYyOIfX4AV0SG7s/6ifMw5xu8r9//+3nvH5wHNbCExv4NMpM4
D47gfXPbLvPMx/xBYO+Pf8RUhnEeeDnw845W+n482Kcy+MeT7Es+X3Ae7MEj
O3971tTgPPiDNfpkY+ieOM+PwV1KzVq0/3AeFEa5rifagpXp/ucsrXGefbnN
8wicqzcxrk3D/G/AoSE/XZincH3ZfIf17T+lWxmL83weHL9w95Wgq5g/BTyX
FncpNRPnuQk8bHRpVKIK80+BRZpVhnVxPVHOjbGIMIv8stOd2G8S+Lje7SQ6
9udRD+bZ0mbAxvlNnADnjUe3vFiI/cv9gPNEnd3WIOyLngB2vH5RL0EE+63h
vl4+Bh6dUxvtI4zzIT0O6ynYMqB/Mc6zGfiY29hrYwWcBw44UFRQVQDnj7Js
gus6zRhsxNt00hLXg8cJcLnLzzQxXVxfX8HvReYvaFXEeZaYZBFxJVLXXvNj
XsNJrnzRR8GKr52otosw701wza6vXmr/9gexn7AeJl0fC37CPg3AayzUZr78
xXlwA99n7OSZz4v5r4GNA64cG8L+KM/AzoVDHSz8vom6Uyyibpnz0UrMwzwE
Hvp4esXnQZyHq2A3iTsX7P7Ncwl414/40lu4v9A/g2WnqXFnWTgPB3/B/pWd
FvWCg/MQCT6v+FvxDq4fmyLwFOddoyLur/694LSJYq2yJsw/b5rr92nh4E6V
KgkhXB8e+eDL5bvrSipxnrvBF5aaf0vE+82c+5tF6D4jrOPqMf968Nqya12W
Jfi8yP39/76V7q7E+S3vBBcLLhvgxf2Vw/8HnpcZeUc07mF+dbD3pQnZebcx
/y7wlGJ2yIcnuN7awYdrh1L7sC8K3184P3hmLmlahfOhChaukTw7IY/z4QCe
tXP6baUh9h8Iviugd8XTBedj1gy8f8UaGFa643wogZPtlB+0BuB82IEvmifb
jnvhfPiBX2c/mCeVivOcBubnDJ5f1oT73VoeNpGzSWD56g+4320HX1O+wDR8
g/PhA34f43fZ7S/Ox0Ow/a7DPgK9mL8ZrCfkET/2A/vdOotNRHh+S+gW+EH2
ex7c0H7wVtYU5n8Azm74YFY/ivkbwT9ZR9bZD2L+n2A+cXFRhU5cb2d52UTX
irmsnNnk59ncB9+LExtIX0Lavw783kkrxIFCmjEOrlJYv9dDkHSP7Gw2cYWn
fmqtHGmPePBAuD6DJkE68TV4k5nOot1LSTO/g0VsFfIL15OmmvKxCZMswWs1
BqTLq8Bjo8LULH3SnG/gzJmBOybmpOUk57CJVE1xrRE7zGs0h+u6/3GwTLDq
xwRd0pQR8Abf2Uc+aZKmifPD3xOzsndWxbwE2OqhjbLwJM6DO1jTeFaCAH5f
5g1wa3hOGa0F+1wswCYiZ6cYb3+EfeqDq7KOWEUn4zwcBmudkOyp/YXzEAN+
sP9mZv5ezF8GXvY05cX0UexTR5BNpLBdv0qHY58uYDdHQb5NNzF/NFh8T5ds
aQLm7QdvXxlhLlWM9//gXDaR3C9nXV+FfUbM5fp9eiH4We705TFH7FdYiE18
Ktpb1OSG/YWBHy/usenTwP6egENEfFcIrMJ8H8EfD3QVfNqP+QSF2cTUtUxF
8xTMpwFOujEwrBaE9zsH/NDHv6nVB/vrAB/z1nqV7oV5+eexiW55k1axc5iX
ChY8mZEnEoZ5ncB3/9xrCXuGfc2ezyaCLNhxF15hXhVwv6KI4aH3mHcn2EEp
clSKf5zMGwA+Gxos7TOE95tHhE1Q/koHE1+xP0XwTGe573+NmHcHuGWeqe7E
Lcx7ARwhXLpoRTnmTQNHp9UPDe4jHS2/gE38YXRsco/GPrct4MrD8QanH841
CEjG/KngMSkOb1ML5meCiSjFS6zb2Kc1hU0YZjPpPZewTy9w4akWyZuVmD8Z
vDRm7tOuNMzf8P/r2TaU2ALMPwnmXzhj0pyJ/SUuZBM3hQrbfyZh3lqwnuPh
xHVPMO8P8EuV0m7ju5hXRpRNqJwrSEh8jH3eE+X6PEY1+GvY1NdrTzHvKHjJ
d4bpwULMK7UI9pMgn0NncD5pJmCdUedakfvYZyU4/Plb70z8vjzfwGHq2+5s
v4L3f+limDeduv63RzD/ZvC+lkVX+I5j/mPgQbGcxJ382Ocw+Gfw5wAjGexz
iRjMV+XFdxpjuN/SwBnmBgwpJu63R8CXR9o7BaUw/3Ww5sKkKlNcnx6LlsC8
JDbXGmljn3rgUktmhKg85ncFyztZ/pI4j/ljwJto7W/P4P5DLQWPFlEbT93A
frXF2UTtoZiNqY+wX2fwI3Zp7OmLmD8KvLSp/2IaHfMXgz9WpygbbcH++8AZ
wmLXN7livwck2ASzRnn1KVxvtCvgudVhKqcjcB4KwNnWOy8RgZi/B9z/fZrT
fgf7vLwU8vca79fH9ROdB16YfcPoFN6f8i6wcWPNpXacV46AJJfl1oHt47uf
tNbhPDDABu5qcfMeYp8fwMLN7hfaSjDvnGWwvlgJ9MhqzKsGPrH0bcLKF5jX
EWzjcKu17R722Qa+SzUIUW3GPnml2MSv+4eEinHe6MpSXJ8XbQ/+bCm6ce4A
5vcHn3yXkhjfjX3OcP++v4I07IeP513Vx/2AYQu+dfropbxczO8L9s5b9+xw
FOZ/BLa7/0YlC9dD4hoZmOe/pdPtWTgPNuDsV3Vz81wwvzdYZvyvmRnuD9QU
sNGnZrkx3N/oTeDVf2Y4ZhnYr5Usm4jvW3cjDvc7uXNgMb2ZvgicL5skcNV4
zGrbE5i/HnxDSYP6Ee8/YwI89iTqiQbeT5qnHJc9EridWAMeWSJ/sgn7Y46B
u37G1sfi/sIjs5xNFH8ocSnG9Vz+Cky3LPfIwnwcDlg0tGrhlhzMu2wFrL+h
BfMMcD+yMQaLlxm72V3HPiu4TfkKtrI8lSUQgHklVsL99rKfqvTEvIZg75at
lb9tMe9RsLG+tL79auyTDZZxvpkTiOcLutgqOD+YCMy3kMZ5MACz9LY5KGzF
/G7guiPLpkWdMf81cHnAvKyBzdin6Gp4/kb+F//y3/NNF0zrs3X5Tw/zHwIL
6cSYKeL6plwFD5v+llULwfwl4ApGyJgl3n+m1ho2kefxvMzfF/t0BjdHZO2M
88D8keAtYV+POjtg/iLwmVip8Gt4vonuBavNF91YYI397pdnE+omTjclcb+z
CQc/qD0/5ITnP/988PwcC+2zeJ5idINNQkPvrl6JfYauhb55Hu3Nwf0uMRd8
VX+7xt5jmLcTvMi28pjsJswroADz+GpqTAT3P6o62MFVrDn7IPaZDZZ5qt4j
7Yd9toMzfiZM/8DnvRyfIpuIkTjDyD6DeVXBSgsmIhvysW8H8MWjoxsy4rDP
VnBtdEW9Lu4ftFlKbCJ4iV/jbNy/PJTAYjftFKsvYH47sEpC8K9vOzG/H9gt
SfZMI+al/wWrz6/cGWyEfa5VZhO7giRjXPwx/3awuu+G4f34POT4gFd46wsV
4PNN7iE4eMqj3qQU+1ytAvfTJqRhOe5XPVvB9//sjY7/d945D951aF70I9xf
aA/Abodn/7cjG/M3ghd7ma4V+nc+s1KFv0+XZz3oxH7PgvUPyNTb4H5Hvw/e
Zf43gv0D89eBlb5/uULhYP5xsG82j7fyQvJ8Y3NaDZ7Pqlot1bKk/ePBQn+i
BOpF8fzzGjxRtD039w/m/w7eW6WhyduA+aWp8Dy2VNg3uAP7vQM23cf2sniG
7xdV4AMlpo/pBvj+zAEXuT/bpNGI7xeS6mzC/elDsyUKmN8I7DG6tzZfEft9
CW77Y7B1Dj5f5UbAgfkKCxrxfclGfB2bkHPw9P7NwHkmwBvu5jLFXuHz2h3s
s0TU4JobPp8Xa8DzYtLHxYyD53N98Ooo5T93cjHvYXCm9Pmz5wsx7zUNrrzR
C9eziW1lRrtN6/B8rgMu/Pz3+SAf5nUBey5azyOL7yNy0WC+eo5NML6P2DwF
SypTk+fNxz43beD6ecpB8MF63++Vv/F9LQI8ocZWfzgL56EQPHAiP+QX9pH4
Cay1bU2nuzDOA30jm6g+WxIYmIfvF2Hgw4Ltrc5FmP8J+L3Q+E9TfD8r/wjW
CEq29B3G9wtBTTaREBm+5Bzul/4h4Kn+fh9X3L8ZOeA+MZvlvLh+ezrAuTp1
wbH4PKLwb4LnIWViFaMH55kKlrLxm0x7i+stC/x3eZmYxhec53bw7f6dHWtw
nqiztdjEqdGPou04/3QVcGqFaK/vd5znneBIMzXf/gXkfMq9Bx9L6zidsxTn
mUebTTAU/Q4vkMB5VgTPT80XqVuM87wDLL1Z+cDMUdI9F8DnXN/N8ttB2uMP
eNdUX672NtKJ8jpsYr33ov5EPdLMbeCS33OXLrcnzeMDvsWvIJS7hTQ1Ffxf
qIOOhCbp8lW6sD+cjlz2dR9pjrUu19+T89Ll+nybZHD7TKfeZxrmbwD33Pts
FI7nEYqlHry/nHlQ/wbXO+0MOOXoxQ6iC+cjEWyx+9g+/ilcj7XgO3OW2jHw
ecz8AW6In3TIxvMz/ZQ+nJ8vV0XdG8Z+74ETGjQDH+H7R3k1WOf8/XQr3A84
o+CBophft+Uxv5QBm8gqqR47oY793uZ2TyXY6pfY2wo05Rt4h7D8rkUa2Pdm
Gjz/dwy/36+Pfb4Ei+cPjBSsxz6HwYW7jR752JGmLyHg/VTSwuDgfNLRNPDS
iyYHXjIx7xGwyTIZutNG7HMInH5ge4S+Ava5yBDOP4qGRo8pmFcPvGm5srGU
EOZ1BY8H9l/u/4Z9x4ANeqTvN+P+m0jZDOe5jktNMk3Ypza4w/Om2ro5mN8F
/G5P7/lLzpg/Cnw4LF48APPQi8HHo8NbtvfjfqFpBP2/2kNJ+Iv7xQFwiVbr
xsX/5uEKeMlA6/17EZi/AHwsUkd0Rxhp2j5jNuEcnOOUHYp9XgbL8ziquufh
/OaB16mefFdxG+e3C3wh/4IQ0xX7u2TCla+cAeZJoxaedsP7/QGsp3K5rwjv
j9wcUzbx/QafV3Mb7mdq4I2ici49+LzryQSv+ZPsrP8G+2sD2zoVx/HX4rzy
msH8RyX3mobivCqDH/NKzy37d760B28uTjRYjec7+gz4fVRh9j48P0crmMP5
XOKtRwsN77ctOJjz2noWnm85vuDdWjJCt3G/8f8N5gvLd/iG50fGmi3weYpB
8rR3mNcGfM/DZOkZfD5TvMG8+duMVuN6o6WANS6q3xc3xP5WWsD5J+eibYsT
3m9rsLeWcc4cnB/qObCmSnHEvkN4v5PAW8UUSttise96sNiu4UyRYOzTwhL2
73uDS4VM8X57gp/y6K/XFMf7nQDOos00/h7B/DXgiR+i3Sw8D/WMgVOWXy+M
FMP7fdcKnmchIxs3/Yd5X4FXMC+Iajdg3lFwyeIE+8fDmHeZNZt4FbTxod0z
vP+3wIf8/cRPCU2QfVaAO1kia8U+Yd6vYJFj1WNdfzGvxFY2UV/hETW9hfx5
f0Nw0oa2q30KpCkvwJrT+0bHZUnT2ODYMPOE9aGkPcRsoM/3xDtWNulEA3Ag
+/bHliHSTDfwbGt32fCFk2Sfg2Cn1cr3paxIR4tu47pergve+XnRvfy1pDmH
wJF9HSJD2qTlroJNXp4OLL9AmrFgO5toFG84VhhEukcL7OxQv7XSmjTFGSyu
Z7d783XStEjwy6P63oK9pD2KwNriA1ELu0jzaNpyXafuB+8asdvv04z5w8GB
Zxt+U+Mxfz54MsXFvekBaZu9O9iE6gOVLt5C0v6h4F9plxrWTWHeXPD058hP
dn8wbyfYOeVChMJfzCtgB/tLm4xu8wzpxIvgIq34enoPaWY2eI6dWPmn25j3
gx3X36Py2XP1QVcFL/cYF2LfwD4zwOeMVKwv38U+W8HtC0Ti61omDf4Hg2Ig
Bg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2ndcE/f/B/AoIAhao9SJaFS0qCjnXqA5FBRnFMQtcW+Nda8a9eteQa2z
1lQUFVccDPc5UUEM7m3ERROBIGjB+Xtz7z9+9+ofbZ+PC5fXfe6z86k1fEqf
USVVKlU+/av4v/SPkLzbLvL/OjvQv/SZaFOZWLDUkpy08MGpJT6ynXq08SVZ
6HLN3qSFbEvpPXZxRYMZFR6WkW1rRr6/sEfQYrVs9VBy3uQDPnsf5hZbu4Js
ivp0Zfsq2dZSe8GqJuSsqIHdN4+TLQwiz12zZGoJL86/lPzhSrfIztvk66aj
5IclDL9l9ZKtaRwH1vUnV3VZe+nhgxw5/2LyzMO9yjcpkG05RF68qUvjxi9k
2x6Qp6YsXVVvn2xD331kl4/hdxNkmxeSb6TYy9deJtt6gJx++OTWgLuyVffQ
wg9y8pGJhzTzZEvz94OdceT6bo6cs2rZmgxy9YFDYya2kK37uh++z1j3gF2c
o1276/dhsrXpaEMh+Yxb+3kJj7PlvLXj4fmt3ckeNePfnkiXr+tTyWfE+LbD
s2SbPpEPWSKi3CXZUs2DdrGM2/SJ5304b/hBzDudLB3dEeJdhcvzI7nsDffD
5ctyeVY/ZBfHTrv5dXwD2erOZMnhXlKqx/mnHoLnNezAz6uqHYb7C53Q+snk
CSHTwwfEcf6th+H7pUvkKh8mrjzjxuUpHsHynIC2/Im2XSCnbd4UrS7J+e1o
89ijYOsGtOrcUXhefXkL2LmeHGnJSfd6JefXnEbr3ljg+Yy/HLOLA7NX+h1c
I9vSmqweHNouYq5sbRLa8Io8oZTHqkNbuD54HbeLrjO614gyyba2QKv05H4d
A4b06Mnl+YIcO3hrSreOXB88ToCdTdGaISfg73XLySeOLf5QNFi2ze2kXdx3
c+Xtb7/LVgvknBmuTbu25vwD0Yb/kfM6HVnY+uQHOf8Rsnvx43yXLTRKAOv7
keOHpAxpb5NtWkT+OyfuwnZvzn8Q7bxP/nx81/J/X8ufN0Ymgi1/oG370eq7
aO13cpMTa9e8uyXbOi8JrIpDC1a0/gt56S3/tQ+jOb9fMlgTS77nkRq81iJb
d4u8IVV87azG9eM/tKXWKbu4zeN5a9M1zt8NbS5AW2ucBqvCydlD3xQ2GsN5
p6GlPHLa7Nhcv7qynT5n7OL19FD/lHcOOW8YeV5e6IIZKs5rIHvrV5WvWSRf
N24nGzx76GdX4vKsehb+XtsRbZhEnp/w+Nz1PNnmLXjdepG8qE7q1Tm1uDy1
5+xi87DUav7tuDzHn4Pr0iZy2slyRzOacf7zaM2/ZEO6zZzqzvVhzHnIb4tB
q8+ite/QBvUFsGo9uVxiQNeLp2ULp8hh0eHG+mGc/zX5z6ELpzZdwfnLSnbR
L2F6y1sVOH8rCcpPlyhh+drILTyjB80L4PyeF8G25uSsk8uaWP25/KMvwvsy
Pyc/jP6rTO1yXD/cL4FVTcmLolstrSdw/RiM1i8jX/c8/n7aJzmP0/UyfJ8m
EK0bgDYuuQz1y3KYvNbzSuZML25vAVfAhiiy3xyPWRpXzm9EW+PRqvtX4P2a
Iq7C+5cWoJ370Jo7aN03tG3uNbs4JjEm4+w2rh97yQ93eKSl+3L+22hD0TWo
z+Y6KfD8wm60Pi0FPm/6nALvz9n1Oth4g+yzs+6Y83vkz1vyr8P7sfneoPmc
frRP1Vuct8sNqJ/a39FWJ3n5X3eeXH3K9dnnJlgIReunoE3byPPnTPrh85r7
iyqplK9uj6yRy2XrQshvPeuP/93O9Xki+XQXt97u4Zx/M37eJqVCeRs6pNnF
y35Z+nH7uTzHkX2GndpXfjPnPU+etnNVzqklnDeLfCHxc//k2bKl0bfo+8ps
ixnYluuvCa17S07dmTsjYTjnK5dO9xtWI7DsDC6/dWhtMtqQSU4dtiTRI5Lz
lbltFyuU/VElqiqXb0vytfyYI/38uPwSyL2Twt9aRC6/l2iptNUulho+laaA
nLeZFe6nGUq+llQ3N74il1epDBo/67l96x/IeZuQK4SPf1TSn/MOQhuWkisl
DbKd6Mfl53oH+6/Gd6A89f3RpsVo6RC5Z9kPvhEuXJ4N78L9jX3RloVo2wG0
+h7a3OcelLd1Pvm3MmFuw6dy/n1oIYN8IKl4gs75v6I1e+7bxQEFb9rqsu1y
3vT7UH7GQnKJZO+CfT/l65baD8Daf8jHk5+X3HVOtiEVbf5E/lG2uEBlW2s+
tIujRrg9zj8lW9UVbbqOlj6SjxWEX+qWJttZ/RFY05kcl/Hm7T93Of9UtC0X
ra72GKzthDZMfgztxbz1MbRPofITqI968QnW3wnk+Hkhh3+W5/rwJ37eeYE8
dPiDkBK+XL7tn2J9GEs+MqxMc89org8bnmJ/e4582+vVgtEbuD6/x+vWUc/s
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
P1xgw0o=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2HlcTN0fB/B2S0k9kkqRRNJibIVK3RJFlEoqJNG+SrZCWUq0qGyhNEr2
CJE1kRZajCKiTSHNSBNKFP0+7tc/v+eP53nerzszfeZzzj33nBnnEWzvKSYi
IvIN//r7X/zDuZXJZ+h/hab4l3sLPPJpj8f7UayTZLJwPTalJlyCdaEBvEP+
t2q4AmuhO+z8TuGEmh7rqCb4c3h2ZYcp69whp/nMp+Mto67MYd08HU4srrq0
x5i1nBt8+nvS5bP6rM1i4ZNyf1xaVVnzpLL5zMp062cOk1mLTIUVtDLV7DRZ
c1bA+4crGdnPpfzR8GvJLckPdSj/FTj07UcRDXXW6vpn+Iz3tEzPr/Ks7Zzh
MIs/hSoDnWz+XfCvgVsi28Qo/yVYbtv6jweb2evNtbACo3ps62vWIcvO8pmF
f0KLzjex5kbCPJnsKTYdrHnn4SWvF+ycO5byv4Dlll90lqS/z/kDB2xMu/5T
hvrddg59/Wid1DeE+j0Dm6n+rD7Wxn6e+nP4t/7mVRefs7brgz+GVX5OaqX8
E87zGXfb3JwHRazNquCet1sGWedS3l54zL2JVns5lFfjAp+prXITHXWN8trA
qgpJZid/fmH7LIf3VF9d+XECez2p++/rq9cqFIqxLhx7kc/41Bv2TiULreGo
kO4L6mMpbxiscmSd4m1r1rlf4cG9VSfyLalP1Ut8Zo3Xw55NeqzlFsAZU4VW
uiMp/3rYZPnMSd7LKP8JeKheXN4oK9YiKjl8Jqkl60iXE2vOPLh+IDzi52bW
7kGwxtfZe4Z+Z79PUiqszGkZZXOLdeEjeLT2HTP/JtZ2zGU+01xY3/JKnPr0
h9NXxCeu0aX8h2H3MwMeAS6U/wHsWLbfj9Gm/HzYQzJmcivl5/pc4TMt/sdl
POSp3xS4a2/O2jWylP8+/DV8nvfKEZRXPpfP+E9rm3Fbnfo8AIeanY32pc9X
vwMvas7O6jSn8X8Pl018qKVE/UXJXuUznp97HZ6vpbyz4MIsp9XZrtRnPmzT
HdvgFkR9voNf5L+w3hlKeaWv8ZmSnTK27lsp70x4tHJiw/o4yusO76qe2/PF
n+ZDIzypKUwnyIvmw+DruD/6Sn9tCKD80+BYjbKJVqaUfxVcEv4p+4Ud5d8L
H593ftIND+pTMo/PpOpePHvdj/rkwHZeh/c5LqD8rvCGW0ZC85mUfw88S9Y0
1JH65F6GfXY9skg0ofmgd4PPKJ05fi1Sn/pdDpcqZzZY/kf5d8KRedV7N1J/
hRdv/L2fzlrvMKD8L2FhhkyUEo1flONNPqOXfFtBop+dL7k74PysGSZ9X1k3
n4Mv2C0086H5JFcDOyuueGp4mrXZb3h/xLEzw3ay5kXk8xmuXaPfQwfWImfg
IP3pVt/Xs+bw/v+6+y849W5U2ec5NJ81b+F+C/0smurIWj0Lzqq8csbGi+Zz
JZy/e9ycqh2so378v3PH3cb87ZNkFO0o/yI44IVqeuIi1tzv8DjtmlWN+pR3
zB0+I/NYWmLQAsprDfuMM0mbL0t5N8DH13a0u6rQ/dUFP+2c4pZIFo6+y2ee
XBCX2y1HeefD2yT6fn7UpLwh8MR7F0sz6HrUcXjLO/k+mRnUp/I9PqMV4/Qz
kr6/mQVsVnkjUMWSdUggfOvoouLVxyj/Ufj1rkppm3jK/xDWOD34wDHq193s
Pq4HDhHr30V9+sFeIyev3e9P+Q/Bh90+H0/ypPwF8MCSn/WX6f3q7bDvS9UK
bzPq07uAz1QfvRReqUZ9JsPu7aUH1E0p/z14zsn1e+RnU/6PcEu0wFp1KOWX
e/B/FjkAT7OVtWt838H2exuu3hX7oG4E5W+FtyQMjF5vTPmHFfIZ8RVpiilO
lN8QHrHpcEf0Our3JqxybI73pxXUbzPs+GtJWKot5R/6EOup2qgei92Ufwbc
MV00vusc5V8NT9zkstDhX78NsEFC3iHNDOp30CM8P0scx/GqKf80WNd0qdbc
BpofK+E/j7aaWzVT/hhY1N7406r31K9EEZ9x+ZCxKFuS1ospsPU+pXUzhtJ6
4QLbXV55sbWL8u+GQ+LNO8U7KH8O/D4qzZDHp351H/OZGBfFtA3d1K8T/ONl
xYX+N5Q/Cq5OmuVVRp/HuwCvnSy+0oVH+V/CI+KnJQs/UL8OxXh+qTkz5Z3U
73bYSjOxKbOV8p+F03/0rmmiv6deDTebSurMofXDrh8OXn1cd/sYWu/CS3D/
avi7LC6jfrPhHjO3No4orXfPYN2f4TMqP1H+n7ClToZBRB3lH1+K57PS7Ipl
9LziZMLRMVG9Q+n7uFfAu8cqM8kPKH8PrGK9R03hFeVdWIb8mVIfw55Rn0/g
xJuWMUdofcr9Bq+6qr9v80WaD2pP+Exjy7LxU5MprxU8z9BC7HIo9R0Kr1M2
5XSeoj6FcNWPCgW1+9Tn6KdYH+Zua7tE1zmWsKJWSP/rQMobDBeMkVs235fy
HoPTEyNzd/hRn0rl2I+GqRU2W9F8NodzrxtIP6S/HxUAhxUGPKldS/mPwEEe
Egv30/ubC2Hj24NNbidQn6YVWM/mygQU0/zl+sK91YOvH8+mvAWwUuS09MRM
yvsJdppRF/byAo2/VyXun9WTk8/EUZ9J8IZWUY8lBynfB3hlYJRKwlbKN7yK
z4j59Y0/H0n9JcLqW4RG8hHU3y1Y6llrdsi/fC2wj1TqqB+0/nBlnvGZa3dH
lE1YSP0awFNS0z+MpOvuN+D+pMDIE/S8SGqC32tUF6sEUN4hPD4zxOS+dkoQ
5Z0O56z0eLPbh/p1g9OH7i66aU99ST3H+tg52fPeNso7FV61c5WDPH0fsxWw
5PiHlTPo+RMSDauUKS5ro/VZRKIa43WoN0XTnfrTh92/Fo+670Z5neHvDtNu
+hpR3l1wddmZ+fPp9YWX4OSOce6X/z0fdGr4TN/F9F8iA+x6GLUM9vv4yjxY
nsY7El4w5Nqvy1KU/zxctvxu4qN/z48X8ObZv7hz6O9z7V/wmcyveWsqtlOf
22DVIVb6aUcp/1mY/2c97y09PzjP4TFSorqLYih/HyynHLVbKZ36O/0S42V4
ws+P1k+7KvjQTykHzgka/17Y6UItN51LeTVqsT86nBb8h66bnYJ/awanjaf7
L6Qc7tmQ9EKWntfcbrhwZYqGJc0X3thXWI+ibA8WUX6RhbDi1QD5SFqfk8rg
2nfX/ijupz6/wl6nnqi70P0uVH2N+VjKU6m/R/kXwNWNW/Os8in/ergn7UDg
+WvUZydsM9+/2+889alSh/VXYufl8n/7m3kwJ/+3LZNF+YNgJQmmLpPWS24q
/Fl7n1tiG/U56g2fKW+wPVT2i/pk4DNnP2+dPJz2Z/6wVPkyoyOVlP8wfDK/
fbLsN8r/AC54xkue0kv9zn2L8ef+tLZQo/2vD8zd1D+0cyqttylw2fxvD1fb
0/7yPjxYrsa+1ZHW2zZYV2botjO0f+V51vOZU69u3NeOof1vEnzIKW6i9kZa
b+/AcXafawq20P7yPcxbbTW1NoLyyzZgfj/xuTc9lp5nCfCUh+ISg6/S8yAf
Fsvrf9H1jPaX7+B16mGzpO5TfulGXB/U2l+QTPlnwrIOoQV6V2j/m/fXAc97
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
voILrmVr3X77zfR/PpD44Q==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.4999554012734069`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.4999554012734069`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9, 
   3.6679966014622297`*^9, 3.668024110181718*^9, 3.668031049318376*^9, {
   3.668032804112906*^9, 3.6680328286320314`*^9}, 3.6680328691426263`*^9, 
   3.6680329226453495`*^9, 3.668034039959835*^9, 3.6680783426206446`*^9, 
   3.6680785187740164`*^9, 3.6680795586876087`*^9, 3.6680816296349354`*^9, 
   3.6680817354333153`*^9, 3.668110915434724*^9, 3.66811167458549*^9, 
   3.668112417986598*^9, 3.668864555204123*^9, 3.668865155964558*^9, {
   3.6688652185436354`*^9, 3.668865226795666*^9}, 3.6689627219323745`*^9, 
   3.6689628015354204`*^9, 3.668963024295858*^9, 3.6689640704959583`*^9, 
   3.6689642018224144`*^9, 3.6694535065669003`*^9, 3.669455472066901*^9, 
   3.6694555258158674`*^9, 3.669476139169902*^9, 3.669477813895585*^9, 
   3.669539981113392*^9, 3.6695400957051997`*^9, 3.6695401670528126`*^9, 
   3.669543718185505*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<rhs.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "rhs"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<sphd.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "sphd"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<portfolio.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "portfolio"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6695400689478416`*^9, 3.6695400776123357`*^9}, {
  3.669540150214959*^9, 3.669540155287217*^9}, {3.669544086204119*^9, 
  3.6695440893460636`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"HedgeChart", "[", 
    RowBox[{"\"\<USO\>\"", ",", "\"\<DNO\>\"", ",", "start", ",", "end"}], 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<UCO\>\"", ",", "\"\<SCO\>\"", ",", "start", ",", "end"}], 
     "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"chart3", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<UWTI\>\"", ",", "\"\<DWTI\>\"", ",", "start", ",", "end"}], 
     "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9, {3.668032724636281*^9, 3.6680327747307005`*^9}, 
   3.668032842681288*^9, {3.668032886551777*^9, 3.6680329055850186`*^9}, {
   3.668078288605977*^9, 3.668078304671023*^9}, {3.66807873300231*^9, 
   3.6680787607888904`*^9}, {3.668079398596377*^9, 3.6680794079436197`*^9}, {
   3.6681123583237514`*^9, 3.6681123663217044`*^9}, 3.6681124067766967`*^9, 
   3.668865148002112*^9, {3.668865210375526*^9, 3.6688652109191256`*^9}, {
   3.668962642710268*^9, 3.6689626429272704`*^9}, 3.668963000681808*^9, 
   3.669476164099818*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlczOsXB/Ah641MQqnUKGVLTZE1Nd+ibDFE2WWXJWNXSMgera6dSlJJ
xlKyNqFNqUFFG9MimS81Wl3E78w5P3987x/33vfrmeUz5/s85/s8M/VftnHW
yvY8Hq8R/qX+L/wjTIlSMvS/Kgf4l2cl+OL2djFGpujgbleUjFbuD4f+B+rV
lo0EXw/0Td+vg+MqT/AkrYvWvz7iuP8HcFl2u9AvQ3Bc2jVayfjU25wQCNGK
4eAZHp18rc6g+YvB4z8sTvpajRYdAafZDXvXoQAt73RVyQzp82lims43tXnW
4MXLFr8ZXYzjwgVg5qJfDn8b5T8INr6zfrtZB3x88E3wzv7trmW5oAWWMUqm
8ZlNwK25aPHcGM64/37w4mmGLgd80dIEsCA+YdOZhWhFEff5kjnXlMxtg7CG
iSPQEXvB23eFuIu6o+Vx17j5C8AertbvQ23Rwt/gx/nl63OXomW7Y5WM1YoR
gnt70aoY8Jj+DpdfzKb8r8CDUotX2fMo/0/w0n/sFsX8Q/nN4uB6OBYHHG2i
euaBa3vUdh06lPJ+B485MrNo7SscjzCJ59RfPg2sxRsVlhhC9cyJ59Q7uBn8
83BQ3vr3aJnxdSVTyW+LGFtD82EyWO5y0FqrN+XdCt61U+vQ1AVUzwbwm/pl
D3c5Uz0NEzj5+C7gP4VlscumoEWbwOGiTYvXbKL858HP8rIKH8VQPfVvKJnu
Nh1vuMdRPSeA3RQVm+c/Q3t6g8NrFImq6zQfzoBFh+0cFvShej8FD/Tu+sit
EvOLmUQl8zGlZEisLtVzHTgmRc80fgDlPwU+wRxq3mFB+VMTOfn4SnDw5+V7
Py6i+bDmppKxTOqQE3mR5kMouOTjCeMPVZT/MXhFmK77K9sGzKstVTIvH0d6
7wxDq4LA4+L1zzTvRQsegO9dNBRkJ6LF1WBva8GEqA6NmFfrlpLJW66dysvD
celo8Oc3M/sf743jonvggNZeVcWmaEkF2CR323BTTXSE5m3oB+ecZU9HoOW2
4IQX+b14u9A8T3DPX9e/Tz+KDn4P7tYmC1o8AS3rckfJmKWbrtk1H62yAd89
abHkIQ8tWATedGSYqZkeWnwY3KtnXUCHWsyr6HhXyVwtiJZeKEfzheA1FSuE
mZFo0XxwH6+fyw//REsCwJVPBlh83ET5E8Hhty6EfHdGC4clKZn/ThTnx41G
e3qAz+uesz7ahfLvS+LUS3YdvC8us0v1Pap/IVj3QY7W5r5U39nJcL229k4/
aYWW+oGfng1Iec6gFbHJnM/PfwMeZGjt8nsD1b8N/Cq6TDtvP9V31z0lE9Z+
g13VCqpvDNg1UWDuwaf8cvD2L4+OyitpfvwAFyz7NfBbT8o/IEXJdPjmdnni
JKrvFXCcScOx0MlU35fgTw8jF6hSKX8r+GKcrRVTSvn731cyJy+VF446R/mn
gh0qzWpsT1A9m8D+x9J3RN6ivEYPuPNhMnjw04jTh2Ip7xaw+NSC7IQ/NB++
gaWZ0yZoZtN8MHjIeb7A+SHn/cSSh9y858BLOmfMc39M9ez7CJ7v88er9yKq
pxO4r3bx1yYLms8bwD1dd18Zc43ynwb7hx3cbTmP8qeBC+7kvi4V0nwQPVYy
GbFbfV7XY32D14IDZl4NnfmZ5kM4uF/+dw29xzQfnoCX7ynMNnhL6/EzOLCb
47u9mbTeVj+B61+6skl4n+ZzCPidwNC+1xWaz4/Abd/WjJyjQflrwFM6OV34
/J7mMz9VySzLu7q1UzOaF5TKGRfe5457VoEX+ik9h4ZS/u4yqI9COzKpmPKP
AkdZZJpbJVC/SAbfCGJaXjxE+yvAdaLIwGeHKf8/aUqmvoZfPvUp5R8B7vE8
Il5rN+VfAi7Onxo2+CA6ohw8/6CdxRtHtLzzUyVjFL72Y2Ub9TcbcGKi0+Hu
T6k/LwRPKdi6n8mk/nwILNJdq2HZQPe7Ds9gPqwZm6jHp/paPeO8nnge+Eti
xyDNJOrPB8DJXorccRHUn2+Ap4eGn1nhQfcPi+dKZmPv8OSbU+n+4Q7Wvjxb
L8iA+rM/OHbxkS02S6g/x4Njun5+Ge5I+Qufc/YHwW7pcH8yv+HmuobuH3vS
OfcL1TXwDOb5V58xdP97De5afe+153jK/wucGVjLfhhJ9w/fDM79kn8VbNxh
fH++CeXPz+DcryT/ZXD2IxGmmZzPJ4wC925Z2qptRfXNBZ91E+oPNqL8LeDj
k97JjMvpfj0li7Of8M8G73+vaV5mSPVsBB+ymMd7fYTy9stWMtVRZy41pFDe
SWDzH6sPbkmlvJvB1osqZ/fIp3qqwPyjPQOLH1E9DV5Av4ia2KNCRXkngkvC
H29tSqe8G8HPjM/6X3tOec+C2+cfK39wluqplwP7lY2BPjIZ1dMRvHV5RfDV
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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2nlcTPsbB/BU2mwl2lRGiqQykgrRnEob1WizZyyFKMnNFm1ElkiSJUuS
yhJjCYW0WFLKiLSQRvYZaohUtt/nd57uH/fe9+ucmfM5z/me5/s9Zxq2aJVP
kLycnFw7/vX//+If7o1MCUP/K3PAvwQt8MroJXafu9r+7+S+pyTMiY6bqSM6
WRfbwBNv/129ifaXCeAAzab7rTJ2e2wzfPTj98agDtZC1SwJo/5OZ8qS76zF
4+COOlHJ2d+s1QPhrJFXwnLp+3iJ8NVTGyeepuOJlE5LGBVtke9qeXa73Fh4
7w+VXYWUjzsX9jCSKVi0sRYkwCl9+Y/m0+eTL8Juu0oss+n7OZbZEiZBv377
bDJ/FryyvbnK4g/lj4edMyOs6uh4wvPwgA79oCW0XfwcFm5Jfbj7F+tw/xwJ
o7H7T65JN+uMGDjXVNN8MJ2v6Ayc3nYvfB3VQ+4ZbKUV4DC+nfL/hUdvjNCM
oO8v3pQrYXxS/Qzm0PFl2bCeovN/d+l4nCfwmTjTF26trPm/YE7XhxEpdLxY
kzPI9yt03BMJa141/LRk09VhtD28EzZ8PC340HvKa3QW1+tv/3tzxZR3Ojzi
Ts3N5NdUz0r4Ti/N/qNo/+QfMO94go5OC+Udek7CxMxTU9rZxFrmDtfF1z9y
/0B5/4Pf608wbqTzFX6D9b+2fg/9TPXUPy9hevUOKb7wlsaDK7xN4b6tDW3n
rYbt930fEdCTPx2+a2K0y5Guv5xenoSxi0pc3f6X6ukM688sSvdUovEcBtsn
Ghrye8bzIbjzfOmkhXR+xaWw/Ps1a7fWUj2ZC7jeBx+Zxb6keq6AHf3Flivo
/IUH4GKH0tVFdL7iO/CXqJGJnC+UXwLfj4ty7kXnn7HsooT557bSXYeulygF
1lcK1W+j8Sd3G+akdQ9pV6G8GkIJU5P87vXlgXT998Lr8n2cTw2g8VsIn9+o
W31Sh8bvW/jLcPtZTqasY/tfkjBiUYN/jS6NXzt4U6PznsUmdH9dh0++2pm+
ZCTr8Ncwb+Ht4IrhrDP6XJYwM2+ueGdpxlo0HrY3+ZWmO57yCuBxhV8u6dmy
Tn4F79h+tbF6NOtilSsS5nBnrdwOsswKlu+/ODRvGOWfD5+/eUzZhPLwt8Nz
5jf7rtdjLe59Ffdf14Z37ym/OhcOP5XrdUCd8s+BfTQ26CkaUP6tsFvH9dZO
C8p/Ab5U/0bynM6Ha5GP/X9cnrmQLJgJCw7HF7gOofxxcHPyTJ6GBuU/Bxe2
X+0u60/5a2GP3jnj99DxYv2uSZjlPpkj33CovtHwxW38HGcjyp8LaygavnxF
56f+FPZ1uif+Q/Xk/YFntemcyjKn+kZdlzDjNVZHK4yi+mbDKUVfTmyl8+eK
YO1HrdbWNB4E3fCY/pFPbLQpv/ENCbOqPPheJJ0f5xQcVcwpSaY8/CrYQ7Ct
vNc4yv/zxv/779gpQXT9hMMKMP7GyX/sa0n5p8HF68NbMylvxnfYNsbI6ytt
FxkWSpizRy7KnTCmvO5w6oBy+f5cyrsG7r7/vdJlCtXzK5w4NzL0Ox1fNuSm
hLmd1Bij2ZPXBe7yGyHbReORHw7P973kunYs5T0Cm+i7RpweQ/XUvSVhrFVe
6G+k+vOcYJVjKu9W0fgJD4WPjOh9M5/uh4yDsHHQva5oun6iEli2ysymQIvq
ybuN/mzup31fleoZAr+QTO5KpfuxOBXWOaQ3WNqL8hfBDv8sbIx7U/5PcGTc
8IJO2i5cWiRhPo6ojSqg+Ue8D/7ca/5eP+rf6reK/n+9pwvuq1H+9/Cl4jHp
McqUX/2OhHldYS3Lp/4ltxc2HBPoG07H4xbAe047arpTXsEbePfHT5lC6q/J
/YrRX/rFD5+jQPlt4ciF2T/7/KT+dg0OfyHc7Et5YsWw67GKpgXUb4VqJRJm
p+qaR8dpPhNbw3OuBzbVU/9TXwDLZQTb1EqpvzXBaVNEYXV11N+US3F+DRlf
A+5Sf7aCjwoPNHUWUn+eB0uKuyb8vEHzyzZ4iu979+Zimj8Uy3D/WCUWcito
/hgDVxfqJgXeo/yzYevgNaMNrlD+LfCZrxkBxXmUPw9e/i1HM+8kzR/mdyWM
1vUnJgMO0/wRAKubtP3ipFD+WLihRHpuxHHKfxYOsX5nMYH2l6uFaztSdAPS
qb6+9yRM9Ikms3UXaP7YDGcP1CmYRd8ny4GfOSzutE+l/DWwadLntr4HKP9v
WLurPy89meq78b6EuXY3yLtpP9X3NCzfS3fQ/L2U/zFc3+pd9D2J8nfBgXmB
MzZTvozhDySM/xvLKBkdj5sJf1StzlDbR/V9BA+2SsjdvJvyd8CyGiNpAFnm
US5hjm/xipuUQPV8CCcp/hAG0ueF7XC3/4/nm+j8xQYPJUzymJV/DuVSXjfY
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
17fj+bDWdOMrX6pvJpxzt8prnjvlfwRnHVjZPdWN8nfAn63ero31ovyc7xLG
0fNekpon1fcEHLB0dtIWV6rvQ7hT9tpyvDflb4dTZ2wor59G+Q1+YH29Zr9f
RQDld4Nr1II7zi+kesrgtauz8t2dKO+QDgmzxT8h/oEf5Z0KGy5Q6ub4UN5V
cIluaa4v5ZVrhQNKX0YetaN66vxEPbQfjjAxp7yO8AXPeb/Kx1DelfA3o/8G
8MZT3jT4aq+mzq+0nT+4U8IMun972hUu1dMB9irO1IqYSuNhOaxqcDj9li3l
3w9LJCueONH+6kWwS5GNqSXlybDvQn9PsB1yYQTVMxiuven7bbwJ5d/3/+3T
zqvE9OS/CR+b9WvDwImU/x08Rntq84vJVM/F3RJm9fp7c07R+XP2wDUPFAYF
G1P+G/CNLgtZyFDK3wJ3REaW8YdT/r6/JMy7oprqXhpU312wob1T4GhNqm8+
7CfVSAscSPmb4Xrf7J8qna1sftXfWJ/yvC1Wf2UtZw3feT0q6ZGYdfJluPHK
qI92bayLX8JCx5dDpW9Yy5T+YD49Gj/WqIU1Zyz8rOylcHoTa/5c+ILhgu07
P7AWN8CVqeWd61+zVlf8K2Hyyha9S6b9eZbw9m3Hf2U9Zx0+C14nitDUqGOd
EQ9bB4aarn3BmtvrH8any+5P72tYC0bDpQoDdlXXU35/ONp42rFztH9xDFxz
78VkG9ouOwMnjR/pWNfAOtZUTsqcNyv0UX7JWugDXzT6GP++kfJvgssjPa+I
nlH+HNjN4Of2/U8p/xN4zPBCr2sXqL7evaRM/YAz3vdpf7mN8BEn97SjlZQ/
C/aYrsLso/MVVMN/A1tWW9RS/s7/7y9UPmxcRfVdJ4/vGzzS3kNE9T0JX3MK
kPt7g/JXwlpZH+VdKK/wB7wsqSH9PNVHPFRByvj0in/eVUb1PQ63zBvkfbqc
6lsOx8b/6rdgH+X/Bvc9EP9xKNWD66ooZaZOmPrjtDrdb/dgl7z0UvNqqmcb
/OiSu37dd8qr11vK9B9Zrqn/l/I6w4d6abw9ReMvNgy+pp1dl6lH99sXuNpq
6MC5dD/wtJWkzOVNbfJJE2g8M7DdztjVnfS8mbECdolL6BTR+wDRAZi3dK7b
P+rvgkHKUmZR1XoDO3p/mDwFTvm4aKE9vb8uXgbf4dm/GUfv42Qp8N62atc8
en/JuQ0nJjTEFNB8KZykImXuHr9U3PP+TxwEl0TczHOm9Yh6MhwY0npo/mBa
X7yFJ3/aolVJ72PlFqtKmS2RFx50udL7tCR43s+QBSYMvU+7Ds8te2B2zpny
9VGTMslOx9/cX0DrhZ2w6bukT8Yl9H7yKrwzJ9egRfErm+8VvCihKSZGRvlU
+kgZJ490VZV3tJ4YB/dL1pWYSmm9cwlWcjnkrTqd/bzoBTzbU5i5x4q1nFJf
KXNjuf8L5UbKy4XjeWb/Fliz2wVz4P8+xQUbPqV6KfSTMnpH7wd6GrPb+Rbw
+oEW4s7flHcmXMfnBi+i7cI42F65evgKf9Y8uf5Shq91ImzIYtbhZnDzSdtj
RxjWGX6w2rGjqy7spLzR8Dy/D9aPNlLeM/Ct9lHW/iK63iMHSJk2sWvB72iq
5wxY347L0eq53lFwv85Is0UbKX82HJ9+dNINa6q36P/bp8XcmkzrPbGXupQp
vlsVVEfrF/UN8LiOmK7ZNL54p+A7f7KfFcyg618FVx3oHratL9X7J6xl55vh
R+tfQYaGlMnWnXvs1Xaazypgq4XTRF4970+/w1Mt9xXnD6K8hgOlzIjEFyaT
6feQ2GPw+5QVXpdCaL37AL5qW8m/uJTyfoUDjQcMDKL3++r6mlKmVG7Zxcgl
lNcF7l+eFvbKh9a7d2HHi9edutxovLbBI0Z1WynQ+3Cu7iAps+St9X/1/yi/
E9z+1LXyYc/vGaFwl01g9rOpVM/P8H9pH3//mEj11BosZWaKtth6LKT8PHhb
TlnA9FDKHwKfc1t6aWcK5U+FhwxZ3duygeqpqSVltOu/yXZp0XiYDJdW2Mir
eNF4WApnJ8wsSK+j/CnwnVW3UpaMZ7dzb8GDpk40Se/NuniitpQJqJzS6llL
9V0CZ/ynZL+wZzzvhe+k6A6y20H5C2BRykPvUfT7UuwbOHlNocaaJKrvIh0p
c7D7oKP6LqrvbvjXyGsq3oWU/xp8g1eTWTGXxoMYLt/1PFoyk+7/HbpSZq18
zj1Bz+/HV+BCwd2JwdHUb5vgqoGfrALp/b1MWQ/1vr5nUVg/ymsFW58wXHqO
nr+FQrh0m2dMLj0vihth89uhHrNpvKn3HoJ+WfLVdFcHzV9jYMu9WxRDqZ+H
z4Yrj3l2TKD5Wa4enllS3rCbzJXXlzKchkn77FRoPJjDb/o6cxJpvZIcANfs
0ZzZSfN3cSz8W5zpwWul+eAfrLZFdC2A1hexowwwXuJmtyR+o/nLF+50PJuk
d5bmr83wtvX7u+5E0PybC+tc3n6cG03z1whDKbNpjXJK7n6av/hwROimbebT
KH8U3KwQEr3difKfhkOMuVkJKTT/PobLts5Q4YfTfOY5VMoo3orLjVlP89l6
WDJ5RtwZ+j5+Jnzw2c/Jk8ixj+C+eSGiusWUvwPWm5EYESWg+kZycD9p7dxY
GUb1PcH5//y/v8bwIeV/CMcZzctoyKP87fCQN/E2ST6U33CYlPn+IHteQBzV
8z48cvSVrP5XKK8MDtY1k/rS9eMMMZIyHdGlnFVk/lRYP0cz65gf1bMM3vTl
xbQr06merfCFmwOWPh5KeXWGS5mfdstSUkIoryO8fn/KslsZlHclPDYm3ka6
geophVs3Nfaemkv1HGwsZab5vhaccqP1jANs+M99Z+ggyr8cft6xUdzPlPLv
h/2GxoQPdqZ6DjSRMmfzD1wP86d62sO/v7UMK+BR/mC4SOP6yt1TKf8+eJBO
6Dg9O8p/E1b7ERkhR58XTRghZSoeXzVmXKieS2BjfuTjeUaUfw/cj1fR4EXb
BTfgtM3yfXXnUP4W+LJSye/5dH05C0dKmXsLDcyuHqP67oKr11w8qRhK+fPh
FoWlIUG0XhM2w9tizL/c+Uz1TDSVMquX+w8d3/N7ymW42qDOoI7eX4tewrlL
H4aoNNPzhfIoKeOt9lbtMu3PHQtHlnNuvabfm4ovwvV7VL8l9/ye1QB7RHWr
Pen5PUjRDPPB7OQb++jvVfiW8FQnycMu6iexs2BlJa3bYZrUz+rgjwl1G5qp
//N6jUZ/tE3eqUf9Pnw0vEIcNPjnHOpn/rDtgErzsFU0n8TABpM/yfptof72
F35fVGaldo3mC1Nz3A/eF6LmH6H5zgdWPp4a2BlE/W0THO53R2FVOPW3HHiU
w8Gc9ls0X5hYYL3Mte7YLs/2c7E3vNzVoEzwifJvhD24S6MD1Gh9kQU7f/+W
2z2c1hfVcHJqToSDD60fPC2x/gkrC3tJ8wt3HZw2dsh//ABa75yEX+Yvfn5s
IevkSvjK4AefK47TfPIDHm1h5JmVT+uf/8bgfG9Pr6m8xzr2OKzR9HpYQg6t
f8phrVKeZ4b2Nzb/N1hpzqq1Pqas1Q24UuZowp+GL26sM9Lh84+CNk19z1p0
D1bKVTB4mMdaTgZHeIWPVc5izdUbi3opfPgTtZnyO8OJplv9TB5TfUvh6CUt
bu6GVN8v8N4u2wC50zTfaVthPd91fGbrBhofDCzTmfNay5fqvwKO98xM8Kb1
U/igcejHHUfnjo2l8TAF/tOelFn/iMbDMjhcx3rjqa00P++Huydpr3t0mcaD
hrWU+bci/sbwVzQeJsG9g2Pm97lNeYNgr6F+e1Tp7wc4ybD2zZTMFdMobyG8
7UzG+08naf1gNx7rzXNvDobNovGwGD6dmho1mdZLvCRYs8+FM+EXKf912DHN
zWM6jceM13De+bHaJnG0/hHYoH+eTzv07jqN553woRiLf3P3U/6rsKvN7dHn
91L+V/CkYP6w7Qcov4qtlPmwVcfz72qq53Y4v7B1mDatv4SX4DHtt9wjaf4W
v4BdUzPjptF6UF3JDuuvwsaGnt/TeFzYoGBJbu0W6hcX4DsDHs/Pp78fkWuA
hSM6PnvS30NwFSZImT3h/818TPezwAI+9lAwu4j+fiV5JjxzYad/Kv29C+c5
rJPkqzif8vHlJkoZVWGHw+7FlN8MPvk758WqfZTfD1beda5Tnuoljobti07L
YnOpvn9gh1Z1q3paX2WMnITnFaeJs8K7aHzMgF2MNfof96f8m+CfPgf4E+h4
3Gz4ifrodFMnqq+xvZRZfEZu3FPKJ/OCFUN+/dL8SP1uA8wZnTUxjdbn/FPw
BCddo266/rFVcOmkgulH0qm+0ydjvVZ9Wv06jQfeWvjd+Pnj1mZS/gx4r98Y
/kox5a+AXyktzJlmSevP7/Ah1dT6vGV0v62ZgvnM9fKcxUOpXxyDVSXf7owI
pX7xAK4Z+Kko0o+17Cv8+qTI2XEta46+g5RZ2DI0eupW6hdH4FJFQ49rIdTv
7sKdP9I4zCjWeCpH/ic6Zn+NqL858dAfhn29nL6I+lspfLy6+3bQOupvn+G4
31Ok2pGUV4vB88C8lWrNjZSXBz9ZvTosei/lDYFvOZpFT31M/e0TnNw0oWNy
PNtvYjUdsX4fnaB0dh9r4WQ43nXxwYdnqL8thTe+358m/476Wwr86bKmdOSU
drae6k5S5hqvj/QPh7VoIqxn364se0b9LQjefHDIp2A3djt3L7ypwtlg+UHW
ggK41nGtkloxa5mtMyz/XeZ2nTVnERwW/+Z35y7W/N1w/JgVU45SP429Bqfn
Cb++bmLNWzAV64EvEz7c9WT3D98B3xniEn2rgfrxFXibnWL9Cz7lbYIddQ9f
KzRnnbzNBev9jPDHltasi4XwhObmJRFHKF8jrLF50OZBvt/ZfL1dpcxn14EW
vmdY88fAZlcGLa6qZS3Og/WqtC+rnPrB1q8eHuR0M0HrIWuevJuUKTEwb5rd
wTrcHO663Olsc5l1RgC8fP1L9fgtHWy9/sFJgQ0e8fo/2byj3DHfXAkz772H
dbEvfGOzg1r5G3Z/2Wb40r+gwPoF7PfF/oaHrZXr9/sCu104wkPK3A+YHn/o
FrtdzIfneRi/clxMeaPgrPG9EldsZs+HdxoOHntQa+xu1qLh06SMnO4QBcUU
dn85L/hG2VPn4iD2+7nr4SkuKtzMJ+z+gkw4NWqxT54Nu3/yI5gvqVhyOpU1
Z9p0zG/7OM6duuzn+ZGwzOfQ+req7PnFnoBLvFfviNnPWvgQzgjUbV63iLW4
Ha7lfejsjmA/n3HUE883y/MP5pNF9+FbmKuUllDer7DSOId/G7az5g7xkjIm
OWa2k56yLj4MSxWcls8byFpWBk8e9E5FvpHytsKWD6VjAjJZ83W8pUxTwq9J
8nZUb0f4QWWuYIE91bMEtjILe3qphuophV1ub3OI2s46fDBfyqzcsE9tDp91
hgMca+Dx+MB0qvdy2Ca/7O+afLp/PsKzbA+1Cf+y4zt54AwpYxc/9lTgSRq/
9rC0arBd51t2uywYnp2bmC+Qp/trH7xRe9ilmiq6/wf4SJm2vaYrX9ix28UT
4BytX20psazVl8Djb1ZamdP+vD1wYsvEmFxX1uE3YIsnJ+e4zqH739ZXyly8
pfhFZymtbxbCSkfUSl77shbsgt+p/jvRTf0iOR/+VtX2J/ELa36gn5QRT7p6
/4M6e/zYRLjPy9//jgSxFl6Gv5ZZ1vYWUN6XcFWY+7Vn5yivsj/WMw6NQcqK
VM8EWHjshvoBP6rnRXhH74LhS1ewlmuE/1ZM6LUvj/qVYoCUWVBn3V9kTePX
Ej4YnPSnagT1g/PwwLAOUytdqmcdvDBivtKBLd8c/gdeJwYr
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 2.6942419411616796`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 2.6942419411616796`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"USO\"", "\"DNO\"", "\"USO & DNO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.668865224885637*^9}, 
   3.668962690770999*^9, 3.6689627769605513`*^9, 3.6689630067008095`*^9, 
   3.6689640495350714`*^9, 3.668964189633591*^9, 3.6694534977969923`*^9, 
   3.6694554628157425`*^9, 3.6694555203362412`*^9, 3.6694761309561095`*^9, 
   3.669476168858115*^9, 3.6694778092976646`*^9, 3.669539973380022*^9, 
   3.669540089625973*^9, 3.66954016095354*^9, 3.669543720398734*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668962669523451*^9, 3.6689626724103975`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
V+CUxa8PLwzsNPkfOKPc/g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
my7RbPZ/+AbXzQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.8303136261400645`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.8303136261400645`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DIG\"", "\"DUG\"", "\"DIG & DUG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6689627135021515`*^9, 3.6689627910361853`*^9, 
  3.668963013985845*^9, 3.6689640600053825`*^9, 3.668964194244814*^9, 
  3.6694535023365602`*^9, 3.669455467793748*^9, 3.6694555231436195`*^9, 
  3.66947613526735*^9, 3.6694778111167536`*^9, 3.669539975613167*^9, 
  3.6695400910699625`*^9, 3.6695401625876245`*^9, 3.6695437219604473`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DGLD\>\"", ",", "\"\<UGLD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6688645395246763`*^9, 3.6688645435645914`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Wk8lWsXBnDJWAhJA0kJTYZSSMIjQ0q1DaFZmiRTKoSK0iQiSaKkVEqq
TTJPoYyVJpVMlaK9IzRQlPc6z+rLez6cc/6/PV177XWv+34ek128bLcICggI
fMO//vsv/tHOucxj6H+7jfEv5/ewU+GymcbdX/9zlEQyj9knFSl+voV1iS5s
5tmk0jzIutsZnnf83BULUfb1wS3wmLBQyebxrLniV3hMpOVwWc0RrFt14N7X
t7OjFVhLr4fnJwsudrNibXIMHtBRrXKYz7pO5CqPOZfcHhWxgrXAbHj2AVej
V6tZa6+BtYX9axfoUP7D8O4xw8ZcXsA66s5/dj2TtsWUtbLmNR4TIFJ9x4Rh
zXGCa16/3JRBeYIPwia/Lmo4mlD+NPj4eV5FgDLlr4flDllLd9H3916ZwmN6
cr/N29HMOukAXCQb5tNdzrruBlw4aCtqGcJa4AWcabP/pZY3a+2/8NKVC6M/
2lJ9g67zGM8V5wy/76L6XoNForKmrHJirfwUbtRRXfFrC2vOAGzWX9gqsIl1
sOoNHmMh5FUVa8Pa5DE8LORrn/RiytsPd0nVHI5fTXmnpPIY/yyPajF/ymsN
H1MZul6vx9q5Bk484cl7uI764QcsyPxJeGVCeSfd5DFVqs/NzSwprxX8ov3k
7AmrKO9ueK0O//hWBdbcXjj0y+XpvmNYtyqm8RgD+eVJpyVYS1vCTwwNE2Xk
KP9OOMVmfouFLOVPgGcdVvyeJEP1nHAL+Z5scBISpHqawQ1Nzrc+DHax+T1h
iaCtwQN81lFxcF2Au9uZ16xLSv9z+bOu4hTWHOY2j3msUW8Ze5918A5YrSLl
vNoj1twzcOPBzHXKkZS/GA56KvV0gyz1Mw92sxotvYV+zyTXOzwmIrE+xZNe
XxcNf0oOfKIoQPkL4SzhyQqWjZRXhstjdslHud8wo3pGwm1f3V4JtLKPK+fB
Mq2mg4rnKW8bPH5rS2BuMuWVSucx+uueP/0tR3n14dkO8hvuiLA2yYZ9i1pL
q0ez9n4HGyxjvrX+7WTzjszgMcoK6kLrxlPeeXDWTPdVV+j1As6wr92qKZE8
9vlRzXCP0tl+XgzrErG7+H738mUUjrPungNX6eb1TT/LWnkdvIS74LHVEdac
o/A8l9FOZeRW4UweM0d1lFzzYdbS2vBtw8j3Jw6xNlkNW9lyBsVSWHuHwpnv
Nu80PkX5b8NivHGVRedYa2vc4zElMy7YzE1k7ewIO5T5leoXU/4Q+BrHvGfN
fcp/E/6SuvjTlr2U/yUc8zLVZdd+1sH2WZgfk7ttR69mzd0Pr2sstjq1nvJf
h0dJ5HpuIEs/h98vVC+8sJjy/4FlN7l2HbNmXReYzWNeGyw6s3sRa4Fr8G7f
697qFpS/Dg7I37axgB53/g3H1faW3CdHTc3hMec5CVFr7am+yfBD0Slqzauo
vo9gpeudlhY7KX8f7ButtFPTh/JPzuUxLTumHV78L/9S+L7X/QdJRlTP73Dk
D7/B/U6UVykP88H77NiNupTXCrba82WWgwzl3QUvjw4JGaFM9eyB34rLa01Q
p3oq5POY+jijDxLClNcCztReeiJx6Aub1xue13dF/A+PdXA8HDU9ky9Hlh5f
gPzFnn3Wf1ibLIJ/Zs1J8uhl7e0B96geLP4eyzrpLLwmdeBUYwzruvuwrLPm
0WU+rJ1NCnnMXrlblUcPso5yg1P0Lvw4t5N1SQwcfeLl3U431t1FcKaB4Pnn
nqyVP8NeY18Xj9/EmrutCPNih8YjRQfWradgTmZcV8U+yl8Al0fuXnaIofyf
4OiguDGKOpRfupjHLH4UftvLiLVAJJwQnVhloshaOxeW2tjxxWUO5f8Auz8Y
OeLyXMovWcJjjEu85AbsKb8efN17fdI2V6pvFjw9MOjnUReqbyss8dxD+K4Z
5R9xn8c8PWMdE2hD+efC8apr/4xs4bP5N8C1UUnN9j9YJzXBbQVyzWZ81nWi
pTxGZc2SUw21rAXmwF+m1ARwH7PWXgu/GWEydKeGtfMR2H784qeG9PxuoTIe
88BPPMKyirWyFnzdgjl+pZI1ZxVsJrksTeQB6+BDsHT4HTezLNbcW3C551rj
1xWsTWaVox5iVjpjq1l7O8BitY6zhpGTguHW/kJzn1LKnwrXVqe/K6yj/C9h
f5UtSXHvWEfZPeAxxV5h6updrEv2wU4PTl5dKkX9kQJLadaXywpSfzyDjV45
Gzo9p/yDcO0tr+rWRtatAQ95TKxQ9JjybqrvVdjgydURfb8o/xM4Pn95RcIy
6o9fcIJN+eGFttTfKhU8ZjDGWsFwOfXHZTg91MdsSJ/6oxZ+KO68XZJ+z6if
cAp3/DjJHZR3SSWP4fkFCcloUD9Uwfa9SrpqV6kfvsHu23+OU4qjfphYhf1c
5HN46nTq58XwpsjE2Nm0Hkx84MkedooznWm9dcMFB/ccVFWjflao5jF6Nzok
LtDvqW0O54o5aph9pX7wgm2b9FTGWVDec7BR+k9N9zFUz3E1WP8rZyqEjaB+
NoVVdqmkdU+h/O6wslanXcIKyh8Luy2ckPPrOeUvgVu33xuYdZzqaVzLYypt
Yp9zk6ie2+FepRUbvYIobxHsEtl8bKYd1bcDzpQy96g2oPW19RH6w9/trMw5
qmcUfNxYepEY1YPzEX7RZsP9S79v8KjHON/a89qFi+j3Pgl7Np2W+0U2yYFH
yb4zVaT14v0eHnfF+rr/d+pXiSc4r9jNzejspH7VhR+fdX35JoHqdw8Om9ck
ouhH/doCVycVFefQ4yXidTwm7WC/m34KrTcdWK4ppPlJDK239XCdnFaFpDv1
p8hTnEcM2vd8j6a8s+He4qy7Zdcp7xp4hGnRqplWlPcwPFntrNkvbVo/Qs94
zG/DJvmu1fR7a8IahxMer7anvE7wdZ+dJ17MobwH4Yxb2ioKvpQ3DU6+fXLP
Am9aPzOf85iVcuvOTTaneq6Ej1S6lZvp0fo/AL+TjfadsYDy34ADao2bGmdQ
/hfw8rjSFMOJVE/bF5h/fytM5gtSPYPgV67HzJe/4rH5U2CHawWeA82stZ/C
t/6MVe58ztp5AD672vKd4B3Wylde8pgb143ffbrJmvMYvhZs7HzkLuvgfrg3
yjHW7xZr7pR6HpPnyM+dn8ba5BLcONMo+U06a+8aWHqP7KUIen7SD1jKxeac
4yXWdZNeYV7kreANJVLeJXCohq5XQBTrqEq47MbVOcNiWZf0wrMaOXoBx1h3
K77mMdOGGuuX0+uVLWF5yX3hb09S/p3wQ3XpOtNg1q1f4a3F8a/0j7OWnvAG
1zt5v8efOE35zeBnXLVKt3DK7wl/DB1hp0+fnxQHDyhPsx4ZR/Uc28BjrFuD
wz8coXoycJd30g2fEMq/A75dmvJFw53yn4Ffu8zfHLWD8hfD6637Nm3eSvU1
eov+P3ne/jQ9znWFtRyb7kr6UP5oeO7Ag6BbQZS/EBa5EMw396f87XBigMDt
rINU3y2NqP+buM8R9P0FomAzRz3/+gTKnwd3ixxM7fuXvw3OlD+/68hOyi/V
xGOah7JMq7ZRfSNg/UzxaiP6Ppxs+PzrfPGVGyj/OzinrK5j3TrKP7IZ58Gw
irm1yyj/PNhrRssoLQ7VNxNeZ/H6ZstKqm8zrP1y2PE2S8ov1oLzx6xJgTmO
lF8H/uuUqD5gS/V8CwfojylJcqJ6CrfivDbAJFWtprza8L6Ob7nVayjvatij
U07YnPIEh8LVc8XOlNDnSQ9/x2OELivL8MgmGrB9e0KJ8WLK6wg3DAmdU6HP
TwqBDef23/64hfLe/O/1DdMte42pnjPeYz9fdyzgkB7V0x4+efmOf+Zsyr8f
NjErjFvEUP7rcKP1aen7Syj/c/juhi2FzpSXa/MB/VH+QqJhIdUzEC55Zjqn
Q5/yX4MFdddcnqVG+etg3Xuffh4zo/y/4fbm2SEbdamee9t4jKJYVYMf5dFO
hhvWTIv6M4fyP4JVNTd6ZGlT/j44VvnMW1ENyj/5I/K/c5fPpvcLroa3hmb5
1lJ9uN/h7kgRdz+qT6vSJ3xeh4RrCK0PaSvYpSxBa/wBqmcF7O0utkvqLNWz
B54itnWLC603AcV2zCMZ/eNJMZTXArYZd3eFsi/l9YYbXSwMrlL/dnfB9uW/
QubvpXqO78D1bv+DsGYH6odFcKzV5Qw+9U+wB+ywId13DdWTexbe7CqUGjqN
6in/GftlverslPlUTxP44PpOszeGlN8N3iTyctqpqZQ/Bm7uyJJLbPnM5i+G
BTeFLzpXyTpqIQ/ni2Q/dfMXrEu2wXXnDdILn7PuPgWHGDxNEK1nrVwAi0hy
n4Q2suZ8grus72t9amDdupmP/WFXXo0tvZ90JNy2zlzyfB1rk1zYJu+g0QKy
9wd4g8abotxq1trhX3iMhdMZu2k1rJ2z4NrwLZqxjyhvK7zA9a3LWspfMqIT
1zcOF6UGCynvXJhXWCCXSq8PvgtL+P5ODHjAmtsEF2zj8xqrKK9oF/pz7N7G
7grKOwf+aDDlQheX8q6F1+4ZPedKDuu6Blj+QURjBL2fgPBXnJemjWpoy6X8
WvDg+DeaY7Io/yo47nSfx8hiyn8IDv76N2PbXaqnYDfqfeit1+g7VM9ZcLmu
TabdLcrvAD8SCmxLp+/HDYZVixNnapZR/lT4hXV6QlEm1XN6D49x3rHGaHst
6yQ7eLrKEivVf/n3wdy17t8aL1L+6/CyaXubJoRT/mewVXbdlZupVF9OL67f
fZItsuj53QFw7PSCofTTlP8qvH7hl787oyj/E7gzRc/u2gXK/wvWv61YtySe
6uv/Devp0v1qDj1uchmWHaG8fsd5yl8L9/IUFmyneiT9hOdHrIyXz6b8yt95
zPbOB8Wjyc4X4WI/Aee/9P2jqmD9U+NOe9+m/N9gsQlZ/S43KP/EH+j/lHLN
ufR5yoth3zPzrsy8RPXshk3unp/aXkJ5FX7iet04xOoF/Z4m5nCDWr+o3mPK
6wWnjVM9PLqA6tkFG/7KPy/cTPUc18djJF2DBJ7R+nE2hbv+2lZafaS87rBS
coL4qEHKGws7u/qtXjWT5sOYfh6Tqi75o3AszQdjWG7m1hc/pWg+bIenaYTs
y9ah+XYaNplr8T2R5qF0EdxkUVJosYnmg+EvHhNxNq82mvbTuq1wxo0zu6Jp
3gqcgpt/b+RW0/6pnQ9/m5B1P/zffvIRzvFQPCi6nubbpt88Zs6uky/P2tN8
OwnvN4n4+pn2e04OfElz+cux9PnB72GR+Hurbm6m/BIDmKdqy/3nVtJ8OwGf
qAr1WOhH8+0e7DXBsDDWlfK3wNX243/u+TffxAexn9W3lJsqU/658MTpR0dZ
zqL9IgNeP09qyQ9B2i8aYUsmOVhSmPKL/MH5b/fmd6ueUT/MhjsC3jWavqF+
XgMf4kSPu9lB/fEGfrkzfDeX1p+00F8eU390XYd6KfWHJmwo4npn1EvqDyf4
5CvJ3787qZ8PwuvrV0bu7af+GDaE/XRyt9suyuc8E/Z11h07fID6YyV8/MCK
4k46D5QcgNUf7pkWsovy34C/DPJl8gToPD9NgM+UDPW/GFCn87wtXPslXLRI
jc7zQbCVzNaJNQ/pPJ8CJ3JOvlcopOuRp3CFZv0xqSKq74phfObA6ROp4/fS
9UgA7Fsu+0FTlK5HrsCVDRqhc+j6wPkx7KTYV2gwha5H+uGZE8O+K9H5TNlP
kM/YZx5sivGk/rgEf4+0T9f+t3/XwD2TbrxKpPMj9wcs7XftbAvtb62ThvMZ
H/+QqzcnUn8kwhyB+zn7lKg/KuEMD3G9GbRf1vXCr438j6vMpX62FOIzsl96
8l/T9UjJAziecRTbl0bz4StsWyNtXfaV+mGCMJ/5+zDhpC7tBxwzuKli8KxE
Hs03T/jKYV5/6TBab52w2bAP0kto3pqMFeEzq6r1Nh9bRP3AwPNGvgpPM6J+
2AFbVBwI9ptJ8+0MzFm590f7CpoXcqKod5igkugT6gcjeIfTkgvx+TQvXOHw
3JHv4roofzSsfWJB3C76fOVCOHiHr0sC7U/cBWJ8JvbU5wGeNdVzC3z9zH4J
CzrPSUfBRZI24zPo/OHdBh8bdrRMPYXm2yZxPmOXe0bAj9aDdgRs8HpzxsA5
ypsNDxk9YYJofy8ZOYLPKERyjcfQ/s4Jg/tdPco0NlH9MmHePrt+YW3K1wx/
H+Y0unkBrTexkch7Zt1g0EpabzrwF/c97eKKVL90+PXlTbttvnaw9XsLd88y
G2zoYS0gIsFnPNdJCPu3s9bWhi/Y6v5qOsbaeTU865j2MjUX1srDJflM64zx
onlWrDkacJJ1H/ezJetgR1hz01HBx3NYc0P+e3yFp99GhrWJgBT6T71Kb7cT
a+8ZcFNB1dm42ayT7GHhKzkrEywo7344yT9wubkH5b0Ba+srBnrNYh2lPgr9
ajSpxXYm6xIb2I/XnqO7hHV3ILxyd3qtO32+8jW4ijvI/2BI+evgtUuumKsc
Z926XJrPvFvUFmbpxVp6L/z0q8Zu+YOUPxkWi/hxRuk+5X8Ex6288GYKl/L3
wd4Nm3pGR1P9kmT4zIg7Z76ubKa81bBT7BV52WeU9zu8MaQgra6F8irJ8hm3
5delbvVRPS/ASdPcYp58o3pWwDGZfY4yfylvD9zrzgnq+kx5FUfzmWt9T9ZZ
vKK8FrBclPhcXiXVsxxefrl+6v73VM+vcOaFBw1lP+j3Hy/HZ5a62tj6/KL8
i+CQlzJ1RQK0vjzgUksTi0tXaP18gX1dbuV30PmAIz+Gz3Q6rlZVoPNYsAmc
46Iu0tRL/esGZwpnpWTTemyNgXX1f1s7/dsPRstjXmZMmJpJ6ydpISz+IClz
rQLNq21wm9y12GNbaL1Fw3Z6e2W+7qH1VgDnHJGulZ5I68tgLJ857GDdbtlP
9d0MDyWnOrr2Uj9Ewl0D+kbtVA9OLiw9ZXvB6nyq/wc4Jr9UZmkV1ddlHObz
s/sCe0fR/AqHk2XuHVZUoPxZcF7jXI/uS9QPrTA3U9nodjrV8/h4zJvU3qy8
rdQPd2HBCB27O8HUD03wVpvb8SrXKK/oBOwPGy4KHcmjvHPg6w93tS0LoH7g
/ufKgj2S9PzWBthPPCO6qIbyCivwGfM/ol4VkdQPWvDdfZY+FWnUv6vg238+
Hz0WQf3wGhZ5tqq+lD5PW1CRz4T2RgpYxFP+WXCsoOz3sDeU3wHeneCicuEu
5Q+GY5zk7GYLUj8Mwc/u1dYs2kX1nD6Rz+R/l17kRuubawcLjDQSSttC+ffB
2nLKqwozKP912Kz/gb7lS6qnmhKfeZQa/9wtifqZAzubzDJ7H0L5A2GPkiLP
xyco/1XYvrMsZjCb8j+BP0zxaK1PoPoum8RnXGLaLeZcofr6wyVXvyTs9KN+
uAzvLah3LBWn/LXwkvSABPmedjb/T/isoqNrTCtrkz3K2B+brTvV3rH2vgj/
majulzqJ8lfB70Vrlk4cRfm/weevSvgoqFJ+pcmov1mx+GclqudD2PfBwI6H
2ylvNzwu49bhCjfKqzAF87yBc615B+U1h7V7Audk/6tnGfxbPi8thl4v3QVH
feOL5nGoH8apYD37HC7x3U39YAonrtOxG7pDed3hiIi2A7YlVE8+/OaH1RGn
LKrnmKlYL8UaA/sTqR+M4f0divoRND9LtsONJpHuuoco/2k4zNKnei3tL8Gy
qljPTW/CYzZSPxjC9hdrOm1PUf6tqv/t/3kVBTT/pU/BpodGjsqSpPz5cL2A
+KiKcVTP+Wp8ZnCZHzdvE9VzMyylaK346CjlPwnHVA4pFf7r5xz45c7pycUX
Kf97eFnb+b+q1D/KG9X5zJRhyrNH+VN9T8BtL3fGjUim/Pfg9yE3NibkUv4W
WGFTytt+Wn/ex6Yhb/djiWjqt6QM+LpuV3zCJ8rbCNunuieu/jePRafzmU89
KltsH1He2bCf6hUbgbdUzzvw6FPVS0fQft79Bv795G32l0HKKzSDzzw8dd8m
VY3Wnyb86fMbj146TwU7wfd2RvgE/rvefAWbfrkhVEn3e0yGzeQzY99u7D5D
9x+9Z8JC/nOmfK6j8+NKeGXG4ZAOCbqffQAWTNxj2h5J5/O/sNHMv6VpdP86
atosPrPlp0HmNjovl9jCrTL7A73ofnV3EBy7Xq3WZST9fSAFtp7ct7iens9V
1eAzm9PVtSpl6Xy+Ar4+tXz8Q2k6nwfAj5zWjVWfTufzK3BDy0ih/G+U/zHc
dnLzRd03dP2zTJPPFH7IlHzx7/rND+69sE07ms7XzpdgXYn3PS10no2qgU+o
LP2t2Uf7yQ+4fmG9w72fVN/dWjhvXbILv9VG9U2E998Oc1Cl61tuJVzr5Kk0
3YH2u15Y3j2tcHs99fNEbZyHDv3K/nWW+iMBVi+NcNUupv54AD9pPrepXJb2
u27YeH9ejPdh2u8mzOYzKUO94YFkZzP4cdCxlt/0e3eXws3PtofdV6f9uhM2
OR5ou1iS8o+dw2cuv7umJmJA+Rl4lfGoEzW0n3J3wBdGzNi5K4L2NzkdzEv7
dnH9U7Q/G8Fl5dljt/2h87kr/PR5/6sDrZT39P8/HiUzF/My9tXWxXS9V7IA
9k7tC9AZTf2wBZ7Udv9jOt1vUY6CO0r6P/VpUt482Ny3wFKHzq+t+vP4zECF
UFH1OOrnTfDvsg2l8Ta0P0fAFntOygaqUP5seDB4nmTHXqr3O1hjDs+z8DKt
N2ddPuPwvHpf2nCqZxj8zXVs2SV6fVQmnLq4aGTxEcrfDKsszY17dYjqLaaH
89y7wvq9ZTQfjsKcq7kabxppPqTDY2te7VGh+dL6Fv5wJft9KJ0/pUX0sZ7C
WreL0v5rog3bl2UlHJlP/XAbntrQP/wGzTuBN7Al87alYTjlHz6fzxzs2FO1
5Ti7/zhrwJejBRyN4lhHOcI8PeWDA0WslevhZ2kyD3K7WHMEDPiMfrvqrjt5
rINnwHJTlZOS6XGuPbx7v9ROzjfWrfthCS3H0ISftN/9gbOSVvEdhlF91Reg
n/PvXp/GYx+vs4GL3B4fyaf9UCAIXvurVaJlOeW/Bjvv4rhpBtK8m2qI89yN
r/PX0nmlezncOO3PhyczqD/2wmv7h9V1eVF/JMOTF/dU9cRQPz+Cx6Q1PVoz
ia7frBdivzTNcHYTo3nnC/9yDGupV6F5kQRfe60yoPfvfnE1PHLvxK9ryHXf
4eQPow+Y0fxw3mWE+dG2ZcRmG5p3F+CdvWVh31po3lXAj9aaCtu8pP7ugQUU
ZbqWrqDrfUVj9NewzeIn6f43Nx4el3Og+Ew7XX+Ww91qsyNLzlP+r/AqictS
W2sp7yIT9F9qj0Uu/T1SoBR+OyZa63E/zbcv8Ambz0Or6fnO8gz6e0D6fmUI
3X8wgTNy+JLKkvT3UDd4cahwHuc31fMzvPXIkoXqh+j+w2hTnG/+nJtUTPdX
uAthi2dSM4TDKO82uE4+82h8NOWNhm9dnFw3dSPVU3oR9t+Ty7QPP6N6GsCe
5itUpoyi/FvgR63PuUXelD8Sbhzcru7jQPdPctnXa+msuUz11DPjM5LRP1Xu
0v0+ZRfY+axNehv9PYYTDhcNXasd40H5s+DwtQty4jXp999gzmcMF779Ubqb
6nkcblXKP/YulPLehcWGmsNTH1PeJniHgYSL0b/97YgFrj/NvLJH0P3FEi58
dV+xzv7hlK8BDsoQMM7eTP0qbMlndGpKbR7S9RlHC44fPNXcLkH7wy24bc2G
I6Y0v6Rfw49Ce/NDA2meCS7GeSR/56pJjjTPZsFyedljlGj/SXKAjX4zC/z9
aH4NwasWp5yXDKb5Nd0K72dZsbZ2iNaXHWw6Vma3hwjNr32wQ6/O8K2UJ3gQ
9ns/cXFJOc0vtSW4PvS81RZiTfOLA/OOF0u8nEHzKxA+1HmuYQzNN5OrcHv9
2nFy22h+qSzF72l16vUaaVr/y+HJJ2QnMHS+1vaH/Z3m3ZyXTfPrMix3WDij
x47mVy1so19yPLXzE1vPpdZ8JneGgpp9IGvOHphXpMc3DGAdfBFe4GGaEeTB
mlsFZ7kPt6s/95HN/w2e5XFwEf8q66Tzy/iMa+hqh93y7PPrHsKP68I+tHex
jwv0wFMvHUqZcoq1tsJy/H771a62p7EuOQevORx/062VdXcZvKR44aOb9P7K
XfDvL0s5zSdZc8at4DP9yT4eBsdYB5vC45+Y+w6eZi19Hw6aPOHn+x2sTfiw
6Yc026oA1t5jOHj+35/hBVspvzH8ZGR87xND1nXbYaGOGO+O+aydO+Cwoxpr
dLVZR8na8JmvPvNnfNej/IZw1I1ijuRiyr/V5r/z9i4fdS3KfwouujG/U8Kc
NXeULc4Ty/Ri1H2pnvPhznsHvWqdKf9m2OXiJZcP6pT/JCyV8yZBVoHy58Bc
r1/mhyZSffXscN47X6N1QYfquxHW376gRHo65T8BP/b83Je+kfLfg9e+9TBr
9KJ6rrfH9WVpqZUefX7wMVhQ61B6N72emwEfOWlVt9uK8jbCq6sj/vrqUl7R
lTgvzWyeuMGa6nkYLm27ahnkQfW8A9+eODJhgQHlbYBFOK9em9P7aQs5oD+X
GPnHKVJeTVjRO6h3jzLVMw2eNrHzwvbfbWw9X8GnHGU+TutpM/4f4N4JIw==

         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.373288631648823}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.373288631648823}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DGLD\"", "\"UGLD\"", "\"DGLD & UGLD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.668864553971403*^9, 3.6688651553291597`*^9, {3.6688652180749407`*^9, 
   3.66886522633328*^9}, 3.66896271770475*^9, 3.6689627977432756`*^9, 
   3.6689630206242476`*^9, 3.668964066761972*^9, 3.668964198096452*^9, 
   3.669453504258154*^9, 3.6694554697248178`*^9, 3.669455524290285*^9, 
   3.669476137194148*^9, 3.6694778126068*^9, 3.6695399776422653`*^9, 
   3.6695400926070423`*^9, 3.669540164118667*^9, 3.669543723363695*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euo", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6680300623170033`*^9, 3.668030065558288*^9}, {
   3.668111631132517*^9, 3.668111631960491*^9}, 3.668112371394373*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
kH5WXgHH6h6sbX6N+8f6CfR/7W+Lh9/w+eALrvx+M3teLT7PIp+Q81mdQM1/
Si33egr9IuzVf/E0rGc4Ne8StfAx2KfDcoPdszB/C7XgQinpd/EjamkTtcLi
Gelv0Vmws/ujEk0E1rMAHFj90iNnH+b9Qq0y/4+YNxW8q8fIhql3sZ654N9X
mw3KdmA9P/1H+lPX+zm5LnAF881vrsssx/yh4A0Co1/6ZVjPemq+aRnM28kl
8lEVmN8ZXJFlmO/SgPlX0Ovy4+AMH8vPGZ+xnj3KiSUc+PgAux92TZh/Gfhk
eveN6mrMf6ScfF5dJrjQ28N/3j9Y3/EvyPNFsQTs3NFF/u465j9Ezb9LLXr/
gtRHteglMU9GLUwHu6xvWT9ehvnfgn1Hn0x4sQzzd3yl4Wyf9tTFB2J994NP
tv8x+thyrG8q2GLNKMu2cZi/CmxnsTHv80PM376CWD0SPDztfkNsDdb3JnjR
5gHrViRjfSuoVUaVxDw7auULal1rNezvRJMV3xIxr5BaPEtN6iXdTs3XryL1
F9mAL5s2T5TGY94Z4PV+RzOTqjDvFnDt9riW14WYNxHM/2B5q1sJ1nPwa5g3
BjVNW/oG6+kDrqizW3lC7xPLH/Hn+p4btwJ/Yv741+T1BE/+3O/Uc5g4Cuvp
+UbD9Z3SVnrrMNYzDHx3ZfinvFWY/yK1SPWGzmfN1LyNb8n6Cs9TS4rAJy+L
Sk54Y/5v1Mq+74il+e/IfKf4/I7Mc+o+1fB8+H1f+sYM806hludUk/tVDdVk
fuT1fk/uF056T857SQhYZ6de988YrGcdtaBnDbF4IrV0Ofh3nqd+tT7mP0Yt
6v6BzNshImp5ELUqhpqX+YHMz7JxGmLlYg35PLqD1IIManE1tXqhls670Vo6
36RRh7zRkvlKuO8jsSSFWqamVrarJdaNoJbeqKXz7ataOp+3qSPzLN+2jsyf
otl1ZN5UlVPzWteT56twWD2ZfyUz68m8KdtWT+ZRgZ6OfF8WD9GR32OkfuCo
Hr5D7ijw+SwFX945Ss85Ceffy/T+kEEN0E/bH47yVuJ8602t2kzNi6cWllAr
xZ/I70W6TZ/I7wOCOHCiOF508gLmLwYv7r13atVuzP8dfCWs9F3tLazvhkZi
0Tlw5doc66AdmL+QWv6VWiX4TCw5A04aGbr5Z0+sbx44qk3kjjVmmL+RWmf2
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
nBcWs+hbIj7/+juS80A3DVxuGFeqicDzYqMjmWfE58GX5hyfbjkKz7sicN61
CQs6x+M85D6OzIuideCO/T/sKY7G+VMOPpp/JWHSYZw/88Frbu7Nm1eL8+fn
cWS+kqweD8/vc84zrJbjPHQKnG/jm9NLxKzMGU/mX10DOL7HiPcjTuI819sJ
Xm/XwfgLjjjPnQQfm5TZ0dMa57kHTuT1+PXgnd/tHy/oj3kniuD6sorvAmNm
3n2wubWxpKj5DavnR3D84UnuTraYtztH5m2ZiCPnqTKII/Or+ANH5ltp1wmw
Hr2zbz3uj+fbuAn0fF4M1h685VLhiefzoQlk/pXzJ8I80Vw/XByF/eAAHmYw
e8U/Y7AfFk0k6yeMBt8eYPvJrBTzp4H7fJkTcOMX1tPeGdb328X8Vs7YDwvA
fTa6/YoPxPz7nMnzTZpCr4vmucD7Z5eMPbYc+zfKhbye/Ab49mXz/V3HYd5X
LuT9ZTsnwfoVfeEfeY7rrQD/fDbfo2o35isHe/kbbtmdiOvd2pW8nniYK8mn
TnIl/cZ/DtZ2yL1c8wH7VW8yef+QIZPJfC73++OsqKeTrfB59hu8Zp3esVl9
8fvGoCmQNzq4ItoY19ubWrcZHBC3/9666/j97ccU8v6KAVNJPrUYXL411eFL
d1zvsKlkf4viwHmr04YZv8T9088N6j3hnfxsa1zvaW7k74UbwGV7DoWoqzH/
OTfyPJIVgl+oP6bvaovPBzd3Mm+I17qTeV56xp3Mf4o8d3LeqhvdyfNd/o8H
+T6oyvYgeXgNHuQ8EvaaRuYJ5YlpZP7QZYFvBx+d1TEU+7NuGpmnxCbTyX6Q
TphO1o//73SyviIt2Mt087Rtlbj+3cRkfeROYtqvS8VkPSQ1YtLvsi6e5LrS
0ZN+3wgEC7q1uyayxHof9CTznKKTF/k+qx7jRc57/kJwr9oJqe9d8Xl2ABwi
nHs76jQ+j297kecpz96bzBvC+d5kfSV7vcn6y25Ri+f6kHlautuHzCuK6z5k
/lK/9CHzBr+NL7F8B/i5z9vV2Rqcb5J9yfcjXjlYfFXgO/095jXwg/574iQy
z8W8Q/3I91ndFT/yeoL//P7v+8X/APgFMzQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
s8oOWM9sr//7vP8B2bga0Q==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTOsfB/DRohSZCNFiQhFhSGihOfbwYySkQrZKWcZaKhlEJdpkyTqJ
FpRBKoUWS1FqIiTRIGEmmRRly+975zP/uH/ce9+vOc35nO+znHOeZ8xWbHBe
rcZisVroX//9l/7h5pyVMfhfhSP9y/Mt+XJr7M7TakrHdE2SMYpVXr1NXnz5
zwVjyUX5HtE8mdIKT/Lv2TPqQ1qUFtaRRxiOXXn+i9LiLudkjMvN+QlmX5WW
WpPjuaE+T/A5eyk5484u6USYF06ujRMWj6pVWtL5vIxh5z83EH9SmjWKvGKM
5O/YZqW57uRmheXB8l9Ke+4lBy6yD6l8qXTMZfLE+neGLTeU5oxIpuuJct9m
/Vxpvis5yb7yRNtj5N9NFg2bM+rpN+S/RC6aa3zrEI6XPiP3MXoX+kSitGBB
iozRHqBVHFiltGgnmWGuXbojR/408tX43hLDz8hfRTZUC6sR/0b+DvIUL+mY
5Heob3CqjDEtKuqwfIP6JpOnVe4tTML1cyrJ9+9p533B9/N/kbeIQlOPPEN+
8zQZc/Re7qzb6sr245WT9Wuk3JL7yNtOHlsXP/5sDfIOuCBjUmObz1Thc8ls
slWxbOeEs6hnKfla+7GLcY2o5zdyx3lGV34XeftflDEPRzQOelSEvE5kdpT+
MLsPyLuFvP+m9Zzfb1HPr+RWn+y2n09QT+NLMmav9/6KFvQf9nTyftatU5tK
0B82ko98PO1Xhb8XnCCzM2OS5qF9Wf3SqV6alk5d8X3cKeTRObkTH6K/eq4n
96hNs+EXIv8xckO688jeV5G/iBxSJNWpQL35TAbVq+iOaRnaW+hH3nRPc4B9
A/IfJlcxHpO10pE/n2wge7jZtgz5ZWSRi/PLG5dRX5/L1J87Zl6tq0d948hf
N9T0ZeF8rFvkdSOtFZ/KkVdfLGMEfuteTUJ+RTTZ81zaj3hcLyeXrN3XSPQZ
5+PXky/qJT6YE4m8eldkzJfUL6sP3Ube8eRBrAMXeNmoZzb5tMH1pQJcv+AN
eeuumPVfNiGv7lUavz3Dx67BeJDYkHtHdhRK0V9YnuSLNvrtR++gnq/Ji1Yv
uROah3pqX6PjfVx/PbuF/KPJccVGmzdcQ/4l5AdZHXduHET+MLIzv0ZDLR/1
1MyUMTtr75vNL0U9ueTjOb96bXyE/G5kzxDetrs+yB9KZnu4RcaJkD+D/Ltj
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
DfV9QN4/yeTr9oXI30LmsIrPp05HfpNv9P6XXWnbZx7yzyD3GyNq98fxUgU5
4Pjfv6cXIa/Rd3p//uo7jzUHeaeSBXczG5JmIe8G8sJR2evHz0Y9m8jL9tzX
ccL1cw3bZMzF/wU3hs9H3knkSfE/j12bgrxryZPzB0/UUuU9Qg5YtLxED9fD
79VOz/flCUWWE1FPR3L40xNHV41Hf1hDzmq81O3lMOQ/RF5r2zxefSDy3/7v
eJMMi4/4e5HDD+r/ikRr0SjU04uck29SWsYgfyz5nP+oJwdRL24eOelbbEmy
I/K/J3dKGLZv3FTUc+VPen8vdh8+ZizqGUW2i+4/a8sY5M8h37YSPMjH86Lw
LXnm9vCaDEvk7/qL5p/NbZ8ckI8XSZ6cZGhl0Av1vU7ercaXHkJeUR3Z46Wb
W0tP5O/yW8aURW+vnzoS+ceQ1doev6izRn2vkkUXJXVxg1HfWrLs707DnSOQ
v/MfGRP/cfemFcORfxTZ13Xv5ylc5HcnZ3iyv3vh76UvyOL8hz8ucVBfjQ4Z
c2vlwIBjC5B/BHlt4H0/XTvkdyWHxnXX+2CK/LvJX9wsM9tRL26nvzJmj6aD
7HJ/1HcYeW9wYDUP549ZQDbY1dDqjvYp2EkO7Lfrx23kUaSRtz2rL8pDfYRD
WHJGrNHbIBPHi53J0sdfTn5X9Y9gcu71ums6qDc7hXw3T/HZF/Mpr5IcMJvd
6fI41HduJzr+gmSkG/ozK5Acpv1bdzLqyz1H1pPedSkeivzlnf75/ph2slv4
T/80HM/xV5MzrnqSnb9V/SORfDvhZHgf9GdhKXkTO7RxFPKKv5HPdz7DvoTP
pf3V5UymsORjFg/1PU1Of/TnfSr6u6iEvG/i/keN9sj/lezi4jZ6KMydrkHf
H3g3cd0g1PMemRPbolZhi3p+IbttP56YoJrf+mnKmQUHc53bZyDvFLJalfOd
rxi/wvVkv61bC40xHtifyW3BPj5myM/r01nOdO7/904j2lPAkKc8ze0Xa4O8
fuQJTxd0lQ5A3sPkGIMCm1tmqKeBlpz5NJlZkKTqzxPJl2urAoLRnwp8yAHa
YVfGo/0UcWTj7KO7tCYg/y1y3mUNK1v0b7G9NrVXU1sFo+rPq8ke35YOuoz+
yo4hF7+tj7NzQN568mU3d9OruF7Wyi5yRmhr4bBR1X8Pknv450ZewvV4ZpOH
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
EvlhdUBVy37U8zk5nB05wyi2yfH/oc4qtQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.4739018087855296`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 1.4739018087855296`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680300670903735`*^9, {3.668032821463683*^9, 3.6680328418687954`*^9}, 
   3.668032879070866*^9, 3.668032929583929*^9, 3.668034068744912*^9, 
   3.6680783651426744`*^9, 3.6680785301828213`*^9, 3.668079567034998*^9, 
   3.668081644195116*^9, 3.6680817488791685`*^9, 3.668110928922552*^9, 
   3.668111678434035*^9, 3.6681124217779565`*^9, 3.6688645564349017`*^9, 
   3.668865156480183*^9, {3.6688652190216856`*^9, 3.6688652272644167`*^9}, 
   3.668962726298778*^9, 3.668962802268225*^9, 3.6689630279484224`*^9, 
   3.668964074231472*^9, 3.668964205679905*^9, 3.6694535120509343`*^9, 
   3.669455476706587*^9, 3.669455530660858*^9, 3.6694761445111*^9, 
   3.6694778178487573`*^9, 3.669539983329508*^9, 3.6695400984803953`*^9, 
   3.6695401695169373`*^9, 3.6695437248798633`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<btal.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "btal"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<euo.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "euo"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6681116553181944`*^9, 3.6681116650122952`*^9}, 
   3.66811237640305*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<JGBT\>\"", ",", "\"\<JGBD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668025228046261*^9, 3.6680252311869135`*^9}, 
   3.6681123743627853`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13lcTOsfB/AhlYQ7ZAnJWKN17Fs0J2SNSfYsgyT72AtpdOV2rSPbzTqS
RJZBooixL5GRJUsYS9JMMi244fL7/s73r48/8H6dZT7n8zznOec0nzJv+LSq
EomknP76/7/0R34u0Szwf61+9JfqLTldmRbbKPzz/62teQBs6EL2vxqoPZov
2qpCa16T5/l7mfbqROsdksxCX7U8wilXtKkjWjoRrYgjhw2q826GQbTR7qBZ
CN3j/aNqtmhJe7Q8hNz2TVyLdTmiVbFo7Qly9+z2W5b+FC3zTjYLNsfeFoZ9
Ea0cg9bEoPVH0aYnaPXIQ2ah45+NVC1ul/zfumjy8+f/ZA6zEW08TD4rOTes
sp5oySPynlmr1OUrRct/kS+X9b2qnyLasCLFLOy85lW3hotoa3IKnE/2gGxv
H1KWcuGTmP8HOTg9efamEeJ2TevDYEUOuVfEzTPDc8T91f+idS2OmIW05LJo
D3fOO4R826wyFPiLVmWTZcUb7O8fFK39cgTOb2iWCrYOJDesmF9j53XOu4g8
PqWjKSBRtL6M7OqX2ixcL9rkctQsxLk5ybuHiZb2JyelZ8ZensH556PVu9CS
xsfA8r5o1VzyCH3Dd3WucP5/0IYraKVwHKyZhdZvOw7Xa7qElprJbbredNmj
5fkQfgK2G+PRkiy0qo4e+9yElmWSB11cO2/cIs77Hq2pfdIsVMw+fjb/Deft
hlacJRsLzKHNfnGfb9A6x1NgY2e0RIXWviLragb0mzSM14fqp83C2/tbHjt6
8vrQAS2bQG7+4VdUkBPff3+hTbZpYKkcrRhHTj3Z1/1HK77/VqN1x8nvVizJ
WtCc1wevM2ZhjfuqvF4Crw+jz0Be7Sry1iUPG1+N5PypaOtj8tJCj+s9lvD6
MCIdrF+JNqWgpQ/Riv/QxuVnzcKlL6dmnunF61sy+cHrkBf7Z3F+I1r1Ha1t
dc4smFqc/JTUhfs9cA6uT3kPrflGHn46dm2DPZy/eYZZmLNt0L9dUzn/YLLS
7kDiiUPcZ0UG5nXNhH4kA8kXdn3aWTic8y4kh6Tu/2twFPdZirY2OQ+WBaCV
arRmJ1ra6AJY0ecCPA/Uc8gfmvaMf1XK+XeQ1UWa3nE24vPNeJncrGh261El
3KciC6ydSX7ebnODTc3F/Q1b0daLaFkRWj/9Iti0GS29gFZ8QKull8xCeGmo
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
O/jz
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVmnlczOsXxyck5DJERdtUaNEyESE0X1SWYrRZrstwLZcsY9/CWK9ra5C1
i7GUEMaaUEaplDCWkJKplJpS06ay5HfmOX/87unlhffrPN/zfJ7Pc57z/c53
sp21JGhOKx6PVwd/6f+FH+GdM1oO/6vzgb8kRcD7Xz7+sGpelZ7lHc9quUX3
rOXWNoxVA4FvDgy4/qLpi551EuAqz7HOU7uyuOwj8NQM2+NzPBkr25/TcooR
E+6bd2Ks6U+ZPx1425lld8frWD7RTuChDr5Ho01ZXN02RsvZ3V8XFmLAmOcB
HCIOGf+2PWPh7zFEj2Q78K9z6nY/7jCWXwVOcDpbOvojY4FbrJaLfrJZuquY
sXhyLNW/BbiVk7/A5CeLK+Njqf43wKLOG19YvGEsDT2v5RoVzetqulfrWbEJ
eNoSZ/OFjxirLwD/Pezlwuy5jHmvgdM6CrYu/o2xsAX4aVrc1HZTGasi4rTc
jrHrB4XKGOtigVWj1yo/HGMseAE8ILMiwbAL2y/xd+CYD1cWH97G4rLeF7Sc
12RZlkkEY9GzC2R/pU3Ao9e72t3IRb12F7Vc3fML+W93ot4A4OL4H9sG9WUs
eXKRrFfeAGwQmLuj1RjUa3NJy+3uZGdcWsfiujGXyHjBCuCOOwNjbD9jPdQC
Jx8K8tIUoZ+W8Vru0F0Ds8Y+LB/fHzjuSktHZRfUvzSe6JFGx5P8vJ6Xif/C
UcDLzk7KPFnA4pLFl8l88qPAgT6v60cGov4UYKtL336oRjEWc1dIXBYOHO3x
fNb2iYyVh4A9TjXWrnVnrHkAHH86lHNownrWXiH6FX9dJX6pD1wlenlJV0k9
SLooyXp1kUoyn+CukowXf1ISf2WdroH+PZfX+x1GvwcBu1eq10asYSxKAC5u
zjH2XoH1Wwhs1fRqa+pexgrj6ySuHgC8oeDJ56QI9FtynfaHAuD3okDP0w7Y
H9rd0HLnEy3bnR+E9dAPuEnjNDDcF+vhD+AZw6tL6qYzFv99g/QLjeFNLbd6
Xku0exD6KbxJ8ommAnfM6ePSS4j6t90kehRX6PVC11skv2QScHJRX/iD+jff
Iv1DdekW6Te6HBqXhdwmrNx4m4zXxAFLr6x8dMgQ9b+icdFPyur1CaS/8mKB
BypXB/xWyfIL1QmkP0q+JZD88l53tNy+8UHpM+zR37OUxU+By5IiYAdRfyPw
2HMrRqS/Qf22iVpu3JEnq4YlMdaMAzbnR48d+Yyxoj6R6FFb3yXr5425S/qj
cPldMl5VA7yhb8xiVRreLyzuabknVop8gyzsx37AabEv5ctPYT+WAs/Y/Xjh
1/Oo9zhw771Z9Yv2Meb3uA/3hxXWNidn4P1iJPDyTWmzrh5gLF0ELP0+ftzR
8aj/CHDVZvtr035H/Q+BHWW2TiUr0E9Rkpa7/2VMYm4Q3i8WALeZvzpvjwvq
jwI+XDzaq0Mv1J8M3GqV4Hx3P9RfDrylehw3cTD6OS9Zy82dsMTnbwv0cz9l
/n3gy1n/zhzSUMn0l1KW8h8Q5kUCu0xcmtFigPWQCDzu07mfPm1RfzHwjHen
65p0bLz8N5WWK5i+akrST8YqL8ri25RlGhXJr+zwUMt1KY3dnlDJ4hpP4FCX
lM+fkxjzZwBXPfvhNeMcY8UH4H9u1JoUxTNWG6VoOe+HjTGKONTfj7JwGvDb
mC+wI4wlOyjr2qRqOfujZdWzbzEWuKeS+cRTgCfcqo+echD1bwW+P8RelB/N
WHkZ2NjV+oqVAv11eUTi0rBHRI9C9ojMr74IHG5i2tU8EvXnPCLzyYPTSD7V
hjSiT3c+jeQXvEwjesQ/gFXJxybVfUR/16VDfwt+3j0+C/2NATYakrE2NhH1
P08n/kqbget8s7Z+eYb67TMIC89kkHyS7AyiR/41g+TTjX1M1iPLfEziyjoa
11hlkjh/dCbZL9Ey4A1rNjakdMLzpssk9cazyNJyrqMef19Zhnp9s6jeJcCp
13S7F6Sj3mPAy7NPll/LQz/Nn5D84hFPyPyyhcArHzRYOaWg/sM0rlE9oX76
ZJP5FPOziR5ecjY5X8KybKJfNfcpOT86ObD1a87qNYf6SoA/5YyMGeeI/azz
M+ivf6x44WuG/WDfM9IfRHeAj705Fb65A/azomdkfkXH56Q/qAcCc4PSatxe
oX+3gE+cr24ffQT9+/ic7L+qvZr4oeuvJvUrmK4m12vavtBykc6qGdK3uN8e
L+h+/w588rjf8K4b0c/twHUHznbQmaF/bV6Cvu0n13hYon9uwK77T29Z44F6
JwPHm60qGzoc9W4BntF7/brvg1FvPHBb35IVJzQVzM++r6AfrY1erG2L+x0K
rDJeXtDgiPu96RWZT3PhFcnHfw0csfVfXeIA9DPotZbr1LIowMsV/YwAjlx9
rHSZAPWff03GC1+8JuuTfAfOqU1v1+cb0yc4l0PyiZ8B58+PCrnZC/U2AU9a
WHtm5hc2Xmn3hqxPdBp4U0jlvlcpjKVPgDf7j0wde4GxogH4ep7lvafXGKtt
3pLxvLHAXrnJCwXljOWPga0W1zvnvmKsqgVODNK2nZbPWGf5DvqdpPpoz3eo
3/8dGS9eCrzs7f1Pca3Qz2rg8tLUloJPLM7vmUvWIxoF/A8v+/inBtS/OJf4
oTgKbF/ycNW8FhYXmr0n4yXce6JPHv6erE91CNhjVo3gQDLqf0BZNjyPXK/8
i7LmQB6pH35SHtX/OY/oU8/Jp/UszyfjhXeBU1syuy7qjPXwCfhM+OH8vsZY
z50+EL8Eez+Q/RQnABs8M3PqfBv1F1JWGheQ/dYMKKD1cbOAjFcUFJD9VLf7
COfzs01atwysj/7A6vXN9488Rz/zPlI/DTVkPoFQQ+LiqRpS77JtGloPrQuJ
PpFrIa2HSYXEP8XmQlL/6kuFpP4kzkUkvzykiNbzxiIyny6OsuAVZeXEYsKa
9cWkPvixxWS9IjXw7HJb+EiF+r8Bm6R0s3msQD/XfiL5hGeBH6dIS35uQf1P
gYtdvR18j6L+Rsoq2xIt5xk6OrR9DPqZVUL11peQ/dVYl5L5+WOA/cb4jkuJ
RD8zaFxdQ5ln+Zmw0O8zmV8ipXFdFWVBjzLC4pHAUd6ixNZRqH8RsOmt8GCf
v1H/kTKiT2RaTq6XisqJH4oF5WS8Oqqc5Oc9AP4WNvaDbDf6OUwLn++GjeDW
r0M/5wHn+CgiHUei/v2UBfeBQ7Ylzi90Rf2lwDGX0o/EDEF/Z1douc7DTxpd
m4b+RgLb94v+Od8f9ScCJ5vuz62cgPqL6Xjhnko4/3eW/OkWgn7eBvbqc7TO
rh/q1QDXnnho+Hk46u3whcR1nl+IHtmNL0S/8gMdrzGqIuvh9wMO/K3SKrg1
6p1WRcar31PmGVaT/EJ34OhfpbujjFD/FOAnB1VbzfiofyuNC1rpyHxiF+Ae
O+7VTO6G+sOADQ8kfz/lhPplwOGXH9tY2aL+i/R6qVMNWY8iGHhwj2qH4+ao
f0MNyc+LqyH6hC9riD6VuJbEdetqqf4YyuLnwL961lzt8kvL9DcDF6/rdsW/
kDF/TR3Ub+eqmKxyxqIzwO6LOlv+U8JYmg183fErp/7GWPEVuKymsDnHGPUL
6glLTgHLoizHBtay8fLMeuKHqo7GdVYNhAWjG4geja6BrJdv8ZXWg+9XMr90
CY3zqoBnGpSbdKxi+YTmjSS/ZEQj2T/5wkayP6rDwAmnUvdO741+dm8icZlP
E9lf5Xzgv421h/IssR4ONpF64ScDP99hdmffV/RzaDPRo57bTPzn7W8m/gvv
NZP9k5Q0k3y6P79puYbFXc7xstHPfd9IPvEd4NXwdDr0AdZDEbDfYeuXj94x
Vnb8Tq4X7QZOe+8VvyEV6+EW8K78wZ4NF1D/R8rq9j+0XMewOc+EJ1C/J/BQ
7fD0GzFYD9d/kPGqfOA3e9aa9t2D+tv+1HLBLw7oilehfg/g5D8XwBMA6v+d
xjW5wN5xW4fEbcV6btNC8oncWkhcOhnYut35QQVzUP8W4DuV/3abuRj9NfgF
fsKnpX9nor99gY8HqLoeEaP+UGCFvhzWo/5Nv0g+3QVg/+LGyRm26K8jr4Jz
v1t2Zrcb+hsEXJTxxXOsM+qPAP7P+vjngZcuXVJ7OQr1vwD+z36pJxhU/Hc+
3jpgVh53Uf85AzJe8gx4i/510R+ovwmY91fWwG6j0d/VrSpIfZwG/s95kT0B
joswHfggA/U3tCLzaWxaV3ADPG5X9ZiC/p5sTdaneAycdbJgYycv1F/bmvgh
9G9T8V+/VGnAgVPTzoUGoJ/VwE4jLSb9bI16exqCP8n6LxDKmd5RwPEtBhtG
9UC9i4EfOXTpL+uIfn4BNj47PLR/KRsvMmtbweWLBeX3fjGWcsDeDdMeXsxm
rAhvS8arDwF/aTUreP5jxpJuRhWcgj+vxOERY/lwIxJX/WVE9OkOGJF8giTg
KYcGp67QMlZ6t6vgyqBb551grJnTjuTny4H1b+tPXUS9n4DNCq4vD9rGmPdn
e8LCvcAR+sfh9ag3Afh6StyEnD2oz7gD7P+ts0mm+9G/XcB+whcfMxcwlt0E
jn392507XqivAHgVeyGI+toZk3z8/sD7Luk3AP27BsxeZ1ujf3nAEazBlDG9
bTtCfczUv2FlLBR2JHHJVGCzvnu+hTxlLGj9G9TPoP17TDIZi12BA+tXX59a
wFg2CdjqzBS/4kbGys3Ajx6mirafZCzidargutxMvpJ+hrHUuRPJrwjRx/V2
T0G9GynzLgDb93A4sNQO99uhM/FHNRG4edibpTvn4n6vBw62Xri69AHud2xn
4pdYDbxFuqv4j1j0czyf7Bd/LXC4v/4LLazXs3yyX9KnfFIfikbgnNygE645
uN+KLrQ+s4DtswONl+Si3noa11l3JXpkJ4CPH9P/4P5nAAeeP9l38iHUWwMc
Py6vtf8s1GtpQupH5AccHO7bUtYO/XxkQuqBV21C/BL26Eb8lYwEjrLTC0b9
i7qR+hZUdiP6xKbdCctEwEXdMu4FLEf9C4Cd5PUffgWg/qjuZP+kJqbQD040
L0kejX4OA87Sfx0pQ/3zgJca2/Fu9EH9B4B3euobHuq/b0rqWTXEDM7zu0X7
PpQy1s0GTv5pCZ/wUH+kGTkv4kQzMr+s2Izo5c8yJ3pFe8xJXHqbskJjTvJL
/ulB/JffANZ/+vAWYT18AJ5S1HXs6v5YD0Y9qd5+Pcl4pZKy5j2wsc4sf4A7
6jW0INeL3C2IHukUC+rnOzpe2MqSxCUullR/GLDiD9FC599Qv8yS9APxL+Dj
pcsE/xZhf3Cygv55dfq703XYH4KtSH1qNliR/Pw4K+pnH2tSr2oxsLtRitO+
1ah/vTU5v8IYa3KeJM+B69a6n2qsRX8DbUi/F6yxIedTfMaG3I9k2cCGLkvb
x9xD/7/akH4gWikg50N6SkDOjyJTQMar6wRkfp61LTnfqnTg2erLhQd3ol6d
LVm/wMKO5Bf72pF+oEm1I/7wq+zIfCJze7Je6Qh7sj7FQsrCCsqS7r3geWNj
5ErLM1gPPsCR0/UvRFH//F7keUF3sBf1s2tv0i+VQylr5vYm/YS/vzfxV3Sv
N7kfqgf3qeCmT9EcMpyOfs7uQ9Yr3NeH3o/v9CHrkRcB7/w8yb1Sjf7OdCD9
S7zbgfQj2S0Hcn9QfgS2CpU90FxBP3c6kv1SXHck+6XOdyTnl2fkRPq30IOy
6qoTqR9drhN53hG0cSYsdnMm/sgmO5Pzz3/rTPuZQV/aH/r2JXFFKLD3iIGj
L3dH/Zv6kn4haQH+MsH7fXgX9NPRhfRnVZALWa8uwoX0W8F54AX619k/sD/0
diX5NBNcSb/hr3MlekTn6HjpM8q8QDfSX4Sr3Ug+yWngLUn6DwBsfvkTN6JH
1eBG+pd4hTuZX3bSnep/7E7yaWrdyfMO30pInrcU0UKSX50mJM9bPB1w1JIY
2BF8XuvpUcFd67zlzdscfF4b5UH6ry7Fg9z/BF88yHxis37QL47e3DXmEvZn
rh/RqwwH9ttwcW72DXxe69Yf6sH28/B7MtQ7HNjxw9PZrQ6j3r+Ak8d+rf+6
HPUepCzv4lnB5WlfflXtRz+9Pcn8ujmeZH0CuSfJL74L7B3ZGSxCPwcNgPO1
62rTrqvo55/AWzoMq5k1CJ839w4geqUJwIbp9mYXA1F/IXDCK8cLf41BPyUD
SX7JLuCs7QtMTLui/pvAZmvmbJ5kivoLgJvf7ty0t+kz09/Oq4I71j8AOjj6
+Tdw4ZW1mRMN0c9rwH76r1N/sPGaPOCIg/oFo/62g0h+kRB4tv7jaE/098og
ooeXS8cLWw8GP0v2dgmoZ/klrsB5+tcF7xnLJw0m+gRvgFdZ6h/YWVzMG1LB
/Rof9sTCHvU7DyF6lSHA+3z1FYf6Nw4h65P+BI66v/F3vgH66+AN95/TK7wO
tkf9E71JnBfhTfILY72pv72GkvG68UPJ+gVrgZ/rv14civVxdijxU/Z0KPGP
HzCMrE+0ahiZT6oALuvt313jjvqzhlH/64FjF6vSkjLR3+XD4X7DvsBBf09Q
VmUADzAfsdXWE/XXDCfzCyx9oF8U6l9QY30cp6x55EPG86t9yPqkI0VkPC8F
OICbOPgPB6yHShHZH4kpR9YnF3GkHlQLOLJf4nKO+C0zGUHWpxw2guqdN4Lq
PQAcfMd6e8VE9JM/Eu6P1f2elojQzyHAOcsNL/Wbh/rn0LgwEth+Lq/HinDU
nwgsnfx9x60l6KfXKFIfglmjyH6J94wi65XdHkX3f4YvOf/Sf3zJ9YobvsQ/
9Qdfcr18hx/Jr1L6kbjuPbD+bc97a9Rn6E/yid39aT+47E/OK/8dsCj49mnR
S8aiVqPh+VVyr/+vp4ylLsBJ8DTTfJ+xIgxYof91vlNYn7+AB8yx6NBrA9an
0xjofyY/T8QfxvoMBg4ybDKuOo79awPwAjf9AyNj2Q/gBEErYfgB3O8+Y8n8
GjGwo/P5ijYfUe964BxVgccAJeqN0cdXy5YZOTJW24+DfjN/vWa0C2PeeMrC
NcBR7SfDJyDUfwY4b9v2Nun2qD8b+NSobF6/slLm57iACs5N//VONGPxSuDC
0S5vw44wlp2irMwEjt8kspm4g7GmLoDMr/g3EPr5Uu+9B3axuDodeHKm/oUZ
6q0BNpS86XX1I4sLLcaDX/rL3zJWHQPecq66ZV4WY10q8OcHzXYlD1FvFXCm
jZWtxTnUaz6B6JeNAGa/PnuKMf8hsLT2ctRdA/SzAvhXWbtcwS0Wl3YXE1b4
AB972nLzbBLqny8meiRlYqJH3nViBQfF0egTjPqHTiTr080FrhyYsXh5Jerf
DxwUpH/hi352DqrgPK/Xy/uko5+Dgb2dUvJv6lD/7CDip2hfEJlfegc4YVHe
7UV5jHlewWS/hDODiV+S3cCp+tc3a1H/rWCSTzw9BM7T7IHfX+1DP3cCR4V5
zO9+EPVeB151O2TeuJWoNx/YrKt55LQ41GsUCv3nn5L32pfo5/ZQok99FZj9
+uIG1Ps+lKxP2CYM+q/+41ci6nULI/upiw8j+gVvw/4///8A94wb6A==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTGsYB/ApCdmmLiJk7BIZWmRtTrJEMi1S2UaWVhm7UEayh5Gl7EOL
FDWWFiKjQkpMlijbUMRMaiKVkPvTM//M/ePe+/2c6cxznvO8z/u+Z05fnxWu
S3VZLNZ3/Ovff/EPN/OckqH/VdvhX4IPcNzB7JH5ldX/LO4Qq2SMdnwxOJnb
YpkN/Ou3U9/byharBXD33zPmb2tosegdXBExeEI4HZe2i1Myq0rtTLqpW6yw
1DZ7Abxkt0uPke9bzNsFF9sm3wpXtViuH69kci8+SzT/1GLWSPj1ujsDltP5
uXPh6r0BASnlLRZsh7vkXjySS/GKU+ENG5XjFV9bzLFIUDKzxo+6uKGqxXxP
uFHYbbeiVU1L/OGwrqqL3oSfFP9F+ElD9ye3dVqOK0rgfguk8+4sbbFw9nkl
0zVq99fdNS2fl2yBe8Yv+vKG4pFfgPv0mfz2wy2K/xk88qb8J/cexd8MT31d
v3/eW8rv5kQlI97pHj/iEeU3AS4y3J12lMwphjOdeoz0pu/j/4J/P0j6GkXX
Ixp4QclM3nnohMtnyucj2PRmubcZ3U9hI5wT0qTSfUbx9ktSMu7jnFO2llK8
TnBJYUq/zhmUz0JY+md70A+KX/wDTtKR/cyneGR9kpXMCp+KrLFxFK8jfFGn
8WtZEcW7BraKkdlfy6N8foODlWHmcQ+oHnpdVDKdVu7pH0P5YE+FE67Me5BJ
38dbCeddnts6tIDiPwF/8zmZXH2G8mlySck8MvcWld6mfDrA7YfvHsyleATB
cLv+1h1DnlD8MbC84YcqqU3L/ZPlwJnD2wn96f7zmRSt46LAlH/18f1cYbsW
S4/AOUMfp+rlUPy3YdawZo+5CRS/Eq789uHwoGLKr1+qVr7kUXC8uXw1L43i
vwVHLipvaJZSvIZSJXPicnFjOV2P+oBU6/s4N+BdS2eHVMjo/lfA5v2DDLIv
0f3vdFnJSH5fOmZ4k/JtC0ddvB0zjI7zMuCyFQLb4dcpn+/h+uCFa2rvUrzt
r2gdl1vDg3zmJgRr6lcAc1979S28Qvl8C99KeDBelEX10PYq7pfDy2AvOq4e
BS9/+XZ7VibFPx/mGTVc7kfn5++Esz3Yka9iKZ+trymZhwnNkTL6ezYXrnjc
cdLveIrfG56Xa518IInij4BNc/T1xlD9SFLg4atuDCum83OHpykZ9YbizOIb
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
/Eu2wk+G3LTL04y/ZPj0U4vc83son0M/aNWb2B1u28XuRApZFgYn2fme86X5
TZ0IyxKXelyieuM8haXjfnDCabxIXcrR3wqMAlZq+tsmeOJqzqhwTT9OgNfN
3mllo4lfDqcWlSedo/MJm+CyCXfb7ougfIZUoF+1GVdkTvMhNxbOaX2/W9B6
ir8IFlm63nkTRPE3wKu67uu3jOpb1vcj9u8FvJmRGyifBbCkNzfcgPqltO7j
v/VohnwfzQ8K00+Yb1WTu93WxOsIB+6+0/c5HZfc1z4ur4XXrNukXET1xOpV
qWT8Wh+zdNlB8U6BGx9debRyF8UrrNS6PnU1rEyynpi5ifLZ47OW+ZNga8uD
GX/pfKLlcH1NQsQpEcUfDes4XnZ8RPXE6/ZF6/uFPNihx9roK2sp/gC4ftBG
s5VUT/LD8NgRfWxMKJ+s2/C7QsYwP5DyOUGJ/d4p8YitiyifvrBN0l7nGuqn
6oNwutvxsnGUb85NePYdn8pEuh/8T3Czu3+zAfUPxRKVkhllOjudTdfPPgCP
j3EbuTyE4r8On+5b1qBD/VJYDk9JU3RaolnfRlZh/9PRJbaO5n9BOhzlsFRV
/ZjiVcBC1sY6fgnFa/BV67jaCl5yTDWngepJdBXeH2peW3CQ8vkGzgtKO+tD
8SjaVGN89Lz3mqH8sEfBns8ta9RUT7x5sNPe7sviqZ7lZdpmta7BeIzpZTWE
xg93BMw2OjRLTfkReMFDXm8pHEn3Q7xN+zhHV416iDkS85jyzR8Gn9Nds01F
91vkAUt7Hnj3m+pTKoJ9zA6vzKL5SpEEu5fGC0uo/oRmtUqmoH/Suw50XOIG
SwfV/hdP/UAeCpsscmzyp37KSoR3JF+qGkx/z30CV+95/HvUbsov/xv6a+WM
SY5HKb8bYWePvScn0fzKiYene//pbUb55j+Gf/vqSis1++WfcLVxl1RdGj/s
Dd8x339gmTvQ/eCdg1Me3J/aqFlPPoSFg7PKTmjWk/Vw+w6X001pPpBz6rQs
OAPPmf9ogbdmff4Azu6RPu0NrYdl37WPq3v/0DJnGiwxyejQg/qzQg0nbt8/
J2wdxduzHuPNPm5AL6p/3mR4Ky/QYC31B+EK2MpZeNJSUw/V8M2VobGvD1A+
uzdgvdy4pSqLrl9gD5cskk1poM+Lg+Cb0U8L0igfsqPw77Jbf4zp/vC7Nmod
F9nB04syA71o/pT6wxXs4q0ltN5VHIL7uWdds9Ws17LhXY8qjaTUTyTjf6Lf
Gz1t57yR8rkMzrxT7jCc6p11EA7p8+KFnOZ/bhYcNe3Tvg6UD8HHn1rnUy9u
UjLHcyra+lM/4exv0jofPxOet6Xpuf5Siv8DPMlD1aeQxoO0wy+tv+fthcMb
GyIH+1J+0+ClPxv5i70p/newQ3DuZtkyir/dbyXT2rzUcQGtB1hWcO8fd++e
ofldfOW31udlr+HS8K15vyketf4f7FcG7h/pNZfiHwnPrA75skDT3+ZqH1eU
wpHiHR5Z1C/Zes1a5+NZNGsdF3rCobyY2SWuFH84XDDqUK7xHMqvzl/sx+8f
P53Gp/yaw1kf4nJGTaP4Z8MTT+/9HDKf4t/yV+t86guwUYrsYwGX8juEpWI+
L7r0sXkN5dcVvvM51eItrY8Um+FUm+A8Lq1v2efhXbeEHdm0HuAVw81t1m6e
QvsB+SwdFfPEOCkkmvoBayP8Yv/6uwNpPcKN09H6vOARHDEwtb0HzffiRjj3
ftaGK1RvnPW6KsZ7+gJVEO1n+WfhNV1m+KbQfl5UCBs/WdS4k/ZX0h+6Wt+n
6NNKxSy4eNndmtbzwtPwtfVF64uofiT58JDyuydH0PXKv8Fl6gKLalr/cafq
qZhl25+0i6T6kt2Fc275LvhF16+ugblXokY/pvmLY9JaxTxbcSE/keqV7wDX
dt5RsIrGtygYDo3bF8+m/LC/whyfOBslzcc8Y30V027MEVEKjSchA9vuvVo1
0J/iDdTX+rz8CGxklG7dmuITdGmjYlQxmWEVmnqe2EbruMyvjVZ86qg2Wufj
3IKnvTr71YDGo3RcWxVzwONx52wXyufStlrnZ4th3Zz7VhxPircCPr0zJz+P
jrMWt1MxfHnBzXzaz3D3weezIro2Un8SZMDXXibcS6f+JWtvoGKc98hd/6N+
yd8DB/3wrTXVzA/X4FVrd/8woP219C28/tJhtaNmfdm2vYpptaezozUdZ1vC
OV7Z91OfU/4uw8MeB+zh0/2Qv4KdxW0NODR/svQ7qJjnphZOVZp65cL9DM1u
aJ7PC7xhjmtWvFrzvKlVRxVzMOZStwd0v/jDYecmI3NX2m+L5sDidd1WV9B+
SLoVnjpw5O0bNP/xWJ1wfbUz9q+h/YBwKOx912HlqNEUr/s/L9yyI4LqUR4G
Nx3K/bSa+hPrwj8/FC4r1PzeMrizirGTs/RKyDIX+GVVSuEkTf/dBCd1dLr0
m+YTTgLs3lE1KIHuB18On0yNZm+i/ZjCmY3xaXUnZyw972WHwPp/K0//GUnx
x8L7JON+edL5hUWwe2m+h4ryIWmA93/TPTSfxodAYqhiGtudsP6hWU8WwDd8
9+fH0Hwhq4M7czYXn6V+pjY1UjHjK14JA2j+FZ365wXf2ibvpXzeh8P7HkpM
1qxvauE+rZZve0PrD3av/1TM67efR5ynv+dNgetuR/hpnm/I82B315tzh9D+
jFUDjxXkxJr2ofvfo4uKmb4pkJlsRPFPgj/2VY3yGEvxL4d5mYfPP6L9IKcK
5qw/p6qiv+d366pibs4blzbElOLnwTJb8+bkXhR/AMxbETY+fyDFfxhuI4gx
6Vj/tSWf/3VTMV2bvunvs6R8ToD/ptYcH0j5kfvCrv6WA3I5FH8U3Ml5t3yJ
pn/dhKPn/8l9QfOhbKyxihkwrqfB5s2U3yVwvE3t8CLN/u0A/Hdyp5lFmucp
12FLbvWNZhqPonI4QVAe2tOR8uvTXcX8Cqw+fYvi50V217oeYTosGTv29cth
FL8CVkb4FrswlM/dPVRM8BLzdTUjKJ9X4bjhxhY/eBTvG9jnRp7RIjqfuo2J
dryjYPfBa/ZOpvikUnjTnw9r0ml9riiDTRbN8Q2i8cpu3VPFzNm+K9lZs34Y
AaeJLR39aTwJveBzDhkP/Klfsl7Cl4eeuNDLg/Kp20vFHH/sc3C1Zv4dBj/5
VVC5xo/i94CNJ9RJNPtzmQiW91vf1EDrAf5f+HeXcYF1NB5EZr1xvcb1H6tp
PpC6wfPcrnha0/paEQobnHo/J8+W4k+EdbdZZCTR+l8yyBTjs+up8+F0P+R8
2KRZr7WK1hOsTfAdjuE0T5o/uPFwVdrYq0OpXgWP4aEGd7P1qR+oZ/bB+Dz6
rjJvBeV3A/y22qWnB9UP/xw8rbF/PxdaP4kewin/WUx5ROsTaT0cYV6Z40Pf
x1vLUTEd8gR9PtH8KjwDT1+2PNKe8iV5AItGeDlMo/2V/Dtcd9zFP2kLxW/a
F/WW6PHLj/a/snvwqAkLSvRpvlKrYf0v9zwaNOuFnv0Qj+hZjr5mfzQZLmla
46ugfChy4RhPv6ZttF5jV/fT+j5e9/6YL8dZBK6h/i20h3VVdgEH6HmGJEjb
XJW2BV0HIP9dZnEKt1I92MHT9Ez6b6T+KfOHncQf+7en9Yj6EJxplbNhFT1v
ExkNxN9POB0umEX5HA/3ulFyqy/t3xXL4Jqw3+9NrSn+g/DmWUkdsig/vCx4
ZN3UQBbdX/mYQVi/bV0vvU39jrUEFtkarJwym+LfDz8bu2SpkizIhHvxH56s
ofWp+AO8ennqnEhaP3IWDVYxbc94B85zovzuhcWrXRz0qB+K0uAdifVDp9P8
JX0HP1t89f6W/pTPXUMwH5cUjdA8f5ZcgdfaBtQV2VC8r+EvY7YWvqDxzWpj
pmKutqo5eoyer3FHwm8s+/NfmlM+U8205h91KXx62PkNPvR8gaM3VMXcS210
HDuV4rWAXbaE2sVSfxF5wtcj79zfRuOb/QIeb3Ypvorqn6djrmIKfo78k0L5
FJrDHvvHvHSi80lmw0MrI3hx9hT/Flg2TTDtMOVL0Az77aq+PZWOi4cMUzGJ
7dqs32BH8bvCwZGs7HjaL6o3wzENo0vNaD7mnIcNu1dXGc6gfA4crmIehbjp
nKD7o5gFt+p/dls7ze+1G+Gm6rc2JTQeeXHwk7Xvt6TR/RU+giem1865Sflh
zbRQMem9N/yypfHCXQ/bGj9v/43qRXAWTur9MkxG3y8uhC87jZqp40Dx/4Cn
FR7YPXo85XfNCIz3ebOCdKh+Rafhv3+OP96ygOLPhw3GX7YJoP2J4hvsMG/K
rSr6PLs3V8Vs7PzZy4jmB8kJeIDDQ5uNtL6U34XP7vrItpxE8av/fV5/9PAu
lA+uyUjsTzwGWvyk6xM4wGXRhaOqqf+oc+Cqb9Jxk6hfcr7CwT0nvs2h/PON
R2H+ZhWONaJ6FDGwUGQp9tCsNwJht31j1n2nehR2sVQxO199FGwfQ/FOhKeN
Kf0+hPIj94MDjybVR2vWw4e0LTa0wv6r32jn09QvZOPgMKeR0Q80/WEp/MX+
+TZrTT2L4fsfKrespfj5N2Ch2ulI1iDKp6011tvVvYaaafK5GLZRVHn21fze
sQ8Os6nc9IXWO8IMuDp/79VHdD8k7+G2y37Gfad65QpsUP+5VaOjNfPFHvhw
RfqSy7R+EV+D2db37A5RfcnewmGGKQfGdKX4247GfN8wuXU09QPRTnjerfTI
c5Qv6WW4c2GW6SLqZ4pXsO367QMTaXyw9W2x/lVKJjVo+jMXtknJrb9K9S1P
gV86e7pNnUf5LYWb78828KN647Yao2Ki5rt9MNL8fjQcvhIWdmQbzd/iOfAy
1wtNI+h6OSXw8ynPnrai9RqfNRb9Mo77qYzWC6KhcLfaJbJY2g9J3eEbKZtc
QidS/GHwkvKFFh814+0PPCHAZ32eG+V38DjsX6dsdvSifi13gS/87P0pjOYj
1mZYkGCX14bWZ9wEeFoot9NDWg/IBoxHvfWZsGlIGOXXGe6nZzknmeYHTggc
d7tH6DfaL/Fj4V97rCV7NOuNIjg6ZMvRPMoP22mCiqkI3KinT/XAWwcLWeHv
YimfQgns9WKVmZ9m/1kwQevv5XXwlEnbhvWk9Ylg9USsn7YHnWA0/eIUnFrv
7OpK/VB2H3YtFouP0vNbdS3sfHHP6w5U/5xedriepBt1OprxdhyeZXbcoc6Z
8psHG9h/+bqO+gO7Bi4YW/loB+1HhJN4WH+sXXfYiJ7ns3LgHVGN+Z60PuBW
wUGvNpmb0PgWdGNUzKny1/em0/ws5sGJnf10FtLvh7IA2DPj2Xc5rSf5X+Ci
YX0tlZr+9p+9ihlo3i4hkeYT6QS4/tI5f2daPyt84Zufh1ha0H6THQVH/Fr4
u5h+D5SwJ2E/u3T9wdF0fvlYOKWX+bAs2r+wlsLeLNWCF/T7IPcA/DqrOMKU
fs8XXIcDZuSpe9PvOerRDipmcUzIkEB6nsfxgQ1GVCTcoed9/EjYryZxoo/m
9/F0OHxGhEMevS/HWzgZ62k7gb0uvY8n3A0/Hys1LaXf4yVX4SuGOlUD6P7J
38CyRTVV7eh5jnjHFBVjXVRpGETvM8ikU7SOq8vg459rrb/Q/pzTeqrW+fgj
4CV99MPKNe8/XII9SgOj06i/s1/CT/L7hmme7/F0p2F9nZzfq6GM7v8w2PPs
1eQCej9A4gHfsnnmu4v2s4K/cKT/OotTNB7EZo4Y/2fKuiQXUrxucKzFdd8N
9LxLHQqPyJXZd6P7JfoNx/zczFpG79NKB03H+nFU5Ipr9D6Sgg8HirMbQ+h9
VPYmuH5Wp7gmer7Mi4fFnVxCqin/8v4zcP4xzO1Bv+h+O8OFpmW7fOh9WO4G
eMCA2H3Jo1ruh+Ac7HNq9N2YWor/ITxWqpfgt6zlOGeGE8Zv9p0o9TR6v3It
7Jy950jycnq/8gw8fvDf8Z7T6f3KB/C4Tbftk8iK7/DZKc7RXjEtlpycifp7
du59a3rfQH4PtmjTff51et+VVQvrmw2s03tI8fZ0xvxZMGfdYsqP7BhsGr13
0AT6vDoX9vH7tqiMnsdwqmFRUN7Vt2YUb/dZWM+W+ZvJcyhee1j+e5Fb+7QW
s+/AHU0bxlXubTFPBXefPcxwqj3Va1e+ijnpurK8/AzFbwfXG+we4mvbYrk/
vMh9+vAgTT4/wwuMh+bu92yx2MgF9Vt6YdAYD3pfdTzchZnb7q91i9XL4PV2
5Y3WkynfB+GhMz/vqeNRPju7ol+d/F57bwvlcwzcLeDpxOAgin8JvID/wv5T
HsW/H367vOdoezeKPxPWn7vezGlqi1mj3VTMOub1sm1Mi7mL4PoJh8JHDKX3
x/fCGVYvzzkZtVicBp/Nkd6959xi/gJ3rO++bhj/w7HFol3wILVrttdbivcK
3HqHoeTDB4r3Nfw6IutJegjF22Y28r/hUdGYfZTP7XBD/3CTJ/1azidPhfl/
kx448VvMKoOr2d/WvB/TYq6eB/q/f9bGC3MpXgt4jYkXb6l7i9UX4fyK8xy7
csrnC/jc4Z+FV1Nq7P4HPe47iA==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0.6657278636363381}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0.6976623376623377, 
      1.336351818182328}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0.6657278636363381}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0.6976623376623377, 
      1.336351818182328}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"JGBT\"", "\"JGBD\"", "\"JGBT & JGBD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680252337025223`*^9, {3.668031059959094*^9, 3.6680310640966015`*^9}, {
   3.668032816869893*^9, 3.668032833933844*^9}, 3.6680328714675937`*^9, 
   3.668032928110566*^9, 3.6680340567214584`*^9, 3.668078350073217*^9, 
   3.668078522638321*^9, 3.6680795594343996`*^9, 3.6680816341974983`*^9, 
   3.668081742856388*^9, 3.668110919950199*^9, 3.668111680071972*^9, 
   3.6681124225088577`*^9, 3.6688645576692224`*^9, 3.6688651569645605`*^9, {
   3.6688652195216813`*^9, 3.6688652278232803`*^9}, 3.6689627337509823`*^9, 
   3.668962805899145*^9, 3.668963031574*^9, 3.6689640779724407`*^9, 
   3.6689642095255737`*^9, 3.66945351442999*^9, 3.669455479042101*^9, 
   3.6694555321790037`*^9, 3.669476146242905*^9, 3.6694778190458717`*^9, 
   3.6695399853276463`*^9, 3.6695401000314493`*^9, 3.6695401712791023`*^9, 
   3.669543726042962*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TQQQ\>\"", ",", "\"\<SQQQ\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66802991472351*^9, 3.6680299654683013`*^9}, 
   3.668112378900997*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
55IErw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
eSO/CP4ySnKY/ZrM/0awl1fVg+rIUtd/Aeg8pe8=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5734972500000005`*^9, 0}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 4.276313559981976}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5734972500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5749728*^9, 3.669408*^9}, {0, 4.276313559981976}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TQQQ\"", "\"SQQQ\"", "\"TQQQ & SQQQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.668029922314522*^9, 3.668029966891885*^9}, {
   3.6680328177136507`*^9, 3.668032837720002*^9}, 3.668032875289584*^9, 
   3.668032928798088*^9, 3.668034061143282*^9, 3.6680783575774946`*^9, 
   3.6680785234351854`*^9, 3.6680795632476196`*^9, 3.668081635791247*^9, 
   3.6680817474814653`*^9, 3.668110924402893*^9, 3.6681116810497675`*^9, 
   3.6681124233230357`*^9, 3.668864558949147*^9, 3.6688651574489326`*^9, {
   3.668865220000208*^9, 3.668865228292084*^9}, 3.668962735255577*^9, 
   3.6689628067207217`*^9, 3.668963035245594*^9, 3.6689640816749277`*^9, 
   3.668964213360017*^9, 3.6694535166004868`*^9, 3.6694554808536143`*^9, 
   3.669455533415723*^9, 3.6694761481922426`*^9, 3.6694778206851077`*^9, 
   3.6695399877107444`*^9, 3.6695401013585343`*^9, 3.669540172821119*^9, 
   3.6695437275470147`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9, 3.6680310240717154`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart2", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
   3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
   3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
   3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
   3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
   3.667989983816139*^9, 3.6679899846396537`*^9}, {3.6680328189012156`*^9, 
   3.6680328236945057`*^9}, 3.668032854896698*^9, {3.668032892840277*^9, 
   3.6680329128159447`*^9}, {3.668081685682143*^9, 3.668081688494714*^9}, {
   3.6681123817767186`*^9, 3.668112402824794*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.6680817833225226`*^9}]
},
WindowSize->{1282, 797},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.05 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3236, 83, 172, "Input"],
Cell[3797, 105, 2476, 58, 152, "Input"],
Cell[CellGroupData[{
Cell[6298, 167, 572, 14, 52, "Input"],
Cell[6873, 183, 828, 14, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7738, 202, 407, 9, 31, "Input"],
Cell[8148, 213, 59961, 1076, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68146, 1294, 229, 5, 31, "Input"],
Cell[68378, 1301, 45530, 823, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113945, 2129, 383, 7, 32, "Input"],
Cell[114331, 2138, 46304, 834, 422, "Output"]
}, Open  ]],
Cell[160650, 2975, 863, 22, 75, "Input"],
Cell[CellGroupData[{
Cell[161538, 3001, 2106, 37, 75, "Input"],
Cell[163647, 3040, 49148, 881, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212832, 3926, 203, 4, 32, "Input"],
Cell[213038, 3932, 50077, 896, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263152, 4833, 207, 4, 32, "Input"],
Cell[263362, 4839, 49012, 879, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312411, 5723, 302, 6, 33, "Input"],
Cell[312716, 5731, 46314, 834, 443, "Output"]
}, Open  ]],
Cell[359045, 6568, 559, 15, 56, "Input"],
Cell[CellGroupData[{
Cell[359629, 6587, 233, 5, 33, "Input"],
Cell[359865, 6594, 43278, 786, 443, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403180, 7385, 230, 5, 33, "Input"],
Cell[403413, 7392, 50750, 907, 454, "Output"]
}, Open  ]],
Cell[454178, 8302, 5203, 135, 277, "Input"],
Cell[459384, 8439, 1334, 29, 100, "Input"],
Cell[460721, 8470, 524, 15, 56, "Input"]
}
]
*)

