(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    998811,      18550]
NotebookOptionsPosition[    995254,      18467]
NotebookOutlinePosition[    995629,      18483]
CellTagsIndexPosition[    995586,      18480]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s", ",", "portfolio", ",", "data", ",", "symbols", ",", "std", ",", 
      "return"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"std", "=", 
      RowBox[{"StandardDeviation", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"return", ",", "std", ",", 
          RowBox[{"return", "/", "std"}]}], "}"}], "//", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<return\>\"", ",", "\"\<std\>\"", ",", "\"\<ret/std\>\""}],
                "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], "&"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9, {3.6701716503770185`*^9, 3.6701716506582756`*^9}, {
   3.685305952518339*^9, 3.6853059537176065`*^9}, {3.6967608776432834`*^9, 
   3.69676088094309*^9}, {3.6967609151895046`*^9, 3.6967609377087526`*^9}, {
   3.696760993933354*^9, 3.696761073622054*^9}, {3.6967611222038827`*^9, 
   3.6967611349350204`*^9}, 3.6967613481293807`*^9, {3.7105957860015736`*^9, 
   3.71059578815324*^9}},ExpressionUUID->"8c08837f-8e1b-421e-be78-\
0bc82eda6287"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start1", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start2", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "//", "DateString"}]}], "Input",
 CellChangeTimes->{{3.687000687380389*^9, 3.687000691123763*^9}, {
  3.687614865311994*^9, 3.6876148655927954`*^9}, {3.687615693446018*^9, 
  3.6876157159117823`*^9}, {3.6876157613395433`*^9, 3.6876158485145035`*^9}, {
  3.6876161174929743`*^9, 3.687616121566601*^9}, {3.6957146336464562`*^9, 
  3.6957146442638135`*^9}, {3.695714683683401*^9, 
  3.6957146874316454`*^9}},ExpressionUUID->"ca58564d-e2c2-4c41-a41b-\
4195dc58339b"],

Cell[BoxData["\<\"Tue 1 Aug 2017\"\>"], "Output",
 CellChangeTimes->{
  3.695714691871008*^9, 3.6957281132851152`*^9, 3.6962338966179028`*^9, 
   3.6967607209181795`*^9, 3.6967614646181746`*^9, 3.69676153070809*^9, 
   3.6967617322874737`*^9, 3.6967619060619135`*^9, 3.696762055027141*^9, 
   3.69849774408033*^9, 3.6984978125269766`*^9, 3.7020194263341355`*^9, 
   3.7020197015737047`*^9, 3.7046909729002047`*^9, 3.705041397935094*^9, 
   3.705251975042736*^9, 3.705314779789386*^9, 3.705314925688922*^9, 
   3.7069033691352315`*^9, 3.7069036343350973`*^9, 3.7105682619466543`*^9, 
   3.710568331342247*^9, 3.7105683747946987`*^9, 3.7105814140079*^9, 
   3.7105814838211145`*^9, {3.710581549927876*^9, 3.7105815723427267`*^9}, {
   3.7105949075188913`*^9, 3.7105949344129577`*^9}, 3.710595485156376*^9, 
   3.710595532181919*^9, 3.710595595567172*^9, 
   3.7105957927728176`*^9},ExpressionUUID->"6edd0dd2-ba10-43df-aa41-\
180713db80fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<PUTW\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OUSA\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<GSLC\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<GURU\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<TLT\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<OUSA\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<GSLC\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OUSA\>\"", ",", "\"\<GSLC\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<GSLC\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<GSLC\>\"", ",", "\"\<GURU\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<PUTW\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<GSLC\>\"", ",", 
     "\"\<TLT\>\""}], "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<PUTW\>\"", ",", "\"\<GURU\>\"", ",", "\"\<GSLC\>\"", ",", 
     "\"\<TLT\>\""}], "}"}], ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7046912590027647`*^9, {3.704691320868693*^9, 3.7046913619411926`*^9}, {
   3.7050416338567667`*^9, 3.705041640480579*^9}, {3.7069033536388907`*^9, 
   3.7069033670207906`*^9}, {3.7069035797598486`*^9, 3.706903606180378*^9}, {
   3.710568225137865*^9, 3.7105682561776037`*^9}, {3.710568327260388*^9, 
   3.7105683275636005`*^9}, {3.7105683650758905`*^9, 
   3.7105683683781853`*^9}, {3.71056842746857*^9, 3.710568455356102*^9}, {
   3.710581351825737*^9, 3.7105814033368454`*^9}, {3.710594899331478*^9, 
   3.7105949241959553`*^9}, {3.710595183348261*^9, 3.710595187412383*^9}, {
   3.7105952213365235`*^9, 3.7105952239515114`*^9}, {3.710595528125757*^9, 
   3.7105955296509542`*^9}, {3.7105955844155025`*^9, 
   3.710595592135502*^9}},ExpressionUUID->"9ec59700-6cdc-4997-9164-\
7d1dbcdd846e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9863790526182195}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9925567133485148, 
        1.116109927954422}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9863790526182195}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9925567133485148, 
        1.116109927954422}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.113445284190429`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03689740472774874`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "30.176791359882856`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.710595797262306*^9},ExpressionUUID->"a5266a3b-968c-4ebe-96e8-\
3eb052c1fbd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zsSM
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zsSM
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9280051617847918}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.0850624298445972`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9280051617847918}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.0850624298445972`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0799414109716436`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04123972108888031`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "26.186923249168967`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105957983791876`*^9},ExpressionUUID->"4c90fc02-8c63-4c78-87bb-\
86d13ab1264d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9444518493100343}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9535696692313306, 
        1.135926067657256}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9444518493100343}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9535696692313306, 
        1.135926067657256}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"GSLC\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.133150463643311`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05130638057053226`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "22.08595599694542`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.710595799536086*^9},ExpressionUUID->"52ceb7f3-a520-4cb0-9902-\
0f0888ea789c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zy/JzqOen6uX///+/wIE969Z
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zy/JzqOen6uX///+/wIE969Z
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.963816181629043}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9751957959579616, 
        1.202788082536333}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.963816181629043}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9751957959579616, 
        1.202788082536333}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"GURU\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.191885362396163`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0645721381797115`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "18.45819878349099`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105958007590246`*^9},ExpressionUUID->"f3f9988e-ea13-4b5e-a372-\
e258bc8d8d53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.8340809297095327}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.8421317345342937, 
        1.0031478310295134`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.8340809297095327}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.8421317345342937, 
        1.0031478310295134`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9077649997682873`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04673442667654469`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "19.423903625715834`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.71059580219215*^9},ExpressionUUID->"87ee9e9a-cc5e-48db-af0e-\
f06338f2bda4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zsSM
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
fcxpt5MB/x8iTrze
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9264527868793004}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.116109927954422}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9264527868793004}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.116109927954422}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0966933475810363`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03815014500467431`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "28.746767474846163`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.710595803329049*^9},ExpressionUUID->"c21d930c-5f68-4ebb-b067-\
3b8e319ffa7e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9444518493100343}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9535696692313306, 
        1.135926067657256}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9444518493100343}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9535696692313306, 
        1.135926067657256}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"GSLC\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.12329787391687`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.043803239724548935`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "25.64417337577277`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105958045669837`*^9},ExpressionUUID->"b25b6c3d-04f0-46f3-b6a7-\
389421ae1fe2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zsSM
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
o3nO+oFlmmfax+6oGFz2L53SnHU=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9254619798941588}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.135926067657256}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9254619798941588}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.135926067657256}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"GSLC\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1065459373074773`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04599210778448295`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "24.059474344874655`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105958059010324`*^9},ExpressionUUID->"77b62383-4adf-4bd5-9b21-\
6fcdcc32a31a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zsSM
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
kRmXaM9ZpSwz46sL/z78P5kUoB8=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9254619798941588}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.135926067657256}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9254619798941588}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9354840793114491, 
        1.135926067657256}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"OUSA\"", "\"GSLC\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1088457196017945`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04250914627391468`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "26.084873887063377`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105958078795576`*^9},ExpressionUUID->"01a65808-5611-4e0d-bcc5-\
b8a892c47a19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13lcTPsfx/EpskUL4WZtipLyaxKlRebgtgjNpRuRGpR+lWpaNG2UVko1
WrSJEWVtsf9ETBQVrgmFSjcVLqc0pSKi38f3c/859/G4y/Mxc6bXvM+53+5l
7/Db4C7PYrGG4c9ff4c/ZGxPmvr3H1fAXzTWgsuUeu7Nutnzy7xgcOGL6plX
aoijxL/e/97IM6ieuKwOLNhQbxk7hlzPtfWiKasz0uWf8PMEgeCpf0axHsoT
i/PBhx9te1k2SK6XPgBfyVczeaZMXmf1gXXWBd4cnEQsEnjTlOnvu4I11Ykl
ueDAUpdYrZ/kelkV+GQVL71FDvt7wD4Dq4Y6lYh56rtpKvaA5oIZE4nbssCT
v/aV6ykSq9wFR6+pGipVxf6u3YzPF0zzoan0CbfGzOwlFnPBiUPB1969JObc
8WF8X/4HMDvnZtn2bvK6aIovTbUlNb6LaCWWLAfnVDUedmrDfg9fxv5lKn7M
XjPwteYA9+UTsNcdbKvgEpP8lVzPTQV7DCeeczTEPScJ4H6s+O+CgiJi1jKw
aePjtV3G2LsDXBynX6+8lJh/CJzW2aHRshd7r4HNenI6hO7EGkv94ftF5Imi
AvB5cAXzZ7cmmAbj83AQfCtPJpiPz0fZZX/G/W17DW5xTDVR6cA9nQNoKtL6
ub9uLu4ZD7ZM3RJ2rw77ywIY72c1gx2f2TZJRdivEEhTLvEzX7lIcc8Y8JhM
1fHZZbhnMdh6XRLrZyT2vwTLmVuGPziK/fJBNPVFaaNB9XHs1wfLCflTQhKI
Vc6DUx6n2Q2fw30bwKOozetO22H/CPhd6/Uvoc7Yr7uH8bp0I3j+he5VH61x
36fgjZGiOW16uO8wuMJrEZ+9Efu1gxmfJ+OB9a+2d444YH84uK3hrqObPe47
BB5NLzk/dx/uqyVkXK+yHpwxWFBTY4v9IWDHz27XEjSxvwC8KLJpjoE67ssO
YbzOsQNbWLGsIps/kf494FXq3RpVF4hFx8FBfLf07QnEklpw1sOhg6diiHk2
oTQ1ViwQrdbGfQNCGfuUHQUXaluy1JKx/z64V8ElpTQN+3vBFm/3zrLLxn39
whiW5oQx7j+rKozx/HA+gUPnVPU7f8f9fwtnPE+yI2CTrVvHNYzH86ISfPz6
XPv4WXhe0GCrN+rtp2fgv48rImhq9oH0YhMDPB9ug+vcMy4tZuP59g+4wrfk
Wc88PN8m76WprnDzMNPRxFILsEjodzboNfZ6gJVsOsZqy/B5eAvOKVlYIsDz
T6K8j6Y0LXLnqmoRy0zB/iNRL0IcsdcNnBuo6Ffvir0p4N9WRz6ODsDzYmIk
TXVnTvBq9MHzwgQceHbb0t4D2L8dPHy/Sc3HHfuTIhnXi68yr+csiaIpxXU5
n1YE4/nmAs5U+6y3JA7P5wNg9mmhTlwo9l8Cj/4rmtPgif0tYOm4n6pO/rhn
3H44PzkjIYr4eW2l4NkG+zIUN2FvE9j/RuWEYTR3dDTc7+knE6dY4++HYrBd
0f5aTeznvAD/jJSzFkRin1wMTdncWLq3S4h9emDl9PBKKhr3OwdOObxkmlkg
7vcc3Fq+suc79kT9BHO/1K1M3Yu9C2KZvRvAqzez2irCcK/vsYyfJ50fR1Mb
JvxewY/CXh74ruONJde8sTcMPMXMwjgI3y/5Cr49EJOV4It7acbTlMFmM/Vr
idi7Dqxhs37gcyH2CsFe+6P1BMew9wTYyXfcxWN5uJ9GAuz3ZNTUhn/v9xpw
tZN1UvVBvN9B4NryiAX98dh/DKxz5EnrZhH214DPKbKaN5fintYHYB9p7NDz
07inP7grurZRWIz9eeAC20zx9yvYXw12il1zU/gI+2XgxnnOtbxW3NP3IPSb
zu7RleGe2eD3r/7zQ16+l/TfA1vpeo/mzyTmdoP7jumk+M0gFkxPhN/fbu/e
dmgScyTg6uW7dhouJ+Z/BI+9auDKMycWqSUxLLEE913xzLaxI+ZVgFkeJXto
HnHUe3BlC+e+PJe4TPUQnN/pawpvBRC3mYMFf4YXsbdh7y7wpUerC7hbicWd
hxifL1VKpinXqWqlr7CPZZrM6OHs/PW6+EyAnyn2J4PXiNvPe9gSyxRTaOpC
i9fIN3tiDWPwwmYth8/Yx+ODG/qWZXXwsT8RPOuhCcfQGfuvgF1WyunztuCe
RqmMzxNsA5fpuKTxZmF/Algod6qxUBv7L4K97F2H5NnY3wKOcqDbg+fgvltE
NFVzT8l5mjruGwtO9nS96GCM/SVg7vi2sz/w+2q8AhfZvMm1t8b+UYdpKk5U
PK/HAvfdD85cqWpZboD7XgAP3LnPebEI+xvBhf1Bm+Lw/gtYaTTlfVHPvF8P
+xemMd7POQue+8cFo3xD3PcZWHuhi0Qe3y/6AQ7fmepwB7+PRCcdzvemoI9W
CrinFPwjO6TCQgf3/JbOeH/bvAzG91exz2B8H24o+PazQW6UEe75Bez9yVCW
7IZ7ambCeT8UW24Yjr1rwa/9r6/ghmFvMJieeLWuKQp7xeD6RUZv/vbDPece
gd8nLeufeAtxT1twRL/cOq0I7A8E1zrsdwgLxv58cFHce/sPkdj/AHxWdoPd
KcI9rbLgvGmfoy+XinsKwO6eXUV9aGkueHhynI4gG/urwRdrvUtsE7G/J4vR
K/HJpqnrSdcv7MvC5yELnPKt/uz/0rH/LpizKUK0GJ93XhdYoZQzYu6E/dNy
4Hl/amydFYT7ZuYwfh73DnibyGxG8hHs/wAet2l8vLQA+6fkwn/fKA5Ieyux
fzn4565eL7MK3PMd+NGwU7OSBHtV8hjvl5mBL29pLSp+j73u4JNnwpLb+3HP
DrALu3hy72fcc9JRmrppJDKa8gZ7l4Fl475lmPZg7w7wrm8uxx27sfcQePVK
Pd3BdtxTMR/Ohwxlc69m3HNpPuN6vit4ieiBsp4M+w/mM66XXM5n/Hze4mNw
nh7J2i0Z20f2dAZbeIYeFX3A/nhwZ9Ue41ed2F8G1l276mLdW+xvBocK5xs7
dOGeTsdpyjCk+aEe9khjwEnH/n66rA77S8B3g/3EEfj5nJfg+lO7VbLuYb+8
GO5/1tER+b9w3yjwYZGT/uN67G0APx6jp+DQhPd/BKxpfvXSo2Ls1T3BuJ57
hmnBU/AEzf23NtZg7/AJRr9Uu4CmPAd6hP/g/WL9ATZ45th9aTzZR/QE3NFk
7ygZRywZAnvwvHP8lIhlWidp6mHlTL61FrHGeqZ5IeDp5ZpfTOcRtw0yX1dh
n4LfJ5z+JxJ9Yq4dOM/A0uyDLrFgD5hnYnJycAGx+DhYrdK9zk+DmDOnEP7/
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zy/JzqOen6uX///+/wIE969Z
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
AnB12ZWKt2gz1ll4Py/Npv9y/7Tq/xeirZs=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.9411087485660804}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9535696692313306, 
        1.202788082536333}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.9411087485660804}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.9535696692313306, 
        1.202788082536333}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"GSLC\"", "\"GURU\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1461603700766343`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.050674892289482215`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "22.617914282464586`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105958099281626`*^9},ExpressionUUID->"96ac14b8-8e79-406e-839c-\
d932aadba760"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zsSM
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.8274420178781455}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.8421317345342937, 
        1.135926067657256}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.8274420178781455}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.8421317345342937, 
        1.135926067657256}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"PUTW\"", "\"OUSA\"", "\"GSLC\"", "\"TLT\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0585755396434178`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02902885597338236`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "36.46631960329629`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.710595812485137*^9},ExpressionUUID->"1d5a3315-c739-4a74-a49b-\
f11f1eee5f50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tcTPkfx/FRm1YTDdou69JFiJIkXdyas9alhAkP+8PGVCJ0mcaUSj9N
F0WpJpVuqtE0vxAql82lMrqo7adtdFG6/ISVyyH1m9Uq1H72fPafr8eD9Xyc
M+e85j2neVgTz4Ct3mosFusL/P77v/Br0OQgTf3zVyf4w9gVXJmtynLv/PC3
ecHgwnnjh+8PMhZLwU8OjC/Z/pFxaSP4mgtb+9F05vVc50M09dGW3egyjbHg
CPisTDBii8eluWD7Uo2iYi3GynrwwmC2pFePMev/4FcJ7BYvA8YSwWGakp1n
6741ZKzIBj/zT3oQPpvxYC3Y9Zxqcdv32P8B7DFvqv0pE8Y8Q1+amr1yaqjO
HMZ9Gb7EcU41ON8s/FL7Qux/50vcX6DnR9xfyvUjeq3vgdX2Jclvz2LMf+NH
3E8y3Z+mcmOSvlU3xv5V4CbTpKfz8HqDB8C7J6VZFMxnXMoJoKmvWtdyb9th
73JwDCe7a78D9nqD527Wd86wxd5k8O2K1x0WD5nPQzlZQOzDchAQx609wVuW
v944sYYx/zS49nyUVewE7P0FPIWtDN2ljnsuC6SptTs18s98g3vuBVfFaMzJ
12QsPhVI7FF6PZDcuxdsMFB82d8M9/xZSJwvjQW/qlCdmYX7KUvBPo/Xnchd
gP3dQuL9WGscoSm58FlwMB5XRIMNjNL8zNGDV44Q9zfuBEtc0oZsLbFfTQTP
qyA8xcIa+y3Bm/hpS+8uwn2LRcTe3Hawj3xP7Yt/+sdFxP2kC4LguChYfSF+
vsptQcT1+C1B5PPwBdwwmpXZh5+vYl4wXE93ls2vXOzngZdPmjV1Itr4GPi4
amZzxGrcdwRs1Ww6au+K+845SlOBt01vlblg/2aw7bt8DaN12B8Cvt87M3Fk
JfYXgOMX6fdvssF9TULgeWjO0m1bivtuDCH25geBl6SezKnlYH8+OK5t/Jjq
C/P8KH4NIb4/eBtCaYr9MmvHrmW4rxB8VF6u9tQJ+8+Bq8ys5j/kY/8D8Fbz
suNWB7F/CFzRz9H024v7BoTR1I8RZbHrA3DfLHCVYTntG4L9teBji8sXqUKx
f4A03+AYcf7gWbBqV3nZeDjuex8sl1dXKiXYT4P9P1bozY3FXqdwmsr4Ul33
5izuWQX2vFs9vuMM7vka3NVfHe2Vjr3T/k2cr1wJltlV9pTHY+8BcNc2Lcou
Dvd8CfbyWyz48QI+DzrHaSoooo/Ouou9jmDnhnWqkErs3Qc2X9b5Wv0W9iaB
mx5+2u6Lr+/TjqAp/UmWaS9v4J72YGd19+1lFdjvAXYzvH6cW4X9CWAdVfvB
Hdex/yZYszfCqb4M97QVE9fj7wF3JK5aO3oH+0+CZ7rW7Jbg9RTXwEZGUVWi
X7C/Bxy6NX/zcbx+6YlI+P4VB9lmKLC3JJK4H6cLbLHmymXjEuz9JgqeB6kr
a7Mc97sCth8q7tx9Efs6wId23/z6vhr7JkTTVFRnU2/rA+yzAA8UBcyv7sT9
LoF7j9W0yNpxvzbwjDc97kI8Lh4Dt3v7XdBtw17zGJo6PLGw5l0r9m4Fj7XO
CO/rxr0+k1bOPUFT3NFPksZ+7OWBHX4v2L/iJfaGgX0+/Tbe3IN7fQKr3k78
4Psc9zKNpanLSTGh4hHs3QTuz2Pv61YbYnqPkhafB/eevOnoOoExxziOplJd
o0Zb/sD9XMAJdpbKNSr8vEXgHM9OM89h7M8jjysbwMON5bdGNJjr8defhM/H
Jsyf9y1jSSBYJ7p/RH8SY0UO2LzudUjdZMaDdWCHobSmFxzGxoNg/ayVZkVa
jEv9T9GUdfdq2XYdxn2Z4KC2ru/nTMP+GjBXk/5TiOa+B3u0B3gZ6zMW6McT
x60V4DB94fOmGdj7Fly3TW6y3hx7dRPg5+Pg542PF2DvatK8SvCAvbg82gr3
fAWWfXYN0TLF3qmnof8/Vglb7LB3BWnOfrB5S9dTP0fG0t/BRhUxN/9nz1g5
JZEwyzGReL21F3mcnwjWkXTyFba4JzsJvr/F/VWe1rinHfizxO9iJd6Pxwfv
fMiWOlLYHw92cMxNr12B/TeSiD7u0mTYL36SyemVuKd7MrGnNA58iK5LLDHA
/rJkYl9WTzLx+Ul2SYjXK2LAvelF0j8ssf+qhHg/xk8kxPvlqafA5/vco7Hh
B9w3MoU4n3MZPOZlqV2wBPsfkxawzhB7SheeIY5bXwTrTok9JVuF+7aCh6cp
xF24p+QruD3CLdjbAvvnp8Ke9wwdU77DPZWpxPNROppKPD99ZmnwfbOoQdt9
FvZuSSPeDzcU7Czdu3HGatzzT/CYYPYRF3fc0zQd9jy8ZameN/a6gjvsbWTa
PtgbTFoiBTtEyt3l+3FPo7OwV25jvQ8f93QGa8aJcp/swf4j4Et3r7LNDmJ/
Ltitpqhn62Hsrwd7fNi2JNAf91yXQRyXCsCGWXMNFwuxPzuDOJ9VBw4rihIm
B2L/B7DzFbdrNXg/hV8mTQlTLDewBPg8ZIATWq3qr4iwvxrMzfgcZ4vvj/eO
PF+sl0Wcz0kHaxWsaMiLxH3vgYcP3CnxisP+N2Aj1/S10kTsn54N1y98P9CT
iv2rwCn3b2z/KRn37CePKzg50H9njaFvOvYuBwvzZpdcyMFe7xzi/NIX4EMn
G2IMs3HPyeeI8zkOYA+hcFd8JvZ6gqMaG9Xr87D3NLin+pFN5jnck50L77fP
2GqHFPdcBpZlbgkQyfB52EtacgocdkP0xD4X+6+Dj8582JFQiHva5MHzxlqs
rn0d9/wZ3L+BVf2+BPtjwXb76+f7FGN/KbjX5lLGnqvY3w3+V5XRo8Iy3HNn
Pvy8rVkSdbsc94wG1w4WGZRdxP6rYOsTSyccqMD+znyyX00KPz8Tx37g4v0G
xVLierx2sHlA7+OOO9g7LiX2LF1wnjife+E8cT9BC2npF7CwmKPnVo+98wpg
Xy+nnwIasdcNnBqaHjn2X9yzGZyTTBcnNuGeI2CZnHo8sxl758gIG28mzQsh
3TcMVprU+Wn8hnuaFML/DwxLry5sxf6N4IFnou/OdmN/UCHRI80H133NitjZ
jnvOlsO/D+5msC4rh5z+Am51ot8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1wk01Hsfx3FbrhKNkjYJkbTcRrilEv82axq6raSJiiQUskw0IYVktIhi
DNFCpJLKpcZWobpDkVI3reTfrWmhRE/Pt9/3Oec5v85peZ2/+c97PvMbJwZe
gW6blBQUFAbg96+/4ZfcYAvL/O+fNvCHvjPY3OJZyaaaD7/M2wnuSs9XvK9F
rgslYKOU0s9TRxGXNIDfjrXZZckjtnXwYxlNjp7RNhfioGBw75kaY1s+sSQL
bBIWbnh8HrHsFthRdbrOzeXECp/AhdcHtcq8iUVBW1nGZvqqqpOhxNLjYPPm
zo96a4jlteCmN32rDq7A/g/ga7uz12zwIeaN8WeZZyHRihmbiDuO+VP351SD
lVTMe2p3Yf878JMD5c1TbLFfZxvLKMZkRHrNx35bsCStsKNpDjH3BrjGmP/g
hysx/y1t0YgAltk3w/VFnjP2WwfQ/T7gXSsFyTEBuCcnkGWc/2r3K96LvXPA
+y90e/yWhL2bwDmjF7tbRGBvSiD1/sg0glimLilx/2Ar3HM2eIZvor1LD3k/
uV7gKwL/jZndxPwD4JXDRy8OMMbeMrBxdf3dC0NwT8vtLKNxMO7sEA7uuR48
r1fz0+pBeB4SwPMLK5cws7D/0nbq/e54CrYOP+P/10Lc02MHywQsWbdlpD7u
GQ++0iBXibDE/hKw5lM1x8612N++g7o/d1AwtZ80FuxktUDuZId7FgVTr1+/
jf56nlIIdV6E08C1q0OLYxfjvoXgwNu9L8M8cd+WEOr1B/0EFwbusfwyGvtN
Q6nPj2w5bX4z+EueiCt4SfYWDYBXPlPa2mWG/ZN2Up8fOW8ndV70BTup/pI+
8E0NI2X/MNx3YhjLrL51M2PlKux3AefUS8tX/Y794eCeSVMKnxpgfy74bzMn
5VMTcV+DcOr1cJ3ATt2VywIH8HyEgu2E/FPidOzPBmdWrZXdtSCW1oPP6jZk
u7ni9wv7CJYRPx9IequG++4Az+S5hFWMxf5McJERN/GJI/bfjKA+b5yPEdTn
SxIYSX29LAPcE1rsVO6P/bXgcVuTP3/0w/734LrTfS58Ee4/WsAyxafqVWwS
cN80cO9Xu5u6hbhvFbhc0epBTT6eDxYc1aat9voc9trsYhnb8/K5qqW453Xw
t3U7Iicfwj27wMPW59Y6ZGDv8Ch4/seapm9isXdeFP39zSeK+n4keh1F9UqH
RbOMyrXnDkXF2GsFjl5bHGPHYu9G2ryDYN15hZpmX3DPobtZRi+3pXpeO+45
C3yga+Y0t37s3wDuZj2OhTzC/iTw+EBpV1kn9l8G+0za4imR454WQpZZYJZY
5vsJ9/QUUvcT7Qff/ofRK1T4SPovCqn7yZ+AB6lt7k7owz337mGZdxL1dx7q
5Os7zoMHR2pM8X+DvY/B96V+zQZt2KsSwzJZmc9OC2pxvyJwepbLk9xX2PcQ
vFwWoKysS+7HV4wFz13V6mlALJoK/i67KthhRqxfAB5V5KYRN5mY94C28D/g
hC9908/OIC6ZHEfdv8Mtjrou6QdbJrwTH51ALDPeS91PgQd+/vn8ZauxxNxI
+rr0G7h2lI7R5InEcsN4lrFPPfzZ2hl7l4LZCsF33TDsDQPPr5SUPdiDvTng
ywFVob8HEHP097HMw9IH+SGOxLaO4MwBSYyrB3FQCHihydgVg32wX7yPerzs
Njhk50LNCSLc024/y9zteO6rLsQ9t9OWnthP9cjrwDU5qmuWlGC/HLw/utvr
VgXuGZDAMtdnJZdrNeKe6eBrXlMd9nRgfw34w7h7ksb32P8v2D7ev//KP9g/
KpG6zpWCu3WtWz5pfiK93eA03dFj5qoQi7ST4PNS8NXY8xP2zgcb265p3K5E
rvMqwdYXI667aBMLO8FNNhbDyr9ir9YBlqlOe8aXLiDXO+aCX9u1e3sZEXM2
05a8AqfalZ0uGEMs00xmGb53aJW8B8+DVTL1ernev3x3hO7T17h3Mnjovdlt
R+S4p/pBlnE/OILHVyf30/8DHG0zbLnSv3ge+ODgrbo6GYbYnwhWMgrtCR5H
XFL66/F9/YYVHGJb8xSW+a2vdbOKKnHQOrBFdN2pYRfxPOwD++Xymi7X4Xm4
AF7qfs/fvh77n6RQ759orYhl+upSY9/V4L5xIrq/GFz67UKBcz+eh0ci6v3h
KadS1zv2pFKvj3MO3Hq2qOj9EzwPreAZ2s5q7XfwPCgcYpkpBc1bTnVi/5RD
1PvNPQsu9T4edUYBz8d92qIf4KHevEFWLPabHKbuL5SBW7XThI4v8Dx8B3+I
Lws2+YK9Rkfo3mXg1IviSNUJuHcE+E5LedDe4XgevoLzlq0bcFtCrGB4lGW0
pidFL/Ql5jqDs1+/XKe3AXt3gk2zC7frR2KvBPw5Ut8ucjOehwlpLHNc4Hfj
rQD3dABvrL7lk70Nz0MwWOeYyvjwpXgessDOr6/nbF6J5/kWWFZvtKgtDs/D
kmPQU51b2OmF5zkIHGXRtXbXbuw/DpZZaIyySMT+OvB7QYogJx77P4BNLWrE
tSHE0m3pcN7enw+ITieWHwM3ri/MP5mN/dVg82BxccIi7H8Hbg/umtS3Bvt1
MqjHc46CFeP+kDlcwn1vgBsbDof/zMP+t+DgnqFOV85j/4jjYH7P+BGXsd8a
PKtZ/ufsCtzzDbg4Vkv70Bns5ZygLJ8D/rrIXRr3Ens3gb2dr2ZWfsc9X4If
/2hzH9WJe2pkssxIgx7XtMfYOxs80zesTPkh9nqBk5pHaslvYu8B8Ioxwdfy
r+Ke6lksM4Ev2+BegHtagsf2rqyZVIfnYT34VVNjuvAC9idk0f2Xsqi9eDPF
8P8NH7fvTndwTw8xtU9JvJh6/o4ScEDS4XMxDdjfLqZ6JWuyqfvJYrOp/RWK
wbxFWvYj72F/Wza1N19JwjKzrR+ZHKnCfYUS6vXxWiTU44U/JXSvaQ48f/Oc
u6ebcM8zOdTeQc051N6SAXDL4fWVLxQ/k95JufDzlmmVV68WsYIrWDVccjLT
mFj0N5g5UZExbgyxtA/sudSk6dVYYvnEkyyTYuZ7RTyfWN8FHHbDrrZqGjEv
HHzxhXe5rT5xRy944g1DtSGGxByDPPj5yWxh/xtzYlsncMOfcUXjZxIHheZR
zy/JzqOen6uX///+/wIE969Z
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
68bu7TvYfSv+Dz5pq30=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k81PkfB3ChTVENIpKiEgopFBLz3a3cTDq2sIxKJcoVq2hNueWYkiNy
k2NMTbTZsqEDla2mZHWoVBK+jklWyfV793n//qnHQ3k+Po15zevz/sxnqO/2
dfIUFxMTG4ev7//CH5G6F039/1sL+EvNDuyjeWXkHG/wu1nB4CMZtoPWAmJO
HlhyX9+f5v3Egvtgg+iK+T9nEDOtD9LUnY/OK8NLiP0CwZlpI1VGX4jzssFT
mX/3HZImzydsAm8PP6mU8YCsiw2BJQ9FpCnMJOtcP2+asgmI4j64Q9brM8Ft
7sq6iy4Ri+6AxSfCTtx+Q6w2CGZceJNR2of5lX1oKiRbrerNTeKOdPAv5c82
mUiQn8+4BT789H5DzgxiZh/Yknei+8MY5lc8RFP6WkpFre2YnwnevP+FvSuf
WL8OnGYQdKNThjye3QOWnev4YOk3ss6VPwz5bZzWDYiT9foN4E4j/sVAfD7R
frCF3YFjX5qxT4YvTe3kLIsvwHwdpuDV7IV0Je4PwxN8Rfyf7KJM7DsZbKbZ
re+iQCyc7Qev97+5fcHK2Kcx2CVEaDerboDk3Q3++lV09+59YnYC+MM/biPX
S4m5V8FrPzvHLOsmVjPyh/XyqQKHh8Qsd/CUquuZjz3EnDiwwaDF8EdtzF8F
DhSbb+LkhX2/AttwOgoFHtinawBNXZpZ2NZwFvuMBqvVRvjLCzG/AGw04VQd
VIv5X4IXCKL0JFqw7+mBNDUqdT7VIB7nIQKsxRvkJfniPPDBxUOl+/1kcR6e
gfujSyI8+jC/+BGaypVWXbixHvPrgA1q3x1IaiBm8MAijVi+YjoxsxWsWjY2
7hdF7DcFNp3BTlRMJM7TDqKpxa6dOznlxMKt4FcZo13hZtjvEzDF/Gzecwj7
HQe31rbVGMYQ1y8PpqmFlZZufPx5Ihb4cWCFZU8q9h8KtigVLOfnEwtGwb7K
CVVJ4cQdS3+H83m93U7jLOZ3APfqyQ0aumP+EPDbxCkjzizMXwBW7WUb+4/2
k37VQ2jqegF3EUcL58MWTH3yXjlfG/MHgQtEW0cu2mD+XPDZxzO1tOdi/nvg
SSFXX3Ub9mt1lKaudpTeWSCH/QaAR4uZLa+HyPMJzoNbfBwPJPD7SP5GcM6a
6WEqFDHjE7hq0741/krEeb7HaOreuvW23v006fcc2Irf9K6JQdbF7oClT0m/
zNpCrD8AHm70rBnsIv+frRRKU3NCl+g5PiEWpYGrcz7ETrwnVrsJjnPcOrPg
LTGLBi9Q3DUx0EAssAijqdRS/+x4ITGzFnzacWjzpCR5Pr9ucEtowJzZSzGv
3HGaCtcpfe9yEfOagWPLPhyO20Msth/sLrVQujeNmPsB/GSP9WuzZOL6uX/A
/De/Eu+Lw7wm4FuRf4RqNWLeveC+oLLndgGYNwl8ZMFtbtcC4g6ZcOi7avZv
nZrEjHXgJpWu0ctMzO8BVhj+lVk71EvynwKXbd3SkqpA1vP+BNcd6RkunE6s
b8ihqSip8GQZFvbpBv5UGjVuqIv5Y8EW2y5v6rXF/JVgCduFE94WmL8d/LsO
oy3fHvuMOkFTJXrZPy1Zh3kvgZNUJ31mH8S8L8DK3QfK6ZOYV/IkTV1zGapK
ScT++OCE7XNZjTzM1waephLSLt6E+aZF0FRA5+oPTmvJfnBXgoUb97qLD2N/
5d/X2SO2/rpknfUUHGg23HxFi5gzCdbzPx85xiQWaEXS1KOdgbcm9XFencAP
hYorS+bgfo+BFTLko5/vIhZqRMH9YJ7o1DmOeVlgMYtjrnXNmPcY2G0VJy/u
Bvb1FayrviM2DedJtCQa1tP1+/xbMK89eMFeXdlZx3C/fwcnJGrQf50m5uSD
a+rsmvWwD4ZaDE0l9rtJvk7F/mxifujH7wh4eJ7po1lZuN854FPt94LkM3Be
74LbXAOKVPDxbMtY6KcusOZpHe63P/i16m9GMthnfRZ4howU5bod8zeAF78W
n1k5jVhNBHa6Yfw0fgL3/3AcTf1l6uE2ieezIwN84Jr6W7cqzH8bfHVVpfbf
ZzB/P7gyd7Df/hrmnx9PU4YallK+eH7168Fai//THf0X8/aCNwcX9v/7DvPO
O0VTfzDUYw2+Yl5zsPfg9rKrlrj/N8D5bg6CiYW4/x/Be93GF11eh/svmwD3
R8Ujywu1mHc92D5L+0+FYsy7D5xm6dEeUY19doJvB0wvy8P+hHMSacqji19g
wsF5MAE3TftkpuuM+feAxRwuVNgswfyJYHU32Yflpnh+pJPgPvlFk1UxB+dh
LXhRI63zZRXOAxt83erCSphDkj8ebJ/qGe/ogX1fAZ++5CjlgOeHaZAM93n4
t4+5OC9+v4Eb5T1/DcX9yIsB8w1W8yQlcJ4vg80GCtg92J9YO9gz3uXcUTk8
X85cmJ9VwUd1DIjrI7k/PF50ERxg11H9BM+b2nPwUunZucmfMb/EaXh+xSYf
Nyk8XyfAWlsWmd9k4X1QAf5ZNsrIV5uY+S/Yp2um1TELfP8VOwOfHzTke+sN
8TyuAIe9ppOS5+N9UAZe4T10us+YmN0CjrldIe93HPNPgIOb7//jXIz5NVNo
infgafJkDc6DMOWHdcE38OMY6aFN08l91rHsLE056u54d6sd8zqCGdL1Y9r1
mPfojxZ+AWeM9KQ8ycL7a0kqTRU5Dz4u/gXz2oH3Gc4o43pj3mCwq25rmJ4X
5oW5osKOP/DeeBT7XJxGUyrday7yzHCercHXg8MDLnlg/kCwbI0HM3gf5s8G
r2TLKRf9jH03gTfmBRsaWWOfm9NpivuT2bcH6tinHzjGvNraCC3MBBsmvo9+
jvezWMOP1h8Eb1PakavriH0eyoD5e7f+89H1OA/pYJU7a0p+3YH5b4G9jHgp
EtgPqw/cPS/K2P0u5lc8B+uyvIRLz7HfVPB5eRn9PQ3Ybx1YfOxEU2sK5u8B
qxquOTXjBuaXz4T3wyydhoN1mH8DOFbjoNdwM/bZBQ6xMqfcRZiXkUVTETYu
rLfiZH9FpuCBIJvjpRLEap7gkC6bwUwX/DzzHuyVfnC3SAfnYfZ5eP8IVdqQ
u52YYQyeLtdcfG01MXM3eKPSK98xVWK/BLD8f22+2XL4eUw6G85DteZDYwax
vhE4U/Knad6yxGx3cOD9r/esI4m5ceDB9Jh8pxDi+irwvPkKZy1jiFlrcmhq
nUTY3yfDiDmuYP7BJULVeswfDV4+qkLzHmF+AXjThf4dPh2Y/yV4i43n3tZ2
4rxdufD+NZavmIifH4UR4PBlL4zTSjD/RfCjvMXpQUmY/xk4v+hQzixHzC+e
B7+PKK7tE2zAfjlgp2yrFekamLcV3LHLJWWPJuadAi++XBhd2IPzq50Pv19G
Ug6bcX+ZpeDem7x3DJwXvyfgnBqtjpKnuP/jYGPN4J3ZMzDv8gKairxWYvji
Gc7vFrCq6ZT7s7c4D4/ALeVqkaYjOA+j4GrlnMnRtZh3aSFNvXyzx2fUBOfB
AazpbJyahK+PFQJ+mKAq3OaLfY6A+ffKdw9vwT7Vi+B+FyU1rsd5Y9qCrTwr
KZNxzB8EvnliwL6kDfPngp20v0h44/zpLyqG11vmsMpLpt/if21dr8Q=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Y7n4/Y1XlMP1yEZ1V4b3pN3/AWEFqyY=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6789984*^9, 0.8240989171341919}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.8421317345342937, 
        1.202788082536333}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6789984*^9, 0.8240989171341919}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6789984*^9, 3.710448*^9}, {0.8421317345342937, 
        1.202788082536333}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"PUTW\"", "\"GURU\"", "\"GSLC\"", "\"TLT\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0865615274995475`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03413918720835891`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "31.827398844267307`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 
   3.7105958150871716`*^9},ExpressionUUID->"e5b11355-b77e-41b2-8e97-\
b6a5146a79c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<VTI\>\"", ",", "\"\<EDV\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<TLT\>\"", ",", "\"\<TBF\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687720875048324*^9, 
  3.6877208755336103`*^9}},ExpressionUUID->"450dc594-3d9b-4fdc-9103-\
d430ebee1359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/of6VDuO/eOEHE2jX39N/weLOV7P
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
ntK/wp7V00TlpCnv2Co+o1g7MuRCKo1HE9iFiZEddJrG425YuvBW35csmt86
4KeSBivDyml+G3MPf0/o2KZNStTPi2FX+S+prx9SXlf44tvXf87mUL3PwXM/
2XrOekL1HFXNZ0Ty/0yaW03zhREscLEdH/yY5osdsOwm7wenCyl/ZPWAz2su
rP7bXwYBiTbUDwvvo972/jsT6HrEb4MTS+dqN/yivPlwgWaCbxrNR1qfYAvn
8yUjr9P13/IA9/Pee86vXtH158F+3Cecz1co33uYmbtb/zv1h790Dca/VUld
DuWROQVfkx4S7smn+mXDWhWC7EO9dL3fDnS8ZC360W5SpL0a9asevOKAl6QZ
zS/c2/Cn7k3mDhV0vV/DEzZNXJ5E80nh0DrcT1bEPIw+Q9d/dt2A96vawavc
Lly16qLrLfYQ/WvvcXGsGI1/bXj1sTnjWlqpP23g0yaa3Znb6X58FPbqWra8
JJnG/+B6PiN5fG6vOL2uNQO+sE3vWYQHjX9rePSJV01Dy2g9cRi+VtGgujuF
5t9rsNTyE0uud9D4n9bAZ7qEhslf2cKul/wt4QYh2V8ff9H4Pwh3dl+Nyoqi
9URyw4B8Mo/ggPjxn9850vxl8QjjfVtLWeZ+Wu/4wkFJWnlBayl/Epwt4rn3
Ka2/tB7C1XnbCxhaT3F74aKKwK6nxjRfXWnEfvxGQoXjRspbA0e3d+Xr6tN8
9aNxwOelqz3mMxuO1EwxsqL12UX48X2+sN4Sqmc1/EmotHrlGcr7HY46KKtS
WkF5VZ4M+PuFzOCyQWPXvxCn9W4lLGKUz6StZ13YBdvfvbV61S2ab5WfYv8c
NDmztoryL4UP7mrrf+BK+d1hm+Zy3rjZVM/2gZZRauIzk9OWrI2g9TPHGDYc
VLX1WSjl3wVb3jtY/ILWt/FR8PlY2/rFU2m9PvIZn+nJ+I+j8JjqycDjVHJd
vvZRP2yHHQ86zr5YRP1wBlZ9cm3etQzKXwBXFOZvCZlE/WD4HPvv31Pziw6w
TneGNQ37cuVtab8RDgcv8zlSe4a1TB5co+ljf6eR9hsf4SdepgZ+F2m97vSC
z9zKl86QCab1Og9W7nQQXNWk/DlwTIH9ufaPlP8d/Pv+PJteBar/8JfIn3H8
qqcFa9WTcM2QkuxVPNbmWfBEB+tt069T/jdwyspjM9/upfzDXmH/xBv9zfkx
5deFr2W52l6cRvuhDDj6xpNXN0fSfu4VHG/kZeJrR/u5Ia/5TLto359zdH4i
NBsOytQ5mNlN/fAcnic/OemIGO3fRJvxeT+eztKaTfs3LdjycLjF9LW039wA
a37enbrBjc5PjsDL9Eo9nOn8RWbQG9xvv086vGsJnU9Nh8uF1Tc10+e5WcFd
q3e1SJlT3kNwb+SPzRm3KO9/sLONze/tw+l8SuMt9lO8jr5DNbT/XAuPmnFy
cZ4I7Zf94PdCM/daVFL+q7Brcl+ydSDlb/j78xP1RaJ30v5zdQvy27iJcefS
+ZQPnB4qq/SJ9sMyiXDT+DZuzFDaP9fBHrPXZw6i/bfbL9jK22fyx4W0n/d+
9/f7ocXz7Om8UesynHQ4bK6mGOV/AKvEfzgrR+d1vB7YlL867Fs67Z/Hv8f9
weuH4YWvVM978E0HI5M5OnQe9Q2+OK9O8cQdOk8d94HPvOLwdnOD6DzYFOYl
6nZe2kXnDxWwvqbGpiY6n6rrhJ+clNCyTKLrr/wR48fD57zuZcq7BD76oHLh
bTpf5Lp9HHA9Or7A4ms6q9fFUD1Hf0L9Pyj/+LyP+mERbHrZ3GDfGcq/E/Y4
dGFr3Ceq91lYfMr3iho63+Qofsb904+Xe0Kc6smBfeb9lNpTRP3gAq/w6fqV
10P9cBo+Eaj+IfgQ5S+Aj272M5yQRfU04ON65r65GB5G9dwKv5l6pukk9UdH
GOx/K9QlQp7OT3JhM8cD3rPW03ngB3gd57SD3yqqr6OAzxx2XbTnhw3VNxR+
OFk8Mo7Olzl3YBFXvt1d+nvdWuC8vpNv5uyiep5o5TMf1Q/Z19P5MTcTHvLi
tO1sZToPbIal5/dlpahQ/0q0DXi9QwcOd3+Y+cGBznNuwS8C3wT6LKF+eAl/
lvOt9aT+aBb/gv4aGahns5HyzoK57qm983uof23h7O8yb3c2UT88g6fnRdyT
pPN6IdF2rMdNJzYFjKfzwJnwfM0Pzcn/vs9cD/efdJ8w4x7lD4B/H9hx+iF9
H6cq0oF6afuFHFhO52macEBu/8Qv++k8bR2sZnenSauB8vvDo3cornam87Pm
FHi8+KHE3x3UD1M7cX/QzfjIq6Z+XgP3j+rMv/CD8h+Aa/48WHFRmPJfhSXb
8lN22VL+erjp+oTXNWvp+xbzLj5zIKOm/+p6+j5wP+yVYeNsTN+PqybAjoWx
2l3/zltr4dg3DtxziZT/JzzcSLfD2JLOK72+4v7reKu+lL4P5Fz6OuD9bvfh
NV3rLI1O0HlrNzxcp2uFcT1936H6jc/cbRQrzhCi88o4+PuKwRNO0fkprwpe
oGK5VX0Snbd+hTeLxqwWP0HnrWO/8xnfhkpr/0b6fs4EvnLyyC6xKjpf7YBv
JzU80lakvGO6cT0rlXU66fyUsxhWkhmqz6PzYjdX+P2XzNgV6VTPL/AjCfcT
uVFUz1E9fCbO48JJfir1g1HPgHrzdsDbDFYUlM+lekf2/D0PS7J/Tf1irvCD
z4QtkrWvLKB+Xggr9Kit80ilftgG5zxae26eB/VDBCyaOGq3Thz1cz48sW9C
+pxpVM8FP/nMzkMKwbMWUD23wL2rnkt8vET5w+DHaatOKTKU/y68JS6kI/Mh
5X8PM+uv5X2poH7Y/IvP8FVfhKWPoHqeguXtZ43uf0X9kA3bKNvaK2TQ+fZb
+GHLmY0my+h8W7IX871EeJQRXR9OCDx/ibXsPvr+3u02rLa37pvnVPp+9jVc
471GaKQSfT87tI/PRD4PV5Hso/NtHXiDd8vZirX0/MNNWOn0ko2/8un5hxdw
4R2pmebi7PMnHWL9qN/pwtsVo1irasOdRq/EV7XQ98s2sG+Aa0R6Nn1/3ASX
qXEq4p7T98eDf+P9jSodH31Yc2bADkEaa36GsHazho9fkehdP4PyH4YfdGbx
cul5DC3hP3xmUYjItlgjen5jGpzxfbe5qATlt4R3HNe4x1Wl/AfhC5+bnhnM
pudlkuFfAm3dVBX6/nuKkICRrRCK9Faj778t4Gl2X+WwimHz+8LlZdmn2uZR
/iQ4Vjx8/PMeqv9DeKPa9w9SDlTfVcIC5nE4RydIjL5P3g8bC52QOKdI+a/A
TVM4t3cNpvw18LDg9rJlIyn/D1iuN3hRKX0fr7pPRPD/+c0vwjZbHlY5L6b8
1SIDPj/9OxxxYrpSzRLKrzJIwIwZWvf7ezjV9wKcW5w9MjCR6lsJW4c0TNkh
wl7Pui74zba2Zi05ev5o6WABM2iYe3vxAtaFZXDL0oOuAeOpH9rh+pL/5KUr
Ka+SqIDZ8/1HnvEPymsMv/H9kxpKzy/574LXaou5PRnBWqYNZiRuyCZbseaM
FBMwXzZrLDDaw9qNgcX1Vx0Wvcg6fjs8uq1um8ltynsGDnqs1yst3cnWU15c
wFwZ8feBEtY8Q/j+jOXGVatZFzrDp9euj94+kXVHOPzrm11KXxT1cx7sFdNh
IP2Cdfr8IQLmzvf+Ucc/sG52gt+dGi3QdKH8PDjrdNyS+Yco7zvY9IBZ6PgY
1kKbhwqY4nQzuV/1VM+TsK2hjsZdPj3PlQXf6honm/aZ6jtMQsDMXlT8VXwe
m8/8OMwx+LNy9HnW/hmw6cUFUxf1sU5/BZfqZfhn97BuHjJMwMzwGl8adJm1
zGxYaqdvhXkz6/gbcBpnqn6gTBdbv+fwq5YMjXwx1kJikujve6FGifqstbTg
h/tCrPbEs+ZugDUWJvtYLGGtOkhKwGzNGbT+Swpr8+lw9yitxrBNrP2tYO57
uX1Oc1mnH4LrHb2PyYex5ggNFzC7UurCXaJYu2nAxguvfBhNvy9+LWw0W32W
p9hXNq8fjL3NqvaXlDcZ3lu+oSPGgn2dN1lawOzbp7hBoMO6cDUcURFabXiZ
fX+Hj/SAv0c18e/ryzxljq2n/HXwg1dfrlU9onqulBEw+e94b6e9pHp6wx5r
lS1CYlhzLsMh28f6JF9n7fYA1nP+0j8ojOrdA3OK3kVsNqf+jJcVMPLf1yuU
drHXm3cPjg89y5+uSv35DRbxkehuaKXxNW6EgHHufDxUXYSufyzsoBt+oHMF
Xf8KWKzMQeI+9UdzJ1zaXX3SMpfyKsvh83Xq4544U94lcLL15KALoazrSuHP
wuE/R41kLdQOG+6JCt3zi/p1tDzGe+DKTVH91K+L4JyG0KQX3yj/Tvh5YY6a
3S4aP62w6svYy6WXWJsrKggYxcKmxqxOGv8c2GFIrnXbeMrvAv+WfXOuQ4ny
n4YX7jcblSNO9ZRTFDAHdVOtFi+kehrADXbC7lf3U/6tcHTB5NBV/ZQ/HPbW
zlyp3MJaKxcWUX/7aOEg9voWzhuJv8/CQrHyF41/R9j21NjnZrOoH0Jh36rD
b1tofJnfgUdOzKzce47q3wI7JeoYhL2g+jqMEjAKpd/aA4qovidg4fMBtnF1
lD8T/nUt0+KYOvVzM2y0/kB7zmvqh2Oj0S8WD4aEpNJ8dQvu925Z+fIT9cNL
2NTSJ37MR8orroT67dscfISut+osuH5K7J2qcKpnOvxuv75Y61Wq5zP40+uD
8++WUV7RMfj8ytpBruWUdyYsrePgcCSJ8q6HXfZ9OlP0ger5FC6ufe2ncI3q
KaIsYJ7puZ0KOU35NeHginwLd33Kvw52nCyrOJT6vdAf3rxqXu0ST6rnH3jL
INc7Sa5Uz6ljcX8anVg4jvovfQ2sEWIjVV5J8+0BWFZ8eah/Hc23V2H16Xrl
wb50P5g0Dl4y46nPUrofmMMt0ipPeLo0//rAFzcmlS89TvffBPiq4kwL/THU
z7Xw9/SEp8ZTabytUBEwOzwv32N06X7mBZvVWB7YTvdb80uw/ru4ngdPaH12
H3axTpob2Ubrs264Rmn9wdwHtL7xVMX1GrV13IhxdP+Ng2Wz/O9bp9LzaFVw
ar9R/yN6nq3uK/zw0ss1g+j5O6Fx4wXMvXkeB5lttJ4ph9dmpuZtpfVXRwe8
vGyDleckGn9j1ATMTCu15Vp0fzZfDM8QZE6pnU31LIHrpDWtNDpoPfMFfthZ
NeTMfMo7Sl3AWO3qvPWDnt9zM4IbLELeBMnRemEHLJn+tO5YGD0PIYAjGpbb
3gqi/YXCBAEzfYTwo73ytL9YCLfmCMSbr9N6fRusffnnOG407S8i4Ie9vD0G
16ieIyYKGDWzBe/+o/Vv+gL4rZrd8WH9tN/YAi+c0DzCgp7vkwmD5++YcF/e
mdZjd+E1Gw+vONRF9Zw7ScB8E79zL0eO1ruO8Ps7TSPe36f1+im4Izn5wVFN
yp8NRwzyTp5Iz4fw3sKtpsurHMNo/7ZpsoC5EZ13j5dGzyeGwCk/lhps2UX5
b8MSWfvvSd+j5zlew1U+8/3nfab9T/AU3D/C38wVo783/iYsdt653WYsrR9f
wGWmvwKDwuj6i09Fvx0TTfa5SvXWhltNMhPm/aJ6psF7I82u7q+m/UUTbLPr
sH4ZPX+oOlhDwOgYOXQ6baS8M+C7uxvmTCqgvNbwqtMpdjdo/SnzBF43YayC
9guqp/A0AXMyrkTRVpL6dxrs8vDmA21H6gdLWDbO62oFn/IfhC1jnsS+GkLj
6zfc15C/ZTSNL94UTQGzzMH66Kx+6mcL+PALq4CtDbQ+94UtNpXvn6tE/ZwE
//gms26tKa3HJk4XMEveH+hdf5j6eRV80XbcjTuWND/sh6fp/NF6p0XryStw
eOKGWfZbaH1WA49591U75y7NDytmoJ9TJ5f8pPWc1j74s8klY7Myyn8RroyY
52yfQvmrYT218FLHOFqvfYcP9ETNkkin8eYxU8C4Wv3XeIV+3v8CvCpt+421
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
wfaWFedS6fxCdT/8kDduf0ol1f8K3Pb00Kn3rVRftQ3olyfBKn8SqR9WwMWN
fkWWfOqHfXDBIz/j2cMp/8UNA8ZHfDX8Nqs2ZMoEqq+ZjYDZM9VrpvpMqq8H
zIQEzWyaR/1wAdaMVVcP4VI/V8L29zaN2buY6t9lM+D6+bvbChhxE1UreXuq
bzRseDzoZqYdzQ9l8LvZwzJdRKk/OuC8l+I7H06m+ittFDA7fbxmSFC/1EXB
w0xVH+nNp/4ogUc87J0TPpbyt8GR3CpXY+o/7kg77C/FHuQdpP7jMbBdqLyy
sCT1Ax/2MdW4nUfj01/eHvubNsVd8XR90w3h/d+n5oY5Ul5nOOXBVsMZmVTP
j7CLlrCdL4/qKcsVMI5KTw9cOkd558M2wXv2BBZR3i2wmWFgMa+L8vJgk2Kz
qJWydL46fJOA6W4b0iiqybpjDtxpe2WppBZr1c3wVpUn0ow5a/OT8OshMzot
t7P2z4ITL4Q4xjKsZfQcBMzq1qMlyV+pnlyYd05p6RU673U7Dtstbxl+/y3l
z4Bvcr5dl6Dz47pX8LOdjXJRS9jP427cLGACUv15ui/pfDgIbkzz3TPrJ+W/
Acsuadn7vYjyP4cfPVmxzPwV5RdzxN8vqe+iZ/aNrWcqPPP+tydnL7GWaYLf
8HZe56ay5gxyEjBP7+82jUxn7TYdHhE06rLiR9ZC1+DZOfOcfdJYaz2G83b1
60UuYM0V2iJgtm2OOmrtz5qnAcv6z9XNGM+6cC284s+ySV4tVM8GOKpbrjTt
CdWzH17TNW294WD2/emTtwqYE7t9vv15xr7evBq+IFtWE0H1kPGFK+V5YQHf
Wcf/gv+UlPZy2um8fYIz6pdh9VJBjPKvgtc1Vru12FB+b3jS+54KqeWU/zI8
tcM5qy6Ydcf4bRg/G7o9gxeyVl0O1wif27etjfLvhaMsHKWufaX88fC67HjZ
wZqU/x5cJt39Jf4N+zrH1AX9XCJawnxi7bYHFk2cvO2TNvv++Fh4zcejzX9W
sq6rgIc7LvOv/5e/C/5Tu/uMMEP1ddsuYD46KXHLRKi+52GHE8957V3UD6Vw
G5Pof0KZ8rfDJYoSH/xUWJuP3iFgaov3nFwuTP1xFs5yiTe8YUD9UQw7RB3T
SDem/miFeZZjJBNmUX8o7hQwQ05FXhMoUH4O7LT5wfBHP9jfr1UA7x6fG2Nk
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
+vlaej83A86+vnvW7aM0D9o5OO8q7yxJ8aR+7eAR2YLIH9sp/2HYLDqyM5n6
KbkOh866MaORPl/4Cr4otvloGuUPXJ2L52WrIerMLurXH5adNWdJKO0vvFT4
08a79ooWlL8GTt8evtCVfg8w64cfxzttEW+l84NvHs6z46KTntB5nnMVDqsq
m+T0gs5r1bDrrjiu9mk6r/XCRX5VEiH0fB2mns9nbhw65fdEifq9Ah+cMMGv
g/ZT6ypYJ+h1bzudLwJ/w2cUe0ve/f98Of4O9uNUWXfDyZR/KfzyroiZKZ2/
uV3wfdWuMd/p+bpapQDni/fqfzro73GWwOflb5cf6qS8e2FtyYZjP+l8U/ID
/qom0VBKz/PCsXexX5ZV3s6bSHkXwbNLw2wCZlFeD1hhYnJTJJ0HA2Ngmcp6
q8WzqU/FQj5zYb3twt8GNA8L4GgbucRB62gedsEWBfkTz9H8cs/D8085vaql
ea++D1uvGjR3WwDNg9k97AcmIx+40+thrvCEbz2bDsVR/ii4+aSD79Foyl8E
6922Eiyg9UbtO5x1c4WQoXnLdC7C/CUscfWk+eaFw5cmCYNV6XW5QrjuSU3R
uMOU/yvM2DUXx9B5wkOuGOtZo61DKv17zll43JDREwQuNM934MumqkqudF5x
+AxvEE7zCaDzUJh0Cf4e05y/je7XEgN4Y07Lg9XUh3Uu/GDHwsDiYOqXB6ee
uVK/dgflH3Yf56nscK8h6ZR/JiwiP3uOkM4fcpthdenF87u7qN8P8MnFiX6H
aT+qFn+A8/6rhsA7tL9y9OD2tJs5XAna7zbAuotmnftDrzscgw0C/s7IG0v7
nchD9BP7yjtVifa76fDw2ID7PrS/W6+FdWxteuPo3wcGwYP33jh9XYz26xv/
/r3i1LVp7dSvVinu1/q48MV03vGwhR+F54gYvaP8gfDHUbUh48jVabDmGOXj
7RXU/yv4sZJ3nFEO9buqDPtR1J65H7OoXz/YoXjjoRR6XZgCu0yZl2RI5ym1
l/C7m7P6jDqo/z64z3tD/dBBdJ7wKeczS2IOZu+l/V4uGb74busyqVbK/xw2
P/Mqxpz2X48eeHS4x82bNZR/4iN8/3kuf39003wkwiL5j9sf0vd1qIR5/nIH
PIbReegXvD1v4wjjodS35WOc75tq4mzo9cAn8FaljCEZP2keOuG1furaImTe
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
2LmzJLPb9D8PWqrP
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 2.007886896082288}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 2.007886896082288}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VTI\"", "\"EDV\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.5431522593832547`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.1736426589684224`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "8.886942117512051`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 3.705314944965003*^9, 
   3.7069034649383307`*^9, 3.7069037328449516`*^9, 3.7105682953630652`*^9, 
   3.7105683517795725`*^9, 3.7105683944284306`*^9, 3.710581453565096*^9, 
   3.7105815053723936`*^9, {3.710581564095255*^9, 3.710581582483427*^9}, 
   3.7105949540693645`*^9, 3.7105955015931377`*^9, 3.710595549161105*^9, 
   3.7105956143497777`*^9, 
   3.710595818486801*^9},ExpressionUUID->"0c01ba5a-5bf9-4c9f-b0e7-\
487ec652b5a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
ZWNhoyOaLzU2sOYVwnk917+HelH+FjhsTuyhvTzKL/Ya9TDlaNUdoPxa8JL0
HzJStbQfugwfPd5sfbuE6vsalttg9KWknfIPbcL9yWxjh0QX5Z8F325uUr+f
Qf3wEg5ZVpvyIJV15+BmPpNQPGXmjsuUVx3+mXzbzfU15V0D6xQMz3X+SHnD
4SDLi5sleqieg1qQb3LLSslHVM+Z8LDdEcyEu5TXCrYauSK/tI3y7m75c742
q3iyNu0/z8H5WzxM1Om8znFGK5+xfe68u5peT1gNKxUPkX5iQfvlILhc6fcN
WR3af2bBX9qlgsdOpP3nI/hETkPL8EF0vmP+Bv1x1ePKwFuqpz8cl9fQISlP
51On4c7dZqda6PmPQR1s7fN2X28enf/0wTt+xeqmHqX9vO9b1PP+z+qIjbSf
z4RTRrxxn0O/73gf7vYbJie/mPL3vP1znsVUeOtS/inv/vn9kGpYLyf0xaEE
yvsNVjbyVOJ+pvO0ye/5zCi9tnSLm5R3KWwgaXX+dznt52/D+57sdrGj86m6
L7BayvEucxXKK92GftupqMSbQXmN4epD+l1ZMymvx7/u/AxraM0Y10Xna7IT
PmD9Jv3iUogonT8YwZFKKdPe0vlAiDs8YW3lYiU6n8g9DOfrvvo1bRXVc3z7
P+exHgbt/+RJ3wxrtJp1NtP5ZV0SnC9xtS+Arh/nBvyj8diNQrreCQv4uH9k
OdcsnUb1dIG/ft227tM2yr8fvji0bLhVGOUvhV2iC6oDzlD+9/DPj0L7J9L1
bN4owHi98tHkOZ1ncuPh37UF5+bT+xkUw862BlvyJ1P+N/C850+nv6B86vs+
Yn586asxZz7V8wpc/63TZkIc5W2GS/y+Rk1NorzDP/GZ0ORORQU6/+mcDZe+
qFTyvUX1vATPkFBIPHSK6tn47883i37mMyPmVK1xu055NWEdDe2kDZPpPG0t
/Pj+vY64wXTe/gIWlkvRqlOm8/bBHfi8SemTBfR8Q10N9njjqv9Cg55n2cAx
GSmecvQ8LiEMFlPIjCtdSedpwp24H6Zn+g3Q82SeCrwniztUjZ6HhVh2/vP7
uSFw+9qZ28xbKH82rFWXrhctTedpSl8wHrSmn7Km5w/pq+AlUiUuC+h5TF0g
zPQPuHbJU/4seMqjiF9f3Sl/PXxnmlKCLJ2flvG+8hnR55WZXmvpeYsf/Ov+
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
PoX988+E2tiYL/r/A3cYaeQ=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
YT/xP6n1gf/ff/4fL9JGCA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcjN8eB/BB1ixD9nWQEDKIEjKPvWyDZGciW7aRLQqjLCGMJNlqbAnJ
oCwJgySJxpYkjCLMJJOlyNL9/Hzmn3v/uPe+X+dZPs/3nOec80xaTl80emZ5
kUj00Uok+u9///vPVD+jwP9n7ov/kgbDXu299i4r98+Kc/DUKaUb0/5+/s9m
6Uqj8PftX3khLZkEf2sxyLuElm+A7ZvNDJtd9s+qM3D/Z28H+fL62uewuGTs
vcQ//9pl41cZhbHvK7rreLwyEE4a/LVaM95fEwt/mJK51r7CP+sz4ZR8nyY6
q38WlfM3CgvdLscHl/9n9Vo48bvP+3a07gRcZB5Ray/vb34MT7iye9HzX8z/
F5acbFP8u5T52wUYhYbvknvWoQ3R8PtyxSsb0OKHcI5/+H3/n8z/C9aYTsfN
oJVtVhuFagdnfblFa0bCboWO1ab/+GfFD/jJyTFbj9PqVmuMQvpDm/hPxf+s
Gwb3uxtZaRptXg63+Nxce4jXU32HAxctbxlR8s/aFmuNQvjd6JpPeT2DG+wT
ta54tSXvUnj3/XXd9/xm3khYPznQpgHrp2+qMgrmfSN/jme9RYPhoz1GPI1k
f0oXwy2Uk/rHs78U++EaO533OPH66ttwTeHarQXMIxmwzigkX1manfGd9VwI
1zV4XnxjZv4I+FVmSciYQua/CVff16LKHLYbCv47vlFRVWkR6zkv0Ch0vJe8
sfAz67kbPl9ptmM2z9dfhwP7ueefpkVG+LfnAWEqz5fWDcJ48VvSP4z10YXC
1U/YzW/K65mT4GrrYh/2+sL87+EfLpXtBbbLa683CluHfLn4zcT8vWCNy8xh
CbQ4Ed5ijN+n/sD6voV33/oW7v2J+WtuMAoDWtQ+Mf4r8zvDriMnHZn0jfmn
w76LOh6fz/yKN3AblU+V9rTaeqNR2KjN+TaP99N1h3W3lj97yHbzNLhvryHl
k1k/yRbYc8ajxSvfMd+UTejfxHCfqI/MtwkOnO2iaPqa+c7CTyVzbreiMQEY
hbh6LxWJmazfRPjjoiTfqFfMtx4Wd7mSvOIp88XBPptkUW8fMl8WfO1j5t8K
j1i/cZuNwh9f/6EFtGod/Pqrf+QMPfv/FJz0LVHyOoP9/xQeMHhs0pn7zC/a
gvvv2jVqPq+vWQOnavKjimh9DLymy4IVWbye6DEc/2xZ7JwnzNt2q1GYUzg+
eeVj1usY/KVnwFU/WqKH13wKcRnE8+Wl8NND/o4pvL7KNsQoLDtqmCp+wLwj
YFvNpEIZj5fdh1cdWvc0Lp31LIE36kO8Splf03KbUTB22H+3Jtv1Q+G5zdZV
XsJ20XJ42oDtwaFsV3+DK4X2iOrJ++mabzcKMcGZiVPvMf8Q2N9t78AqvL9k
CVyj0dkqah4vPwj71NxQVM5SzyY7jMLlrR7qczxePAiemla2OZD1kSlh97U+
ez/yeOU+eE7ambNLWB9NMtxwtkenr2kcD/3VRsFqV+zjmryfeg98utRwsybP
192Aj3gc+DPpLvOa4O2tfpQdSGU9fXYahc6X+zrv4XgwXIM3d65ffzDziD/C
0uWuy4o5vmQ2oUZhxdYCr53ZrN9OWFzqPXkax6coCX4SeXytN68nzYeLFdNr
NGO7QrzLKPgNHxt42jJeXeDCfZ/LbJhXchletOzPrS7sD3ke/Ojipi53Lf1f
I8woeLfKLc3m82idYPuJ9UbKWU+DF/w4wZD/iNZU2432zt3Sz/N4vSOsSD9f
YMN6iabB8xVuy7fzeOlm2K1VsUTF59dVDsf4HVP9SJMs1q8L/LnhlMHL+PyS
yXBYswp57i+YdyPscD/f5/Ez5tXCLi45jYP4Pos77zEKuR1EwX/YLpsAJ44d
c+YBr6cMgnXPj0jL2K45DVs1rjhFyXrpn8GxH5xXZVvq6RlhFGZmPqsTxHqr
VXDAWd9OfdiuOwkbHEuefGE+8xP45OuC+9vYLimD3Te86JvC6xuO7zUKh4ZO
zTfwecWPYEW3D/6baNlvuKn35AeZvJ/Sbt//3V90DPbvNly75DbrmQGvD73+
3HSHeX/C03t+2/0whXlb7zcKnVRHftfneNQNh80tt6bX5/HydNgpNrN8l2TW
sxg2dqv2MontWskBo+Bcxxzkw/fV4A6rL5iOOTOPeBk8pX/4Winza77CX0KH
tJrO+uqbHTQKpT9CK/e05B8Cv6qysyTeMn594epLWzsUsj6KA7Bno0GiMI5H
c+NIPI9t/u9dvL9kILyytrCsJZ9Pvgg+vKjN+jF8X1V7YXUbXcMM1kd7Cy7/
se/fB7SsXxT2Z0sfDrh4i/WdD/c60f3na1oTDu+t5aHwvsb8Ovi3zcVO/W+y
nnM1RmG/eXijqkms5y74w/DdU8xXmfcqLFliaqa+yLwf4JSQOz+bxDNvnUNY
z+N/bKhwmvVUwxdSnOPUcaznFXjqz7TIMLbL3sEpl7M8Tpxl3lqHMf/2krac
oWXenvD6zo2nFcawnpfgl+qUme+jWc9ceE5ArFfDE8xf/QjGe+vrHueOM38P
eNuz0m9xPN+sgNuN1ryqz/NVr+G2wWPabuXx2qpH8b6mf/qdwHZDNzjbnHhh
Jy2eCg/e0PzmCF5PFgzXTEhYNuoY61npGNY/ryajrvJ4URfYL2NgePRR5p8E
OxW3eDLrCPNvgL06+2VUZLv6DKw/6yA9x/MlDtFGYYTnhR3hvJ98PLy5rW3E
Lx6vCoTrv0t64sJ2bSy8MzzkygTakAmvuXA9bccp1nfscdQ74tu8nbGs71pY
HL3eKDrP/Cfggj23qoxju+gJnFj191y5pf5/4chxwYcWsv90ATFYH7OfR8lo
czT8Jv1T81PsD8lDeECdXgVZ7E/5Lzi6VUSPxcyjanMC72Ne+dGXLOPhATzD
0K+qHcef8gecXndQYnuON02rkxg/zvqj9y8w7zDY54B+ye4rrOc9eHTD5nWa
JLCe3+Gwr3EXFlxi3han0L+jT9325Xg0u8EeZo/zNmeYdym8Z7N98nKOd+0X
OGBpo+P5vL6haSzm39eTZx/geBcPhoXucsNfHfMvhnVV67ULs4zn/XBIUUzJ
K+YRNT5tFN465y5ozzzSAfBSxaCjI3g9xULYs3IPRS1aHQHPqzp/ehXuF3Q3
YYlfdcfU56ynEIf3t9yjOaWcj1XzYNHRgIcnub/T7obV8606PeLxhutw11/t
Hszjeik2wrFHy7dda5kf5pwxCqcqv1pXgfOBPhT2qZPYPo/rn+gq3PVL2521
2K6orcX817tp7lLuj8074Ig+uUfy3rKeif+1HywX8jKHed/CVqPKL0ng/lpV
8yzqcyFy0D3Or1pnOGLKlDtOXM9kF+Enzm5NQzh/Kt/ADQ1tvna0rM/W57C/
SM/59JPrvb47XOj22iTn+fjgNQoJH6qElrJ+6lfwxTPrZVU4/+uqnDcKrY7k
9PvE+dXcFZ5zYrrbAM7fkimwumr+fifmk2+CM3dty/ZjvQ0V443CpoMj1o2z
rHdSeKGTndrMessmwjni7AwnS/718Is6FUZ9z2X+ONhDlvA2g+urtFOCUUhb
LGr0x8D6joOLRz69t4f1U6+DbyYnZC2yrM+n4FbNJkw3sz/NT+FhYzd+lFj2
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
D6cMuO0cx+Nlx2CXW99mDbHsd1oPRV6nVcclvL9oBJyerDmZzPVd6gdnnPGy
8j3K/IfhvslfswZzvVanw0U/J/houF+TDB2G78+dDcrKWfbry+C4kV7Jjbl/
VkXBtrfn3otNZ/67sP12bef7L5j/K9wmpkv/ZddZvwPDUY+GXu5HLfvJlOH/
fc83rRLE/YioCFYmuI18zf28tMkI9E+30pSptG4vbPvQoWIB13PzLbjslePp
F7y+pBC29y1MUnM/Lm84EuPD58nzWZa8/eDQpq/sfvP+4huwbdqKEc5XWU8T
XNdQsOGGZT2uJ8f17umrDeb+QNMXFtfo6xHB/Yd+LhzofH7+cq5Hig/wy2qV
7eayP9R1RpmEv10mRD7k/kXXG54zqr/XZj6veRb8+1pIr5Pcb0h2wiet+xzv
x/lcW2s09ndqZ62E65+hJ9zw9ZrVv7j+iL3hS+/btd3LvLLt8INH1WObM6/y
Epx5ZEu6h6W+TmOwP4h1q+jN86Ve8JDwi+XTLOvZVtiz5LpHvmV/mQCX5hmM
jSz7sake+B5rrst7wP2fKhjWf2h5SZ3IvOfgV82c5d05ngw5sPL8C/eIeOat
PNYkvHi6Wjmd+y/NBriGa9pnd8t+7AxsV+HXrHb8vhRlw1NHzE+emcC8Vp64
f7HVkkKON4UD3Nf98M+n/H40x8JZs2+OTWZ/Sp7Bvgd+3bV8j8nLjTMJPcxD
fi7n+FB1gNv53jrsze8n7Vj4wQmnixv4fSd7AscZ2j935HhT/oVtH1VfG8j+
1LQbbxJqDXi9byvrpR8NF//acHMS+0O0GrZ6/mKQH78H1L9gz/rLCj9Y9jdt
JmA/kLKhjzXfZ/NI+K/N3O5Sni9ZBd9s8GL0c44n+VHYfl+ZqbOlvq0mYn/v
Fp+xlfsJ8XA4PadxjzXsf9kKeHFZ+oaf3B8rD8HVlk2eE8B6au7BWwLn2Q9h
u9R9Evprbkb58uwPxVI4O2RJ4SRaHQnHXK61siHrp0uFPbvdda7K/jV/gVNP
rGn9I431XTzZJDRuUHFLP7Zr98NNm6w81Yj9YbgNp5wQLRE4H4nNsGhsywjL
962s8RSTMPNW8RgD5y99BLywmWMtf34/iG7BZ381DWth+d74NOW/3z9LVvgf
Yv4GU/H+G2N3leP4VQvwbLWkzWt+z8iN8LJOeZ8WWMZz3Wkmwd03ddYczg9a
V7jOvGGyJex/wxxYltE/8M0D1vM9vG/eptDH11jP2grMR89e337B+VLfC851
rpYxg7+HiGbB/TOyfIufMq8azpw0q8dg/j6jq+mF97FirXGtcllPZ1irmlH/
Oy2ZAcdUK63o+oH5t8GGLdPqL+fviaqLcM36B5svfst69phuEs6FTn69k/eT
KeCUQfG7Rt5j/i1wn5/j/h58yPzxsN2n81db8H3Wv4Ljx4/59ov3U0yZYRIO
mV8ueGH5++EmWHRo0xQH/p6rOwu/quK+ZwR/3zK/gEd8UIZW5fGSSt4moeer
acN+Wf7+HQcfC/188p2Mv6c9h6OH23zpwH+fIKswE+9fjCG/hP/+Q9kJ1lTW
tBnBf+8iioWHfa/UdJvl30NkwgFCUtEx/v6oEM3CfiAjJahyN+a1h+fc7WBf
Yvn7rAdsX+YbGca88sewqEA0Mo+/H6v+wO9PnL6l5e972razUf/XLuoIy98v
RsHVDrl16c3fK8UB8Bufldcm8/dBTSmsmC1e8oTtets5JqHyms2NZJa/d46E
tzrUObudf2+QroTdhZz+g/j3dcUReMCvCl6z+O8VzC3n4v6myWVu/HuEZBjs
UJRy2t/y987l8NSZlR3FfB6VBn7wPelzhbrMnwbbefddFW/5e6GbD+abiLHG
xpa/Fy6Be/fMeB7G+mkOwvcDM+3dLX+/vwPX2/vKeT9/rxV9gW/1yc56wL/3
q5XzTMKakffyuvL3ed0++Nelg9Yf+HuoORmuf/jr5RT+fiz5DA9JDGnRg88j
bzTfJKz7kzv5DZ/HsAdu7PXY6RevL74J99e2Xr6alhXAF9/fn3WB5yvrL0D9
stfIP7B/NTK4Q/jVQ0PZn9Lr8IM7sVH7+TyKj7CPKCmrEf8epLZZaBLuNPc8
oWC9dH3gP4m+tWawHubZ8LrPvkEd+Xxa8SKT0LrBJW8Xjn+DC2z8/NtpN88X
z4R9B94cPZ5/z5LtgMOXvLpa5yXfrxpKk1D+QFCuiO+/yBk+KDuR0J3zhXQ6
7LduQ6gd51NFCFy6JH7Yltuczy7APrfqf+j4mPND98WYv2UpmzT8PVY+DdaZ
P1zOy+D8sBm2vysO9XjN+e08HJP7xqW2kfPbS9i12eqsdoWcHyb7oj9nPnOV
8fdlzUb4wr4LB45b/l6ohfs2dx5vsvz9+wVcWn5XqoZ/35ZWXGISHG8mOs/j
79m6IHji4Au9htDm03Du9wVjE7KZPwuu92TRuyp8fnn5pdhfnc2ZZ5fK/B1h
SQfVjr/8fVZ8Cg4rPng+j/OV7Cl8x65P54CLzF8G/w53HyWy7D/bL8P72njt
03asn34MXLqqzqN7XB8Uj2Db9X0/GrheqX/DuqSsWfmW9c5uuUmYVmd57WW0
WQ7vL7Idtonzv8Qf9jumuuBFa3/CycNfNHrK9dPQegX6J3/9gY9sF4+AbR7t
/JHO9UbmBzt6f3Tbwf2g8jB8KKjeq+/c/4la+iFv7I0rPyzr3VDYs3vZtgWW
3weXwVFffpljLOtdFDy9cXfVNK6Hurv/nf/NeWtjy++tQ1aaBPnpgq35lt8v
feGQxR9+brH8HnEAPvbNPLHuOOZPgV8Grw2fNIT5i+D3pqEXHQXWd9EqjOcU
91eberG+e+G+QSP/rurL/MlwbfWZW6/kzF8IZ2laTHHqz/wN/U3C5biCWct5
vDkcbmpXx9NzAOt7Ax6deOT1ct5PboI3fui5IK0P8/YNMAkTnPWTs3i+7Brc
22N9OznzKj/AI2/fn3BgMPPWWY31smpMgeDMvL3hSr/lN3/ZM+9s2Dh7wBmZ
I+v5DnZ/WufQ+q6sZ601eF/qlLjclDJvT1j69GurT8wj8Ybt/Xc0L2O7fDss
7tTrj6I161l9Ld6HIHGOcwfW0wn2e/1sZF/eX+YF71wX9exXM+bfCn9rHhI/
iu2aBLjY26v5GjvW01GF79Erj2ymtmc9p8JjlioOHWrH/MHw5HEj27/m8bpz
sHX56QZFR+bPgQ8UO2750Jb13LDOJDR7sqz0Ec83nIF/Z07fvaIT82bDzb9u
6feLllkFYr06JFgNsNTvNHwvtf3td3x+6TPYyrX7aXfWU1EuCPvPfeVHX2f/
qjvAJfY1s9px/EhOwpqNxVfqsf/kT+DpP15sSuF4Uf2FwzduXnnFjXnbrTcJ
zl41X5f2Y97R8OCK275c6816/YI3Hyh4dI/X07fZgO9Px1B5FPtLJIcn7ayq
/Mrjpatg1/eC6zTm1f2AL/VZM9TE482tNmJ8unzN9XVi3uGw04hr+tp8fvkK
+GRugdC8C/Megu1/NsnO4/XEkk24XsDtV5HdWD93+OLa1Jyr3dnfS+HeQ5zM
RayfJhJODZszPZ711qfCIbknTnzk+FEMDsb8UcXj67fOrOdieMBs51QH1lO3
H167Jbe03iDmvw0PjKgV98iS3wwXZ0snnuzJei7cbBJytj+qt82F9YyAh906
9q6XA/Pfgg/rZvfwsvT/J9j1b8+OA/g8ygZbMB8EDAxX8XmkOnjYjWrRLrTC
CP8YXKWWNd8/dd2tqN8Wz219WH+dKxy2r372VuaVX4XrhN6zaevKer6H/8ze
MyOW/a2tHWISvrsJE135/IZecK1i/8cvOL7Fs+CMpB9Rnfn+at7C50Z9jhjD
90VfcxvmU5OkczmOd1FPeM2Od6fi2C6dAQ/r1cF3j4T5t8FZaT069mvFelpv
x3zf07D1XXPWswdce8rwXmttmV8B/1g5d8EY5lFtgR21h3q4t2H+eNjv3rxv
jSzvf7cdJqHXvsYfy7F/lVPgpIzLn7dwPGk2wQ2jF6sHcjzpz8JZ0hL3H6y/
KAdufqSDfTz7Tz1RbRI+HZJMaEPr1sNr2kd87sD+N8fBTsWOt/Tsf8lz+GlK
5Nv67C95hZ1Yj3eZx9bowfqug2/Lrky5wfdXHAtb75LEHGR/yjLhIQvcU1vI
mF8UahJ+vnIbG83ra+zhpuGBNjaW8XECVhfvem/P/lc8hjNuLF0azPdV/QeW
hn72SR3O/G13mYRBwbE1skeynnr4bb+b135xfteWwmlWHm2yLOuXbRj2u4tm
9Og9mnlHwg1C9mTsHMa8K+G0+/ZlViNYzxL4TnbJdQXbRa12Y3yMGXHgmWV+
GAbHDF72ZItl/VoOu1cyL2nM8ajWwM4n7XMrcPxKWoSbBBerpKOW9VHuBhui
q8lWsT6qJXDE15mF5bl+aQ/CGdqgGa1owx1YWWH0zesc/8pBe7AemF83zbDU
UwlH/jqlL2N/6vfBIRt3xejYH6Lb/2/pZ7jAOO2LiNfTLYjAepcaJOvH5zPv
gQd1ze7qweeR3IQ3FA7J+MT6ywvgEOuk8hrWS1V/r0mIlSvET0axvrvhyODV
1x5Z6nsdnqvfKNvO/lF+hAOcamdVYv9pbPbhezi3/DUrWt8Hdks++8nSX+p8
+MD3VZUUY5lXvB/765+rn12fyLwucOZv4X3yBOadCRfMDsq0n8t65sFup69V
uzad9axxAO/j2vYBS+cwrzPscLXZB6+pzDsdjtz/vbgWrQyBD/aziguZxHpa
H8T3he/Sh415f2l32M7vyOnHtGIafMClcPCbhcy/Gf7T/fKycvOZ/zyc7O/f
++4C1rNrpEkIHS/sq0erJsPh9uKb+fy9W7sR9vMuLqvG3+8NWjhFHOE2ib+3
i1/AD/aOiTvCv49oJkThfevYP+cxf9/WB8FdBzTN7LOU+ePgw9u08aeUzJ8F
DzvSWlZlBvOX12D9cXj9MZ71Mqtgz4EzrZt4M+9T+EHHof29pzFvGXzB8VWT
pnzftO0PmYSWzWwXDbL0fwy8s/aQ93nsX+Wj/3zO2s52DPP+hgtK3lv1Y//p
7Q6bhHFNB/Ufw/EkGgWvb+V0O5vHqzPgR1X311jO++l+wtltGm7c5sW8rY+Y
BO+Ucn7LFRwPI+Cpef2a3LPk94OLJvTcrGB/GIrhjUOcV6exXdzyKNbbs51K
peOZfyg88eSHmlc8mX8Z/CAseLDKkj8K/lbBJS2K+aXNj5mEJ0Ov+e+bUtj3
fxjSycc=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0.6925993663619212}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0.7185840437897538, 
        1.2382775923464069`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0.6925993663619212}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0.7185840437897538, 
        1.2382775923464069`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"TBF\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9489262024748037`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.017563384549546673`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "54.02866399684316`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 3.705314944965003*^9, 
   3.7069034649383307`*^9, 3.7069037328449516`*^9, 3.7105682953630652`*^9, 
   3.7105683517795725`*^9, 3.7105683944284306`*^9, 3.710581453565096*^9, 
   3.7105815053723936`*^9, {3.710581564095255*^9, 3.710581582483427*^9}, 
   3.7105949540693645`*^9, 3.7105955015931377`*^9, 3.710595549161105*^9, 
   3.7105956143497777`*^9, 
   3.7105958212389402`*^9},ExpressionUUID->"acc1fc9a-08f3-497e-9fc7-\
ae6cc8abf92b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IWM\>\"", ",", "\"\<RWM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6877208799567623`*^9, 
  3.6877208858208823`*^9}},ExpressionUUID->"4277d921-c313-41ad-9dbe-\
20988045f588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
DdzamVTaKcc6cOONQXmz/OGZwjtdJsyk/FdgR+eCqjgxyl8N68r3apc/pP77
4E8dbyVH36R+D9zEeYLRWF9+mubhErxPL8R9bybNcyV8Qm7/EDu6v23+wB+u
O1eMovWCq3QLzxO+jrMnPKf5SIJnTJUwXnib5uMprLb78tZOR5qPbrhZ2jE1
zpfmQz4fv3/pJe1DITTPhjC3TrMq253moRNOqdQPWXiU8k4pwHlx2M3KuDzK
awA3u/jfHSigvG6ww8H4FXtp/SrqgN3izoRVf6V5likcNE9y+vAl70ucHEWa
BxdY95inosAE6vssPHqNcxRXnvqcdJvHDCR8U7XToXlYDi9of3zlkBnNwx64
zSr2WHk0zUMM/NE1c1lXGOvKYnjPqaZD8+xpHjh3eMyTiwemCRvRPDjCW/ea
+T7l0DychHtfRBVWzqV5uAsf/S0gkaNH+Vvhp/H7ebU0T1k77+J6Hkh4YjyO
5uE4/L5PdqBvCeW/DY8y8Z42aQHlb4Yb35ltsh1O+cXv8ZgtQwril9DvEzgG
31qtdPaEAM1zPjykPeN2ewnNw0d43evOn3HlNA8iRXi+U0l89ng+5V8IZ7tc
eiJnTv3egE8EXB711Yn6bYSlcmuPCuhT/lHFuF+PKz44EEX5NWFVS62Oy9mU
3xp+7iffsreG+m2AtyzstrlLrhxxH8+/HTMEL3ZS/nmwk4X/nI43lN8SftTd
q5PRRv0fho0OcmqVhbrYfoc9wHnvsGrpdRHWcmrw5r6tKR4zWRtvgos3GkYf
FWMdGAw/sY+dwgiwzroGX2118ZpEP8+ZXYLnqTPm5WJyrF3M4CSDozu+i7JO
DCwZ9Psrr/77XGRR4c/PlL8GNhE+P0V+Dvs5d0MpnrfaZwuNUWNd5AdLbt1d
IKxE+S/DIU2JWp7rKH8VbDEQo5fpSPl74eJHykbhQawbfcrw/bftCtHby1o8
Bb7nNcHdwpbyP4dfemzMXLie8v+Gt+zRVNL1p/yKD3EezBkWUh7LWv0ivF8/
TXblSdY2T2Dulp8uz05R/l/wWzU/n+VJlHd1OY/RGqJ3LyaB+nwE/6hVaV94
nPr8Cc9TOznTypvyTn7EY+6/++BT5EV5V8Fuc/ckxNhQ3n3wqWZZ0/vx1Gc7
PFC6I7w6jbWAzGN8/4/NN37EUF49OFkp89XbTZR3L5ynoS9ZtZLyxsLnis4q
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
J+viloTn03y4WuK8+GDU6CDab7Pi4PESIYp7b1P+Urh79iRDK3ofJt4O217d
fDKUrj9H2gr7TcPC88NofirPwHfrJHYL0nlI4AEs5qTlwZ1MzxtfYbcXK561
rqb9WGorzkubG17WraH8zD8/qpzweBf1yYN/Hws61WZJ8yBpzWe6Dsj9LnKk
edCGP+q9dDMLYN3oAG/XOrZOwonm4QucGNKw1i+S5mGsDebJZNZc6TM0D0th
yaaRloYZNA874IIe3+PdyZSXC08K2uez3o7mQXTboL7bF8Frlp+ZN5LOX3K2
8Er+yLC8SZQ/Et48771ZCp0/Am/Ce2Oy+zIlaR4WbMf3azCNyaT54tjAfSd0
g+6vp/zhcOJakdgSej5NzIPLpq1x2pZA+d/B0p1rc1Ou0jxY2fKZmN09qd10
HuCGwh6ODx03p9I8ZMMRqxRSFlC+9nqY65r8Y5s75R9uh/t9yG3fuCDqMwN2
ujhx/mMTyvsaNkk/16ThQ3kF7bFf3j57fMCD8qrCW0yLmhreUJ/psOGWt6sn
/6Q+a2GenGjsYuW/bF6BHXzGQu2TIaPEmjsTVlvi2z3GkHXRRviTjta1dIa1
cTU8Lemu3J6NrAP74LvRmobGRqyzpu/E847qjJ8OjqwbTeAbNiYWzetYi/vC
hZ//uOvuZZ34Z+e//XH8KjVL1pVKDjhftfwUdrJmLbAOFuoccu6vOWt1bzjN
Lj9e3IbyJ8FTosymbnNi3S6/C9d7xMboY/as5dbAAnstAhIWUf798MDRape+
NZQ/cdeg75P1GH79xU/xUiRrjoEjnqe0nM32hbF2cXMc9HliPLxMNKRH3Zfy
P4S1/hTKvDpH+X/AO+q3nMg9Tf26OOE8KlNZNjaN+j0Llzq0O4cdpvwlcNbw
d2mPT1D+7/CyUx8WXkyi/JN2Y31J9Uo0iKV+Y+BODckvv85Qv/dh6WalXPXL
lL8NXpqaKvk3iPJP2IP1y6beVd6f8nPgJ+odEo0u1O89+KzCfgkv+vs2rXDx
c3+Pl6GUX8KZz8xScdB65Eb5teCvPtV5Mu6Uf6fzoPxZ4nsxbwt9Z8unUt4l
sPPMAs8DVyivPSxnYOhuQvk5x2DBU5oTln2n+0vEhc+0Txc5OmM99bkINpiu
N//8V5rn7bDJJhWVkXxazyLgMOumy5/UKO8N+M3FwwZ9ktTnfFfMi1NLr8EE
6tMaPnRSd1I8OTAMFvfs6zhjR/lz4dvNLbsecSl/A3y4+F39FJpvF8t9OO92
HpLRnUt9HoYdvK2tvf+f5yy4Sm9FtVYA5a+H1XNyxkXpUN9Cbni+7z16bi71
VxQMK0Zc7DW0pT6vuQ3693Kv/n1+0zly91bKP9R90L8PnA23GE0N4tD9K54G
X5qTPyKF7jdODcxZF2vWTt/XZQCe5Lf0grAc5Z/hwWeeekzOXy1M+TfAGikt
NxrG0DxUwYlhW/2rOmm/6PUY9PNF0/bjeW/tp+9R8yi/MfzJYlL6MVpv5A7A
i5cdN3yuQv3+hlu8+OO26VO/ip643yJlX/ydQ/nXwhfC9aUE5Sm/FzxP5cJl
P1HKfxG2nNQ6U+gPrXfyXnxG6qWOgwVZ3RDmLlMMXVtO8+EB+3dZuI6i9Zub
AHtb6Px9RftX0SP4p/b6+9ZetH+s8sY8rGg3qhOhfvfB4z8Il4xUpfznYJfI
dYIV+yl/GZxxr73A7Ajl74DzTLNvSHlRv3t9+EzA3GPF8X7Ubyw8bH2Ne2ge
zUcJ3HMh96cm3b/q3+BtHcYWsRXU/8QDOI9kOblcK6R+T8OiwsYuqzuo32J4
WbyC4fIBmg8+PPLXSvsZgr1sXh1fPF+UROk/m8yacxfWjsneJdhLfbbATrNC
VvQKs58njvPD88ZxzpEHPZR3GRwhaiS07x3l3QnHp8s0DWui++0zvPnzhYct
Y9ifLxLz5zMpbfcyLyuybl8MB00oXt10kLWcHXxAMF+n+ARr4yjYd9iFVx33
WDeOCcB60XBlRsBN1uIL4Ym1d9yOtVD+bfDfw599vdNYuxyFFQ91b8l+RPmv
wyoSXwJWFrJW1wzkM708I2vDCtY2W+G7Sg11BV9Yc4/Amg6bjilWU/4cOCrm
k6ldGeV/Cy+9duqo6gvq89BBnF84wuoHPlLeTFi7dLKp5SXK+wZOiUvQKEim
vMOC+Eyl7NG+tjDWAtfgupyHbZXFlK8O7mtWGhb/lfINCR6cbxYcmnRljebQ
Pra/q/Bo1/jerFbq7+VgB/bDRuf2fI7rp7wqIVjPzl5L/MOnvOvhMca/Dv7u
pb7+wn91PK9VN7GuVD7EZ+qlpq+d9ZPyGsO8Nft7btRRXh9YMfXNtbof1FcP
/GzRoRHH3lNfCof5jKr75MM/RSmvEfzWrv+z2TrWxp5w8pcf1/1Xsg68AB/o
tPYvWMpaXC6Uz7RNv6RgIsKasxpWyRcvTh3D2sUdjje5UXZWjHXiedhmgWzH
QUnWleWwlZmOWRX9fpuVR/jMjwnzC52WsOa6whuu+MTfIxfFwWrrjLIiV7Bu
L4VLbZaPHOJK+dvhwmYBxXtRrLOcw/D9O4bVfL3JuvEMHL5xi/qGWsr/AL4z
bi5Ho5/yf4VF3YyrU7spv1Q49reXamnFgv1sn0WwaIlxWfBc1jY8eIPS9DOX
ZrLmSh7lMwrCtcEf1FgXacP9mVdOZy5mbXwHjgg8avRQj3XgF3i1aaHdW3XW
WWMj+Mzjlt6C0fGsG5fCD4PjN2U7sRbfAYc5CIaccWGd+An+1j7juu0m1pWi
kdhPRhmNUNNlLbAYlgywOvpUg/Lbwu3K6ufjtCh/JOwncdz9tgXr9tFROH+H
TfS9YslabgGsvG8rh6dN+W3g4xFnhPgHKX84PCf68Y6ofZQ/D95x1knqnR1r
jsYxrK/PirVN6fe5WP3z1i6D8B6ah1C4MXDkyjOjKH82fEw/2dh2KOV/C0eu
WH3jWS/Nw2Yun9G7q/TpayfNQwicYpsy5vZsyp8Bq0msvtlJ31fuNfxc3cf7
xBrKL3gc63eCbfyhJdTvQXjz4S9i4qrUbzocn10U1EvXl1MLq9m9HDdUhvIL
ROP5ddotj3S6XokzYVWx00EVKtRvKiyWOkPCjn6fTTWcMHxgnIYSzUdf9KDv
VzT9BPZb89vNfpV0f1XCm+tcnSZLUp9/YN2dEfkKfTS/Sifx87FH9IW+0/yu
Ozno73G84b1HfxuX0s9XdsMGmgOX9++iPhVOYb+UMb744DTlXQN7b/URrTtO
effDXzfFVO88Q3kT4Q8JqxtNQ6nPqaf5TKtAiujIOOrTAP6+pWNPL81roBvs
IXTEwPMk5Y+HP1/OMbjy/zw/hDvGFKcH36Y+9WP4zOSgWwkahdSnC6yNE8Kf
XMp/Fv4hKrNy4n3KXwqnv49MGJpD+b/DJS0bxn9Ipj73nMHz4h6Z+vmVNA8x
sIyqj1hfOeW/D3fqu75Spvk3bjszaD4DJ8TyGXfBOZlNUTQPp+AlLUpicTeo
33twb0mu0BD6fS6tcIOw8HDbN5Rf4izWk7/e4ooCA2x+rbP/zltqAgH91Gcz
PFq9cuHZbsorHof+n+kLXuyivEtgW8XdtVc02Z+Xs4eZsTPSddaxzvoIv/cL
UzM3YN0ocg7n855o29tqrMUXwdHnpPoParPmbIe3P1PV36fL2iUC5mzPHWG0
gLXA6PhBf099Plx0/51a/hbWNtbw22kdwyJMWHPD4CFaLbZT6PcV5cIZNebN
DctZG887z2fGZu7+FXCYdaAlnKattWmcMeU/DNdJdGVLraX8WfCHk+ce7V9N
+evhy8qPy0dsZJ24KYHPOO5c8GLtJuozGFZfvSPs8kTKnwH/uOlZ88Wa8r+C
W45U7TeeRPmHJuL8t2W3v4oK6/ZAuIGZ+SRjPuWtgS1PyN6evoryDsBlf+6X
t9H1yppxgc/Exgqv3j6P+rwCXwg+/bJrCfVZBSsL3n0nRL8vsRcWiDjOE3Wl
vNMu8pk9+9YtOuVPeU1ghY2JQurJ1Odz+JZ2b/a8JOrzN7yjtyjU9zLlVUzC
80vZlKot1TQPa+FoPc+C3lrK7wVfXlnWWvCc+vwFV8v66xY9pT7lk/H3N69p
C/9A+Q3hqXND1r8nu3jAQZZxMgZvKH8CPNbKUetWJfU5JYXPZJfvGSL9ZEDn
P2a4ikE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
ZNjVOvwfLv9IRA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GSxy1Ez8uJv598CHSxddyOH5FqngWm3f3vQ8wHra38P7UtDFqV8Ps56usCQ3
2S3pGPNeg2+0Tu7Z7RTzfoDLTAMsPE7y+i++rxFiHo9v8vME66mEB9V+LIk/
x3zvYPXV2LHfjzJf4wd43r0f59w/lvXbCev1Kj7s+x/rdwke9sm0v0UC872G
XfPHdjwaz3xGDzXCvjfzLms4ru4H+0Rb2d08w/pdgJOM3e1SeX7KQrjjBv0F
Q7i9qr4a+W1fGvgnMW8f2PJhD0mzRNZ3nvr/9l9U9xHmz/nmngmnmbcXPGl6
y/j7tHQ2/ODigtPfWT+PAHiZ823X1dtYvzqP8T52UT3tBvvX2go2Xr+ifjnH
5TPg5yPGvhrnx7yb4Iijsyf/4XxQnYRn51jFtOT1lXXPxvva2qRMfWfWcyoc
sTv1TOByXu8NcIfM+KbPlzJ/PKxo0zhCn/sXP4G/vfz0aBb7N2bSE42wvoNZ
ftcQ1tMPdupsN6EJ6yc6Dq8otb/dI5L5H8FGKZOC5/F85b/g6e8vGM/h9ZEc
fYr78X7ThmtZP9kD+FXfWzsX8PoqvsOL4pxCVnH7xI45WL8upliWHmc9/4Mj
lS+6ZfJ6eNyFd+RsO3me1zfmK3zcoaz+c1rdPhfPi6cKPt1PZt4xsKnF+G1R
l1nPTHhj+mz/rtyfqhyuf7PjLHEar79pnkZYOWtD9KkM5h8JG+c8TSrMZH5P
ePWE2qbf6KIyeNvQAIMwWmzyDM9nU14otqmY3wEuqX/y14sbzO8OP5waZ+bE
48fsg2VtvCLmcf5Yt8zH8+OWe20qLrGeAny/pMnpFOZTLoXHDX1tbXWF+XfD
myUN+wanM/91OOmYW/K7q6yvXQHmi8nGfQ7cX6ILfPNtXNy+68y/Cx483mVx
xHnmvwrbvXHJ/s75IC2Go1ob1Yvh79XOz9Gf4cL3zjyeSAk39TtaHHWf+S/D
EwpepNx5zPxvYTvlBYe+j5i/0Qs8T2kmNhnJ40t2wDFDliU85fyRXYS/v1Mv
nMA8ilew3+pazU/y/BMbvMT87F+rIILrR1FfePmabL9e+1jf83Ce01SntzXr
10v4pV7fZBPWV12vEPfL0OP+p1g/UR/4w6kIXzfWS1UAJ0xpNvv9TdZTvwj9
Gdr0YVoW81rD3t7KyfbsD9ks+MEl6fEcXn/FFnj/32TzQu5fXPsV8tvGpfyt
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
G624B6dP9x7nf4b5K+EzJeXvfiSxvl4SrfDnyIipCy6xvodgv+zY2qMuMn8W
bKP/7nhMMvN/gT3u95zyI5X523XQCh98zwfZcnvVLXi+i7V1O+bT6eAD73uk
zjnPvG06Yj2dqmhkxuPLhsMDbI++Suf8L0qDFau7zRjG+S4uhS3mvrg4iPWT
tuqkFa73Mc8Vn2TeofBi9dzIpTzfmGXwkIalVy14/a21cIW7v7vA/pc374zn
KadRH/sFsh/sYbOSxm38eL1UrnDt4+GBxjy+Lhwe2yp96AnOX0WTLlphWPGe
FTdDWc/B8N8MmeGrSOZfDFcEmnpVRDF/GKxaseOVL89fegVOMZtT15P51QO6
aoXgmxdP/eG4aBH8ZI/txrust/VOWG4k/uvMfpVfgm3nzeyYyPoqX8PR/hda
N6rpByczrXCpeNPVhqtY3+3wh0+jfSI43xUXYJOGM0L1eP6JhfDwQ/5jOnM+
eQSaa4VVWRcLbDm/Y87CeV/cDBfx+UD9HL4g1ZO3cmNeg27ol7dK85N8HrDu
BduM6d9kJ/enOgOPis04MYzzV/cMFinHL1zM85HUscDzXWSBqzsts4IfFea1
E7MfFTPgfR9LT2SksJ65cA/vyy0e0NJa3XG/WPgy1Jj95NEdXq9bUfj+FPNP
hduO23OwmPNZvQEecFjxbi7vf/Iq2N27cMihDaynuSXmy5iRLz3YT6pJcL/w
8IUC+0/nB1tEDGrtQ0uOw165cc472L+JXXpgfT+8yb2Q63fRBNjohfZ8PPcn
9oEzdq5X1eX1kh6FL56I9daGMP8DuLvTuOhaXE9EjlZaYa9RnC7uKOu7Fl7u
MsAyj+ur/D84wXasczzv38q7sEtVsrvA+4XqK2ybsXGwec36sLon1ou8yyU/
uD9FNNymdIHnVV6fxEx40Brj67V5vYvKYdHou5/v1zxftLXG8+cNyY65fH+N
OQAv+fvn5sAcfo/IgIcNGWp9nd+7RTrYzs1V94vfw6xNemmFdrbhA4/y/V/u
AN/XhNcbROtuwmvX7Nu6q+Z7yic4pduu5xs+8P2tZW+t0Ou58tu6eswvwHPr
1vbbUZ/5l8Llj3OjjvL7nkezPphfZga9jPl9IsYOvqOMG7KZedQusHfLVXnX
+HtROOx37Uvf8zXf04xt8Lx4ITMtj98/VIPgMQWL0yr5fqxzhu39k9aV1nx/
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
5j8Ei9Oe/le1k/VsdwznK2s/WMD+/geZeYM5
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 1.992644617395008}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 1.992644617395008}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"SH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.2219860409286558`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05734650250082563`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "21.308815492471624`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6877209007057943`*^9, 3.6877217416893167`*^9, 3.687722164894137*^9, 
   3.6877229814657383`*^9, 3.6877235801277614`*^9, 3.695714571930441*^9, 
   3.6957281426149473`*^9, 3.696233927274042*^9, 3.6967607413772273`*^9, 
   3.696761478024253*^9, 3.6967615514443197`*^9, 3.6967617479688573`*^9, 
   3.696761935722108*^9, 3.696762079427864*^9, 3.6984977509213963`*^9, 
   3.698497818863474*^9, 3.7020194373725157`*^9, 3.704691001590322*^9, 
   3.7050414278141985`*^9, 3.7052520522880807`*^9, 3.7053148130018167`*^9, 
   3.7053149500649757`*^9, 3.706903482661978*^9, 3.7069037513837814`*^9, 
   3.7105683044374156`*^9, 3.710568355798375*^9, 3.7105683984282317`*^9, 
   3.7105814598412404`*^9, 3.7105815089697623`*^9, {3.710581568330058*^9, 
   3.710581586577138*^9}, 3.710594962173704*^9, 3.7105955056542945`*^9, 
   3.7105955529080296`*^9, 3.7105956181547236`*^9, 
   3.710595824886775*^9},ExpressionUUID->"48c9ffef-47a0-4071-bfa7-\
c47b1b3b304a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nk8Vdv7B3ApIioKJZIMISWEiootGiVKg0aplKSONMhQRyKF0kRCHSWZ
yhQlQ4o0kIgkpYjCOUhSSuT3ufv5/vFz/7j3vl+H43Oe/ay111pnT3bct3KH
sJCQUOswIaH//vvfP5s9+Az9X6cp/qUbCC88Jmc99/O3/+yQDo/+rJ+9bSX7
eqfuET4j1lnc9Wo/a+UNcNoTNWPZCNY2/nCXDrPz7nnW3BS4TDxoRXMc69R3
sF5I/VCRy6zN1nnymZX3DVconmPNOQ43vZB6L3ySNS8Zbj/1Kn1WMuvyavhA
lYvoxxrWQkO8+Ex0/jGtqT2sQ4/B+9q9yy+3sy5IgG3mTz/eyaf8lbBazVhH
w2rK/w+eULreo/Ue5df05jOLR32dF1nIuj4OfmJyu3FjOWupCphR9Dw8vIny
/4UHdmybbfud8qv78JnD0xrjFxRT/hXwMIk3bS/fsnb4Df+pGLnYVfI7m1fl
KJ9ZkrdE02ck6wIrWH7/fOGCTaw7D8HHW/uS7x5lzf0JZ/k4NPjuZp066Rif
qfqUOXHsAdb1S+CC3phZHadZSx2A/Z66HO94wtrsKiwRc8z5QCfrckUun7mm
ZKGj95610CJYhdutsKKUta4bXLRfRG9NEWuHSLglPGexairlfwIb9Co9jy5g
rWzhy2cCZVaLP0tjbbMXvtx6lnuHQ/kvw68Vl511sqP8j2GJiwtb9pyg/G1w
0KQdN3ZtZ81xOY73F1Y5Zu/OmncJDlRLFWv0ovwPYYnv6x/I7KP8fLi9317x
WAjll/HjM28SQ9dpBVJ9z8Plk8O6612ovrmwj5jvj0uzKH8z3KytGxCnS/ml
T/AZTgNjEW9G+U1gSwO3Z82KVN8HcOK9Fu79OVTfpv887Poqy/WUf5Q/n+lY
FXx46XHKPxvOaHjvl+9M+R1hraWt6aGjqb4NsMLUYM9jo6i+EgGoh6nC9au/
qZ8N4YnTVIMb2qift8DHRV5e8/lH/Xwalk50UrzTSv266SSfiVwXtq1yKOU7
CWedfbvsnh7lS4NDmqIb1tH7YQLA+N0pe0VLnOq3Hn5d7T4zS4vynYClt58t
6M+n8XYHLlFxPp12nPLVwNETX8UUBtF4WnuKz4Suii3yOUbzgS+s+kWnw3Mn
zQdJ8OEXm2PPy9N4e/OfNdwPGQ+j/EKnMX5ct47eOoXG01FYP/6wXZMPzQfx
8OHE+Jsb/Sl/JXxzmZVlcSSNN40gPvNUyWRn+xOq1014v81ijZeVVK9y2HiS
2tTDZZS3F+4e62lT0EV51YJxPWX6VzqoUb9awxo3ndyrFaieL+GjOU+VxcdR
PXvg4g0RxluoP3iTQwa9Xr4MNjjk/vT3ROrXQ/BZ1QvF0ybT9e6G9wcU+Tka
UL8qneEzI8Pq/pQ5Ur8uhlcuW+3xYAn1qzucvNGlYP906tdouOFXucvTqTSe
FM5i/F57d+L2LurXhXBCuP7x4zcpPwdWLVcTupBC+a/Avl/0Xk4vpvxF8ALL
94vWZlA/LAjF/DDvqcPCaMobDs+vE6nr9aa8j+BpmmbqBUcorwBu2hc4c8Ce
xs/uc3zmrvbIB2seUL58+MdO65wK0y42Xyu8Mvp+00hD1mZjz/OZ29ldE7hr
WZefg2uL6i3yLFkL5cL3ea6c4+asdb/CC4f6XZhoz9pB6gJe50rJNGxjHWoM
hz1h9D5vZK2cDZ9e5jz3whbWNo2wfsuiJtEDrLkjL/KZO5ndSWJOrFNnwcJN
Aaox51jXb4UvG1iIyF1jzRtxic80NpQrBT6ivAawWktUpHEW5d0Cc9ICr1c/
obyn4HchGbtet7AuGB7GZ/6mTZk3so11px5c/4ynnd9BeTfCkSMfmEbfpbwB
sOsK6Qn731DeVPjSGZnVPQNUzxnhfGZssYGfFf09M3vY+YbfyQ2drDl+8OSU
0Vavhv1g89+Gqy/WVyR0U/63sO3Zg4ziOPZ1hzWX+cyRrspFD6RZh3LhYOOe
q4wG64JE+ILb165ME9adVfBmb+sjcotZKw/A42LnaN9dwrr+VgTG1xlf2eUH
WUu9hmud10Vnj2dt1gf35NrKbmylvFOuYD68ERnqo8q+LnQT3pcZIG19j+r5
Cr6zui5M7QVd/z+w3zvr6Nw+uv6qkXxmj/efR59FKO9y+KVZoUK3AmubUlhW
trb3oyZr7i9Yaf+JkLatrFOVo/jMmrftK97upfxLYd3h7S3+AZT/IOyRE+fy
6i7V8wf8rb5wtH4G6/KJ0Xwmacjxdb/jKf9iuDWmpq4sh7Xufvjaom+JTh1U
7yj4xTWVd5kCqueEq1j/jJZ/d/8V1dMS5hjduKr3gPLvg4sTl6cNa6X8EfDw
ikOn1+VS/kLYIHf4uu4Sqq/5NT6T75d+4mMZa84e+JT2sMejP1H+MPi5UsIV
q8+UvwDOGpUm87SFrr8zj8/kLXCuMI6lel6ApccfErSdoLx5cJuz7+oEI8rb
AqdEVagUOlDeMTF8Jl10+hTJtVTPUHiZ/bg2KS7VMwd+WvDc8agb5f0Cr1gg
siaG8nNGX+cznmaiWTdfU945cFinpKZqPtXzPtx2uzk9ksaDw2d4leF0mVer
KL/kDayfBAK7/n4af0aw/p+u60KNNP4c4Kujz/henkD1/AQ/yT0p4FF/pIrH
Yv6ze/La/hDlnwkbfSp0NA+l/JvhEXMdCnXSKH8gXNx4OE8/jOopehP9PjP7
1wa6fkJ6cKFh1saeasq/Ada8ohnWvIH6wR8OWi03JjOR8qfAER7/UsJ6qb46
cXwmSuWGk59CN1vfdbByxLxHUZasucdh6eDggGw71qnJ8GiLprRWc9b11fBA
Xehnm92sOatv8RmZKoMNp5xY847BmcolLw8lsC5PgENc9pub32UtVAUXJpT2
FMax1v0Ht3nnDFf9zLrAO57PbDlVoFDMZ90ZB8s77FpfK2CtXAGPDS3rD4um
/H/hhhiv+dKxlF89AfffksqBvuuszcrg+nc7ygObKe9vuKlVdWxDJuVVSeQz
V6ylp3PfUV4ruMOi4mDSVdYOJfDaszL76spZh/6Eda9X2OpdpryTkgbVq3MJ
PPlepeXTIMp7IGnQ50/tghdEcH7FVlE9FZOx3wn0sWi6wlpqUfKgepq5wTYF
B+e/eUz5I+Gd5pqtryKonhNu8xnHctei9blUTwvYmPfwYE8v5d8Lq9Y9E0zM
pvyXYeFCJuHZNMr/GB57UXDriwnVk7nDZ8LPr8xr7KF+doHXHIy8OESL8l+C
m8eYzFrGUP6HsGOomvS9c5SfD/MCGx76uFN9d6VgvTBVvr3oGdX3PLz7u6jn
nyLKnwcLBwSoVbyivNKpWJ+Hz5yorfCTredZeJpu/ZlaXdbKD+Dc9JZ6i22s
bZpgDdFPz/fvZ80dlcZnsk0fn/6Zzjp1Njzx+aqJ6/JZm92DPR7ojFT5xprT
APvnTLH6/po1TyId66FVlXm8FtblhvCI5mOJYqN+sXkdYLf4e3fvyrEO/Qgf
Xyz0K0aFdYFYBp/ZwDNzqlZi3akPq1d8yUmmv6e8CZ5ftv3RNFX2dZuTcJzY
0q6dkqzrRe5iPTPh0dI3TezPS+nC87ZE2WW1Uv718NwRv3U8flD+E/DHRlW9
FlP293l34L2aA8bPLVjrTs/kM97t2ySXr2PtsDZzUL5QX7h4xJ1p2b/Y9ytI
yhz0eTvfwMLh78XHiLHm2mVhvO7e8OCzOuvUo/C1CR+uLKP3q4/PGvTzUpVw
pERqlNs1yt8Pr5nxUUklkOrrdQ/rK9sFMlY2rIXi4Ie3OsO/XmWtWw5fyx1q
stSHtUMvnKS/7N6rF6xD1e5jfEmUtDXXUH1vwM77Tn/f/4764yXsXhjsZb6G
+qMH5h9Ja5PfSv0xORv1igjKqg1nXb8MTjZK4MUz1A/dsJHF90f+TpRX6QGf
+RnyeNKTMMq75MGgz6frDldLX51x7Q7V8zt8a1PHuDhhqqdCDuqt9tr9+xzW
ygvhA4+e7bk1l/qBA3suF/JqHUP1vgJLetqOL9ejesrnYj5vXJy+aD5rswWw
49B/vfGHWHNc4ZtOKiudb1M/hMN1r2equd9iXf4IXmo7f6v1eeoHszw+MyWz
f8c7cuhu+JH8opnicdTPF+GZj1w2TY2k/PnwZMuIsXNzKH8r7K80WVU9hvph
Zz6fmZotaV18nfrhHJw/0Fcz7Svlz4Vfq83ea15G+b/CFpZhnYfp73OkHmJ9
rxBkNzqbxttZuIHzvmjiQernbDjZMuSk9njK3wgHxnSbrx1C+UcWoH47hhwz
PkX5Z8FNqQ+WfvtA9c2Cx812VV7SS/Wth484GEQmFVD+EY/4jL3075W/xHrY
/AZwVY3froi5rKW2wKu76mWCuKx5dfCnE0c/XTrAunz4Y6yHsmr/rTvBWkgf
1n1812Iuh7XuRniz8GVX61DWDgHwk+B66fxLrDuHFfKZXuX7MqIXWCvPgJ8m
ZFbsjmVtYw8bDqteXGrLmusHB/lNTxeewTr1Npxj+zThkCxrs2lFmC9c1Nbs
smfNWQM/HWMaXmBB+bnwuIcznxloU/5E+HL638V6T6n+b+Cl88/YzdBjXw9d
9YTPTBePclozh3WBD3zZ9kWp8XzKfwt2MfjuvPww5X8NL1az6F3pRvn74D3P
PszXCKT6ehZjPLvNPvpoE9X3JrxV5vTRktmU/xUcY6/14aoR5f8DS942/p4e
Q/lVn2I9+OXu5MsPqb7XYd8ICX+Dp1TfUvjOo6dhtt2U/xc8T+Vv5lm532ze
pc+wn3cIrXotz5r7HC6ObWl//57q+QN2N33/0Tef8k58zmfOlGz3nXmH8i6G
2x1LgoPTKe9+eE7977bqBqpnJ7xwQqK+YT31g8ILPrNo0mG5onjKawkX2tm/
WWZJeffB0rsuLV+7kvJGwEdfXnZv2UH1HF/CZw45vylRvE31NC8Z1B/cPbBR
ht2Wiz2UPwyeeF97Wttzyl8Ai4d59cXpsp+XY1qKfDun7aw/xJrnDG9LnH/n
8xnWQvnw2TlbzfeeZa3bAndapu2JCmJd4PQS88+jOxkvTlI9Q2FuxgLlgDDW
Nl9gOXHlVNuVVN/RZXyG+XrKqseNtdQZWEldIm+2KWuz+/BT27cvRrlTvs+w
sn1y+zwvyif5CvPB4+eKDd6sy41gNc0wKeYaa4dMWFPDpmvEEtahn2B+zWL/
vZcor3g57ic/Jl3aUER5Z8K5fWrDB0pYK2+GOefrJHiZrOtFK1DPkqZNC99T
Xj04Wbb06eG/lHcDHHCsh7OxnPL6w10b3q+y1qH6DXvNZxSdZVMeVNL11oHH
uZ67NlGG8q6DfxwwGTk9h673cTjhVJxHgSzlTYYj7x9WFjTT9dauxPqGOTHS
SZOu92p4q3+Bstpqut7HBr9enwDr8G4mrlxL/VoFu+bEBfy9QuNnZRX2Mz2N
iWWJ1K/ecPZt8y2V/+vXW3C4wbWZb35T/gp4WXTesg8LKf9f+B83b134Cqpf
7BvcH4tXnfQPpetfBsvH6Jer2ND1/w2PXJH10fQC61SVaqynjt6oaYqjesbA
L3JX/LN8Q/UsgW0F9m8qqP68n9X/7Tcr5igM/cPmnfQW6/PvE/6KTmEttBSO
P/ejdqsk69Bn8I5pGs1D+FTPrv9+vog7yvU0+3qnYg2fqbmjvT8ygLXyIlh/
h98DP3/WNm6w5Z4FPXZ+rOu/wRb7jjz3dWUtNeEdnxGx82iv0WJtZgHPMdp0
zmcea85eWCzmyNvcLsp/GdbpN7M/MpJ9XXdc7aDfd2DgGS85V9JPUn4X2MJw
T7fKJtYFl+DhgfJKH3dQ/ofwmZuTLr5fxJo7/z3uV5IfTPT/UX13wQO6wyQT
+6ifz8OLpqS1TjpO/ZwHlwspHzbfT/VvhrXsNEbP30Pja8cH7OfE783d9oH6
ORQe81OgLKdL+R/AuUdKQ2SWU/4m+HjDqVn7JCj/qDrsB+R2Vegcpv4IgV0l
toRUKlB/3IOVAkyFJRZRfzTU/ff9zwSXxzzKL/GRzxRIN5c8baN+NoTPnB1S
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
TP8PFhOlMw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1o2P9PowRU6tZ5LVcmr9USaDX0w480dPievbNTn1+rwP4GlWq3MNX+P65qeQ
M322lLMH38b1Lek/Gx1uGisk5l4G58V6rbLMIea/A0c+vikdl0BsnfgJ9qsr
zyKNXxF7lYAnjehzSlMb1wMZmO9Te62XLs6/Xp+p+inHfabqLyj8TK2v4nrw
CNXw6V9XYD/0aJEzd/Ofx3xZjf0wtoVez5a1UPuHtAbscWVA9ccw7Ae1L9T4
WI/+Qu0vXh5fqPVbuANskTHF8kMs9oOKkjo/8CyV1HlAsERJ9ZdYAI7VGOZx
T4H5z4Df12YcufkT+2FEK33eWdhK9at0Wyt9PjvVSs1n68pW6vNLeF+pvMrw
r9T+zMkB7/v29nNzJOZ/8pWqj6ATfMvyrEpzNNY39Bu1vnOzvlHzgf/oG9Xf
oh/fqP1ZymmTM9Y9njDdRmN9M9qofhXeb6P2W8m3NqpflQO/U/OFM/s7NT9k
SrB227Fko1rsX6Mf1HXuTHBVSXSUVk/MGwhWqfQcqfsb51fLD2q+WA9op/rP
a1o73c8B4KwuWbP+Z8yb1k6vD/od1P4pmNpB789rO6h6yg6ApeMWd6lxsN6l
HdR6IprcSe3f0lWd1HmYlQxOSsp5UXcC++EqOHKt1qbbbZj/fSe13yp9f1Lr
K2ffT2o/4136Se0fggZwH129CwVWuJ/0/kWdd7l7flHX+cVgpmFuQWoc7ndv
wJv9LwUXDcH9TuM3dT/IGvebOr8KL4BHu2+15XfhflH3m7q/Vqr/ofe7MeCz
E2cGnVyA+Zf+ofLLqv9Q5292979U/bij/lL7Id/9L3X/INoO/uJtavDqAta3
Wxe1X3mNBAfIxFNUR2B/LO6i+l8S3UWd55SnwZsfBFQOvUL6RzCcpfh3/RW7
gv9dnyPBm2ZPW2hSif19EnxadXzTkOvY30/B/7ye1LmbgpnR9/HkURnY3+Fg
dk334aOPYn9ng2endly1jcP1+jF4q6bK/hH5uL90gJnkE9eHXcT9Y6uK4t/9
h5epQr2/4CH4n/kj/g6un9z1a7AE85uqUvn4x8H6x+6smhhKLCoHF+0u9pu0
GfN/Bb/LFupOXYt5Z3Wn8knugv9dH750p96PY6imYMQ99ry32Yt5Z6hR3y/Y
CI7ScRNOiMJ6flaj8nH7q1Pvz2fAGi/Oj+A8wrzr1anxkqaC/1lvvPR6KP5d
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
A1z3a+1kziOsp0nO/3+e/wP7mCYH
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt23lcTOsfB/AhsrtjCRUapKwZkSVhTvY9RfaENoRBskTGkkgytiRbVJYK
U1K2MpSlkLGlJFKWmkFRWRJ+n1+fuX/ce9+vWc5nvud7znme55w6zF/m6F5b
JBKV1BGJ/v/f///jskYr8P/KhuJf0u2w9rBZamPaNQG+NCJO8edf6f9dJl2r
FaYXXbm1lq9LZsEtW7j5daQdAuA6PcacX/C75v2KC/9/fUVVkik/r8qFVyVe
jbWprrFs+jqtEPbFMDaTlm+GZ2rb51hV1TgiDvYqbR2cxO/XZMOukjZJSlpU
y08r9JDe97tGKzfC6aptcrlBjdVn4c2We5q+ql3jsqdww7d2jj+ZR/IXtg7u
+DeS23fosl4r/I493ST3T40LTsEFG44Xt6fFj+HKHsuaP/rL/L/hl3m+Y5py
+/LOG7TC7Arf3Nr8vohJcNLLvvf28P2uP//vyokHbtLKjv5a4WNsuO8Zfl49
Hp6SMaXj8zrM6wtHFZ67+aRhjRWV8NeUwqQfdWusMtuoFdps9a27qX6NC8bA
3ZZ5vFreoMZiH/jMJ5feVxvXWHYMzo5+08K+OevZVqEV2rWNf5X/H+s5CnZ9
tvVcd75fuhwuchHvW9KE/XAYFsyc6jRnHuVteOIz7aHHtGT4Jq3wQzbopRu3
77AUVs1fHfuI+0MRBoc1WHHZk/tDdQsu0XR4/5WvF3yChRWKXYtrsZ6LN2uF
Vlu75r3n+yMOwPYpSTN0rI/mBtw2rJvBML4u0sKVt2YurOb3SVtu0QpHHYce
ceD71XvhB/7r3nvx+8uuww1O30xaw36VfITtI44V1/vFfmi2VSv8Vbe+G/KT
/TwI9vqsC7Vnf4qvwkeupF8x1ffzO7ihnaYinvtX3jRAK/iuKi2T6PMPgFNc
2p2bpu/n+bDCrmeotpT98RZufKVv8fQy9kejbVpB/NLQc8WnGqtt4Nymj4yt
dTwe58KNy4bnPPnM/EHwPbtt/Tbw/eI5gThe179QWX5nvkD4zJ6LW00qmC8e
bhmimBnzscY4AWiFCykV3wyKayydCfcYV3ig9Tfm2wpbfWwVkPaG+c7Db1wN
97jR6hzYf8EAJ79c1m/aDq0gn74mqTet2AQfm5Lh0iWb54NY2Pj1uJ8x93m8
PYffhSzQZjxhflEQ9ofL6HPVD3k8+cOjLWNMDmfVWHMGNk8ebW+kYf6ncOr4
s0FbnzGv5U6tEH82JDv5BesVDXcr8hSOcPsSDVyhtv2ZlsO8VbBfadWzgy+Z
1zxYK9gaZO5IL2LeiXDxevm4y4Ws50M4p1e/LYv4++U/YOexHsvT8pi3wy6t
cKquW8cSfl4zDg7O06569Zp5fWFJc9c/ygLWswKufbrXnfG0un2IVlgqG+px
m/unbDRs9MIyr+t75l8JN3SqczIvn/mPwtEOddNUrHeB6W6tEPJn/stofl48
En494dLBYPaPTA6nltjvbKfvh3B4ytVhn1IrmT8dLjwfMHJBOfthmBK/LyEx
aTz7VXkQrr+k55C17Bf1TbjbV+nhwXSZDi4yzDv6nfVQLNqjFQJu7DB+x+8v
SIU1AZK3MkOer0pgj53eI9rz+JW12It+m5RSZszzkWYPfLZ1gGlyPR7v1+EJ
c99Em+iP9w/w/H8er7ry/OMq3ofrW/iEARNopS0cuepC3gOeLyVXYIMjr7Oj
aYciOCcoLOgtt6dosl8rtF67aPQJfl7VH/b5HR71rSnPV/Pg8spm0lI6ouEB
rRC+a0l195bM2xe2a/Oo5XCeb0Vz4ZaWrdfuM2LeHfCfwN3OU014fqoXivNF
dLeyPm14fuoN9/t3qMd4vi6ZDcfMjj1xScy82+DC4GP7ivh9ChW8Z3P7E9q2
rGevg1rBpFEtl0ncvmwGXPDIwuGwMc+vW2DnnRG3Dpoy/zl4fMeShWncvuYF
/MW0fTt1e9bTOQznW218TEg71lMBn7Zq2m9KR+aPgZtlLb4k7sz8z+CfKxfl
2NOSf3AH572+jy1Yv9OHtMKz1udeFvZg3idw8fzIG7uZX1YNn37V5KBpK+a1
CEf945tX9O7AekbDRpNna//TX68ewR73c3dVsz6uv+BnS1dIJ/L3KDsdxvV9
+YENHfj96glwwch886Wsr8MD2NsuM82cv0/xHQ6eV/xqOfOrJEfQ33ZFP053
Zf6xsNsgt/826/OvgqP3BVR178N6lsOx40XTZ9uwnu2Oov9+pRne6M38o+Hv
h+u5efdl/hXwoGs7Bv4ZzPxH4OI84cQCGetpckwrBN2MMuw0kPUcAS8165d7
pB/zL4ONW3QePW4I8x+CbXdprRK4PVUavDVR4aAewPraH9cKd5Uvg335ebk3
bFV3YqM9fD0iFN4kXZqwjNvTqOHVXVaUxtmxngsjtELzv08uF/RkPffBZaKc
qn6WzJsCrzgyedMD9pekGDZfEnhqTifmbX4C45FYu7O1JKynEg5aO1+oz8+L
r8Fuj03n/TFn3vewsmxL5QvWS/7fSRx/czZlmurrPRA2SWhvNV3Kel6G5RuW
lQnsD9dC2HegzfEi7n9l40iMR57bZi/n8avuB1dV2CWU8Xgvc4UzJ+7qf6sF
6/kG3rO6Y2B9Ht+qBlFawfD4xqWfzZi/D5zUr/XjTuxvsQu8tKLHtjndmX87
nPnvdElbvq4xjNYKz4vzR9iwf0S94QnWS/aOsGb+WXBPp76x31ozfwBcmDC1
2JX1UV6An5z9Ly6X/SWxOoV6Dv1xx8mW9Z0OG1/P7eM2jPk3w67m/oMSRzB/
HGx/uG/PIL5ekA0PmfxhSO0xrO/U09he8ZG6x0azvhthr5NGh2ZOY/6zsPfz
7K63nJn/GXyyzTsvYSrz/4WTB63KtlnA+q4/g/HIhNzd9+iyU3DbI/fMn85n
/sew34FP3t0cmf83HL9/UONiJ+bvfFYrnPhhnNBuCuuZBf+bfndujCvz/oT7
zpiZ/Zh5IjrGYDyZ/TnS3IV5x8MDPD5Y2kxmPe/Dzy5cnvFkNutZCcsbBHxI
4utqs1iMf3SJFpfsmXcMrPnbVnpzAvP6wEv/HCnazDyqb3Co39H6ybNYz7Zx
GK8F2u2ePIn9MCru//OlZR5mw5l/OTxREhnYZDrzH4Znju75YhS/X2RyDuP9
dIPnk/h7pMPhtZGrNrjNY/6lcN0//pFfWR9lGNzwcZ5lFY9n9S24ubXNwwx9
PwjntcJi78+37NlvisVweBPzFgd5/KgOwO/WD0lP4fFecAOOSpkj/c1+EGth
2fLuX0zZLxFeF1Dv9K8Gd7m/NXvh2TP6BXRgHlEK/OPQ0twm7BfXZiqMLwrS
xZvdWc/d8PBhLl1eebGeV2HZ6tvjpq5i3nfwLc/V3T+vZd6m8VpBfbCVh08g
8w6AX35Uv/bYwXomwztODAt9dID1fAvLdlZn993NvI0ScDzdedQ3az/z2sBX
Bjna3j7KvK7wk40NLh2OYD1fw7Pla2z20+r6F7VCr8BeKZ/pMmu4oMfxzy1D
mX8ObHux2+Fcvu4Q+H//rWNsc4T1rJuI3z+rZVKXvaynFHa48GhV7j7mnwk/
jktr68fvk2+Fg14/sx54lvnPw58OdPdaREt7XsL4zqbJtXPnWd9pcOGAPz96
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
hp5r0Q//A35onys=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 2.0170852020907435`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 2.0170852020907435`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"IWM\"", "\"RWM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.2007993721452253`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05346105303076435`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "22.46119939789104`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6877209007057943`*^9, 3.6877217416893167`*^9, 3.687722164894137*^9, 
   3.6877229814657383`*^9, 3.6877235801277614`*^9, 3.695714571930441*^9, 
   3.6957281426149473`*^9, 3.696233927274042*^9, 3.6967607413772273`*^9, 
   3.696761478024253*^9, 3.6967615514443197`*^9, 3.6967617479688573`*^9, 
   3.696761935722108*^9, 3.696762079427864*^9, 3.6984977509213963`*^9, 
   3.698497818863474*^9, 3.7020194373725157`*^9, 3.704691001590322*^9, 
   3.7050414278141985`*^9, 3.7052520522880807`*^9, 3.7053148130018167`*^9, 
   3.7053149500649757`*^9, 3.706903482661978*^9, 3.7069037513837814`*^9, 
   3.7105683044374156`*^9, 3.710568355798375*^9, 3.7105683984282317`*^9, 
   3.7105814598412404`*^9, 3.7105815089697623`*^9, {3.710581568330058*^9, 
   3.710581586577138*^9}, 3.710594962173704*^9, 3.7105955056542945`*^9, 
   3.7105955529080296`*^9, 3.7105956181547236`*^9, 
   3.7105958278911095`*^9},ExpressionUUID->"226c015e-2b1f-448b-b162-\
71c6aa48aa5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EEM\>\"", ",", "\"\<EUM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EFA\>\"", ",", "\"\<EFZ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68772110106639*^9, 3.68772110604591*^9}, {
  3.6877212572034655`*^9, 3.687721262025201*^9}, {3.6877215083368464`*^9, 
  3.6877215085778017`*^9}},ExpressionUUID->"b1d487e7-f623-4847-a8d2-\
c923553c7741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LH/7Hvl+7FMyl0Xd/3X0QsonLu3/AxPTIZk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
R8BvWxa4l28l5hqdUDLXo86n2Bx+Of3/AKbaD8w=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTO8CBvCxZx9bimIsvyRJEpKkE1IhI0mRGilbYewkGllKlsa+RVkL
SZSotKiEhMi+hizNUElChfuYp3/u/ePe3/dzmnOeec77vuc987vdvBc4+9YX
iUQlDUWif//77z+eK1QC/6l8OP7LNBRe5LvP/OXvsn+WXYDrX82L8afLTVeq
hO7R2xeF8+8lU+FLlx9/i6mnsXQDfCDGKeQijyvOwUMutlhRSMc/hVWLOhZv
om3cAlTCk6t5s7/S8mB497v9pcU8X1QsvKWf99zWdMEjuEXju/4dGmgsqrdK
JSw3WrCraUONlUFwsJFzzGs68xT8sfj9Yyn/vrwQHjmiNG4Oj0v+wB0GOza1
qM/8hoEqIVyotnvJvy86Ca+WmfkN49+L7/2/bWrg4pkLjc7x8/L/VquEHXuH
9W5al388/ELRLb0dj8t+wr32/Bd46a+mT2X3NSphcYtWxiH8+8yxsIl1zZMZ
TZh3GZx+vWqGBa+n+A7PXvpO3LWuz65BKmGA63+Dx/HzRQ7wmqdh1ma8nngJ
fKL5gnzLRsx7GB5zycr6Gs9foKdQCd+WmyVc1mKfo+EJJp0rUxtzPCyEG5V9
C9zA47KDcKWL/5b2/LzyGrwld/XwS7Rk5FqVMPDvtAh3fl46Hw6ZULL3Zd14
2Adbpe3WP1ej+f7xWXBA6XyT0XX5P8NjhAbV8zje5H7BKmHYqSk90vj3Ubth
/5xH4a48X0EGvL7mrc0bfl6kgt/1iGxYWTee269TCdGvbiQ9pzN3wPWrlnhM
quZ4vvLv+GfTvIJKjSUf4U72EU39v2ksbbNeJbi2tGtVVa6xYijsU+VZ2LJM
Y3EKbLwmvtdJHrcphlWzdI73+sn8rTaoBLFuSkQyHWUBb8paGf+1VOMCbzgv
xD7h83vOtzew67iXr7JoZfONKuGsrqXb/mKNMwfC80KMYkJ5vNwLbrxW/Un7
I/OHwe/nXRzc6i3zTQtRCUaNr4xu+475QmD/1ht/iXg++Xm49pP/TMUbjbEA
qIQi92Y+9q81Np0Cax9vLHSnZevh9vrPtJu9ZL44+I2PrLHRK+Z7AvdYszfs
1Av2N3kT5sOwSYN78POKtbD3XauHLXk8/gw8Nsn05E1+vugh/EDU6NCWuvyi
MJVgmNDvymp+PmoN3LPi2r6SR+wvBi6wqnc3ihYVwq86H9yu/5h5e21WCdV5
7Zz1n7CvE/CZnadmDedxSQF8P6h3SeJD5q2Gx6Z0PN6BxxU9t6iE64FOxzbz
8/FO8BYh2cmC17O5DRu/SrZP5eflP+DyZ+qxc54yb7etKuFZ+Vrv4nvMOwaO
T86xSixk3mWwNEp6ewo/r6yEb/g+/zqfxzO7bFMJSxac1+nB65Xbw0YPLO0k
zCNZDDf8+HRFG/699BD8aEek+fy77LNzuEr4OubB55z77NMOrly+6nB95rGR
//PBDom3eFx+4P8dlQPnFTacuKaA42GEUiXs6h0Q2JbXU+6FxZEZyvTbzHsV
1mo8cnA3Xr9cDb/6pFReusk+527H+MmdrruTf1+UDk/y2lXVgH2LS2DjyqE6
ZryeTbsdKsGueY9Vjfj3Bdvh3wX7XNPz2d8VeOiayVN1eX7TD3Cs9oFfpnd4
/8U7VYJuy4895/N8Sku4fi+dyLr8kmQ47om03XueX/run9t4Wy6/xbwtd6mE
WR1bGNnz8/GDYense5nfef6i6fDAUvP5iXRUs90q4U5EC5/vdXnNYd/NHuN8
2KfIC5bsy08s5PlNN8GN3no7vefnM5vsUQkVpjN27+Pny/vDtcuCDZY+YF4P
uHmxS+lafl66ETar6nv5DvtQxMPOsVdyjjOvuN9ePJ+WjJLo3mCf7rCFqqJd
f55fvg7etXX8zh08X9RZuEtO2cq0POZ/DE/fcrBfFe+nzHUf/n5fb/k5WqmA
2x5VmE6uu/+nYYPx1uGSuvwP4KQ/Pc7X9SX5C5vOH3irLn9R9H6VsHFNgnxG
Xd778L1Ncffv5TJvLbzvaPyiuAzmNTiA599Q24t9r7HPE/D37LDPi7PZ5124
V5OzDoP497JfsFn0GKU7/17Z4yD+PjKkaZurzDsODrr+N2YDryfNP/hvfQxd
KjC/ogr+fKSy61PmjZdEqIQGOj1Er+vyO8LVH5zqr2b/4qXwn9VPUlfXjYdv
sGjv6xcP6AL9Qxj/y9Y3eFY3fu3h3PTfCRN4PdNFcI/FsSWN6sZvBGzSZv0i
S7q802GV4Lgs5PAj3h/JKNhfvuelAy1dAP86I1+5n3+v2A/b1I74fJjfLz4b
tp6XoN2d17OxjcR+QW6hH875I/eHZRfOWTTn8ag98OTtGw/tYd6CTLh43JRL
e2nlnCjs3/bdma3m+MrcCcvHf1j8o+7+p8G6mxP97l9n3k9wVOeYss20tO0R
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
R9x8FseXIh/eUSXPO+vA/FX/b5ulEpyvQc6XOy7sNxJOujRsoYUz89+EPVxO
vi6fyPzf4LlLLixpPZ35u3TDfF4SvfToNPaZC9e+lujFst/ycjjM9KeVzhzm
7dwd82VMpx8+M5h3FNziqEgi5fmLsuE7p4avzvFgn6Ww87YswYj5bHR6qAWt
p0v+duZxuS3cMaa1eQt75vWHFaL75kcE9qmGDwba5cvqxkOHnmph7MHCYwUc
j8rhsHdoXuZE3s/MOXBu54yGJ9lP+U7Ysir8yW6uJ4q2/6mF8IoEfVueL94K
tppe3GMo70/RTFgoLV96wIr5t8MqieGoXhxfNqlwo9YzC8wmsc8hBmrhk9Zt
vKizTx+4tfu7273Zl+k2+PD1ULc7HI+yy3DZT7fCNxyPyrdwWg/LjhZcHyXT
e6kF6Sz1Y5+m7HczvKtwyOgnbZj/ImyQrut1ifMr/jW87apP2wkcL/JQQ7VQ
VVgxcD/HU9QFuMWlB/7hvZj3BXzD/kDQ7FrOvya91YJtzjyRFZ8npv3hICuf
oHDOh8xzsN0Fy8ZRjuzzKZwe1DctbwrzNjRSC+5t/ENmcPxITeCUTvf049Yy
rxuced28asMp9vkY9vEN8FCdZ5/1+qgF3VLtt9fimb8PLPsR0tZpO/NPgqd1
LE4KDWH+ILhl1qupHvPY5x9424kvedsns09DY+zfGp5932s+8zvDVzfZTa1c
xvyBcFG0X6rheuaPhrf1fjt/KPPG/9dXLRi/+3F99gqOh/HwqayuU8yXMH8A
fPTbmyuzQpn/ONzkfJuLv+rG8x34bpNDV0vcOR7GmaiF/frVFXeWczwsh8Mf
6/u84PiRHYG7nHg4/r0n89+CE05/7fCR/WZ+h+8PTdHx4nHpkn7YL61yMcpd
zH4PwyNClRYPfZn/BjzY9L93mZxvRRVw7dNxk6UtmV/fFM/n2vk1f47weXEQ
fl6S/OvXGO5/rsFtpulcyh/F8VEOr4nzDVsRy/HRqb9aeOKlnW38gc+XkbDi
o/vdde+5/8mCTcqCEzby/UDyBfY99TD0yGo+7zqaqYVJNnbv9Pg+oRDgTZNe
pRqc5/PaD9afeOdIb+7P5O0HqIUrqe2zNzxgXmu4csWo6PkpzDsbbjhEfXoe
j4t2wqa14dNC3/B518Yc4/vH7YRi7p8zh8J+gvanHd+Z1xeem7LQILQBx4MS
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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 2.383725079484597}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 2.383725079484597}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3628554526255698`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0942428136360741`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "14.461107431367036`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9, 3.7069035229495983`*^9, 3.706903769915656*^9, 
  3.7105683112341633`*^9, 3.710568359713117*^9, 3.71056840246307*^9, 
  3.710581466211467*^9, 3.7105815127852983`*^9, 3.7105815904476995`*^9, 
  3.7105949684606276`*^9, 3.7105955093922157`*^9, 3.710595557011223*^9, 
  3.710595622267931*^9, 
  3.710595831066578*^9},ExpressionUUID->"628b2ed5-07d0-448c-aca1-\
1a3ac0b67571"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3Hk8VP8aB/DJElKMLIli2kvRhIoWOSpSimQpiqFCRJZCVEZCkmwJRZTQ
QshSlFIRlTJFKUsNyTIjjUpCcZ/fefxxz/3j3vt+jcxnnvM93+18xyzHQ+b7
hWg0Wo8Ijfbf//73Hzt/HoH/T7AO/ot5Giw55WvYh7Tv/5l1B5wWFHPJeiv5
uoB5lEfIm0ql+DuTZtiCkw9kdA56kzYLBR/aWmhuEUianQdeKlbGmB5FOv8j
OELUvvFXOmn9nQGUn/c8CQ5ctP/CpgDS6Tlg0/5HS4UPk+a8B68dY6zMu0ia
NiGQR6hMjVeqCSUdEwS2TIpuzg8hXXEDvIjFO+x2HPPXg9u9ZyWeDML8o2BZ
rV3P3+/E/AuP8Yju01Im7btIc7PAWXM+6IovJU1/A/6cdZ53az7mHwE7NVkN
103F/POO84h7P4cI/yqyfumm4BdidgtdJMjXWX/AYZnO8+s7yNdjZp/gEUYv
t3wTuU+6wgR86R37876VmNcXnHdBO+5sItZzADx0fLm5lgPWUzWIR6zxerbV
Lh7zGoPv3OnZp5GFeQ+Dt8yI2jJ/ej+Z9zLYYnRi7m4T0pwZbB7Rw984xXgG
aZoROC4xfypLhTTTi2rWJfCMGs2p60RIx1SBU6xzQ+5IkWZsCIZ6a65bd2oS
aTMP8I+Iqqi7zzF/Ejg5ktHYXIz5n4CPu6o6vxzC/L3g31rvjG9+xnq6naT8
vvQEsKGwYsRzOuZ/BGYlG84M+4ntgQc2udml7cfA/HIhFFfEhVDeT/AA/GJk
6Zd9H7E9dIF3LLnTvv4RtgeZUzxCbNFf05FOzL/6FOXn6WXgwJbK4wE/sD10
gJ2/7U9wUyXfz1MqlEdUilWo9BCYXwd8sbYp22455ncEZ4VJj3j0Y/toA4ss
rXRfq4z1lQzjEUumnNSzfYzteTmYvc/aOKIK89uDl38fSYv9hfnPgHPVrJNV
6zHfnnAeEbPrhGlTLeYLB6t0dHVwp2K+AvC0vHLT9hGsH/M0pb5MGzC3NCPU
SAuv/ylwRPGKgkV8vN9ug4teX17JKcJ8H8ClXbLDS8qxftYRlPdnB0dQ2mf+
LfCFrX2yVvvw+r+LoPQndNoZyv2afuIMpT1xrp+h1IdWD17wa/Kx0XtYzwWR
PKLBRHqL6BjWK5NqBgectv3rfs8mzDscSbme7LlneYTxOU3HdzLk58/fBmbL
LZ3zUBrvp1fg6gl/aNlTsJ6D4KUfpfjLlPB6z4riEe/+ds5dZYzXewt49+PI
xTmueL/5ggMYj+wM/PF6/wLPuBjeYh2L7VXlHLSHCdN1rK6TFmwCG2h8vdZb
jPebD7h7qX4f/Sreb6nU17nK0TwiUVY+2e0xaboh+Fxvgbx6G+b3BA/YlflO
/Yz5L4JnFpQHHRjG/JXgjBXcoPdV2B7Wx/CIb149F+0fYN5E8NEuERnJF5j3
MfhHTcXk4i+Ylw+OpinejvhFmu0ayyMU3tgu6tb5QeZ7CP5o4l/rep40vQfc
cnTk72Nv0vqycTxCcP3BOd1jpDmx4Ijjub6+O0nTHoD3009d3qtBmtkJltQ8
FWxvQJpFj+cRwVkv1u93Ix2zCuwVNngofCNpRil4gXTloZBdpM2+UF9nTznP
I7a9bdhmTpDOXwmuSLkvddkW8zuAvffEJ892Ip0+KQF+X7/Gvyo7zKudQPl9
NHvwVP4bolAb80aAt7c9mdw7l3SF2AUeQWTYPDMTIS1YBl6VIVvetBLz7gYP
/1ReXTkL84aBR+/T81cvxrz5YN+DwdYPjLGeSxOhf/aNDMqVxHruAh87s6f+
O520Zwj19fRc8PIDMk3Z7dheGxMpeVhWSTwiW37vghVCWE82WOjlqPs7Kcx/
EyxFeK8bmof5G8Dng2WbPs3B/GNgBUVL70myWL/sZB6hxDXuCp6Bed+Cn+im
2B37ie3zL/jf7dh/9kXYPudf5BFvRQdX7K7B+ycTnCXecdgmEttnHdjWR1ko
+Rr2V0PgoWCpV+Lvsb3OuQT988sh1lgFttet4Oln3/BDXuL9UwvWefSHuzcd
2+tvcHZAf7t8I97/jBSY/9hvu7/kG95fm8GecrwJtUN4fx1JoVyf9J/gjREd
uaHi2B5mpvIIs6jNMn31mH8T2H5XZs8rvL+Z3mA/M1vBg/uYPwXMuJnrfDcO
7yelyzCerJZ0XcXC+38j2GuPuVWOPuY/BBYbFtzg7cL8yeCoNAYtfwnmfwqW
lPjsfGot1tcgjUd0WTwwNNXF+h4Ep/oPn3HD/ij9Anixcai0fgS2h4o0Sp6Y
A+k8wp1ZN8/SEesZD/5w2sHj0D7MWw7++TO+r3Ep5u0GJ+n9ydaZg3mnXuER
jQoWtCJFrGcMmNi+/T0dx2v6fbBm6O9/zC2Y9yvYaVfvj/VHMK/0VR7hus63
yf8o5tUFf/HQtFfC8ZV5Dxx0N62Cg+MFqx3c/GnTkcWzMf/kDB4RbhRx81EL
jl8rqBawwBoiI2+acTxmfwZXlEnrfWViPSWu8Qhzr7k3+zZifq1rlOtDtwOb
Kq/N0DyN+U+DOxboKvyxwXpOzKTUl7YMfLnWO+zAc8xvC+63Krw8lIjtITST
0j5i8sD+Eo7ZF7E/Z2hk8QjtLceceV1Y351ZlPbHPgl+efLs2KYl2J/lgD8p
tJikT8L78T1450ztkZZOrK9lNvy+/ElzXmB/nx4EfuakGl3/BvPfAF897zzC
fYv5G8D9/XO/TH+K+UezKfdPxbHrlP5FkAXWF+8JZn7E/G/AIi6fywuzMP8I
WDzBsW9SKNZ/3g2o123Zl6p2WM/X4Dmll+Zt98W8f25Q2nf67JsUc0zAv40D
B+K/YXt4Cd7llGJaro71HADf9VJNVfyD7UH1FozH3koxBjexPRiDQ1IXXRd9
jfOHw2Dt8P0S3+/ifOYH2N5vSFH+BM5nZuTA/OFeQtZcDZzPGIG3VofseyiD
8zEvcPkuxRjJAzjfvQSuU6gtrMb1BU0pl0dw6t66Zprg+mwDWDJZXzTcDvN7
gGNrVlltLcP1RBKYJfyjec+2PjL/E3CprsHGlnLSZsRtWG99a5s/MpM02w3c
a7EsROYJ6fwEcGvLtqyleuTv4z76zxYPjuR8Ik3nga1WfOionojzMZc8HnGi
wO98rCzOx+LA+57S1eTOkz9PKwfnJmi5BRrjelImn0f0Nc3wsVAgLYgG88Vu
cP8ySDPKwGH7Zv52iyBt1gG2/qqxv2ANabZUAfRXXzeecnfEeuuAtYuTLG8t
x3reBac+TxY3YWE928AHOvbU7vTCvJJ3YD5puaa5GNdTnOXgfzLVoun7sd4s
sLdXomgXrv9iPoFp0oMJvuPrSfFC6J8KjayNC7A9aII3L86QScL1J2MP+J+h
92OlyzifDAcP2zHyQ85jexAt4hFtjFjV1fbYHpjgujfe/RmWmN8GPKMkg5i1
FvOfApsJrH1fnMb8t8GF8t3PSsOxPagX84iS1oOX5N2xPViDU9NaJ73C9WNM
MFhi7XN5SUnMf6uY8vkE74op9WRblMD709SPNUdgfU+A90SnPfTIwPzXSyif
n14P5rcfkdvAxvz/wLW/pC+L78b6Bt6F+de5pq4lU7C+WeCaJ9rmd0UxPwcs
Nj1HOHULto9hcH3qM720V9ie596Dz3sr1rRSAeubAR4dqCFEGrB9vAIb2SVI
+ipi+xgEaxr9EA9ZRDp/VinkM1pv43MA2/MWcITD1jCDbFyf/wKrbXu54UAT
aY5KGaU90YzBN3cIv813wrw+4Elvms8EXcN69oOPV587tE8O+zPl+zwi03ry
ZXccfxiG4FszHgul62B/5gnudbg56ago9mcXwQ78FeLrcDyiT38A659vh2Q2
7MD+bT3Yb2XosxxcP3i6g39N/5g6XRjnF4lgs/3vJyXysH97DB6bK+VlfArH
C/1yWO+NJrhsPI/9myv4wjz+mm537I/Pg7mzXgS+xvFV8BAcXrjUsXcP5u8B
q6ncKCtahOOd80NYL2a+Pnd5ENtDLFg300BOsBXzPwBrDbhp/Bvvnzupr3vS
H0H/e/L3vcBwHC+iwcdlFG+qOOB4UQo20Dy29cQKzP8FbPKLZRBujfmnVPCI
iaoesb8fYf6VYPlLiuorGrC+JWDhg9Wrm/qwvlzwIYlCQ8UnmH/SY7g/7L5+
3IHjG1f7MaWedHtwYum/gt1iWN9WcJ/FXN2uMayv2BMe4WN2UOYGjp80zSeU
PMzd4A6XEEP7EswfBo59lBqbh/NLgchTyvszloKlfzNF1w1g/l3gR2P9mbea
MX8IuI29bHlNDubPBS9Obc3vuY31XVIJ73fcoeoyrr88rcCOyysMhjxw/GOD
FecKh9Yfw/w3wSFXZu14vxjr/66S0v5idlTB9S3LmfJJEut7HMww6jQ8iPsL
gmzwx6lnW9pwv4DxFvzQ7TNzpQHm/wsO726a6XwB6xvwDOYnt16Mfn2I7SMT
nLc34BUzA/PXgZmKEs0O+zH/0DNKe0ifU80jeH/OflcIxvpeBasrf9wcaYT1
rQW/7oqo9bXC/L/B8msKfNb4YL031/AIw6PLFaWvYD2f11Dy5v8Er3Gv7t6C
+xvcmc9hvJt7kT+I8wH6pueU+1vfG3xi/u+Fdjj/5AjAAcbx754EYj2VX8D8
U+vDmY7jmHcj+LpqrPdz3A9gHQJvehL6e/kEzJv8glJvhuJLeL+Wg30ZC7Ge
BmARt3OfDYUw/0HwWv9n9f07Mf8FcNVh+VEdMcxfAc61D9CromE919XyiPdV
IQfFZmE9D4DFvp6Re78K8z4EV4cVHtSSx7zdtZTfX+H0Csb7k5oPTA5iPWPA
6QKPvOJzmO8rOFRBz+pCG44f0q9hfbnlqrs07qfQz4Gt9/1V18LxQv8e2GP7
JU7AUxzf2sFbvfYtZON+YPrkOpgP+u2J5OP4yVkBjhnNOsXk4fhWDN52bplH
fAmOb5/ByQ1eGzgd2B9LcHjEabMPbQ++YHvVAru+Xdkuh/tPDDsO5d9zJ76B
z2e0tFs1H/MuA0e3fdSb2YN5bcF/DO7PuYHzOc9QcMAobXG3NI4PIm95xNnh
Z0VRY+T4wdQA+6W4nkyYjnl3ghXnB8e3P8Dx7CTYpD+xX1YE8+aALdKczodP
wvnC4nqYvw3OmVS7BMczS/DWSv6iaa9xPAsCL0g6Fj6Sh+PZDbDnh7XLBEsw
fwM4d66fa9IGrKd5A4/Y4efqZ4vjJ+cY+Jes2aFLhzB/NrjzuVnSbU8c396A
+WtD80Zwv501Ala/PVyVdB3rd+0dzGeOWebV4Xhv9hr8tSHoUPVevP5/wD3C
/DnvcP8uf/Z7HjEzYFdqazTW8wrVni/BnKETqwNwPpQ+AG4w65xchPMRjmoj
rEeCn/sY3sG8m8FzJW2H1ybg9a8BFxX7V/8xxnr+AI/VRN0QxOD1n/EB1gd9
UUVqOP9iGIEPGR4ccuBgfi+wkuLTX2eSsT18Bw+Iz0o6eQzrqfQR5is+OcWa
+PxDfwO43la+oxbna54eHynXLz0JHPP6bfiMWVjPaU08omBHu0rWDqwnAVbL
jtS4i89DYtzA2fe91PZpYf4E8MPr9Fe3NmL+R02U+rD1mqE/2NSfaIXzwXwX
8Paal0OluN/JjQO7a78+4/wE85eDixT9720fxvxdYO49Ze8y3O/n7G+B8aum
/PUTXP/TYsDWaWMTWDg/YJaBHcNdmMPY37E6wCZ3L9RX4fo+RqqV0l8wolop
/YXZXXD2rsPfe9Kw/2oDFy0OOmQ+Ph5LfoL5ktF79nfc7+Qup9qzCBzRXP+d
wPVz+ifwnO1RmSEbML/4Z7i/l6+sd8fxjaYFvs07YrI5E/uvZnBgbIOiJa6v
BaJcHuFmLjI9GPtnBhNs0DvM08P5jpkN2Lp6ROUsjj/sU2B++ql0i3k4Hgi3
UfpPffU2Sj08rcFmK4YfL96NeYPbKL+Pcwvs53hgn1EA1lOtnfJ6jEU7pd4V
J8BsUQnm1SjMfx3s/UXUt+0k5q8HH1B0jbLB8Sd/+xce0d2g2Jr2DOsZCB69
xtNtwPU3PQuseG3BFoU/mJ8DblNW3iv7CvMPg1WmqEdulsD5zdEOipkZ4H/H
+mZcx/1d1iuwcn3c2BycL8UMgveKLXd2WoD7gbO+8giXsCTLWhXcf3gBVgi3
ERUexLy/wJueavzskMH9B5VOys/TjcF/xMtEbXF/Or0aPOnk3FhL3H/j9HdS
3p82o4vyOtMQbC009uPeTNy/9AQX5El2DmzB/ck+cHVQq4HaHtyfnN7NIxoL
T7h9PYL7q+vBT2kBFpX7Mb87+IJO0/Glprh/kgiOkLzea7kd91cVemB8q77i
37Aa91f1wUFbVjd3rcH5pCuYG2G8ONQT9wPPg8uLCJsMS8z/qIeSL2Ytj0ck
rJew3IT72RXO4JCrV3Nm6WP+WLBC5IvkUdzvZTwAN9tkZR3AfGad4MwL0Vr6
NljffXwekbI6uF9vK9Y3GvxSNczi9lHMXwoOsI9b1ZKA+b+ARw7ovpC4g9f/
bC+POFJ60vv5baxnCRiuUtyMZMzLBe+yHrynXYR5J32D9nbwyKdlFzGvNlj7
NS3pGe73swvBe56K6KaXYj1bwdW3givtSzCvWB+PuLE+MXXLE8yrCR44uVTR
2gXz7u6j5OM0UX+eJvqdRwwOaK+634f5l4IvCCl+ov/E/LvAiwJ4g+XiP8n8
IWAR66s9qwewnkICHnHU6UxLgwL5utkScMGL7TdjhzC/Fbhi/+MrpW2Ynw2m
3bwYxIzC/DfByzTM1mplYz0X9UN74H77eLUe28MOcAQrf4MgAvMfBy/J/ZV6
8ADmvw7W2Jr5Z8wK878FS926F7EhGOtr9gM+f11Xy0A51jcAzHXfPcfhKebP
BC+ruKm0rxXbQx14fwdda7gD8w+B19w/cPdPI9bX/yePuD+P1Rs3kfy8+lfB
odWDkZYzSXvWgr9sE3M5L0s6/Tf4gsszwd9RzM/4xSOipty7PdKP9U0Db8+I
9Xkkj/V9Dpb48O+0kBbpip/g2bTw4e9bSAtmDvCI+U26qWrKpBmbBijvxxWA
H8a6HxyVJE1X/k359/obwRJ6OZf69DDvIXCT9k9prQOkaX1g15dKX3M0SDMV
B6l5DQYp9Yo5CK7MnG3NfYD1vjBIuV5m8n9gvTiiukYRn1ex14Fzvhj9+ZSH
7eEA2G7ZTdtDIdge4v9Q/j39ITjr71rDJePPj9YM8Yjvl+Y5XcP+j+MEvp2f
EXkFn7/QYsFsH6N5Dw2xPdwHNxX+u9HKxf74K9jQpdHmCK4nBXuHecTf6F6W
fhKOF+eoNrsHHtoULzFrDY537WB+7pypQ7j/kD95hEdMWXa/qgv31/Ujwbfq
/hh6jD+PKQYr/3kfbnEW++fPYLkTPmfC6rB/lvgL85FTC6pHx9f72uAjOlGT
D8/H8e4O+NqMuENfzHG8awEPeHCdOsfXGxP/wfpmrnr/GW3MvwysvVVS02sy
5rcFr2uam7MC93e5H8E7U8Ym6WzG8U5kFOqRcDL+Go7H+hrgaJbCCYd1mH8n
2FeEt8xED/OfBB9/ZDS9DOcDzAljMD72OpVLrsb6LgbbhUiU8+IxvyXYtcP3
oNtFzB8EtrlhpZRfiflvgINqLy/U/ID1XUjjE1vbV+1cfwfraw4etuQpJuN+
AfcY+OjX875BuL6iZ4PZVVlhurj/of8GLLNSScsZ17cc0wl8QmjF34U7grC+
AWCLJyYu/3B+wbwGfpF5Oma7N+Z/Df6YlXVxvxPm/wNucNr4VQ+fnzH8hPiE
hq6VUbQt1veKEOX92C/B8YFPJ63xwvwDYI+Hi6SzDmB+VWE+ERb+Vzodx3fP
y2Aft2VHC/B5QXoN+P/aD+cHWLj12rzP4+O1kQifGEvY8vrR+PPvKvC+xIfZ
tTjfE3wHr2mo0ru7HvMqifIJ9fps7QxTzLtBlFIvtgd4Ij3vZdQ2rOc3sJsf
524YPq/XnzaRTxS2FEdb4/rRkwCbeqRMcML9vXQ38O6MPZ1XcL3DSQDPGb2k
sXE1zuflxPhE88R9T8xx/RejB87wFSza/gPP87iA3bZv+b7AGufzceA5gxbv
zHF9wigHt+j51U64jfP51eJ8Ytvr+2X2uP7k7gdfv/LrwUs830CPASeEJT/N
f4l5O8BX65Niq/B5Bm2vBFzf7rpPjnj+gxkFdpzXb66Bz7NYd8EOPQpFAXi+
pkJyEvz+9VNem+J5DLMzYFd5L7PDNrjeKAIr0f79atmE+T6BSzsLI4TH94PF
JfmE+L3fT+LwPAhdC3zX6XqNUSvWrwC8b93DK9PLsH7NkpT3p02czCeI4Ae9
m6sxLxO81Mnh59I3mNcGXO28wsdvAOslPIVPDMqZiX3uw7zq4H691J2n8Pqy
rcGNfj9DFuP+Un4w+KXar+Lx/SN9mhSfOJLreMU4BNunGthyo3jTdDdsnxbg
+S2qLmU4v+ecoJp2Q4pyPWIWSPOJ1TKb8ivw/FPFdrALa2+9Ns7nBYFgofb1
cjq4v8rIAueM+kRdxP0uMw74+MprSx7h+SzuNjqf8Nx0dut8WWyvR8EmgppJ
C8UxfwZ46KzIRsNuvP6vwLKPKz3S8P5IHwR/y1GuXeaH93u6DJ+QXrq+3QTX
czEvwDfDHplqYf9a8QusvX+o4SQ+LxaoTKX8e3YqODf97GUV7E/zq8F7X7cZ
tuN6its/lVJf+gxZuH71fpuYuD7RNwTPuh764ssJrGcl2KDvLbEFny/TvoPn
rRKzXoH7d8zpcnxCVIc/oRHXW6z14GnTDu7Ww/NUMe5ylPbM6JWj3A9mCvJ8
4uxAkKXkQWy/+uCKM7faeiOx/brKU9o79zw4QGFsOAP3KzxlFfjEhksRq1dk
YvtdC67ZuGhO3ntsv87gfAvlQF183k6LU6C0T+YDcP+15hcWuH9dsWoan3jd
+VE+DPsrwT7w92fdSjMtsT1ET6O0H7NSsH7G8zWy4+fNvoAbJ7VqLMbzSHRH
RT7hf2DThFJ83qx/Fhw4s7G1HscnzxLwdSnJqbXY36dzwduSS0eb8TwQK2I6
9Eddhn4MAdazEJxekTFvEj5/rWgF39xeHp+H53MEYkp8gvHG9V8zzk8YmmCN
v7sDF7ri/CYfrLryxqGcbTi/aQIzD8uURu/F+Y2oMp/oDtolE3kK5+tLwe+e
fJ3YewPnw7vAe5M/n7HD+S3tA1j6vFDRH1xPMYVm8AmVXSWPDrvj/GwJeHDD
lJli6Tg/swIbHxxcvxznuxVscEDh2/21DTg/GwP3NyRxj3Xh/GzRTGjvK+tG
NL5j/h3g46/Siu7i+oF7fCbl89Gvg+OEav6Wh+H8bL4Kn7hSHSi+6irOz8zA
Phfdl5/zwPyBYCsT7gPj8fM9mWC/OHXtAnXMXwf+WJYpKo3ze8FWVT5xQ/7L
rxFcLzL8wbO3+z5MxOcLZlfBZb/2mu5djvlrVSn1zf8N7lof5N0YjvU9wuAT
95ou0Pytsb5p4JE1r5TV7DH/c/Bf/+yyVjy/xPkJZviESLFwvUlTmcUnslcK
NlTierHiGfjhZsm1QnheSCAAy559ckcZ1+sM5dkwPs6Od7s2/vxlI9hB0Hfh
Jp5n4T4F69O5sbJ4foHeR31dX3EOvB9T0fH8+H6PATjl39d2V3xelH4QzJ2w
XPoK7k8x+eCDPzrsw/F5Gkt+Lp94syZYeB6eT41ZBz6Qsta7G+dvFQfAU0N5
dXx8XiCIp5o9dR6fSCWmifooYP+2BvxFWcju7DTM7wSO0tFs7FuG+WPBR9d1
qKfg+Q39+2Cj2e6fZ+H8lKM7n0/8M30S/hXnS7R94G6li+s+4/4X8xw41Exi
zz+cr7HugU/u0NVP8sT87WD71JKCYEPsHxwWQPvyXdDfh/vZZpHgY+5105bM
xfzF4EWhj8I+4nmZ/M/gjI2vr3bg80fP0wv5RJOUheIvHH/T74DbTvhL3cXz
1ZwW8Dxv9r519fi8XmwRvH5vUomBDvZny8BxJ8zfBlzB+UIeWH1w7w3Dhzif
+Qjeo6AVLPYM+2MRNT5xPjqGswX3Z800wGqd824deYH92U5wm4ZZN78S+7NG
cEbdac/VN3B/csJiuP9UdOZb43kLz8VgP+n0mIP4fDvdEvw5u/auF+5vc4LA
hV1fGq+K43xhFLxXW0N9hS/OxxYu4RN33rgrLqnB+Zg5+LfLApMBfB4uOAZu
5ugzBvC8NiMbvPOe8LAR7u/nz1OH+7HA9axuAu63m4Jzn+QZit7B8xAB4NCn
LXprikjrXwN3OrZNtXEn7fkarBjf1813wfpu1eATfaqDsZICfF7gB1ZfLxl0
Gc83sK6Ae+beto2rIM9jxLwEs4vftRoV4nmOAfBPy+5Ftg/xPMfhpXziV8m2
bYPOeJ7jMviVYrvrC1k8z1EDNr8+cvhM0Tcy/w/wyAK14t41pOkzmXzi4lOP
obNWvWR9L4E3L+g88Xw6n6xvFZhRnWO+z5s0TQB2iXeYM2JD/jxTaRmMv043
OpakkL+PtQH89cxL4+JVpAVPwKbDGdVjRqQZ38Bv19RuejOP/Pdm0zT5hJjy
stpvUaTZBPhqvEFG6U3S+W7g+lRNd/c68v095bT4hJPmyKhdAebVAzOVRBpK
IklzXMD3FSP3ijWSpsWDjdQ4M+t/ko6R0Yb1TkT5m0fdpCtWg2PvbV95dSnm
3Q+WrHkjbvgV88aAf1qlXYyqJ21WBvYb8q2r2Yj11FkO12/nysgTOljPveAk
R/F3ghzy9+tHgSWOJQoiVpL2vAv2167oClPE/G3glZVlXqISWE/WCrhf/nQy
1D3Jz8s6Ay6QOmXrHEs6pgjMVH8yumwP5v8E3i0XZCsTSlogvpJSb3Y4+GNi
pWZRD+n8AvChhb1FB1owfzO4z1Btp/Z1sr3QJ+rwCfmvF1Y7/CWtzwQ/qjy8
VH06no+4DY4XOWtq10q+TvsIDlZYI9SxmzRTWJdP1F4rVy5MIs1SB9NmPwjQ
ssb70Rqc+aM55cMevN/eg4/MWc5vl8TzHLRV0P+FvQ+6JYHPv9TA798N9gRe
wPZsAQ4iCs4xdfB+PAEm4h4LipzwfvsH9nj2WvXSTDzfsWA1n3g8r3nHczzf
xNm+mnK/0I6B7cOjBK0qmD8L/Pz3fo+FS/B+m7sGrud8cRNaFWnBNvBrEfe6
GeqY/yi44XBs1edevB8zwCoKbyTUhvF+fAXe4GyyzyUS62uyFsa/7p9yATVk
/fV9wT06cwbXZZP2TAcvurHQ/XEJ6fQX4PNHnaWvu5Pm/ALbXxI6GymK95uP
HvRvQ9am4QmkY1LBtfc077KCSFdUg/+Gf3SxeoPtux9c2ZWdMkGBzMOYsQ7W
N122cyP2Yn0vgvNDtWieSqS5leC8lZETTQ0w/3fw1Y2rWeyJpD3X6/OJ5auf
28+3I38/7Qm402+K6qoDpJm9YOUDzFdvrmJeBYLSPmP0wTZHw6J7ZmJeVzAv
OUK5xQzvtx5wVuCSP3UN2D/IGkB7yQk1bDqJ/cNa8ObeFCdJI9JcZ3Dw/uFi
UwXS9Dhwk1HPpAcm5P2TTl8P/cMS2lhROfZvq8Bsvfm669Swv9gP/ntpm4jI
Pbwfo8GOe+oanu4kzSoFX1M+vsFJH++3lRv4RNU755BWf9IMR3DZYTVb20Ls
386Cva9W0xqV8H4sAVdanTX8MIb9g/1GaG/9c1cp1WL/EAGuXMwWbXqL/UMh
OKs/PVyFhf1bK1hM6qR6mjH2Z2GGfEI47IRmdgj5eSrywUk1R645xZMWNIHv
yvOUDk4mzRA1gvn6lu+5RSt4ZL6l4PVpBrvv9vWQ9csFJxxYvs+vlzT9AzjQ
V/XT7yHS+kKbYLx3NrmiW0TacwmYXqpgViJB/r50K7DyzoECthD5OmsM7HLH
Vuwfi3TMImNYn1UdvmNQ303m3QEuo4u/nNBLWnAcnPbZTFL3Gfnz7L/gpc0n
QsstSefP30x5f64ZuPdeXGpZKuYNBD8tqjm2QpTMo58JlijmtKm3kubM2cIn
dG5u8RdcIk3bBs7MHFh39BH575n+YE+rGaXLAsjXWVfBbvdDqr7nko6pBT+d
1DaqaU+ascWET8ztDL/yWwjreQQc9lhjQ1kW5k8D72gW0il9jPmfg4MzvaKO
78D8P8H9N9bLDj0lnZ6ylU9M0s5R0bLCvM/Abp3RE/uaMG8/+N6jN0mH7pBm
Km/jE7fFj/UJ4khXJIMNr7sq3VyN1/8pmN39S4GZjXn7wCOTXzz2TMS8iqaU
z8c2APMD+vd6u5KmPwa/udOlIriG9eSD3+0ftOlMxPFY3gzmRxV78h1/4/21
DuyfNeWQPd6PnANgoecTHuzC8ZjVbUZp7zFTt8P8luuySnUbjmdrwCe9iaSZ
gXh/OYHPypU+3R2G91csOG+d8V0rVRzPpM3Bcmt9d/7A+18XvEvRfiDlNN7/
+8wp95/+OfCra9q+9EfY394De+2bX32uC/uvlTtg/JPiWW4bxP7LAdz+t0Dc
FOcDrEiwXlf28gZH7L+KwZLvD3U3jPdXdhYwfpet6IjH/o99GkwrOfhUGvvf
/Dvg5DED91pV7F9bwK+GTf5Mno79q5gl3G9KSzTOCZFODwW/PjexaHsW9v95
4EHnyvhGGczbBP7wfX1LvRvmFbGCz+sQ9W/6O6y3BtiFOPPBwhL7/xywdkpS
HR3HF0YjmDY5dOPkxTh+TbDmE9G/ZlYbFuH4tRic7KrrIX4OxwdLcIDX+Z8S
Djg/aAC3xYucEw/F8WAUvMZt/5P1OH9IX7gTxu9NAws2fsDx1xyssixsw+kI
HH+Pg28fvHxisw3Od0fA5u/9ttYuxPF33i6Yv0W6dEETJ/Obggf4wQyjWzh+
Beyi/Huza+DGgqtXI3WwvrNt+ISc7u8LJnOxvlvBDOE2XfnN2B78wAq/vadc
5GD/ewVs/KO2eddr7H9fgvNHpYqSP+J4sNmW0j5Zh8H5i5QHEidie7gMPqb4
JTvpF7bnGnBZ2oqUXVxszz/AByxU31y2xfHMazdlvMi/BK7kJ2xMicX2XLWb
0t/TBeDsS6dFZ0/E8UNpD+X+4SSBo+pPVKTh+ER7ChbbdvBbyxnM/w1sLHbL
Jrkd80+zg/6qTsd8mhzmJ+wo7cuMZ0cdv+TsoV4rc+nWCtie9cClkse5cjtw
Punyn/2ezuVU4f3VBdaL/6D7Cucb6TIsuP4TA4TP4HyRsxrsdGjpl+rz2B6c
wKFdeRdfrsL5WAyYofEtQNYP5wdSDnzi0t8bGdZTsD3rOFDqzdgL1maaR1qu
x/xRYBeFE4lWCzH/XbBatFpGwvj6Z4Uj3G9NhIfZY2wPLLD5LbfJr0cw/xnw
7J+zr2yVxvxF4I/9M/boPsf8n8DF+e433/Cwnnv28gl9Bx+LRFyPxISDRd8p
Fv/F/qKiANznM8XBaxa252ZwosHMwXAPbM8T90H/HV2zzaYU2+9t8Jr1jOlx
Mth+P4LPS7laqP3DvML7+cS3j4XRT7oxrzr4odgzWUO8X2k5YHcLLzfFj1jP
9+AjEyvqlm3C9SbNiU+0zOOMXViF83M18ErDO1G6t3G9bAF2q6p+JZ+C8/N6
sEqMVFcGfn+Z/Q88Sdgj71EMnk9b4AyfR3xyTnQpzs+3g8u1bAcvp+N6+Ri4
ceYd/bhmnJ8Pg1u5UsE/8Lw/Z64Ln5icWs32eI7rZVMXyvsxj4J1uJL23Z2Y
PwPM1RLbOorrf8GsA3ziglBrldQE3I8wAcso7zVQq8b8vmBRfZlD9u2YPx3c
/qNBvUUM1/svwFGFomuO4vl5fWNXaG8LC7g/LHA/wgd8a7ea0+bx7xOkgq+n
7g49iPvHnGpwTNe9T+/xvBztB3hyL/PbYBI+L/B0g/7i5ChbA7+/W3ER/HvB
7Yfd498nqAQLCdPiCi9g/u/gfXETpzvgfovZ9INwv46Gh8SN718ngo/8c0j4
gvsj9Cfgr7uandvx/L1+L9gyZEKGjgvmV3CH9h74zyrNDfPrg2XyotR3GuF+
zyPwpmYhZwX8fj+rB/yhoGVxhS3ml/WA+0fz05qN6ph/LdjBboev8PjfB3AG
Py2b6CQei/WkH4J6u06sLcXnQ9xV4IsPA81VP2He/WC1BMtpz99i3mhw2yuW
Si6B9ZziCdfn4pRwEfy+C00HrOXombqkB9uDoyflerPOelI+T0zJf27nVtIW
Yz2Xe/EJixKLVW1bsJ72YLu00IR523B/KgIc/lK7twfPz+UXggtMb/WE4vlW
bis493fIyiHcr/Lc7U2tZxg4PivsUVE25s8Hi+1esEEfvy9EawYbX8+rc8fv
kzBFfeD620ywisX9sooQsDAnZ3hSIdYz14fy84wP4OPtwrGZFZhf6DCfyGga
2zAZ99PYS8C8oLyTz8bPs94CJ47lehH4vE3/HVjq0/b9J8b/3sIYuHij7eNz
Pph/0RFKPTg7jlDaP+st2O/7ySmuZljfv+BFIyMblfDvMVTM94X1gP+tFer4
fXCBmS+lHoxAX0r7zR8CaxV8lCgZP784x49PWPPEWvXw++P0beCSqeJqnePn
R/39KPX2vAp+KfHpeyo+r6TN8qfcj8wt/pS8rCPgwk8W4adVMH8aWGub41JN
/P5SxXNwzC3Li+y32F9sOgr3r+qpU+l4HpTtDZa+NfrqHX5/KD8FLOy+nBGO
32/hPgMXBU+OD12G/V0/WPWFqmZKMo4fhwL4xEzmM9Y3Fo4fyeDqUjl/+3/Y
X1eCT+Ta0dLuY3/dB/586J7KwDPcT1EMhPFxkvzU21dx/LgA3ppd3lb5HceP
x+CUly69350xPx+cc+ZvXrUM9s/rjsH9lOH22Bz3T/QfgiUOyH2i78T9k27w
gcUef532Yv889Tj0R5Ptaid4Yf+85jjl99GcwQ0aFTM+KuH48RW8RkL6dfJu
HD+kT0B/ECMjcTscv++le4LS3zL2nfhv/W2TOIbnpc3OgXPjJ+85guejuZOD
KNeDvhJsY2j3JQnPM+s7BFE+j2ckOPCUbey3jZi/GDxL9d6prFnYX2iz+YSS
2NP+1Xyspx1YaomXitdEzH8a3NFhkuX2Feefd8Bq2TJn94djvVvAkg8ynhoU
43w4NBjen10ifKMRx+s8cNXQp9ZNspi3CdzQyP07hvvH+iInYT0jLjrrFtaH
lgtu/35W9y+eD2c2gtnci1u6hnF8mxDCJ/YmigYuVsP2uhg8qP3X5o8i1u8m
+NyKiNZweaxfA7jl7wb5FOyf2aMh/z3fzmPwsP/MX3iKTwQlTM0wwPGLaw6W
T0yb93Z8f30E7BoWNikc7y/OvFDoT+T6tyfh/U8zA7+rn+4yMj5eBIDP/3yo
LIT3V8Uf8JzjNJlveL5ZMDuMT8yweLfXZPz8+FZwT+R8C9NGzOsHfrT66Zvf
4/3XFfAm8brTzjV4/zPCYb271L3Qf/z7A5vB4SWfQoJK8f4/DNasHrz84j7m
vwzePc121hzsbzk1YMu+pYdP4vNyltFpWN+We2UycfyJ8TpNeb+KS2Dic0bz
s3bMXwXWOaXeuuE35heA5+6sLXbC5035HhHQv/c9V1mE36/mJoG3XV+q8wi/
H0x/Cu6wSWnabIHPi76BLYtCrdbi83rPaWegPv8s73bg8yVmBbhakLx+Cn6f
msU789/z+sScukP4fEguEtbXzeWLB/B5UYUeOExdLmwFnt8yKwffGW3XPayB
z4e6wIuDBx3F8O+15Muc5ROf2LFTbuPzL+5q8GMz3fPF+PdQ6E7glMiK0YHx
v1/RATZK+TidmInPt6Si+ERquaRZI36fhKYL/nLe8E80fl+WuRe8+HJt/yJ8
Xs6KAlerbXAwn4jP3yTPwfWzt2+cNn5+ZwV4d2u+8Cf8fpkZC9wql3I5PAXz
nwEXZu+NmnwP8xeBOxg/HojmYz21omF9+fqSY2UH1nMPOOiF3n0zPF+VHg7W
7Mr9NR3/XgCnADy2usFnHX6/mtYCNloY+qkEn1/G2MRQfr7iVAzldcFtsELe
79vlLZj/I7g02MPmBp73MhOOhfppE+bn8O8PcIPB1SXf59WUY3vIAXtXixOy
+PcH9N/HUvJ60uL4RMXNZLHNNzG/Grh/zsKV6/HvezBvgKvrK4t40dg+6sF7
MiZ2JuH3o2P+gaUrjqg6XsL8C+L5hHiR6oQOPH/H5oDf8T37O/G8Wf4w+NyM
BPk4PA/PnXue0v7opuB9ebtFpiVj3qNUcwbB59p5gyZ4foA2O4FPHC2J4HhM
wOffJmApC3b+ajxvwPIFD234NY2N31eMSQfzpX1MHPqxnqoX4Pp2GqVV4N+j
MDMGf/ruvH4CPj9n+4CjB1llkvj3JvJTwW6XW+O9mzB/NThl+IK2MQ2ffxsm
8onXmZ7Fc/D7e+me4I7n3vTLuvj8+yJ4rm3usfjxvydSBT4X6bblqyPm/w7O
HI0K2+uLz8Pdk2B9Fyn6OzILn4cngi/krFwy+xY+D38CnjAtXbF0/O+J9CZR
Pg9bIRnaq9+Mkt14XoCeAJ6hebLux/jfO3kE9tlRJBrhh/l7wCkZ00634XnR
dNmL8PPyufocPP/AWQs+7VfCEsbzCzGd4D0DYlHPkzAv/RKfGP522E3xMOZd
BX5vY7RgVQrm3Q+eO0vYfhue187/AqbdunkjDs93c6ekwHrn/tPK1nzMq5NC
+bz6juDF6ruO11Zj3rPgmnnPbJUzsJ6SqZT8zOWplPwse7BpRdjjm2mYPyKV
Up+KwlRK/c00L0N9Vnz2dcrEeu4Gx2ZdX3kNz9Pnh4HP3/MwFgrE/PlgvYo/
slrxmL8ZzN45qeFMDtZzVxq0d7nrdy83YT1DwCcMNzxZguc7aLfBm5UaD0rg
52N+ANfrlQ2O4OdhCaXzCfuzE359wvwCNrjik+XJU/cx7zvwxt+bjbfi9WGP
gY+MLg4s8se8i67wCUHniiI+nufWvw5Om7r16gesv+dbcET6bGXh95j3L/hc
s8nl7Xh+mjP/KoxfmzNCT+L5Z9p2sKFpYH1JBJ63rgNrffAfzfHG89ZD4L2D
g9FZwXjeek4Gnzi4jt6ocgvPW28DZ1+pc9idiefd/cETHr4p67qC569/g5e1
mpm05eP561nXYH7rLxex/Bqev94Cnr6LVZj7Cs9fHwHXuH8gxO/gefE08I3C
BJ+yPDx/rZLJJzy2v+8+Vvxz3f8AvGp5RQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
yftVadTiLof+3/8HmKhgCA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
m37D/enFdLd3fF+QeMD7/zxxVPN9VGeEr1xxbHqY+cT/leJ4yrJybvN7jKwf
nPv6jNVVvh8qZ8Ie+3K6LJnLPj/BFgvu7mvJ7xtS6zIc//YyV6M78/aBk8KW
nvbkeFJNh0tneERU5fOuZjNc7VRM8nuOP3nD75ifVl/tcpDzV3hv+FDAgPvf
ef7Tp8CXHU/aXaic3zbAn8adrdun8vo7D/cvOHE3uC77dPuB57mp1aN38/6k
DYanjymeFfWN97c4OLLgmlrK+VeaBWvPOHc04fOR4g18Rn+421/eH40TfuqF
QaP2pd/V8n4RC2s6Zb9ZxucLeSactqrJlnqneL8rhJsGe3wfquH9xOIXjs80
f/epq7zfrYU3ivftz7vL+90JuFYfT5dXubzfvYDHjw2J/vqc+WuW64U1f7Ku
RnG5yAl2aTXWYthR3u+Owc0WH+5hOM373TN4cK6unf8F5jf7jfE4LiNsyRHm
7wzHbVVtcNvH/AHw0bgzw1dyf7rHcLRPq+LYk7xfV/ujFyZbPyscd4b5O8KN
S8pfVDnB/H7wmLgtdfpze/UK+O/FoupL2YfU5C/uL0Mdbh09xH7bwyPmVInr
con5R8CDl+08YMF+NMvgMF36p5t8njOmwgdSwyTmlc/zbUUGYcqcujX357Hf
YfD8SWZTquQz/1L45995DW2ymX8fbNXM2nzPcea/DfcxW5a3lcenHWpiEJYe
GLm36zn2uxi+6bz/1YtM5t8Lb/+avDqM/SpuwlW1q2oXcHvVd1h3sM7QTtxe
sqCKQVgV71urSjr73QXflE7a+KFyfFyDL3u23TUjg/m/wd8nyVvYcn+65lUN
woH7mzdu4/OyMgmebW2UrOfxqXPh1wEtjzrx/Gq/wM9XeeS0uce8A6oZhPrL
EwKmcn+aHDiyiXXZmt3s8zMsGu1X32Yv8zYxNQgJyxeuO5fCvO6wU+OQy9VS
mTcEHj3lSKxoD/v8CFc5bRLTcAP7tDIzCGEjb1RpuJZ5BXi774NphSuYdxp8
rEnBpd+LmXfTv+XjSycEzGKfDapj+eLk2Z0ms89e8KNuo2O8ac1keFj5gre1
lMwfDz+v08L7AvcnOQcvnt2h9/tF7NO1hkFwdm/3LmwV+5wIu9gpzuWEMr8K
9gtoXz9jGfO+hhvM/RTlwvyiCTUNQsfYWzZzl7DPdfDueZJfW5Yz7ynYIahj
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
d65vDIXfTl44yp/XS3g53CuiXJTL30u38zQIZg7vguVrmFcOT+zY03YYr2fx
Etizx/A5pzh+ZcnweN8bRSaB7K/lIPSXEfdHN47n2wu+LHTyyOT5ly6Et27c
dK3PeObfDctqHDg8yI/5r8NN8rrra49hn4MGG4Qhe48cS+P5lM+Dt9z7Ji6b
w/w74Z+Boa+ecbyk58EK//S43MrrqwS22VgebsLzp94+BM93fm/nvvVl3ivw
x6C4m+qBzFsM+weYtU7yZN7/vAxC3bED4q96sc9tcJ+qMYO29mafl+A77kU/
kgcw7yf4eaSD6Bwttx6K+aXjAmUtOrwPfKXYKTpvEPu8AIv/Ht3Qgb8vM8A3
t6X475fy/DeU4/1zjV+BrQPz94ZX1/lr9rgV80+B69zVz+nYgn0WwfYXTW8W
SNinpbdBeN3+69qeXF/jBpdrDCadudwYDN8bFzngPreXxMFD5X/MFY3ZZ91h
eD+a+zHX2oZ9doebvFb//dGM+YPg4atLT1zl+rJYeOrLQNcvjZg/E46xGDZ9
uzX77TYcz5OFfWavoqXj4B5pnS625fqKtXDHzee7DqnP/Cdgz/EHVxnF7HOM
D963D3RdYNqAfUbByydu7uFXj3mPwSq7462duD/dMzh/j/HaLVpcfQSu11en
rVZz/+pVsNfTz5LODdnnEfhOUETj5DrM+wRO0zv6PajLvNV88TzWcG/KAzPm
7Qjf/Gg17GVt9nkILnEMcWtJSx7+W7+N/bWuzCc3GWkQXP4KVW0tmb897Dml
yUAjfy99BFyrRbUgE/6e7B4sjSjuVZ/bK//AAcv/vizm8avb+hmEA1/bucVw
uXaY37/5rF7+SG4vCoXX52XW/1mDff6Chzk2ybhSi+OhtT/6SF3r/K4y/1BY
/7Ok0+7K/Iv9/297+V74bM7HwoCa7Nd2FJ5PuhfX7lKd/Q6B3Zp3njW0/ENF
/gXwE9P7joN/VVi5C95c03XnXS5XX4O3v+jhuvBPhaWeAXjfXG06ocrfCivm
wqemZczI5vaqJFhv+WXByZ8V1uTC05/muHTlcuMX2PLGCd+XPyocPivQICR8
7WNI+l7h9ETYvUeDdSIu1+XAdUbVuP/sa4XFRvio/wGZB9eXNRn97/xOSFHS
2q1wZFzdhqKyCosuwcHT/urU35j/I1y8po7jMVphNQbvi3WP1lpXyvwCPOPp
/PYzuFyuhyeXmJUPLGHeBmMNwruPTXxMuTy9F6zKqzZ5DZfrJsO1403rt+Vy
5Tt41LhM6/u0up4C8+PL3c9XMp/WFX5gMUs3jX2JguE3nYvNNzCPVAXfUV99
KP/APuuMMwhfvq1f4Wxgny7wkwK7lzZcLpkA3wyYeS6Vy+XrYN3+v82VdPgp
+H2tBvb9uL7YebxBcOh117vSMgVs42G+Y+9H5o+GLwbPW37ByPwZcHD2lLw8
ng/tc3iMvHvr7/fZ5+gJeB5xHfEg/xH7XA0758RX8bvD/EfhrzNWXtzL5can
8JgL24cfoyVmQQahtVPOxI0v2GcabCea/74Gtxc/hk/oLw+ZQ8uqTsR8FN7X
xlnLvB3g13NTPu/h/kSH4LBTh49GP2WfD+Drw2KaDn3FvKJggyApHNwoVMe8
9vAWp2+NIvXM6wO/y43qYFXEPu/CPVpPMth/Zp+/YcHS/X0295feZhKep1RS
Wex75veGf9qvcMh4x/xLYQehZtpA9qv+CRc+bTpj/xv22Woy3s/TP4Z15PkQ
DYVbejbq/JDrSxfB0i8NZvz4xPx74MDACUP6cPwZW0zB+/qBYjsv5pMMhpdt
nJqcyTzy+XDMgk724yrHgxr2uKLYupDrp+fDYbmnW7hzfMoGTsX9sEu97st5
vSvnwL9qBCd+rcr5bQe8Ym74qqmcb7VX4an3bdYf4fwt+gJnrAnxumrO+U05
Df252T2ez/uRJgE2+5BZOJ/rGy/DzeePaNuJ85nkM6zynlQq5/wvbzzdIGim
d7k7k/Ofbguck7ojf52I89tFuIMibtGdyvntA6x9XFDVkcuVjWbgfa9N95iB
nM/UMvhrgzJ1Vx6vNBt2qV5WnvWb/b6HJZnxPdMr57f6IQbhzBXPCPNijo+e
cKONidvecP4xToLDDzcYvYx9pItn4nlQts9/JY9X12Pmv/fzK3ZRlfe7ibDN
PE9HLY9Pth4ujTDqNvB8aWsrDcI+m3HFo3h+RC5wbmqPpFcPmHc8vODaqqCJ
HN+KGDikVoP7n7m96iR8wOZux+UvOR66zsL8G2+7PJTjWz4WVsmn1QupHA9r
4CBf/1kDeX7Tj8O52iUv91swfwF8aNWlyx/ZrzJwNrb3uJGn4P7UkfD+6M2F
cvanTZ/97/kiesgIU46Hp/CVxMGmnzifSE3n4Pn3k75dK45fTQR8ceySKzV4
foyH5/zf+pJHcJ/4hwFHOR7lVebiftm16mIlz2+4A5xaN8zrMs+X+CBssaTf
67O8/8nuw2q7bGkKj1f5F/493jvCvzJ/u3l4/i01OrV9zvzDYY39YP2QQvZ7
Bz7W/9Oh6ZXzRTnseyawZa3K8WA33yBU8VN7O3E8GeVwgaKnrxnnS8kS+G3t
uulrK+8fP+CE4Lf+Uzj/61ouwPXQz9xyD+9/Yi94a0rx74W8/mUL4eAkh6R6
nC+Uu+G0yNX1fXl+RS0WGgS5a8JbVy6XDoK3Fze1yilg/nmw8+X5AeM4f6p2
whGvRmeY3GL+PPjBza+u8VfZr8ciPE+MH1DTnscfPhv+8XpGji3nw/Tt8PZ9
baKrX2b+K3Bb2+V50v3MXwxfdnnouy2J/c5cbBBOJu+8tiiR/W6DV8wWGqTt
Zf7LsLH1xkYmu5j/Ezzl0Klao2mF9RJs/1ixqj23N26Gf/dt/rrTHvZ7AR7Z
8+nkdmnMb4Cj2u9pZtzNvL2XGoTo522mfuXvyc7D6fX0wS+ZV1kEt91aO6Bn
KvNahhqE7ONLr0+itW5w4PIqJeodzDsJjtzv1Ps296d6A+ePe/e89UH2WTcM
4/NKeferh5i3OyyPsJte+zTzBsG57uLUz7Q8Fm7Sakxiygn2abEM+0/IfGVy
lH12gzN3vY6Wcn3ZONjD33mlN/tVroW/5s1b25J9qU/APldCFnzkcqlTOOYr
d4+sr1vZ5xg4zftbrWL2qYqCtx/rV1o9gfmPwQf2We1ZEcf8z+AXd+YujdrI
PlctNwg9I7vY39zEvEfgzmP0IZbbmPcJfM2p8Q7fZOattsIgVHPUznfbyf4O
w2luPsd7pzDfQ9j2gXNj78PMZxKB54nzQ/MdTzJfe3hn1g/zjxns7wDsfC4y
din7kd+DB+59UHU/+wv/AwfVPOO+UMO8bVfi/rrI9srzK8w7DO7jK6p6keNX
/Qs+lHAqtFkOz3frVQbhWUHy2cvcXiSHa2zvvbHZWeZdDNd7F+C94hz7+g4X
Odx7+v06+7KNNAhd7icHzLzLvEPgPqltCz/z+Ua+AA45bHaqK59XwnfBZYss
Q1I4n4slqzGfmAT93HuP/XnCWY6mXas94fmeC6cVNegqesj8SbBvRkNxNpdr
c+GM9t1MOnM+UAyIwv58VwzpWDl/zYKnD7XfM4zraxLhzLJftnlcbsyB7eN3
+5nw+UVihFsfG7xwC+ez9JA1cF91QhbnO91W+HrokOG+vB+KL8E/JR1e/eb9
RPYR9lqmSY7l/K60ijYIrX4H7LjF+U+qgS3X3c6ex/u/Qg+3nfNtgcD3L1WD
tQZh2o4uDvVpTS/4UFtl6whuLz8Hn/lT1Hws84S/g4+MfXL9duV8VS8G4+V6
/fKq/H2dKxyVUfu1LfsRB/+zStl+GZ+v1K9hVaL8gi2trbMOzxOTjo2rx/uR
qDu8cY/nsRGcf6UT4OuKnKAlj9n3Otg5w7frPP6+0Tz23/NRnuoC80qc4SfH
bjabx/uHXAFHeQRMvcXngfBo2MV7tUN9fg9Iz4DDmr8tPt6EfXZZj/njfNyl
LZ34fDMa3lvSJGsY3//Vq2HPcb1XdKz8HnEUtjo50cSnNe/Hz+D4L25Z99qy
31Gq/1tfsxK2ado6sq09n8/SYOdbtRUx7fl89hietSTT4zTXl1eNw/t/7bIq
q/n9QLcctj05e9sy5hcfgu0vDOvUkpY9iPu/vEpRPM5/tS0jB/D41Pbw6/KC
d658XpKmwm6dCyxC+X6uuAuLOsti7fh8ovoNnylxMqTy/VvTZgPeZz9E1c/n
82e4FtZOPZSzrSn7/AkH+sx8H1L5vtxqI94/C8rqLKt8nhwKJ9SulniMz6ey
RXBZ9WsNzSvf58vgtCpVUv9jfyLbTRgvAwLqjHFi3sGwxt1Ubt2Feef/c/TA
IdX4/Uilhn/+PB+8uTP7bL4ZfQ7pbBnYk30OhFVlDhsy+zP/HNis5uItf92Y
fwdclJmVvc2O+a/C09/OWrfahX3234I+J03oW8eZfSrh3BZjjozh9y1tAvw2
LbR+9kjmz4Frj/IsnxHA/J9hIfeicUgQ+5yxFeMj0cK2L793G7fA0ZNCLnbm
92jJRfjg+ubfVNyf/AO8d8fIcRO7Mn+jbRjfm1uc/MTvh+JNcMfbN0PWjGW/
2fDPq9ZPrvH7o/I9fKLovacjvw+r6ycgv/3H4o5zmb8n7B01+Nolft9VvYWb
Kazv3eL3X404Ec/j4x/3DuD+jT1gi8SZez7we6NkIuzpoHCfxO3TX8F5WbIG
w3l8utrb8f59RXKglN/XxS7wXMskh2haNh6e2cXCZgC/rytj4LO68mL7WezT
fAfG+3mT8Of8PirtCqcP3d7tKb+HKsbCN5OTbevw+7pqDTxb8JYM4PdazXH4
T5/btQ6OZp+OSbgfXenQx5bbhwfC1v/VtnjH85UeCU+4k1elVMH86XD0iOLW
6/i9XPwUdowdurLy+6zaf6dBSDLkurfh92ZtBDzbZImfG/sRpcFVS3fJpMuZ
/xGcPXzaVO+JzF9FbRCGD3CJ/sTv/cZwuP/Un2a7+fcF+X345YPsCZbsM/wv
fLPPzL+/eD7S2+3C/OlbLKh4vmX7YblH/LB+7Fd5B9bvaj/nRSTzlsMrPVee
vniYee12436VVnbvML+ni7zhlYvfRxzn31dVt+DS2vmLP19jnz/gm8NWq5Ju
M2/LPbh/xw3yfMK/B0u84PEeT6dmFzL/Qrj/+pzYJB37LIVT/0yduYt/Txa3
2Iv5u5kkfutL5h8E1ym16nSPf+9WzoNl678E5RYx/064xf0jmxe/ZZ/NknH9
zTaa9/zwsff/APevh9g=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0.6046567176814478}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0.6348023255066526, 
        1.2377144820107502`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0.6046567176814478}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0.6348023255066526, 
        1.2377144820107502`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EEM\"", "\"EUM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9350877030552425`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.034025288601462304`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "27.482138770604145`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9, 3.7069035229495983`*^9, 3.706903769915656*^9, 
  3.7105683112341633`*^9, 3.710568359713117*^9, 3.71056840246307*^9, 
  3.710581466211467*^9, 3.7105815127852983`*^9, 3.7105815904476995`*^9, 
  3.7105949684606276`*^9, 3.7105955093922157`*^9, 3.710595557011223*^9, 
  3.710595622267931*^9, 
  3.710595834126956*^9},ExpressionUUID->"9aaff5a1-1838-49e5-918b-\
ebd8679649a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k8lO/6B3ApUSlKKZG0am8qIkrzhESlqYiKIhQtmrSQXZZIRCRSERUt
JFLkS9Y2ylaSVKNIzURDIi38Pmeu/vjN+eOc836Z+Lie676f+36e26Qd+zc4
SEpISHwZJCHxv//933+2ufEZ+n/C5fgvVjAct2rla/Owb/+zTSZ8+8RBbQOO
6OtC1lE+0/vCw7Rwn8hqW+H+1uxFPyNE5gTCFf8V6PqHi+x7S/zrGa/hwLKb
OyxiRWZbuvOZ9Jnt9m/9ReYeg3ctbAy9HSZy4k3Yva97r6OfyFV18HO5bLfa
bJElBnjwmdP2i1mn8kSO8IFnj1jFvnJX5MJrsKzkjp1alZS/Fs4qGWW09inl
74PL9a9p592m/DM8+UySvWH13Bsi867Cb5VP3k5KE1m+Gm5Y53vgxDXK/xsO
jsxJ2n+e8k/z4jPytg2vtllT/nVwy+iZUjrHRLb5CYcXGN9t30t5J3vzGakx
RkautpR3Daxzhnnn8YTyHoGDO/1fzx/aIarnD5j3tjHvSSvVc6IP8pbJy7SP
E32dZwz79n4KjNUUWf4Q3PZ2QWGRm8jsi7CORf3qP5dFrlLx5TOlR4X5umEi
SxjB6TtTtBzcRWYdEP+6TTz8wzpXPpIrckQZPCMkQ2bwQZHVDPz4THJCB3PE
TmSOMxx658XHTQaUPxbWuvVuvwrlzSiGI9d8tTu+hvJ/hRecv3yiuYvqueeY
2OcTz8ChSzK9182k/A/gpqXxESZjKT//mNj3Y4325zObLu1T1t8gcuFp+Irs
8rTh2iIL/4Or3j4bP/sn9UMr/PHa599NAuqHkQF8xvzRyab70pRfF/4TvKy4
SpLqex8Olyoo2DWX6tsM3zgX37PmiMjcEYHINy5kzqhEyq8NR4+XGvw+nPLv
CBTLZ9MEb7BaU7/jANV3WBCfUfms9Dp8JOXXhFf8PiAxaDTl3w63uA64uGQe
1f8E/DRjqfRNdcpnfRzjYb+Cq8NUynccHt/dXtNnQfluHxfLjwmAz+z+dKG/
aDLVb0uwWD1tAoLF+jEiHQ6b/Tbg/Qfq33rYuqKj4lgz1c8ihM8UnHi8dGkT
zQd+8DF79VPCcurfG3A2yyaz+SKNt5fwAaktStU3abxJnMD1N1VYYnWdxpM3
zM/YYvxlMNUvFVZSGRF3ZDjlr4WvBpplvKT62KiHivWn8Arcvb7DzcaR6lUV
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
sG3sw5/L/w9GpLt6
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
pr6YX7CGOB9+IZi1fy6qA/fr87YsdDTm7xNMrH8r7IKJPJqVwcT6rZy7llhP
UdmuJdZHuP7gslQDhd9VzLsfzNqvV/YQ0+z3fTjWYNb7UXwfMGu/XbRHTJyP
9AqY/b7XxHXE94XLwKPSf9oUT8X2sAvMfr8ndx2xHqmqBrPeJxJ7raepJ12e
paV2xXrGrSfyKuXrifVFzpv1RHvga20g9gcU28DDbQXu8V+wPWRtIK4n7+UG
4u8LO4bQ1M1N1yyFzbj+YwYOdHSS+PbC9nA+hFgfFDwHs97PELeD2e+rmW4k
2r9y/kayvk/BkqlDyukQrO9vMOt9MsXIUGK/RyMMJe4PXgT4mtPesvrxeL+1
klYN30Sz31/jumwi+lvB5k3E/oY4bRMx3+cM20yY77SZmK+LNm4m1h+kJ8BP
posGbzyC+e9vJp6Hwllh8PlNj5TLI7F9rA8j6iNPCSPWB1QlYUT/w/0WRu4n
rQ0n1jOUR8E/7w68PPcU5r8bTsyH+Q3hRH8pGhBBPI81hyOI3+PdjiDGT0Ia
fHWngeOdIsxrv4U4Lri1hThfcS2Y9b6jrHckMb9XTokkxlOclZHEeo30YyRx
vyl6RUH9xfGxLz0wr00U0f55flFE/yHcB2a9v6XSjSbbs1U0sT8lWB5NrIeL
46OJ/UXZZdJ8SwnR3kRLwf1KulzlGGH+nRKi/1HkSIjva6rI4/LYGKJ9qy7G
EPun3NcxRP8p6LyV2I/jZG0l9gv5lWDW+4miDttoaotTR5F/PK4HjwHTXx3e
557A/uAc2GTgofObz2B/ULGN6F8lf7cR6+lyk+009ar3fNHXrVjfeeBOy3JP
f12N6+u/yOPKEbHEfgpHGEvs3/HDY8n9t5+xxHq+xiiO2I/jzQV3jX/bc74F
5t0ENhjUuuXkNMx7Emzsq51X6ozPB94OYr1cMGcHuV8UAr4pi0rYOx/zp+4g
9suUpeDpHbTr99phPWfupCnRyM5nwvywnuvA5o6KvlUrMf+xf8dfmSd08sL8
xWCDgCcJ+k6YXwPeVDM7cowt1jN4F00Fz10xbt8orOeRf06eMqMzH/Pf2UXs
twm+7CL278T6u4n9Or4CXBT97GO4LuZV7yb256R942kq36oke35HzDs1ntiv
E94En7Q4VzTGGOv5+Z8jJJUnzTCv3h6a6p8jSF757T2TdzLY66bTHfs+mHcF
+L3yd9cHzcxx2Qdw3KKthle0sJ499xKf59jsJX6f7wv2v7b1o6Yv5t8L3hCW
kPytlvk9jc4+mlqVVGnz9hFj3iTwvDcJPmY/GQtF4NqLbt5XsxhLdoOn1NzS
O5XIWJ4Hfrh7fnpZHGPBhP1w/k9FrxuljMXe4BhZ0wjtC5h/B2nlpX+eb6gn
TWfMqQKnnZph+V88Y6mnlKbGz31TrC1hrNgONr3WEha4BvNng/OzfHhdVmH+
V+CHdpH7FkZh/k4JNLUi4nuQQSzWNwY85VDtb/PdjLkXEoi/J3gBdln/Krrx
DObnJBKWjU4k8vMz/x0vvHgw4CJj0TNw79+X0q4mYf4/YMfRD2eVpWD+UQfg
fhoZZtt4A+upBL81CNYzOIb1bPt3/FXaiC15mNf4IE0djPyQ8aAU87oeJH5P
EAberMN9HXAU69kCXszfZvJoANbT6BBNdRtNVTt8r2HyOoPDYi44De6AeUNJ
S2Xg2pf6Bc26WM+hh2kq3eD96cQm5vvC2eA7Qbr3371hLNkAPhrb7vFdxVh+
HBwl6iDrVsBYdQ/s02BWfnY3Y/GMJJqi1K+KHp9jLBMnEZ9XJv87biWvnJ7L
mFMMvkQ5jjt7BfN/BQdt4xo6HmesWHOEpkYUv+n6fhtjTRJ4xn0L/Ru+jHlF
4LGehQskhzF/PdhncqdPhgcwf/+jcP7n1md4iBhzD4G7z+9iG7OAsaCQtLgO
LPbxXzd+EebvkwzzW0unsiFumN8OLL44OS5jKWPpJ/CFl3tc1vhjXu4x+D1Z
tUuLF+a1BbcU1ZeNF2Bef3Cv8V77gntgPd+Dh/WaqzdhNNazRwpN7QiK8fa0
xLzW4IQV16J1JmFeH/Ddg09HDJ2MefekEPk5OseJ8+VPPE58XrQMnJC772DM
VMy/C6zSPtssWYX5c8ErDRbb6jhjPcen0lSDeTfJIXOsp1cqUR95XCpRD5Wc
NPcN2NKmb+YaV6ynxwmaSv51rCxjFtZzG/hR1X9eMxwxfzb40tV3aZ5DMP/L
f8dNr6y7MRfzd5RBe3XI7Kich/WVyIjfFz6XEfWQtINd9aa4vF+DeU1Pwvnm
K//r7oP1zDhJ5BU/PUlcT9nvk8T1UY5Mg/a8697vGQMxrxvYpiyx9kP7O6ae
T8Baahf3mZ2wnq3gE681Qw93wLzD02nqsGOPip8NzOd5LmDFWweLte8YCzeD
ffzuT1vSyFj1A7z6wouwrb8Zc4edIo4LnMBXDk9qmVnJWLzxn9/r6t76j7Hs
BFhYkV2h+5Yxf8hp8I6XhYefv7P/H+oYVUI=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
u9ifyvfAXyYJDeqwP1PdgO0enjeuMvdvn+HpHe9u7cX+zNT0C7ZXqxu67Cjj
Hww3PLH/VUVab4Kb7TxrG3uc8Tb+iuu3TNp9nf2LdABs8/lU/HBzfzYPXhyU
YzeSFpXAS5u6hhfx+iUNvxmErS9lM3N5/5O7w6t+O1qqzeOLOXC7i3tlH5gf
7TbY9uPIyyf4e1m97wahw89rLo93MJ994fwVfnHm8ZFmFuymazmjJ8tXvxlu
Eu40yprbbS7C0WW9Xfry/qXu/QP1oXxuuxSOt3TT4Z0H6oV35v1QFAMv7JB6
RMr7oeQcXLox51oun9/k/8HDbpTnTl/JfE4pQ/k2WPnCyfw8Hw3/DOszb9Z8
xn8a9u8cETHX/HzxAt7/8tyyk3ze1tT4ifbXsmPnwbR0A3yo89u1J83zEenw
j1tuqYUcr6qfwS41Ggf6cH5ZV7XcIAy3sjis7Mb4u8HxPhErxnL+VXUCvjjk
xVh7zu9rn8BH9xY9e8ztJstfGN8Evl5wmvOb4s6wxX/1AwZyvlDmC+eHJa6q
w/lX/UN4eui9vdc5n2RT+bdBCLTyPKDn/JO0I/zu+/6gO5zfU4yDI541uTSa
82XqVfCNwya/mZwPk1T4YxA6DnSLzuZ8ldwJHjHcua4v56dVo+GLX+dF9x3E
+FfCg3JcT8m43XQILg9a1EM/g/l1FBmFm+e7bJjP+W6NN5wZ6WI/jPMf+uWw
5G7BvPNjGP8B+P87nzQPbvOy1/Y8Wje8glE4m+b0ScT9RcGw85b6Wzb6Mf59
8L4XaVvv8flBngvrNSNbzhnP+L/DMYH9ln+jxUsqGgWfUMuTG0cxv3vhfTUa
L5k/hfHfgrMnKvtP5nyO5gscumXp1nzGq29WyShs6PftZCvWJ0UCfMiq2wF3
Pv+qs+HN/uX2EXwe0n2Cs6Jqf/7A+igZVNko3H+69W7v6cznNVgQH1o2nPM9
pg/w8ctF/SZw/kpsZ4H9f/jO38T8yvrDX9ZPthoxlfEGwoOfrng5nvvbvIdb
z/Hf1Z7XK21gaRTWmiYWT2T9VgiwpU1nLxvOX6oDYIegPn0L+b5FtxVuPjm3
y37Ox8vrVjEKfrVjXPL5/kvlBg9RXJtTxPl+7Uy428Nxl4r5e1Ms/P55Zk0r
1jfxBfiK243pmzm/qXG1Mgo1HtZu3mkg8zkNnl57wTYLxmOjgotf3n14idsV
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
OGxeHyzAp/vcywniel5NABw7M6Ditwyur63bFeVb+9OvEq7fVbvBzp+mGpK5
Xlk3E7beNyHbi+tZRJvh3907JG7i+lxV7W54XqqSXdOZ64O1rvD8KXU6Ded2
0zQ40Uv3sz3Xk4pVcEjmhX5rzM+bZ+FdG0pXXtJzvbJzd9xfUsX1rV5xvfIU
+OZEQ6z6ANcHb4Tbd1zz5ssuxp8Bx59rcm/0Vsb/HG5y4PzxMv5eIu9hFBrb
WsfUWsH1y+vhotGNou2DGf9JeHpQi/sH9zD+Ijg05HTD0ymM36on+pt8u+8B
OcznWji438D5Y7j+WXP87/ZQ60Z1uD5I/xheoY0+N4fXZ2PpbBRauozteY/l
KZXA82Imed3i+F53FG6z8OuTtebx+0P4bpZvs9Xm7wUq9cJ4yxjkpDav9+kA
ny2cLC/gej/VWLhiyaUeCvPz/H246qoK9e24/k4mcjEKhXsWjZ/G5yllO/is
X9b8ZayfmlHwnCT3XD3nC/Sh8FL3+amfuR5K8QuO8Ph435LPC+o2rhhv7lLE
h/N8uhFwN8EtvD3rv2g5/PaXNuYOt0v2wx1HnX3xk9enbdnbKNzYOF4zg+tJ
TMNgJ3Hf4BLON4iXwdG+kyKHcT2gLAneVH6gcIV5veBt+GdAQEY614/ZDO2D
+8eQvpq2XE8lXQxbz1iz7i2tUMOPn1t+vcL2or4J32/0uXgj1+/rSuEvMe8f
9ef6eXmQG/qTQ5+OSvk9gWo37ONUll7M9eLa6/DCh2njzrF8TR9h7S6h7UWu
rxI36Yvnx21Bl+aa8xsPp7/t+/M713frr8Kf010qPODzns0HWH5y/J3hbB+K
flLcD/Y1s05mvKJM+OO6WVP9uL5bUgyf2HL5dwrzIa8voD96P7ekMfsPlRR+
2OVgUD9ev3Y2vCz10Ogv5vb2Dh6WU+dcTf5eWccd7SmtdJibkfW5Dxy9alPS
ZnN7nAE/8vPu96GI7TEW9p/Sxt8pje3Nph+279OGyNKZTxe49rWwg++17C+m
wXVjs8o/sv+RbIIdq747MDeL+T4DFydvfuLC45l69sfz3pSx9Q7c5PcE/nBg
9YBOb3PZv0XB7a8dbPXH/P3IKfhFYsK+HH5vIJ00wCisbPIxKp9WRMJpL0dN
rczyU6fBQ7pG2vTl9zC6p/CYeSGzuvH4qoiB6E/Cr3jN1bA/0MAZitIF98z9
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
51PUP/93u67VGpS/w3735Q8YrwzWZ3apv5njb0kwPKXTphMX+Hvtdzhu7ch+
uZxfNTlEGAVHU5Wqlvz7EmIv2KHzHtdFnO+RLYFzSwe4jTP/fZC9cFlwapX5
5r+3Il5rFLos/VK9Ke8XUg+4Xf0/ls349ycUC+GOe/b2UHJ+RZ0Aj33f3WUn
/x6ILht+ujzoyRjOp8gHrcP+y8veVePfd1DNh/1P5z9qwflj7U64SVWHy+sZ
r+kaHBH0bqj57zOITX/3X3RVGsr5Nk1gJNpbj3sYj3G+LA52MLa69Yl/b8Xm
Cjz/V42pcZw/k76HE9cHCm05v6VosB7jQ9cAYRW3S7TwwSfr6nc0f79ugHPH
Hc++zN+r6m4wCpcz55ekcb2E1g2u3uxeGyPPL7sA93xf71i4eb7sDVw3ceaf
QP79BU3tKDx/XR364g/nI/Wu8Kc0l4N3zPN70+FJC7rU/Mn5QfUr2La4z2gf
xqOz3oj65DO/5yfz95294CFHrr+3YnlKpsDvVrR5VsD5Q/lG+Pi8xs67OZ9s
qh5tFH7J1uZe4fytuAfcvix391zz955yWJ5y1lfO7yOV6+G3Ec16xfH9lOYk
XPo0L7+B+XvqrpuMwqNvb8tj+P2mwg+WHC7PG8z1Ieq1sJ3Hr95aWnccft3o
qqat+X3XE9gyy2l1O673UPmocL1Ni5qlODO/q+Er1zuu+MP1NKajcJs1N163
psUP4ZShO9K+c32ZrFKMUTi6ou6pJfzeUh8GX3XaNn49vxe0SYW1zb6UVqGl
9+F5dRuUzTJ/7ymKRX+xrO/45+b428X+z/VIDv3dntDo21Pz3we4B2+K3dxg
ifl71V/wgh2iPjO4PkXbZjPq6y23QzfNfw9AB1/0fCCpwe/jNWWwm9A7dQzn
y/Utt/xdf3RyTibX39kMh58tel1zJ+fLpcvgV9dFL/dwvl33DZ70bvjXw/ye
W+SwFc8/P65lXOX6DMlQOMd256wxfB8lXwxPz6wc5sD1FSo1fHFId7sCvq8T
N9tmFGbIDub/v/UcQ+CAKd0DbLk+TBkEX3ZKSB/E932a3fDQySdif/F9oP46
/PSX69lT5u+LBm43Cp02zPtlXp+iVsD5i/pXFfh+TxcPP+g2ZVIvbhddg6M8
Qtx28XiSD/Cq3Ly4Gny/qZ0bh+djv7XP6/N9vmk7fD/sXeNEvl8WZ8JdV1+Y
7svvMWTF8GXDrBNJ5u/P6u8wCiO8LmZNNn9PsBV+2+5UVGuuZ5Begp807pi/
m1a8gxdc+hrxht8vqOvEG4X/uip2J5q/j+kDf99X4tOW75NVr+FMdVy17YxH
a7MTz9e2m0Z143aTC/w0MTuyFtfvi6fBezxGxc24zHy+hAOSJkSM43p+fc1d
eN6KC1FZmtfbOsPzmvtsn8z1u1J/uGBaqoM11+cqouAm6yPPXeR6BlH13Ubh
2KhSQw2+z5Z0hzNv5oet4e/lk+Acr9njq3L9gCoS9k64e+Apv5/UpsHT50ma
TuD3J7IuCXgejWw6fjTfpysnwC2+P1mzlMfXRMDLJVPTb3H9hl4D251fsNzb
vJ7jMSwXF4xryPyrx+/B/UbjM2I386sLh4u1Vad5Mr+io7D/yU0fYrg+WfIA
7jNXSE3g/vKKaoyH3u9LyjZ/X6KEk64Id1qZv48qgBuuD02bbV5v/Qe2r3L6
noX5+6i2e43CvmTrj+u43kF6EC5saGk5gOWluAvHSwpiazOf6nK4VXLtCq9Z
HrrWidjfbVXY4VOMdwSsM24bYM/176o7cNbX3Da5XC+v/QHb/5oc3cu8Hr9F
klGYebO3ejjXx4uHweu8fcoyuB5ethRefHZj1N7bzOdXuPiHvNU+rne3ab4P
9X1Jn9d+/N5C6glrfh//bsHvERSL4OVX27ewMn//sAfulDb5UTG/D5DYJxsF
K4sBk+Y/MPX9P5MKNIA=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 1.548362130732494}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 1.548362130732494}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EFA\"", "\"EFZ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0528424951047004`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.021905532209047653`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "48.06285850794551`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9, 3.7069035229495983`*^9, 3.706903769915656*^9, 
  3.7105683112341633`*^9, 3.710568359713117*^9, 3.71056840246307*^9, 
  3.710581466211467*^9, 3.7105815127852983`*^9, 3.7105815904476995`*^9, 
  3.7105949684606276`*^9, 3.7105955093922157`*^9, 3.710595557011223*^9, 
  3.710595622267931*^9, 
  3.7105958372473807`*^9},ExpressionUUID->"fcf7dd9e-4c7e-4a73-bba8-\
07875b28c374"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<DUST\>\"", ",", "\"\<NUGT\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<JDST\>\"", ",", "\"\<JNUG\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6984978302715607`*^9, 3.6984978560185995`*^9}, {
  3.70201941324889*^9, 
  3.7020194137295437`*^9}},ExpressionUUID->"9d865506-bd6c-4380-8300-\
cddcfd93fe89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3AlYjF0bB/Cx74x9z2TfDcqSF/MQWTPKGjKyldDYS2KyZx1LspWJpKxj
yZYYCdkHyc5QthnLhJCS9//ct7mu5rve6/u+33We55l7zpznnPssvY4+AR4T
C0skkg9FJRLxf8X/eAeaBf5/1u74L/lK0Z9HnRs3hKw6Bu+sm6Yrm/VZtFUe
ZBbuvxn2/d77j6Jlo+AZc5VL2qVYRCuXwcKg2yVfdKZyzRF4UdO2NRr2oHL9
Y9jisKTbszizaMWI+WahxZpyp6ceoHL1Yji55KtFJdrQ/bqDcMd9moe331G5
MR0+m57vpi3/QbSkULBZCDuy4FaXpWTtInjpp6DAe8XJhng4dv+BqYcvvqP4
74vXp5dWJdV/S/Hnw5n7hhVp60hWNl1gFurNa3xk8583ok2x8JpG76/cT6By
6V04e+nNeXlPyIpceJbTgNU9Y+j56kYhZiHwh7vpoON7in8QPH2w29nX1eh5
ql9w2SarB8wdSdbWX2gWErqsWhbXhmwYAFc7nF5o3Y4MincuHLSpz9QrWa+o
PrPhm7NP3jn65TXVZ71FZkE/YtkJt91kU1/40/b57vm+ZOlsuE+oXjHU6yXF
GwULLZaHRr9+RvVZR2MW6u9sE5i5nyxx09jqnyyfAbuOHDfVMPEpxb8DdnYa
9SH4D1l7GXbMvLB8zEiyzDXULBS73Ed1OOU51ed0+ITn2ZdGP/p8zVZ4nnO5
W8N+v6D4k+EWvpfl8iH0eaaPsH9ORNs/h8hq/8VmYfuh70n5A8m6cHjDK+9i
x2M4/gtwuvTj/YMN6XkSM4xgRpniKR55lSVmYcAUoaliLl1v2Ah37dVlb245
is96Dp45KNmqb0Txyd7Bt1yH1R4XTM9TVlxqFnpkZM9s6kTWdIF9mp+bNjWJ
rpeetbciEz4VGn79y0d6vrr8MrNQfczsu72qk3Wd4JWVlgj1T9D1Rh+4UdkK
o74OJKtewRu33f7R+Qddry2z3CyE7pvefnVfE8XvDB9frto1qRG1B+vY5fbx
r4JVp7Ysqnmf4xuzwiz0rnh3jNsp+v6KFXC+/6PwhGL0fdRH4Vue4i9Ez0cH
YBZKzxw3yWkQPV/uBW+Ma9lmkxeVq5bCvcuv9iispudrD8MVz836dT+enmd4
BI+623/PrHwqVw4PMws5my1ZvuF0vyYU9m/2683A+vR8/QG4hmPeF9Myau+m
B/Co5+ONK2rT+yCVrDILz86ev/1pcibV30J4lfq8acMBat/GOPjR+mZfKrek
+yX34f4vLS9TBlO5qslqs3C7zdSbISu5vvbC1damLduymiwzwqrdB+UdTHS9
8jdMP89YsqbhGrOQGKEY9daZ3zd3+K5XoYPDU8iKW/Cv3x1nbC5L8al/wvme
cV3W3qB4dI5rzYJHxdvV/5tJ38fYH37SYPBI78ZkyVz4/YO2nwfF0P3a77BT
11Zl+t+n+w0O68zChai1x5fUonJrH3jh0P4X2wTQ58tmwY/9X01+mEbXKyPh
QldvNTMlcH3WXm8WrJcrtH4UQ5b2htfNK9O5jZaep1DDnyKcep5xpHjU2+GV
vz3e5QSRdSlwnaZ9+yycQpb31JqFq0emBRRpwf1XBMzNj55nuAg713yzpPwC
jtcCfynt1bZsWbpeM2WDWdhb83q5+PIc33l4cKfR+5Ok3F99gBeP3lrzlifH
V3kj3v+TV17eakA2boBHTun22qkt1985uPCirrUnl+D43sKRr0Zd2DeW+1vp
JrS3xseelHxKn6d1gX2Pr/mYYCXLzsC11Y+H/axBz1dmwKf9JqqvHqNyTbnN
ZqF15jmFRxUq13eEb5yRYAgkm8bBt1s2vthJ4PZZOtwsRBlG9tQPovuNTrAx
uEjTQWlULhkLi7Xz/RqNH/Iw2PdunzG+Z2i8MJTYgnimDFRMW0Xjl7Ut3Ep8
vBOVy0bDj8Ii8Q9ZuRzOe/Kjg96Drtfo4Tbb3jbe7EDl0jYRZuFP+MH2Cyw0
PilGwukuhhmzSlO5egm8tU7lsTnbqVx3CBbaVtraYgbZ+BDu8HVY1prnZNWw
rWZhxMEeaMI83mrgkNODnavt4vj3w4uHlS3S8zLHnwbXfT6ztWE2WfYXTgku
Pt2rJo3vpn3bzML1mhe7rOj+ieK9Bzt5VPdqfYXyD0Ue7O06Y8OV918o3sbb
zYI4WuxsQOWSvfC69V02Db9O+Yn8Dnz/YvlpWzbQ81Q5cOxlx3u1e9L92gY7
zIKXy4tWmefofsNAOCTy6Z24ullUnzfh65WdG/3Rf6X6/AFn3s4MP3aBrJft
NAsYDNFF0f2mfvDiJY0Pun8lS+fA40L3n+hmJOu+wUW6dm4Q+I5srBuJ9zNi
2pz1AsUj6QMHXnPqGP2d86+ZsNOExMibMzj/2gmf0n4r3Hcw2VoryixMGZup
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
hF+se6Md5zcDwu3ed9XccNv8l/szXbht/kv1Jau3xSLs8N1/9vpbKlf2hcW/
hhoVz/3DrC3/8o/J1D71kTAtR9am9mW6CjfLyM3vVp/z3d4RmJ+2O//lS09u
z2o4oOyfk4fHcn65PcLW/3N+eRkWT9t1aUbxyL/AYnNMrkq/t2HaVouwcPHE
KV1e0/e1RsD09x4BZFkyLK7+VVRQ/Sg/wpcOTKp/oB6352rbkM9nB7xuGsLt
IRym87l7uX4vwN8vrZoQ68jt+QNc63x28O8G3J4rb0f/3+7ZAdU9bs9d4aAT
/d4ndSVr38Li9OxMTY5XusMidPIv+cPvNsfrssPu+bKJMGo3e9M5zncz4Mez
0QOd4Hy33E5bPkHtQ9oJpn8dwjeywgcWh0t9Hs+P1uy0a9+SMpF2/ZPcGX5/
rebFLju4/Y6Fj6UtSPGL4/cvLNJu/DAch3f5+ec9V/L71S7KIriGXZRVjCNr
RsNrT15r9Lgl92/Lo+zmtyZ9lO18DD1f+jTq335+aa7PkbswXx8zrOoDHdfn
Epi2Y+dz/3B4l918Sv5o17/zRZN4/lxYZxFOuI7eN68Cj3camP7a7gePbw9g
yeue6wfmcrx/YcdPG+JaZnC8zaLRPsvP9T1upfatiIPF6dGmU1SuvgeL3fFp
F55f5MF0HvgvPc/YeLdFKJZceKjfNW6/g2Hx9Grb7VSuvQOL6casilyfObDf
jJXfr2i4P2uwxyJkr43admMhtwd3WHyd3xUjKwP32LUf0w+Y/n1cD7g+HWPs
2reiP7yy9tDxWQO5P5sD95W7S8vV4freJZaLB7Iacn/msPffeSTX8O7/A3xU
xmg=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
aokX6LMXTS32hD5XG4XXBmG8d1JqOW/wMaxLran3CuY7C6XRVD8b2NMyjcQf
5vsnpJH4IP/Vaciv4Ddgq1fNb90f/u9rbtRUPwnrGccZGY/Z80FuWWlkPHQs
wfg6Z6S9+5+ivT8bGQ8nkmO8zZVW59/O02k1VZ9hvOdDWvCLsVdnfOVKJ/xw
no7odLTfhZKM95PpNPW+htz3Np2m6mXIjTnSi32h31I/Pfe/8Dmw91h6nrcx
CuMNb9Jr6r6APnPWDBJP8D9bnQyauo8Rj87BGeT84d+mlxnIr9xjxJs1U0ZN
vU/ngb8lo/g/4sc9IKOm7h9g33w1flMDYHv6TJr6fgLsqq5wnx3Q7+2XSVP1
ItY3zM0k/sp4259J8h/jq0pmsTfiy987sz7+wzNT3/onGG/dk1lT9ynvi0eZ
xd7Qb+yZRfIb8oNlVhbuP2UI+e/Moqn3F+a7fFnEH4FtoVk11X9FvnFuU7jG
Psg9d7NKPgb2J8sm/k17l1G40Hrwdbuz8fw63cN43y2FU4ZAbkySXZdfLKWy
a6qexfr2jgpXiAA23MiuqX4XxpsT5tBU/5v5tngOTd3HWM/ZLodOn8eRQ1P1
Bu35O4dOv6NITuEH/3K3zkn5lFD4l29iTjlfrGdcm1NT9QHuC1fBXJJveR9Y
c2mqXwO5YUIu8VesZ16VS/QD2y6o+ZmN9IdmuTX1vZj+MDa3pupN6LOuyC31
AO+zs7l197/7U25N9Z+ALaNMxL+aA9uXmTT1XoV+V6xJ8guw971JU/U47Z8r
j/gX7Xkij6b6F/QHfx5N1d/Apux5JX5o73p5dfWI72henT8aX+eV/Az9liz5
NPU+g9xeO5/cN/A316B8On83a/k01f8CtmXMr7svnTXzi38De/rn19T3WcSH
f15+3X3qSFdAU/0i5odqBST+EO++vgU01U9gPTangPgn+Fn2FdDU+xXzvZUL
aup9gPmG3vGY/U1g8+yCOv223QpvTwnsfFhQ4g35y9SjkNRrwNaZhcSf5oL/
jkLM//eyzAH/+4XEvpDbQwoTL90A7NpaWFP9Eyf43imsqfdGOPgmKyL1CrC5
dBFN9Ztmw56bi2jqfQzsv1lE/A3YlLio+O8s8C1ZlPoHjJsJvh2Kiv7psOf1
onL+DtgzQTGphyeDf7Fisj9gV9tiYv9A8A/Uy22/ilFftuGTYM/CxWV/GO9p
VVy3nj+guNwPE8F/jX68u0AJqR8D4A8t9Ng4voTEz3jwjykh9wXk9vNKfvYs
sKFZSYkP8DWPKSn15hTwX15S8msw+J8pqan3BOSejyU11T/DfOvIUmLfINh3
aSlNvX8w3n2qlNTrU8H/XSnJh9PAP6dZ6lXIXVFmua9p3+NmTfUjyN9vlnpl
LPhnK83xP6Mht9UtLfU75vuPlNbU9y6ch+lVacmvE8A/cxniZzWAHbXKcL3+
p8aB/8Aykk9hX3uGsjp7u2qU1VT/DHy8/5TVVD8I2DCvrNQnwM605STegD1V
y+nG+/uU052vyVlOU/028LfuLSfvDfiPr1J5ec/Af4y9ysv5gr8lrLyOn31X
ebl/MN71QM0/3h7rmW0VdPa1zaig57+9gtS72L/nXgV5z5B/8oqU35wJvo7p
FaX+hL+4t1Qkn44l4C++2xU5f+pn+IsxaSXOz1oV2GKuxPi3FIE/ejdVkvcF
5htuVqJ+y2Zgc6LK1L+lL+LbVqIy7Vl5GLCzvZLHdYU+07XKXK/0caxnNVTh
eo4b8EdH0SrUvzg99LvbVJHzoz9PqkL7hEyFPvvPKtRXajHGuwpVpb5dMcDe
llWpL8EHrGcIoLxC3h44T/PqquQ3bBfzRf5qEj/MF82rcb6jG+SmcdXkfYLz
tK6sxvXP1cf5OM5V4/4z3RwN+zatTvmJ2Tgvy+jq1PdxE+R2V3WOfxUwBvxP
V5fzhNz7oTr5nW0FuW1EDU39ngPYGV2D8jaukeB/sobEH+b73yp55e1Y35Sj
ptyPo2DfxTW5n82TgH3HatK+5W9Av/FNTeob2gjYXseiqf4m9BuOWCT+ITe/
tHD8hWGIB1umWsTLQ8jXUov7TXSH8TigFvml34t4sL5QuL4Z8x3pa5NP4HKM
d1evzfm3AiH39avN+PpdG9g4V42PMDBfGOsQz4/F/rxV6pBPqk/Ahj51qK9/
MPNbeB3ur0Nl2NO2R41fNwbj/RXrcvzKbdi/qWdd8l3TFNg6q67U79ivY6fC
0WWYH7rX0/mHPbSevBd4/tuUPEtinv/detT/vAywc1p98juUlfZz1+f43Psx
33+rPs+j7XWed5IGlMdlo31LNaD8ixH28W1sQH1ejf56Q8lbjcJ+LQkbcn5Y
G2B78YbkO7XkCPBt15D7i4kbDnv9bsj76lN3O/gWacT6o9fhYeDbupGmvocA
+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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
SxHWZw==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.552768*^9, 0}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 3.1317331317331316`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.552768*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.552768*^9, 3.710448*^9}, {0, 3.1317331317331316`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"DUST\"", "\"NUGT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.014959562874824112`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.3613695531853111`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "0.04139685466847511`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 3.7053149633465056`*^9, 
   3.7069035505908546`*^9, 3.706903797311335*^9, 3.7105683203375397`*^9, 
   3.7105683653040447`*^9, 3.7105684089045687`*^9, 3.7105814805549703`*^9, 
   3.710581518617149*^9, 3.71058159627557*^9, 3.710594982263451*^9, 
   3.7105955180649395`*^9, 3.710595562903785*^9, 3.7105956279583416`*^9, {
   3.7105958430849175`*^9, 
   3.710595850567733*^9}},ExpressionUUID->"d072c738-30e5-4b65-8390-\
92f798867644"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
keDOrMJE9TOk/rkxQ6keF30Av303tWRjCVmPA2bC/P0QsszlA9nfIsCT6g7Y
pseRevgaOCjeYkOoL+5Xkhrw2dmrDpftQNP7W8qoz01X3Wqe4X7HYoJ3fXkj
Tx+H54k4Bzzez8g3KQdNewvO7aTr+9vgecJUnSWjdraVlnosvI/xTwXXBzv5
nFFH81eD7/TxXGd/+wHmtxp8qrRy7EYK78emWckoRrfVNLN6bOdNtlLsFw8x
fmdw7/lNjUueFmP8weD+w6qNwjSxP/cvePr8YPhkxHaBwWx43z77GkYJ0eJl
sxXrD+9HC5qtlA/mRbA77WAk6y05/yZZK+pFtNwRXP7bYYtxH3L++YNjzQ1a
XY1IPZ8KfmzFSTNMJPkvA0+Tdd5vuU/mxxIbGRXlY23qUozjz/IFB/1ad2oi
g+zXArDZ0XfCkHYyP56Bd43h1AddwfUr/gb2Ts1af7OT1ENec2B/13+U+WYb
2S/Oga/ueP/tRgr5/fUJuCjQ55OeBfke+Qo22Jo4yfcC+Z4aOxfqz9fOhe/m
Y7vw7Fyl7wHJQ/DS9TvDTYtIPdQ+V2n+cuezZNSjPMfPp3aQ+u0B+HG/B5xN
waR+awU3fuCVex0n9c8oSkZ92DPwqI0NtvNZYOutZy8cdsJ20U5Ksf+SeuIz
uDh/3qPVfMwv77958P3RMdbhugY5r23AK7VWUtP1sF2yA9w9tfMBexmaHg2O
NCiM2VCF4yWgz5dRhyq0Qg155PvOCpw3uOPAzaFomiv4tn3R+k/uZD6cBPut
dwtma5N8F4CvefburB9I6omZC2TUaa3lt1xMyXzYukBxnpD67fgCpfXFywOv
L9r5bPopUq9ttoX941H6kVcXSf1zFHzF/WEW6xuuJ8F1sMhcr/nwIVJv1toq
zh80//BCpfUnEoKl7vcn7uvB+8vfgS9baNla09CMfnZQz+4sUP+xB9cD2xS8
M5xv+3owtkuywX6P0vo1OZP94A34zDnPeHMrfF+Wir1SvcWdAtbKd6h9OR7H
U7AKbOJWXT86n3x/9oJb9zYmJLuS/ctokYz6pSdeMlFK5ucK8Atv22flaeS8
OACeOsbFY7EA5xPvD/iAXfkA+Qy8n1DfAebPv/99xZfUl2xw+0qDnOFaJN5A
B6V6jZUOHlH6xqRrCqnPJi6G+XDqt9bXoWT/cgRbdtlWHthB9q/94D3Hiurm
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
mYqI5FMnHeaT4aqzByo2z/0fFH6pSg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt2XlcTN8bB/CpUEmZQsU3NbSTGkkSZW4SokyplHUkUbaxlhJTSHujUkpl
yJKtRqvdWJI2po0WabKbQSOiiH6P5/z88fV9v55zz3zuM+ece+dlgv82z/WK
NBrtgRKN9u9v+MN6d0dKkf+Vz4H/cOl3pZRegPLg4rTuf6Ylgy+5qiqE3EAz
r4Ofrr+xMUgVx3Neg4+f81E/Y4bmq4uklK5h0eRZ3mjRDPC+R8ffRtG+/jO7
DDwQ6els+AnrPAm4dmHbTI35aOHwe1Lq+cz01JoktMQGfHGPfeaUr1/+mb4G
nKU1REE0GfMIOsAB05dyH7OxLla+L6VsnLY6jmv5jPmtwVNuRf5oP4dmrgSv
bq6SuoehOdFgk4rtHV3ZaPmQB1LqlfW5LNtwNMMKXOFJTbafgGb7gXtKLyav
7P+E+Q+CVX6aVtsoYV14Baw/afOdk7vQLIuHUuqXs9vf6iocz/UBH1Kre88d
hnUBD+z72aEn+AHWxRfBx933mZXsIPmbwbemfOfH2KL5SyuklM+pSs/P89Gi
CHDu7xufrn8l+c+Dh4QNc62NIPkbwIod/U91buH87AHwn3tjzd8Mxbok7JGU
MhIYd9kHoelnwVp7uc+Fx0j+p+AG/yhjhhL2m9sPDnozX3DRjfTfsBLy3Vco
Musl6+M0OL+sMjXCnqyPWvC3r25KytVkffwAnz2TsfPud7Tc9TH0f9PapQPx
eD2vCizSzOg9kY/rRfgNPDVXfdTSWz2Yd3yVlNLWliwWbME6fQG4oPlCh1M8
1lk7wGMGC0YwOtBiOXiCRkHYR0U07b9qKZV6f/Gq+dvx85nzwMvaQ+pWWeN8
nG3gmb9C824cQfMzwVfO/k1wHIZm6NZIKXUniQGPh9ezncCxIR2FGmOwztsM
VszZv645lORPB9/rzJm33JPkF4HD1FLPKbZjnTunVkoFPjjbfXM31gVB4JEd
xSaXyP6g3QHHDLyeGNFF8n4A3399zTVsEtlfgXWwPovSEneeJv3kgw885bwL
mY39ZL8Fx5iNyhiIJOt15BMptVCsVjIyGE1PAt/SOvj8qheadQ2savogLv0w
Wa+vwKuXONz8mU/W64inUirdL9ml+P/7zRYcc1UpoOCtDPtXCubcHd8XkP0R
+9cJrvW4bTtJT4p5VcUwH+Pa4zeNWJdPA/OnPPxPazuasRrsdz3RxkrhA/Zr
WD3sj3sRk2wi3mPeqeCdCtpps/PQrBVg5QT9e+IVaO5hsGPMbfvT+9C0IQ2w
Pz+c2vbXDudjWoJdRwZqCR5hneMLjrHw+a5Z/Q7zRoEf8i55fv6GFl0G95Y5
XlzwH45nT26UUrfn9GxN0UTzvMEt75VvvhTgeOEBsB3rirlCMVpyAZztGnw/
NQlNbwI/cfM+0j4MLfBsklLcXIZHNh0t3gfeHBhq0LwFTTsPDiqcnLTk3lvM
Xw/O0vWy/2iHdc5v8BMT+qxyOZpxphm+H+/jZ8dkodlPwKaSx4deSd9g3j6w
t0FJV1gIziec+ExKKTwKpTlEoFmnwPKRiR2/WtHcGvD2tL+DylZoQS/4rXKd
rC0U5xMbPJdSkft6E8N2o2muYPfVSb1votD8x+BQ7mLd6la0qAd8/k53z5i7
aLleC5xncW7D7kzA+RnzwWHXyl/9SUKzt4OdK/IW+L/C8ZJu8KQej1j7jWj6
uFaYf05dzGkOmuUMftW/YZKFFsm/Few5d5raqB8k/3Hw3FSD2I8i0k+dNin1
RvFS1mgeXs+hwGa/gkMPt7zG/JvASzL+zmOZo0XH2v6d72OvD0xCy++C17n3
nCvUQ/Mc26VUGXPIrTMhr7C/G8EJlpIFH9aiJSngxPu5vtQ6NP02OH/6zdMq
WmjWezAn2LRKWxUtXv8Cvu+n5vP9DdA0PvgybejX02Zo5g2wY25VR/TDLsz/
Bqxx32Be+EU0X6NDShkc6I1yKUMzEsEe22e87shEs8vBuatfHblxGM3rAj+V
b3TcmoAWqr2UUqzYHcY3tqAl08E1qc732PvQ3BJwg1+4e2koWvAS7B9y/sqZ
PWixSifMv35K0Rdi2jRwVvWJrhlH0KJ2cF2e5uc/qWj5UImUMuQc2LB/BcnL
BD/d3BK+QYfkXQ5e+LUm79c4kvcQ+NepL/njWyTYT6Uu2E/+S3UO16NZU8C6
Fr3xEwRo7jLwi5vsh8oX0YJIsEphOWVxDS2+BE4d7zeadgLNmfQK7kdZ8/j4
A2i+FzjI63j3hli0aD/Y5DAVKziPlueDP6qtP6VEPo/RCI5P+Hszuxwt9HgN
z79s5WKFDLQkHLw6Y5TAREjynwOz7A94pW8l+cXg6LoLa9ujSf5fYMlxY1FE
DJq2942U+tx/tU2d5GXmge3qDKsenyX568DPhFflr5NI/p/g4WuS3I6mkvwT
3kopSsKcH07y86rBOpoe9Gc08v1/BxuFlgUUEkv030mpcI6wdkU7ybsQnPCD
oXI6jvSzEuwi9FfNf0b6+RVsUv6RubKY5NV7D+uV80fZ8wHJ6wI2HU5NGrqJ
5OWCoxMtzZMdST+/gCN1olveLyT9HPsB9kfohQKz6524HuaC170ZYRKiTPJv
ARfMMZtypQXrwgywk4ojh56LZml/hLw/nRbkLUJzWWDeytDDI/TRgmBwm3mW
XnItWpwGPrB/QHN/E8l/F3z/rOh6uwjrfAeplFqZ1WPvpkb6uQE8Yn/gNNuH
LzH/UfC+u0O/Tx2O4xm3wOOvPcqfqkfyvwN3z6a9zs7F8ZIAGTyPd24pqHiK
dXoyONdsXGmRGOus62BfvoXm9p9o7mvwlLsfTPcokn4mfJJSRee8ss544/Wc
MrAvR83+6B2SVwI+srBa4+hEsv+Gf4bnnd7+L3NcSL9twF3pppWt08j+Kgb7
+w/fOjWW9LMDvP39pGKzIx2YV/mLlGJHzORcS0bTrcGjV3keXjGGrN+V4LKd
OalGmqSfbeCXITXep0g+2tBueN7YLjvlqYv3w7T653fmrU07cD6OH3j8LGr8
W+8XmP8gWLBkICA7HusMRTl8nvM1A01rvJ5tAX61d6ZngSPWeT5gvUMV9zfs
Rwt54IQti75tnI7zSS7+G9864eOK62iu+Vd4Hysc+iRmdzuuh6VgkwNlu57d
RYsjwG6hZYvHJeB4Wj54792bvcfPo5kNYG6TW+QdK7SI3QPvfzeycndcRsvD
wEpa+38Ln6AZZ8F2kZ7LAs+h2U/BHr81NO64onn94GyLM3qrgtD00G/we4e5
+3dNCJp1GiypP/7KcBTJXwu2fTItjt1M8v8Ab65O/9SZTvIzvsP79fDI7gts
NOck+FrHQ5pVfRv2t+qfsw5nMJdjXfQNzFOhNA87ouXje6VUU/QXm5xSNGMB
+PFUeViXAemnHMyxmThw+BLOR//vBzzf5++z8dqLZs0D17d++dvJbsW828CH
QoLqg3eiaV/AJVEfj9qHtGA/dX/C/n6h2VJzHs1xAj/2MD94eSmavxkc0Jtu
8TYKLUoHW6t7PTIdjWaP6YPfM7qO3wM90Lw5YNdR1Y+W8NHCIDBj9e/1F2TP
MX8qeHbauAkF7Wj6HXDmlbqWpL1owex+6PeScIsuX7Q4EMz/a2o7Th9NOwo+
51nPNzFAM2+CNRZKFJd+f4b534KNTTMjxyljXb7ul5TKo/c9Wz0SzUgCyytm
PDnhhGZfA184MhBvYILmvQI3uRz/cMAOLRzxW0qNk7REO7SgWfHgufVtoa4V
+HncUrCV+3G1wP0kfyf4w2chfdPHJsyvOgDnS02zxoBZM+a3AU85Hd1S5ofm
F4H78j20djTgeNELsM7QO9QsTazLh/2RUuaRwavtaWjGVHBk4tAzGr9xPHsF
WHBU49tDc6xLWsGq/YaX6Gpo+pC/Uio4fuqJx+PQLEuwZUTuQad6NNcXPDrR
z6UwES2IAm9Oa/Sdror3x1QYhOdZ+RtqbiLp72Qw5RQe1XSA5PcGZ9mlqM3r
x7roANg6qtTwpT2uR/kFcMGJB7djfpPzwowmoxiqR2+WK2Bd6Al+dGS48bQ6
sr73gWPWOr03KiLPv/PgEcE/ma5byfOlHvzaTnubkQw/T7xEQUadyXj+9+Ba
sr7DwPUraj5raJD8Z8CdHcuvdA9gXs4TcFjnc/0zefh98fvALYUrg/WssJ+M
EEWYz1ffdPzWBuzvKfCfVc8fFVmKMX8NWC0kct4uj3rM3wve4ffbaMEkrEsM
lGSU7arv6x0uPMX+5oKDp3R2NtCwLngMFhtsSq5qfIL5e8BpW76w953H8cz5
Q2TUmOPD9iyPxs8XVYAV44YufGpSh/3sBotuyCaypuB8jHFDZRRHe5ehAx2v
ZzuDl856vq9Al+TdCi6Imz9k2RLMS/8MrjUUfbF8j3WWzjAZ1Vc8Z3xpFebh
UuDwVqOR7eR+BZvAa2omLTaehNeLj4FN3gRO6P+O5oxWllE6W7ex9y4l68ER
3JC0Pf5lLVkPG8GZXKVnn+R4P/IUsPq4+3OXBuLnMW6DE6y6bG7ew/zCWSoy
asnGqaqqC3C8ZD2409Vw7vdpjZifD9aSBtxqScLP574BO//Y3Nenh3lp61Rl
lEaQXdeVfDQzEaxVGByyfR/2j1MOrqzrnf+7DS1SGy6jVjyRDuTr1GD/4sAv
FNOXSbwfY/9KwN9nOOiuUnmE+V6CL9HLf1w+i5aoqMko5vuNtzauq8R808A/
h37LHtZcgf27CjYu2fzkmMdD7F872OLipbq8ATRt2AgZNWvBUFpgEo5nMsGG
YdyzClOxzlkO1nw90cG97QH2S0ldRt3jqnimDEWzp4D5bxbmcCajecvA88bM
yn67Gy2MBCe1yyzc3HE+Fk1DRl1TG+dnUIB17iRwTd7X1tCP9zGvF/hkj6HG
+XKsi/eDqxMdzyUcJXkvgG/4fbH44IV1vulIGXXTWLHEaRta5AFWn1nrRRuB
4+Xh4C+VW2PKfUj+c2Bl82C38mf4eWzxv7rToZY5NViXuNNlVGCMv+6AFZq+
F5wWs7Jq6Sk0Kw8s17YKjdLD+bl1YNOi5KgPj7Eu+Am274udPXs5miPQlFFN
GSuyLhnheH41uCciPGnqYpL3O3i5h5FBZhNarq8lo1buP1x4cTmO5+WAz5+y
KMuJQAsrwYfHjayR+KMlX8Grts7ZKe0hefVGyaj+ne9+WhSTvC7gkN8r+9Zu
J/18CG6KtTrP/4SmdYN3BO7cmu6A8zHHjob7l0za0KuJ64EzFxzzfLpHPQ3N
3wK2et3w3fEJrjfGJ/CCOhv/QV419lN7DOQVVVwf9asW87PAeX4vjFK8qzB/
MJg3lt9huAbHS9LAjl1B5VmqWOeO0pZR6x499FJRxLrA4Z8r/uQYBuH+EG8A
u6arTGsOwPVPSwG/b/4TfHEFmnkLfDA1LXwIF+9HZK8joxq13te7eZL+BoD1
P5dd2ckk6yEZrBsWn5iWT9bzdbD5ROeMt3Gk/6/BY91rf2nOwPun++vCeXh2
g/WKu/h5rARwa+DMiBWv0dwy8IPF0bObyfcpkIBjs78oqHiT/RQ7VkbNSO0s
sV2N649fDNbIWrqVMYashw7w71tfgnNIHrnyODgvt8tyRmjj9Qxr8NkNo9JC
XuH1QiHYLEBXFBRJ1m8beH7LVbdzPLIehv4H58ONyjtPKu9hXiswo/v8Autu
NNcP3CpTn6k5CeejtYAT1ugfWfID60xFPTjvQ0Tmo0+iORbgiHrHDY9SSX4f
8KxSrunOAqyLeODhzXrLfblkfw2C540wuZIegnWe+XgZVWbtFSbwEmH+peCV
5ZtPCjejJRFg2xPrJ5np43h6PthxUb1gnB5aYKIPz8uA4dmWbBwvZoMrDgVK
zfhoWjhYXDT0juZfNPMs2IqTYHZLhuY8Bb/zCFplLUTL3Qxk1LBfp3y1ItGM
UPC515tq24aj2afB+r4HeF1ldzB/LdhmxJN688do4Q/woeCiddfi0azdDBnl
vnNyvXYmmnsS3MvfHxxz9S7mrwJ7t+dEPVNCi7+Bx8TFWrttRtP0J8gor18G
k5+uR4segZUFCzTCfEheObik63rtHz2S97+J8P0MUz9JleN49jyw68nuUfo1
aMkDcMry7C6WIo6nfwHbnhrRGPUf1lm6hjLq8kqVmY/T0Fwn8NLgmUa5zjhe
sBls2HmyaWES6acMvDIuJbNQm/RzjBHs5+CxwTM90fw54Hdv84bTPpL8QeB5
phHxwzeQ/KngAYHR6AW5aJ6WsYxalBr8ZFkeWQ+zwVMT76z1uEzWQyDY8qVS
dXQpzkc/Cl6csfpMzQfS75tgQcol5vxg0s+ZJjJqi4KKWp45WQ8B4MxhbfXn
nUj+JHCwWQOnlNwf5xp48++7s3bMJvlfgfNc1Bz3+pL+rjWVUVvvhGcfayfr
IR48UXWPXeZisp5Lwbd3Gf5lHCD7sRNsWuYTVRVF9leMmYz6tnrXJZXjZP0W
geMPLOrN9iPn8Qvw4qgXTPWN5PmmbC6j4s4OUwx9j3XmVPDflQK16+3kfCgE
V/95GXu7Aj9P3grWqS16PsqanGdDJsHz2dvzztBv5DyzBHuUWaYWGJPzzBfc
MHb19A5jPK/oz8HB828YdYfjec1SmAzfz9qjKkNKyHk8GZy/PfWO1TZyHnuD
2yMn158/jePFB8BH91P1Lz7j+wrnL/hDeuMI9n0czzezgO/vtHpY30ycT+QJ
zjw2NUJUh88P+T5wZ1pyheQx1hnnwaKe+z8Wx+B8QuMpMqruk+cpm6nkebEE
PLrhd+cTEY6nh4Gr5rK1j/jh84F1Blw9SiWGs5fkfwKeOHy/2eOzaJqbpYyK
6tbjqCiQ50UI+FX+nosnusnz+hTY99WXgwtoZD3UgPNX2LXbd5LzrRdckPR4
8JwhOd92WcH7R/ZlpdQBsp5zwU7j11q0dOB44WPwuxXlP8SryXruAedYXpCI
fHH90sczZdTjtlfDJweS/XYC3P+DVTuYS9ZHBfjbTh3F4jyyPuRgUWlbY90+
7B9z3FQZxf6aw409S/I7g52NP9QXNpD9dh+8euSmwgFynjI+g4cLjk6/7kXy
61jD/h/6YtrRdDSPAl8/8nmbcix5f9tk/e98f65o9xvr3NHT4Px7491bH0je
1xzBI5cN0qZ3kLwbwZsvLKk5NkjeL1LBezwVDnhsIO9rmjbw/LhSLrf4g9eL
ZoHvi64andEjz7v14MNLrpl4uJL9xwd3nd3TOT37Nua9Af5cfvjKufdoid10
eL/Mq3J+Qc5D+jqw5dGe5vBt5HmXCGYNtte9FZL9WA4e37rvxgkR9l/QBQ5R
U+tXsyTnA8cW7ldz4oekN+R5Fwfe7qKlqFmH5peAHR4fjH0whqyHl+DEj/wG
wU+0XGUG/D4btrwlphjz8Y6A09XW2E5IuYX9vAreGlSi31ZwA/O3g3s4psv9
TqHpw+zg+VNebevcdBPzM8GuobH9QVnXsL8FYK1e74qikdexv63gwByl+efi
0UylmfA8PzU9j7GkFPNPAdcZ2TBTJqL5y8DNJ+lJo4LKsL/PwF9vWs0ZzcX5
2TR7GeWjlGki2oJ13iRwQlCwbql/Oeb3Al+dezlZi4GW7AdzYi0Sjt3A+bl/
wKkWVsd3VOD1AtNZMuqjqHL04kG02AM812XaWt2TeD1tH1gcvMxiPxPvn3kO
/KFzZuzgYbTIaDb8fvlksXhcIFruDvYx6jd0v4hm7AXPznG+7liM/WLngd+s
5X7b8wf7zasDj+C7bdJvI8+PxQ4yatLWWts5CuT5sQdsvuxdaqsDef4JwEsO
Nv9pmUDWRzVYd6fLthoxWvwd/PT+qrssUzRnpyPkX+FX+SEPv29+DniSc7XX
OzdcT6JKcNQ+2oLXC3B++Vdw7P1eTvorzMfQmyOj3q5Z5l7sinVhFjhIp2t3
gQY5Lx6C/7tQnnqvA+end4MPqNRn+nejuXNZcJ6cFY6z30jeH+6Dx70/uWdR
IuZjfgJPNbkz0fAufh5Hm5JRofaHkiYuwjqfBY63eiNp5mFdFAxucbedE0LW
E/sj2HTi+08uIuwvb5QTnFfG/o3N9mQ9O4DvLyq08FmLdckGsEu3oQXnMJqe
An5ZmCcSjEEL6HPh/GY3ttgdxPxie7CdTa79RF00bT1Y+jyTz7tB1nMyeNH9
L63vNbDOuQ5OGO03Wncizief4Qy/H+fWFdivJOvBH/zjcUpkeCqanQCec6DV
Q/00zscrA28dEx4c0Yfrj7VmHuzf7OvLt9VjnRsLdvH3KtGzRguKwarzlNy4
mTifuAPMSAm6I41A86NdZNSzQr17OYdw/4iE4M7Ovzo6i9DyNvCaIdPUu4Pw
8xhD58uo8Mul+wyUcD+wrcC89Z4u5sFkP10Bj/NtfvJ3K34+vQVsaR1fuNSc
nAeKC+B5UBLoEeWP5lqA3WK3Ly9uxv4IfMBlCsVN1gFkfQ6Cl1X4m6SOJ+eX
+UK4337bFxkzyPpcCk6moov3kvc5eQR4if+DZ2bTcT3xBsD0oosXNDpxfqGJ
K+xPvfULmb7k/GKD9y8NTf44huQNB7u1PdozxhTrrLPg9rVr2hONsS42XATv
s0YX449MI/vfHezT6Pxt/AbsFzMUfE9DIeO/NHJ+nQb/KZnmHNpZjPlrwV2u
w+c5X76K/Vy0GM7zT78365oKsZ+7wffDZe2VQVjnnQSbn69uS+jCurAK/ORI
cKwi7TLm/wbesWKMwraIi9i/bDfYf9pB/qoyrIsfgVP61wlPNmOd9hVcmVF1
7euv85j3P3fo7+fU4Z2R+djPTLDDjph96e/Q8gfg128PXWvZi2Z8Aafoj992
8SNez9ZdAt+/KbUtdSea5wQ2q3Kpn/kbTb8HDswbnZXWdw77KQM35LS9PxOO
de4YtoySLDnkmyPGumAO2KWru7Hu1lnMHwTOTkyw3lKD5nwAq//Q7nm3B83X
8oD3S/VP8aOXoEWzwa4hk0d6rkPLA8EpqUOddAbPYP6j4OiAVPaLfrRwpCe8
f53+Wy4yxvGSmWCnCRVuvkpoegB41JAJ695a43hWEjhd4bD/V2009xr45bir
z3OJaTOWwn7Sf9jgPx7NXAvuV78oCDNFc+LB7t23pO9u5WH+UvCrRMuu6efR
7NVe8L6RvYNyL0TzYsCiaR8231mJFhaBndO2td62Q0tegIc/SJzh4YCmK3vL
KD3PBV3lTmjBYfDP4Ud8gyaixYXgdMvnA626aFobuKd26zB3Bpo5xEdGrXKs
+t5lj+ZYghvZlekTctHyy2CmsjTI7y7p53Mw50pdY6o29outsExGNfmuLjAM
xDpvMljL/4eqLInk9waPrRx0n7iV9LMJPFiQ8TQ6mfTzL7jwnv1klTtkPZj5
yqja264qlUZkPXiCR5bs7JvMwDotAjws+TPNqxev5/8Gx1d4RtqeRIuM/eD3
d96dTtVWsh6WgF3r16onWeD1jDDw18k7asoVcH2zz4AfvHnt9fI37hfJxOXw
+yBhRfr+IWi6GzjjXMwRrgOOZ4WA+9bQHVsNcX7uKXCNqtOFPWtI/hpwoqd3
sWsLjme6roDv68f8uuAUsh52gQWDv72/j8Dx/FxwSeLO07nncX+IHoNH+vNe
XBrEurwHfHlT/cI+H7Lftq+E960vH785puP8whPgR05bdg14kvwVYH3XHXv9
Lcl6loPHB8WvPH0BzRq3Ct5n95iM9bLD+cXHwXf9PLRSlmGd9gBsM76/um/w
FOb/DH54N25NqglZHzqr4f7mFYzp7zyN+Slw7JO5+5rNcTxbCrZ3+hrjr4h1
3ug1Morr7NceXo91oSP4/N4xa1++QEs2gqeP8OuJeUn6+R7c1Z9/Y8Q90k9N
jozqHnqSHf6HrIdZ4KWp2hIRB++fFgg++in/5pfsC5iXD6436bs+eQs53zTW
wn486m5+tJScb3bgrAQdi2nk/GKsA59oThlYoYT9YyeCv1anBFq/I/0uB/cG
aiw0fIzX0239ZdR3hxGpk9fh57E44IjXv/InryXnWxxYbvefuaQGLSgBv6fS
gx5Wo8UvwRe/CU0Sb+DncVatg9/D4hvGU7rQ/CPgWoWcn9t4OL/oKvgDp+ay
geslzN++7t+/B0T+12GN5z1jWAD8XiqNVI1JweeFpAC8LGDnr6iv+Dyht4J/
JbqumGZdgnmV1sPz6ujHC9LpRZh3CnhY06qPkWewTrsMFkT5naB+oZnPwJdL
7Q7UhuF4Di1QRr1wMc6orcc6fxL4Vvdg98RLaJEX2F5H8+7ITHz+sRvBtZ/1
s9P4aN4fsPT8tPZcH5xPaLoB9pfR/FW/68jzzQNcGVXKoK/A+6HvA4+ddS5P
ICrEfv4CD8yI+aRZiv0QG22E990pUz4wdxRg/iXg91aFeUeS8P6Ze8HPPcf8
fPQSzckDG15cZ/PsG+aRTwiSUUOqdnlFdmN+xmJwUP2PlGVNaPYe8MSntwNu
rUPzBOCFK+iON6fi815YDc51+zm1SxPnYy0Mhv5f87g3j4bjuTvBGon5Ztfj
0IIccEeys+xwAl4vrgQvjO5oZb0n/e8B5yst7mvsJf3lboLvX32k/tc3pL9Z
4LoVfd63jPF6+UNw0a4fJXv3kPzdYG81xviSTKyzx26G/Wq0dxL/POaTZICt
1t2z2M7B/tPvgw+GFZQetMP+sD6BmarHEoedxfXI1d4iow5lr31gqXsF87PA
JkyNrA+B+H0x74Jnvluz3PoYmvMRPEV19bcIF9wv/FFbZZSs+pkpOwP3s8gB
zBn5xviDP65v+Qbw5aDjXPFBnF9I3yajFA/oF66MxzwSe7B91u94/leyHtaD
l2QUz7s3FM1KBo9enzwsKRfnE6tz4fm8TXbTSIx5aHZg+vfItDo2OR/8wTsE
Vz76p6E5CWDhLAv3fbVofhlYsu7dxrrJ5P1n+nYZFZwwq9+VhnX2GrDjlGXW
h3XQvFiwl01vj8E2XH/CYnDayEvpswfJeu4Aj9ZYJtcfT/q5cgfcn8OwfF9b
vF4QDX5wvOrInDxyPgjBMVv6zF7EYp3WDt79oMIiRU6eJ0N3wu/DZWbXTluT
8+0gWPmqt1f6ELxefgWscXx8d/MaAeZvAQ9/6v7czBPNVtwF52V0uMxfOwfz
W4BvDthp0p1zsb+XwDOTdq23cjuJ/W0Gu1ZNfrmlKBvzD4IbPClq1WocLzDf
LaPuFBXVX9XF+cVLwdWaj382D8c6pwHsZO45oWsCzscfADcUXBr7+RCe/yKT
PTKq1Opr07j/yPsGG6xb4XFM0o7PD0Y42Oezxfs5r9DCfvC7bSnHFNPI88Mw
REapKI3SVP2Idbo7uC4ibW+aAOusUPDdmTrbbB0wH/c0uHK35SMfczRtQiis
j9S33mNmkOfdIvDMhg8uR5txPs5usCQkdMR8Gdb5J8GqXmbnnC0wr6gKvKDI
zOcXhePZC/bC+9utsQ4hNjg/bwfYfZRtu5yF9y/MBv95tisj5iDWJY/A0c43
SkZkZmH+r+Cr1X0DjTOOYX+3hcHvR+muGwaj0rG/meDNO6cv+VN0HPM/BIvM
32TOv4d15hew4ir59ZG2eD1HNxx+Tx77r/IiHS1PB/e0D9w/MwzHM+6Bi0VJ
920a0WwZOE5d/VTr+1TMO2cfvA9M6D3xrgnNugPWvNJlqXsC5+N+AP/y8utm
+pK8WhHwPiC4cZm9Mw3zzgbLSzPL9s5C0zaAH64IvpYvwfH8t2DmH3qYqQ5+
vmjkfuhvY9Ig8x3JOxNc0jn13pUzJG8AOCvNjHGnkORNAtslL1o3Tor5JCMO
yKgLDXfEZ+Ro+gywCr3mBs8CP5+1Fvx7ltFyP7+jmD8efEZFZUtQWBLmLwUv
dzy7dn5hIvbThge/z5kqG0Y/QnNWg1uvhDot/ITmx4DPzeV6W65Ci4rA/pV8
DdsAtPwFuDfCOudiH1p4OPJf3oa4xNpkzFsIXmV9YkRPIx/ztoEfBxlWzekh
/R4SJaNmGLxI7nXFvLQrYK9FirYBF7DOfA7map1I3rIN74+jcFBGbSzcPV3z
Ca4P/mSwy5YDjR3N2E/GRbDh/sYpWqWkf01gK8Gyu72KOJ73F8yxMfz8cBxa
aHYIfs8NxA23FGRgXk8w49JD5eZGtOA3OCNz1un9XzLx+zY+DPuHN2d5jAjr
NDbYIHr5yU2paGYY2OXiDxXJApxf1Ace6WB7xqMJr5dPjIbn4fnq4QkT0Qw3
cNHVG/rNqTieHQKesVu1iHsW8/NO/as/T7nNqcD56Ywj8L448k7175Noliu4
sCF9tT4T5+PuAhdzXhprVKIFueDb6vJNxT4nMP9jMNs7ttlJD887zvwYGXX9
bE2S2gDuV/528EHRpP39ArToBPjcD/bVp3/R8gpwxzv2ys3f8PxjyMGvvLN0
hTuxLtwaC/e759uhY1fwPJAcB++t1/re7Yt1+gPwy8Mf5uwei2Z9BvNmXI8O
v03OL504+L2tfbD9RAZezxSB79umMoX7yXkrBWsfS9++IgDNHx0P62XD2qHc
e2iRI1jyYkT1C1U8/9m3wc7hPw+dnofrg/cebPRH3zJvJvZXqJkgo46cfr5F
cxn5/meBhTme9VPMUjBvIFjjxYItC11xPQregH98UR99YTeuZ7FGIqzPnK+j
wirQtJngGYWjrTUC0Mx14GRT5WOvqnA/cBLBN35oHHGqx/UuV0uC9x+LhwfK
6nB+hi3Y9/1Y0ZyLeD2bAw54F7WraTHJHwfWcchsKKjC/SAsAbcf3Ge2Uons
p2nJsL+8E/R55HzgrgKfPlk5VeEWjhccAYee2dtbOJKcX1fBk8NyXhr14v3S
XoB1NaYYrqlE85fz4f7LTKKn1+J8okNgXaPXW1/Owrq8AHws2m7njttoRis4
6mrQYHMP3h9b6Si8f7/59n22P9YlkeDgactvOLmQ8+sy2LGtYfzdpyT/M7AH
Y1N4ST7JT0uB+UNHK8z3I/2fBE5MvH25X5ucDxfACQb+9ns2ozmN/8avkTv0
8PD++H/AVnEuTT4u2D+RaSqcT9qLXjXY43ieGHzeI+ma5nnMJ/wFLrY6U7zO
geQ1SoPnm7lP16xecn4tARctSp61JxXN2vuvzn3TXmJN1sNPsPjUkJXnM/G8
pU08Br+nWvtsuBPjMe9isHtCkz9jPpqzBzzbwSmfPT8O8wrAI+xcrjM60QyD
dFif7OkKFtNjsZ8LwZanIr5H0NC8neBzWbnLNq+Jwfw54KkWWitLlkVj/kqw
Mv81p3TJEeynSwY8P4auO7NwO1rABVtsqY/N8kGLs8CvMgs2XAjA+WgVYKlf
+EDqaszD7AarXZS07lyJ+UVbjsuozLj+L2kFaHkG+FnSduXtsxIw/31wmNzm
75Qr+HxgfwLrhC4Ins7E8TztTPg9fyR9q4kzmn4MrKxZc+6zCV7PugvmftE5
OlCJ98v9CN4/wfQ50w3zCEZlwecbxzHUuVgXO4D3/P1ee6IJzX8Htvl1sW3x
OLSIfkJGzTUwXqTSiPcntwdvdKk8XlGFZqwHJ7QNpLPjcLzwNdihVfq95TVa
op4to4zDIocsicP7oduBPa6/Vd8UjGb5gzmlcbpG2pifmwBmetnfukm+T5pa
DvRjcOyrn8OxzpwO7hPP0y0TkOfvGvDL8ZvPjdAj6yEWbPPf0R06E9CiYnBZ
VIViaDiabZ0Lvy82LlX6nE7Ww0rwcuvKHuWtJH80+CC7+b7PehwvEYLHii8d
/nqO9Ls999+/d2zx8pBhHoHfSViPjRW6S/XQ4oPgulL30KWxOJ5WAC41rDRS
iib5W8C7r1xfpdWL83MUBTLq55Bq+xpLsh544Id/Od2CP9hfdjPYf9rn10sC
Sd5B8Pr/OhwPhpL1a34Kfv+0bSraZIrrkZUPbsmJyTxC1je3AbxsiM+znhNo
wQB4iH/AyymdaLHJaXj//MjZnKtK1q8HmN/5sM33JZr/FGzj/sinhvRL1A/e
uv+91YsBtNwwD74v46GrwprRDHfwsfl9w48pkn6Hgtdc2u8sX0f6+QM8oXng
Zog+jqdPOAPPI73BOtdK/DzWIvDVveVmHz/ieO5u8K29QXPC3+J4wUnwqGrl
0S8Y5HzQPwvvp6cOcrN04uf8D5Oan7o=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5897472*^9, 0}, 
       PlotRange -> {{3.5897472*^9, 3.710448*^9}, {0, 2.02497558129051}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5897472*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5897472*^9, 3.710448*^9}, {0, 2.02497558129051}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JDST\"", "\"JNUG\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.013228613432560338`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.2835470391843174`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "0.04665403479653754`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 3.7053149633465056`*^9, 
   3.7069035505908546`*^9, 3.706903797311335*^9, 3.7105683203375397`*^9, 
   3.7105683653040447`*^9, 3.7105684089045687`*^9, 3.7105814805549703`*^9, 
   3.710581518617149*^9, 3.71058159627557*^9, 3.710594982263451*^9, 
   3.7105955180649395`*^9, 3.710595562903785*^9, 3.7105956279583416`*^9, {
   3.7105958430849175`*^9, 
   3.7105958521789846`*^9}},ExpressionUUID->"8fe5b074-a3ba-4f74-8fe8-\
ee88ed129f4a"]
}, Open  ]]
},
WindowSize->{1218, 757},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4686, 117, 327, "Input", "ExpressionUUID" -> \
"8c08837f-8e1b-421e-be78-0bc82eda6287"],
Cell[CellGroupData[{
Cell[5269, 141, 1304, 34, 135, "Input", "ExpressionUUID" -> \
"ca58564d-e2c2-4c41-a41b-4195dc58339b"],
Cell[6576, 177, 937, 14, 38, "Output", "ExpressionUUID" -> \
"6edd0dd2-ba10-43df-aa41-180713db80fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7550, 196, 2969, 71, 303, "Input", "ExpressionUUID" -> \
"9ec59700-6cdc-4997-9164-7d1dbcdd846e"],
Cell[10522, 269, 21911, 439, 470, "Output", "ExpressionUUID" -> \
"a5266a3b-968c-4ebe-96e8-3eb052c1fbd9"],
Cell[32436, 710, 22610, 452, 470, "Output", "ExpressionUUID" -> \
"4c90fc02-8c63-4c78-87bb-86d13ab1264d"],
Cell[55049, 1164, 22382, 447, 470, "Output", "ExpressionUUID" -> \
"52ceb7f3-a520-4cb0-9902-0f0888ea789c"],
Cell[77434, 1613, 22023, 441, 470, "Output", "ExpressionUUID" -> \
"f3f9988e-ea13-4b5e-a372-e258bc8d8d53"],
Cell[99460, 2056, 22954, 456, 470, "Output", "ExpressionUUID" -> \
"87ee9e9a-cc5e-48db-af0e-f06338f2bda4"],
Cell[122417, 2514, 29716, 581, 470, "Output", "ExpressionUUID" -> \
"c21d930c-5f68-4ebb-b067-3b8e319ffa7e"],
Cell[152136, 3097, 29594, 579, 470, "Output", "ExpressionUUID" -> \
"b25b6c3d-04f0-46f3-b6a7-389421ae1fe2"],
Cell[181733, 3678, 29966, 585, 470, "Output", "ExpressionUUID" -> \
"77b62383-4adf-4bd5-9b21-6fcdcc32a31a"],
Cell[211702, 4265, 37103, 715, 470, "Output", "ExpressionUUID" -> \
"01a65808-5611-4e0d-bcc5-b8a892c47a19"],
Cell[248808, 4982, 36827, 710, 470, "Output", "ExpressionUUID" -> \
"96ac14b8-8e79-406e-839c-d932aadba760"],
Cell[285638, 5694, 44719, 855, 476, "Output", "ExpressionUUID" -> \
"1d5a3315-c739-4a74-a49b-f11f1eee5f50"],
Cell[330360, 6551, 44425, 850, 479, "Output", "ExpressionUUID" -> \
"e5b11355-b77e-41b2-8e97-b6a5146a79c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374822, 7406, 489, 13, 63, "Input", "ExpressionUUID" -> \
"450dc594-3d9b-4fdc-9103-d430ebee1359"],
Cell[375314, 7421, 72981, 1288, 479, "Output", "ExpressionUUID" -> \
"0c01ba5a-5bf9-4c9f-b0e7-487ec652b5a0"],
Cell[448298, 8711, 67431, 1199, 479, "Output", "ExpressionUUID" -> \
"acc1fc9a-08f3-497e-9fc7-ae6cc8abf92b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515766, 9915, 490, 13, 63, "Input", "ExpressionUUID" -> \
"4277d921-c313-41ad-9dbe-20988045f588"],
Cell[516259, 9930, 69738, 1236, 479, "Output", "ExpressionUUID" -> \
"48c9ffef-47a0-4071-bfa7-c47b1b3b304a"],
Cell[586000, 11168, 70899, 1255, 479, "Output", "ExpressionUUID" -> \
"226c015e-2b1f-448b-b162-71c6aa48aa5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[656936, 12428, 766, 19, 87, "Input", "ExpressionUUID" -> \
"b1d487e7-f623-4847-a8d2-c923553c7741"],
Cell[657705, 12449, 70607, 1250, 486, "Output", "ExpressionUUID" -> \
"628b2ed5-07d0-448c-aca1-1a3ac0b67571"],
Cell[728315, 13701, 68881, 1223, 479, "Output", "ExpressionUUID" -> \
"9aaff5a1-1838-49e5-918b-ebd8679649a6"],
Cell[797199, 14926, 69386, 1230, 479, "Output", "ExpressionUUID" -> \
"fcf7dd9e-4c7e-4a73-bba8-07875b28c374"]
}, Open  ]],
Cell[CellGroupData[{
Cell[866622, 16161, 545, 14, 63, "Input", "ExpressionUUID" -> \
"9d865506-bd6c-4380-8300-cddcfd93fe89"],
Cell[867170, 16177, 66780, 1188, 479, "Output", "ExpressionUUID" -> \
"d072c738-30e5-4b65-8390-92f798867644"],
Cell[933953, 17367, 61285, 1097, 479, "Output", "ExpressionUUID" -> \
"8fe5b074-a3ba-4f74-8fe8-ee88ed129f4a"]
}, Open  ]]
}
]
*)

