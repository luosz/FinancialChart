(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1226328,      22766]
NotebookOptionsPosition[   1222076,      22669]
NotebookOutlinePosition[   1222451,      22685]
CellTagsIndexPosition[   1222408,      22682]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s", ",", "portfolio", ",", "data", ",", "symbols", ",", "std", ",", 
      "return"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"std", "=", 
      RowBox[{"StandardDeviation", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"return", ",", "std", ",", 
          RowBox[{"return", "/", "std"}]}], "}"}], "//", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<return\>\"", ",", "\"\<std\>\"", ",", "\"\<ret/std\>\""}],
                "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], "&"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9, {3.6701716503770185`*^9, 3.6701716506582756`*^9}, {
   3.685305952518339*^9, 3.6853059537176065`*^9}, {3.6967608776432834`*^9, 
   3.69676088094309*^9}, {3.6967609151895046`*^9, 3.6967609377087526`*^9}, {
   3.696760993933354*^9, 3.696761073622054*^9}, {3.6967611222038827`*^9, 
   3.6967611349350204`*^9}, 3.6967613481293807`*^9, {3.7105957860015736`*^9, 
   3.71059578815324*^9}},ExpressionUUID->"8c08837f-8e1b-421e-be78-\
0bc82eda6287"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start5", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start1", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start2", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start3", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "//", "DateString"}]}], "Input",
 CellChangeTimes->{{3.687000687380389*^9, 3.687000691123763*^9}, {
   3.687614865311994*^9, 3.6876148655927954`*^9}, {3.687615693446018*^9, 
   3.6876157159117823`*^9}, {3.6876157613395433`*^9, 
   3.6876158485145035`*^9}, {3.6876161174929743`*^9, 3.687616121566601*^9}, {
   3.6957146336464562`*^9, 3.6957146442638135`*^9}, {3.695714683683401*^9, 
   3.6957146874316454`*^9}, {3.7111747452327385`*^9, 3.7111747512016077`*^9}, 
   3.7111747816649323`*^9},ExpressionUUID->"ca58564d-e2c2-4c41-a41b-\
4195dc58339b"],

Cell[BoxData["\<\"Tue 8 Aug 2017\"\>"], "Output",
 CellChangeTimes->{
  3.695714691871008*^9, 3.6957281132851152`*^9, 3.6962338966179028`*^9, 
   3.6967607209181795`*^9, 3.6967614646181746`*^9, 3.69676153070809*^9, 
   3.6967617322874737`*^9, 3.6967619060619135`*^9, 3.696762055027141*^9, 
   3.69849774408033*^9, 3.6984978125269766`*^9, 3.7020194263341355`*^9, 
   3.7020197015737047`*^9, 3.7046909729002047`*^9, 3.705041397935094*^9, 
   3.705251975042736*^9, 3.705314779789386*^9, 3.705314925688922*^9, 
   3.7069033691352315`*^9, 3.7069036343350973`*^9, 3.7105682619466543`*^9, 
   3.710568331342247*^9, 3.7105683747946987`*^9, 3.7105814140079*^9, 
   3.7105814838211145`*^9, {3.710581549927876*^9, 3.7105815723427267`*^9}, {
   3.7105949075188913`*^9, 3.7105949344129577`*^9}, 3.710595485156376*^9, 
   3.710595532181919*^9, 3.710595595567172*^9, 3.7105957927728176`*^9, 
   3.711174855368164*^9, 
   3.711174978761322*^9},ExpressionUUID->"a0f3199d-ddb4-4b1d-9a30-\
f30e6069c5ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<ASHR\>\"", "}"}], ",", "start3", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<EWH\>\"", "}"}], ",", "start3", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<VPL\>\"", "}"}], ",", "start3", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SPY\>\"", "}"}], ",", "start3", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<ASHR\>\"", ",", "\"\<EWH\>\"", ",", "\"\<VPL\>\"", ",", 
     "\"\<SPY\>\""}], "}"}], ",", "start3", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7111748372598376`*^9, 3.7111748518916245`*^9}, {
  3.7111749508713365`*^9, 
  3.7111749687758355`*^9}},ExpressionUUID->"c113942c-4311-4f42-8218-\
9bcf4d67e72d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
w7s=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
w7s=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.6164448*^9, 0}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0, 2.239123866917866}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6164448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0, 2.239123866917866}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"ASHR\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.477687353142217`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.23861889716481818`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "6.192666929147497`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.711174863262967*^9, 
  3.7111749796106415`*^9},ExpressionUUID->"fe17608e-2a34-4b06-b0e4-\
ca0ac5312115"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6164448*^9, 0.7789960969032029}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0.8002122545456994, 
        1.2245354073956298`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6164448*^9, 0.7789960969032029}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0.8002122545456994, 
        1.2245354073956298`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EWH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.2225458649211465`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0836637409802571`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "14.612612950329844`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.711174863262967*^9, 
  3.711174980542947*^9},ExpressionUUID->"cf8aea55-8fa8-4b34-8c9d-\
64fcc9678bb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6164448*^9, 0.8109211825094759}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0.8289644107812355, 
        1.1898289762164267`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6164448*^9, 0.8109211825094759}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0.8289644107812355, 
        1.1898289762164267`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VPL\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.187905656484931`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.07161893020400209`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "16.586475853538378`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.711174863262967*^9, 
  3.7111749812521486`*^9},ExpressionUUID->"95a14eea-43e0-48b4-ad2e-\
e0bfb2ea1fa8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nk8VN0fB3BbKC1KKamQpFCN0qYsN/IIidCi1FAplUxJocW0E8mSKIQQ
STUtiJSJiFJpUZQyaeWWppQ28ny63/7p+eN5fu/XZXzmc84995z7+ul4+c1d
IScjI9OGf/35L/7h3f/UwtD/lFrgX2Knzy2MTXzdiecqnKXBcNIgt/16ipy1
M2FztaTqZh3OTndhK/5zzdUTOQt/wE82GqpFm3BWDWxrYW4q9jNync/Z8jjc
d9buJaN9OQuq4bfXYiasCOSc2g6v2vswXLSbc432lxYmxlLdadh2zvwUOMVN
697eWM5RVfBhcfYU28OUvw2+3jxD//Ahyj/0awuz40s/ayaG8tvCu0wWT5l3
jLNECpeUjSicnER5NdtbGJNpHjFNRyjvTHjYk4ETr9DfE/jBp2oDm2tOcJZp
hUuLJny6mciZN+hbC9Nn2dlXjULKOwN+3bu3S3kU5V0Ljzz+3DszjvIehidf
jq6v20p9Dvjewsz4b2BOThD1aQGHlMv33kR5RD7w2V+H549LofyxcPJsk63P
8ij/VbhgvVK+3Hnqc/oPjM/NSZEy0dSnN1ze0ONcIfUtEw1vynYpvUyfz7sM
tw87tm+0G+V/Db+zW6nmtYn6XPazhRGPdnUvWEd9RsKiwtjQjGWU/xI827Xg
fqUB5W+C441s/dYaUv6ev1qYN68Xlf5eQP2Gw6P29mwf5Er95sGua/dYxahR
/kb4xgWlTxGLKH/3jhZGqc4hNESZ8pvA03z7HLO/8JHr9zz8oaM5qGMMZ3ED
3NO7eP48U85Sxc4WpnpsT3sLBc7axvBnnZiSdZ2tXP5FcOHXjsc6i7jrknrY
7IOfqtpJzqoKvzHeix5tvD+C8o+Fp1pcbl+nRPkXwCdfyB4dPpny74Qj+hdq
9Kf5z5PtamGEqTVars7UryFc4J612nwHzQ83mN977MMnwTQ/QuCybr3Xv6H5
Ij0J7yj+wGysoH5HybDMq25pPasrqd+5cOK08OKXhTQ/tsLXerf5fXxI8yML
HnFwxH/j3lD+e7BbvleHaQv1O0eWZWy+3Ol4+o36DYbl+ugJhnVQ/gy4bMId
JT+6zr8DC2OHPnSl61Hf4fgSm5MrOml+bJZjGYH7094GMp+4ftNgmSmjePYa
nIW34KwTeZbW/TiLvsJ2qoXVrXRdoiXPMtPLH8QsMuYsOAYvGntCkGfGObUS
DtSUbd5lyrnmM6ykWjTs9kzOvP8UWMZh4qHl66ZzFpfDpo83KV0fyln6ET59
Y5VInX5fe3A3lokqS9PVtqe81vDs3BkGpjaUdx3s6zbz2ubZnFU/wO/XMD2f
j+NsOVARfY3cc7nJiPIyMHviYusK6jt1jeI/fdXEwac23t7RO5/67K/EMif7
lPJOJVCf5rDBqbcHEuj+E6/64+OjB02tovkQA/fX9EvZOoHyX4FF6l9sp1Je
0TRl9Nv14EuUO/W5AlYxG9dwkE/5o+CmrjfrOsmCV3DAqTUT5vlxllnWnWXq
31UMdgugPg/APe++iF3owZlfAMclFk80o/ERq/RgGesLz/s1jaX+9sNaCzsb
BI00Xy/C+eazz1+j7yt6Dqt4q6ipvaf5qqzCMg2JinGfp1C+CfDYALsryQNo
vM/BW9KTG93bqL+n8OiJd+eOfEvzVbEny6TFWV1TvE3zlQeXlBU5pmZSv+6w
IfsmaNczmp/yvVgm8vDBk5dofJzGwGkGd/SiaHyE8+GjpuwHU5pvoh1wiLN3
jLIejbdMb5ZZ3n1s8xwaf4EBbPxh2kLbrzTerrDiyKjsxCuUdzv8/bil4tTX
lPckPNxv2fbaMzTe+n1YJuWBj0PhSxpvZ/iZh6S75XCar1tg4Y4DcyL60nif
gE3qDeKzKZ9TDax18GGbP42HxFEV43Pr5WcxzXfVINhT96OCnwPlT4fz/6u9
JDOH8t+G3ZdN2J8cRH1/gxPlAoqVImi8U/uyzK9DjcmDYjlH3YQX9Mny2EsW
f4GHbHth6BRFeYf1Y5klfTum25+i+ycZ3pw+pOREDvV5A25Nn3EhpIDyfoKV
Kgd8yLhAeYeo4f57qHPU7gzltYFLHhx42niM7vfr8MMQvyD3yzRfP8LXFm6f
WZhN81WjP8skOHjE5cRRfitYduLJnfFHKb8vfCvacPHERdTne3hQasS7FF/q
U30Ay3Sfud3JgsZbaAn7ajuafR9M+VfD/Xgt4oy5lP8QLJZmXd8wmfpUU2cZ
fTuNLLcN1KcZ7HLXsK33Csq/Uv2fPDIx8ORyjVrlvZS/GH5qXNWUdpr6NR3I
Mra2EpeaDOp3OXwp6Xx3v3DKfxB+09L6OXkW5S+EP4Q0vVazoPwv4W2yyvXj
6Lqq1yCWWSjaud0ohPqNgPvPGK2utIDy58O5Y00zXWwpvwTOyeCPNafr/DAN
9BH6RKy7ifq8AHdMT9s6ZzXlfQaPkvy450HzSao0GOPhXeGuf4DyjofnWYxc
n5tJfYpgrzzDMLNo6vMJrDtohXrdEcrbTRPri6aoo8/f+TAOttnln1CeS3kX
wgaHnqZcCqQ+6+B+2TV+h9OoT7khLNMrOb9tYhLlN4Izqh2sPM5T/nmwXw/9
3WVXKL8QXhUwIXp2JfXZBVv30OvDz6M+Rw9lmbN7HmtWlVF+FzjLRLWx3znK
vw2OeHenQrSL8mfDg3/E5zpcpD5HDmOZzndfD5tco/ngNOyffmS2wKnikd2z
gyl/JnxkcPaonX/vx7uwUbfkgOwb1O9sLTwPlZ73+0h/XzsQHrJrva4XzRen
47DI+IavOfUtrIaNuwwVFj6k/O3wbe2l3vb11G+ANsucyf5xcdtb6jcFjmsP
UOl4Tfmr4OHjW81Kmyh/G6wXmPh7oJTyD9PBfkE3+7EW/by4At7ITjn5nO5v
qRReGSn62fSc8moOZ5lJPWyEhfT3nWbCijqWq91oPCRlcOgpLcu4CuqzFY6J
t3+hWkp5B+miv5nFZkPuUN4ZcN2TKJOkLMq7Fm6203v6LIX6ZOGv9/Ikw3ZT
nwNGsMxWs6ynQTReURZwUPtcPYtCyu/zxw+n2zX+7TsWHnz3oJvS3z776eF5
Eny08BTNX9F0+H6PHp08Wu8k3vDsGX5NQhof1WjY5cbLzEQJ5b8MX1g+a5td
NfU5dSTu336KI46/pD6Xw6N4If0lbyh/JLzEJNQyvpzyX4K3pmyeXkrraVQT
XJ5e9vJVPvXrqc8yvLvS07fmU7/hsN60qzfUPSl/HlzM9t0spj5Ejfp/7rda
mUwh9Rk6imX8xZN3v/KnPs/DgQcU13cepLwN8Lupnk4HrSmv0mis7wHv90bS
84ZnDHd1+Zc40+eLz8J5Pk6La+h+ktbDZ7csGbilivIqGLBMpnFt6zfq22ks
7DvydtX295R3AXzVNz3Vi+ab6mO42xqpY9ln6lPW8J9+BYbwu2dBb5bXUX43
+ENzyNXcq5Q/BN6+TXo3kr4P/zcsV1pTv5L2P1GjjFhmsVNG4Wxab8Rz4R3a
mc6+tyj/VjjafVD9Dho/7Syjf8ZHpDcG+8Xk52/MaTwkc+DPjP46L1rfVYNh
o4wZZg7FlD8DvnH7maNWPOW/A78L99UMjqR+Z49F/ok6hwdTP7zN8K8237fd
6fnIT4M9v7y3XJ9O+W/BjfUjj99Ppvxf4TeeLiILWk+dNo5jmbczJ08Oo88T
HoMXdv2Scy+i/JXw+XThqqDDlP/zH4t5bzf+3a8N5bGM8pHgFeILtP9JhNXO
5tat7eLOTzXlsLpX1nulFM4yUvjJYp8pLatpvzbYGOvnuTU1jfdpv2YN78ky
NRr4gPa7pbBhTo6cvYj2bx/gnbWHnCt4tH8bOJ5l+g6fFrQhhPZvDJzj6/Et
cCftN9fAndZqgpAZdF7rP4FlJGUbWgeforzmcMZrXrPKBtqvrYJ1sufUfQml
/Vos7GPWONGY3hdE9TXB835DlvPqCNqvTYP/W2zyzeMa5V0Bj9wSdmk/7S+1
o+DJXZmdNQ2UtwhWjnWtm0nvLyRTJrLMx9AjJpNz6by2DO6T9aW2ZiOd1w7A
c1T2h/an87egAB517mxQ4xLK/wJeLn92cZUH9cmfhOvblrLWzVzf/P3wVy2Z
gT1b6bx8Ea7erTrY1oryP4cNL4d8H+FI+ZUns8zaHm/UQ+j7CffBmunVwU2P
qc9z8KT3KU5D6DwieQobdV5e7kj7eVXFKTifnu91xkeN5jMP/mbtqtpNne63
M7D7ZUmBHu2nZOrh35HMgsjflF9+KvZjawLkLjTTfBgDV6bsGz6WzldR8+Hw
tydvG1jS/fYIVrM6pTR/Bs1nGVPsn3hVH0R0/hMawJkHosY469B8doVfTpbJ
9l5D83k7/MPZtsqW9geCTnhDzAZ7E1rPU/WnscwAma9Bu0IpvzMsPZJ/Nfrv
/nMrrGH0bmb7JbofT8BaFrtyV9HzQTxiOu5HgwH7njyh9cIRFsx8b675jvIH
wWzki+wJdN0pHb7oGBiXXkv5b8PhOtrNFg/ofnMwY5nstZ3vc2i/a7kJ3rZW
P30QPV8FqXBxZbuCLe1/Um/CV+zKr9t4Uf4v8CrTiAuOPFov/M1ZJj3z5a8p
tL5HJcODA30ut9N5UHwDds1dN/wmrV/ST3CN4blHEto/aQ+xwOdtlLu77O9+
6CisYNSpPYbWV8l1uHLjiGUzrlP+j/CAvMDERPp5gZUlnq+d22bdp/2WTCn8
5ZRDJEvPB957uE+dQYj+C8qrzuD59HXNmfV/92+WsMV3BX9Zyi9eDeur+g7R
vkl9NsPKyjYnQmm9E6rNwP0xxkt2GJ1XRGbw0B0m6bq0/5eshPPGLt2URftJ
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
1ucWebmarxb/A4006Es=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nk8VN0fB3BbKC1KKamQpFCN0qYsN/IIidCi1FAplUxJocW0E8mSKIQQ
STUtiJSJiFJpUZQyaeWWppQ28ny63/7p+eN5fu/XZXzmc84995z7+ul4+c1d
IScjI9OGf/35L/7h3f/UwtD/lFrgX2Knzy2MTXzdiecqnKXBcNIgt/16ipy1
M2FztaTqZh3OTndhK/5zzdUTOQt/wE82GqpFm3BWDWxrYW4q9jNync/Z8jjc
d9buJaN9OQuq4bfXYiasCOSc2g6v2vswXLSbc432lxYmxlLdadh2zvwUOMVN
697eWM5RVfBhcfYU28OUvw2+3jxD//Ahyj/0awuz40s/ayaG8tvCu0wWT5l3
jLNECpeUjSicnER5NdtbGJNpHjFNRyjvTHjYk4ETr9DfE/jBp2oDm2tOcJZp
hUuLJny6mciZN+hbC9Nn2dlXjULKOwN+3bu3S3kU5V0Ljzz+3DszjvIehidf
jq6v20p9Dvjewsz4b2BOThD1aQGHlMv33kR5RD7w2V+H549LofyxcPJsk63P
8ij/VbhgvVK+3Hnqc/oPjM/NSZEy0dSnN1ze0ONcIfUtEw1vynYpvUyfz7sM
tw87tm+0G+V/Db+zW6nmtYn6XPazhRGPdnUvWEd9RsKiwtjQjGWU/xI827Xg
fqUB5W+C441s/dYaUv6ev1qYN68Xlf5eQP2Gw6P29mwf5Er95sGua/dYxahR
/kb4xgWlTxGLKH/3jhZGqc4hNESZ8pvA03z7HLO/8JHr9zz8oaM5qGMMZ3ED
3NO7eP48U85Sxc4WpnpsT3sLBc7axvBnnZiSdZ2tXP5FcOHXjsc6i7jrknrY
7IOfqtpJzqoKvzHeix5tvD+C8o+Fp1pcbl+nRPkXwCdfyB4dPpny74Qj+hdq
9Kf5z5PtamGEqTVars7UryFc4J612nwHzQ83mN977MMnwTQ/QuCybr3Xv6H5
Ij0J7yj+wGysoH5HybDMq25pPasrqd+5cOK08OKXhTQ/tsLXerf5fXxI8yML
HnFwxH/j3lD+e7BbvleHaQv1O0eWZWy+3Ol4+o36DYbl+ugJhnVQ/gy4bMId
JT+6zr8DC2OHPnSl61Hf4fgSm5MrOml+bJZjGYH7094GMp+4ftNgmSmjePYa
nIW34KwTeZbW/TiLvsJ2qoXVrXRdoiXPMtPLH8QsMuYsOAYvGntCkGfGObUS
DtSUbd5lyrnmM6ykWjTs9kzOvP8UWMZh4qHl66ZzFpfDpo83KV0fyln6ET59
Y5VInX5fe3A3lokqS9PVtqe81vDs3BkGpjaUdx3s6zbz2ubZnFU/wO/XMD2f
j+NsOVARfY3cc7nJiPIyMHviYusK6jt1jeI/fdXEwac23t7RO5/67K/EMif7
lPJOJVCf5rDBqbcHEuj+E6/64+OjB02tovkQA/fX9EvZOoHyX4FF6l9sp1Je
0TRl9Nv14EuUO/W5AlYxG9dwkE/5o+CmrjfrOsmCV3DAqTUT5vlxllnWnWXq
31UMdgugPg/APe++iF3owZlfAMclFk80o/ERq/RgGesLz/s1jaX+9sNaCzsb
BI00Xy/C+eazz1+j7yt6Dqt4q6ipvaf5qqzCMg2JinGfp1C+CfDYALsryQNo
vM/BW9KTG93bqL+n8OiJd+eOfEvzVbEny6TFWV1TvE3zlQeXlBU5pmZSv+6w
IfsmaNczmp/yvVgm8vDBk5dofJzGwGkGd/SiaHyE8+GjpuwHU5pvoh1wiLN3
jLIejbdMb5ZZ3n1s8xwaf4EBbPxh2kLbrzTerrDiyKjsxCuUdzv8/bil4tTX
lPckPNxv2fbaMzTe+n1YJuWBj0PhSxpvZ/iZh6S75XCar1tg4Y4DcyL60nif
gE3qDeKzKZ9TDax18GGbP42HxFEV43Pr5WcxzXfVINhT96OCnwPlT4fz/6u9
JDOH8t+G3ZdN2J8cRH1/gxPlAoqVImi8U/uyzK9DjcmDYjlH3YQX9Mny2EsW
f4GHbHth6BRFeYf1Y5klfTum25+i+ycZ3pw+pOREDvV5A25Nn3EhpIDyfoKV
Kgd8yLhAeYeo4f57qHPU7gzltYFLHhx42niM7vfr8MMQvyD3yzRfP8LXFm6f
WZhN81WjP8skOHjE5cRRfitYduLJnfFHKb8vfCvacPHERdTne3hQasS7FF/q
U30Ay3Sfud3JgsZbaAn7ajuafR9M+VfD/Xgt4oy5lP8QLJZmXd8wmfpUU2cZ
fTuNLLcN1KcZ7HLXsK33Csq/Uv2fPDIx8ORyjVrlvZS/GH5qXNWUdpr6NR3I
Mra2EpeaDOp3OXwp6Xx3v3DKfxB+09L6OXkW5S+EP4Q0vVazoPwv4W2yyvXj
6Lqq1yCWWSjaud0ohPqNgPvPGK2utIDy58O5Y00zXWwpvwTOyeCPNafr/DAN
9BH6RKy7ifq8AHdMT9s6ZzXlfQaPkvy450HzSao0GOPhXeGuf4DyjofnWYxc
n5tJfYpgrzzDMLNo6vMJrDtohXrdEcrbTRPri6aoo8/f+TAOttnln1CeS3kX
wgaHnqZcCqQ+6+B+2TV+h9OoT7khLNMrOb9tYhLlN4Izqh2sPM5T/nmwXw/9
3WVXKL8QXhUwIXp2JfXZBVv30OvDz6M+Rw9lmbN7HmtWlVF+FzjLRLWx3znK
vw2OeHenQrSL8mfDg3/E5zpcpD5HDmOZzndfD5tco/ngNOyffmS2wKnikd2z
gyl/JnxkcPaonX/vx7uwUbfkgOwb1O9sLTwPlZ73+0h/XzsQHrJrva4XzRen
47DI+IavOfUtrIaNuwwVFj6k/O3wbe2l3vb11G+ANsucyf5xcdtb6jcFjmsP
UOl4Tfmr4OHjW81Kmyh/G6wXmPh7oJTyD9PBfkE3+7EW/by4At7ITjn5nO5v
qRReGSn62fSc8moOZ5lJPWyEhfT3nWbCijqWq91oPCRlcOgpLcu4CuqzFY6J
t3+hWkp5B+miv5nFZkPuUN4ZcN2TKJOkLMq7Fm6203v6LIX6ZOGv9/Ikw3ZT
nwNGsMxWs6ynQTReURZwUPtcPYtCyu/zxw+n2zX+7TsWHnz3oJvS3z776eF5
Eny08BTNX9F0+H6PHp08Wu8k3vDsGX5NQhof1WjY5cbLzEQJ5b8MX1g+a5td
NfU5dSTu336KI46/pD6Xw6N4If0lbyh/JLzEJNQyvpzyX4K3pmyeXkrraVQT
XJ5e9vJVPvXrqc8yvLvS07fmU7/hsN60qzfUPSl/HlzM9t0spj5Ejfp/7rda
mUwh9Rk6imX8xZN3v/KnPs/DgQcU13cepLwN8Lupnk4HrSmv0mis7wHv90bS
84ZnDHd1+Zc40+eLz8J5Pk6La+h+ktbDZ7csGbilivIqGLBMpnFt6zfq22ks
7DvydtX295R3AXzVNz3Vi+ab6mO42xqpY9ln6lPW8J9+BYbwu2dBb5bXUX43
+ENzyNXcq5Q/BN6+TXo3kr4P/zcsV1pTv5L2P1GjjFhmsVNG4Wxab8Rz4R3a
mc6+tyj/VjjafVD9Dho/7Syjf8ZHpDcG+8Xk52/MaTwkc+DPjP46L1rfVYNh
o4wZZg7FlD8DvnH7maNWPOW/A78L99UMjqR+Z49F/ok6hwdTP7zN8K8237fd
6fnIT4M9v7y3XJ9O+W/BjfUjj99Ppvxf4TeeLiILWk+dNo5jmbczJ08Oo88T
HoMXdv2Scy+i/JXw+XThqqDDlP/zH4t5bzf+3a8N5bGM8pHgFeILtP9JhNXO
5tat7eLOTzXlsLpX1nulFM4yUvjJYp8pLatpvzbYGOvnuTU1jfdpv2YN78ky
NRr4gPa7pbBhTo6cvYj2bx/gnbWHnCt4tH8bOJ5l+g6fFrQhhPZvDJzj6/Et
cCftN9fAndZqgpAZdF7rP4FlJGUbWgeforzmcMZrXrPKBtqvrYJ1sufUfQml
/Vos7GPWONGY3hdE9TXB835DlvPqCNqvTYP/W2zyzeMa5V0Bj9wSdmk/7S+1
o+DJXZmdNQ2UtwhWjnWtm0nvLyRTJrLMx9AjJpNz6by2DO6T9aW2ZiOd1w7A
c1T2h/an87egAB517mxQ4xLK/wJeLn92cZUH9cmfhOvblrLWzVzf/P3wVy2Z
gT1b6bx8Ea7erTrY1oryP4cNL4d8H+FI+ZUns8zaHm/UQ+j7CffBmunVwU2P
qc9z8KT3KU5D6DwieQobdV5e7kj7eVXFKTifnu91xkeN5jMP/mbtqtpNne63
M7D7ZUmBHu2nZOrh35HMgsjflF9+KvZjawLkLjTTfBgDV6bsGz6WzldR8+Hw
tydvG1jS/fYIVrM6pTR/Bs1nGVPsn3hVH0R0/hMawJkHosY469B8doVfTpbJ
9l5D83k7/MPZtsqW9geCTnhDzAZ7E1rPU/WnscwAma9Bu0IpvzMsPZJ/Nfrv
/nMrrGH0bmb7JbofT8BaFrtyV9HzQTxiOu5HgwH7njyh9cIRFsx8b675jvIH
wWzki+wJdN0pHb7oGBiXXkv5b8PhOtrNFg/ofnMwY5nstZ3vc2i/a7kJ3rZW
P30QPV8FqXBxZbuCLe1/Um/CV+zKr9t4Uf4v8CrTiAuOPFov/M1ZJj3z5a8p
tL5HJcODA30ut9N5UHwDds1dN/wmrV/ST3CN4blHEto/aQ+xwOdtlLu77O9+
6CisYNSpPYbWV8l1uHLjiGUzrlP+j/CAvMDERPp5gZUlnq+d22bdp/2WTCn8
5ZRDJEvPB957uE+dQYj+C8qrzuD59HXNmfV/92+WsMV3BX9Zyi9eDeur+g7R
vkl9NsPKyjYnQmm9E6rNwP0xxkt2GJ1XRGbw0B0m6bq0/5eshPPGLt2URftJ
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
1ucWebmarxb/A4006Es=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6164448*^9, 0.9486942692801285}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0.9684365979783804, 
        1.3632831719434189`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6164448*^9, 0.9486942692801285}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0.9684365979783804, 
        1.3632831719434189`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3632831719434189`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.09660405569079551`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "14.11206974898584`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.711174863262967*^9, 
  3.7111749821021595`*^9},ExpressionUUID->"0edd85a3-9d75-458a-9be1-\
d687f61f5155"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
w7s=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nk8VN0fB3BbKC1KKamQpFCN0qYsN/IIidCi1FAplUxJocW0E8mSKIQQ
STUtiJSJiFJpUZQyaeWWppQ28ny63/7p+eN5fu/XZXzmc84995z7+ul4+c1d
IScjI9OGf/35L/7h3f/UwtD/lFrgX2Knzy2MTXzdiecqnKXBcNIgt/16ipy1
M2FztaTqZh3OTndhK/5zzdUTOQt/wE82GqpFm3BWDWxrYW4q9jNync/Z8jjc
d9buJaN9OQuq4bfXYiasCOSc2g6v2vswXLSbc432lxYmxlLdadh2zvwUOMVN
697eWM5RVfBhcfYU28OUvw2+3jxD//Ahyj/0awuz40s/ayaG8tvCu0wWT5l3
jLNECpeUjSicnER5NdtbGJNpHjFNRyjvTHjYk4ETr9DfE/jBp2oDm2tOcJZp
hUuLJny6mciZN+hbC9Nn2dlXjULKOwN+3bu3S3kU5V0Ljzz+3DszjvIehidf
jq6v20p9Dvjewsz4b2BOThD1aQGHlMv33kR5RD7w2V+H549LofyxcPJsk63P
8ij/VbhgvVK+3Hnqc/oPjM/NSZEy0dSnN1ze0ONcIfUtEw1vynYpvUyfz7sM
tw87tm+0G+V/Db+zW6nmtYn6XPazhRGPdnUvWEd9RsKiwtjQjGWU/xI827Xg
fqUB5W+C441s/dYaUv6ev1qYN68Xlf5eQP2Gw6P29mwf5Er95sGua/dYxahR
/kb4xgWlTxGLKH/3jhZGqc4hNESZ8pvA03z7HLO/8JHr9zz8oaM5qGMMZ3ED
3NO7eP48U85Sxc4WpnpsT3sLBc7axvBnnZiSdZ2tXP5FcOHXjsc6i7jrknrY
7IOfqtpJzqoKvzHeix5tvD+C8o+Fp1pcbl+nRPkXwCdfyB4dPpny74Qj+hdq
9Kf5z5PtamGEqTVars7UryFc4J612nwHzQ83mN977MMnwTQ/QuCybr3Xv6H5
Ij0J7yj+wGysoH5HybDMq25pPasrqd+5cOK08OKXhTQ/tsLXerf5fXxI8yML
HnFwxH/j3lD+e7BbvleHaQv1O0eWZWy+3Ol4+o36DYbl+ugJhnVQ/gy4bMId
JT+6zr8DC2OHPnSl61Hf4fgSm5MrOml+bJZjGYH7094GMp+4ftNgmSmjePYa
nIW34KwTeZbW/TiLvsJ2qoXVrXRdoiXPMtPLH8QsMuYsOAYvGntCkGfGObUS
DtSUbd5lyrnmM6ykWjTs9kzOvP8UWMZh4qHl66ZzFpfDpo83KV0fyln6ET59
Y5VInX5fe3A3lokqS9PVtqe81vDs3BkGpjaUdx3s6zbz2ubZnFU/wO/XMD2f
j+NsOVARfY3cc7nJiPIyMHviYusK6jt1jeI/fdXEwac23t7RO5/67K/EMif7
lPJOJVCf5rDBqbcHEuj+E6/64+OjB02tovkQA/fX9EvZOoHyX4FF6l9sp1Je
0TRl9Nv14EuUO/W5AlYxG9dwkE/5o+CmrjfrOsmCV3DAqTUT5vlxllnWnWXq
31UMdgugPg/APe++iF3owZlfAMclFk80o/ERq/RgGesLz/s1jaX+9sNaCzsb
BI00Xy/C+eazz1+j7yt6Dqt4q6ipvaf5qqzCMg2JinGfp1C+CfDYALsryQNo
vM/BW9KTG93bqL+n8OiJd+eOfEvzVbEny6TFWV1TvE3zlQeXlBU5pmZSv+6w
IfsmaNczmp/yvVgm8vDBk5dofJzGwGkGd/SiaHyE8+GjpuwHU5pvoh1wiLN3
jLIejbdMb5ZZ3n1s8xwaf4EBbPxh2kLbrzTerrDiyKjsxCuUdzv8/bil4tTX
lPckPNxv2fbaMzTe+n1YJuWBj0PhSxpvZ/iZh6S75XCar1tg4Y4DcyL60nif
gE3qDeKzKZ9TDax18GGbP42HxFEV43Pr5WcxzXfVINhT96OCnwPlT4fz/6u9
JDOH8t+G3ZdN2J8cRH1/gxPlAoqVImi8U/uyzK9DjcmDYjlH3YQX9Mny2EsW
f4GHbHth6BRFeYf1Y5klfTum25+i+ycZ3pw+pOREDvV5A25Nn3EhpIDyfoKV
Kgd8yLhAeYeo4f57qHPU7gzltYFLHhx42niM7vfr8MMQvyD3yzRfP8LXFm6f
WZhN81WjP8skOHjE5cRRfitYduLJnfFHKb8vfCvacPHERdTne3hQasS7FF/q
U30Ay3Sfud3JgsZbaAn7ajuafR9M+VfD/Xgt4oy5lP8QLJZmXd8wmfpUU2cZ
fTuNLLcN1KcZ7HLXsK33Csq/Uv2fPDIx8ORyjVrlvZS/GH5qXNWUdpr6NR3I
Mra2EpeaDOp3OXwp6Xx3v3DKfxB+09L6OXkW5S+EP4Q0vVazoPwv4W2yyvXj
6Lqq1yCWWSjaud0ohPqNgPvPGK2utIDy58O5Y00zXWwpvwTOyeCPNafr/DAN
9BH6RKy7ifq8AHdMT9s6ZzXlfQaPkvy450HzSao0GOPhXeGuf4DyjofnWYxc
n5tJfYpgrzzDMLNo6vMJrDtohXrdEcrbTRPri6aoo8/f+TAOttnln1CeS3kX
wgaHnqZcCqQ+6+B+2TV+h9OoT7khLNMrOb9tYhLlN4Izqh2sPM5T/nmwXw/9
3WVXKL8QXhUwIXp2JfXZBVv30OvDz6M+Rw9lmbN7HmtWlVF+FzjLRLWx3znK
vw2OeHenQrSL8mfDg3/E5zpcpD5HDmOZzndfD5tco/ngNOyffmS2wKnikd2z
gyl/JnxkcPaonX/vx7uwUbfkgOwb1O9sLTwPlZ73+0h/XzsQHrJrva4XzRen
47DI+IavOfUtrIaNuwwVFj6k/O3wbe2l3vb11G+ANsucyf5xcdtb6jcFjmsP
UOl4Tfmr4OHjW81Kmyh/G6wXmPh7oJTyD9PBfkE3+7EW/by4At7ITjn5nO5v
qRReGSn62fSc8moOZ5lJPWyEhfT3nWbCijqWq91oPCRlcOgpLcu4CuqzFY6J
t3+hWkp5B+miv5nFZkPuUN4ZcN2TKJOkLMq7Fm6203v6LIX6ZOGv9/Ikw3ZT
nwNGsMxWs6ynQTReURZwUPtcPYtCyu/zxw+n2zX+7TsWHnz3oJvS3z776eF5
Eny08BTNX9F0+H6PHp08Wu8k3vDsGX5NQhof1WjY5cbLzEQJ5b8MX1g+a5td
NfU5dSTu336KI46/pD6Xw6N4If0lbyh/JLzEJNQyvpzyX4K3pmyeXkrraVQT
XJ5e9vJVPvXrqc8yvLvS07fmU7/hsN60qzfUPSl/HlzM9t0spj5Ejfp/7rda
mUwh9Rk6imX8xZN3v/KnPs/DgQcU13cepLwN8Lupnk4HrSmv0mis7wHv90bS
84ZnDHd1+Zc40+eLz8J5Pk6La+h+ktbDZ7csGbilivIqGLBMpnFt6zfq22ks
7DvydtX295R3AXzVNz3Vi+ab6mO42xqpY9ln6lPW8J9+BYbwu2dBb5bXUX43
+ENzyNXcq5Q/BN6+TXo3kr4P/zcsV1pTv5L2P1GjjFhmsVNG4Wxab8Rz4R3a
mc6+tyj/VjjafVD9Dho/7Syjf8ZHpDcG+8Xk52/MaTwkc+DPjP46L1rfVYNh
o4wZZg7FlD8DvnH7maNWPOW/A78L99UMjqR+Z49F/ok6hwdTP7zN8K8237fd
6fnIT4M9v7y3XJ9O+W/BjfUjj99Ppvxf4TeeLiILWk+dNo5jmbczJ08Oo88T
HoMXdv2Scy+i/JXw+XThqqDDlP/zH4t5bzf+3a8N5bGM8pHgFeILtP9JhNXO
5tat7eLOTzXlsLpX1nulFM4yUvjJYp8pLatpvzbYGOvnuTU1jfdpv2YN78ky
NRr4gPa7pbBhTo6cvYj2bx/gnbWHnCt4tH8bOJ5l+g6fFrQhhPZvDJzj6/Et
cCftN9fAndZqgpAZdF7rP4FlJGUbWgeforzmcMZrXrPKBtqvrYJ1sufUfQml
/Vos7GPWONGY3hdE9TXB835DlvPqCNqvTYP/W2zyzeMa5V0Bj9wSdmk/7S+1
o+DJXZmdNQ2UtwhWjnWtm0nvLyRTJrLMx9AjJpNz6by2DO6T9aW2ZiOd1w7A
c1T2h/an87egAB517mxQ4xLK/wJeLn92cZUH9cmfhOvblrLWzVzf/P3wVy2Z
gT1b6bx8Ea7erTrY1oryP4cNL4d8H+FI+ZUns8zaHm/UQ+j7CffBmunVwU2P
qc9z8KT3KU5D6DwieQobdV5e7kj7eVXFKTifnu91xkeN5jMP/mbtqtpNne63
M7D7ZUmBHu2nZOrh35HMgsjflF9+KvZjawLkLjTTfBgDV6bsGz6WzldR8+Hw
tydvG1jS/fYIVrM6pTR/Bs1nGVPsn3hVH0R0/hMawJkHosY469B8doVfTpbJ
9l5D83k7/MPZtsqW9geCTnhDzAZ7E1rPU/WnscwAma9Bu0IpvzMsPZJ/Nfrv
/nMrrGH0bmb7JbofT8BaFrtyV9HzQTxiOu5HgwH7njyh9cIRFsx8b675jvIH
wWzki+wJdN0pHb7oGBiXXkv5b8PhOtrNFg/ofnMwY5nstZ3vc2i/a7kJ3rZW
P30QPV8FqXBxZbuCLe1/Um/CV+zKr9t4Uf4v8CrTiAuOPFov/M1ZJj3z5a8p
tL5HJcODA30ut9N5UHwDds1dN/wmrV/ST3CN4blHEto/aQ+xwOdtlLu77O9+
6CisYNSpPYbWV8l1uHLjiGUzrlP+j/CAvMDERPp5gZUlnq+d22bdp/2WTCn8
5ZRDJEvPB957uE+dQYj+C8qrzuD59HXNmfV/92+WsMV3BX9Zyi9eDeur+g7R
vkl9NsPKyjYnQmm9E6rNwP0xxkt2GJ1XRGbw0B0m6bq0/5eshPPGLt2URftJ
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
1ucWebmarxb/A4006Es=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XrfQ+8IFdm9YaMCzpPybYLvA5KWOWpT/BLxhVHxXi4jeJ89gtx59N+mR3HWx
OYYs0y6e45WYydloAzxqzoJeZUPKfwyuMutz0n5D+R/DU2d3bf5F74Oib3CX
4abxNdJU37AJLKN6Y2XshH/viwz42OfPTepB9L4uhQ+PHbZayp7yd8CfF7HT
pR/R/GK0EZ7PR5bTOv/Nd1NhcZHltOiztP68Dx9pPqev/o3WbyI4o/Xn+U/z
aX2hbMwyiWckJt+QpvnaDLjA/52MajfN1+8a/53/jndSLaT1Revf648C+J4T
aH0xwoRl3o88EB9N6+1IBt64MV/vPz6tL1bAxcU247f9oPWaginuh62mogGt
HwTW8DRh5txDt2k9sQwe7SVutaue1kMH4ZT9Q7TMWmh+LjcRP197sv9MWv8U
WcDKVu2KLZmUNxiu1hpbETqa5hcJcCT/rsP2Bsp7DS682vs1NIPWO1MnscxK
Cf7TOR9pvbYYbgzdEJKRS+u1fXBEsmisMJ3WQ4Vwb+DNLZWJlL9+0t/nuToo
ZzPV038yxnfHJqtSC1qv7YatUs/Ou2NO+S/BaYGTfwVuofy18KLYUEvnQ5Rf
agr64fCipQks1TMGDnVMUXpG6xvhRbhA1nP/Ilo/1b2FbUbEK3oGUD9ITkV/
3KvNEyyn+aYRrGmqvHaLJ82HL8DKvvEBcTE0XlTBXasW1YwPofm7hBnqcdNR
55oz9YMBLLJPr1epovmyN7xL7vFxIc3XVSvhIJXLvJqnNB8WM8d4qBrj/YHW
I5G68JGZKVV2iZTfE95jY1pQSPPdugj4flCfZZ4LPW9/4FPn0rOVeTR/G2/B
MqtfPXvY/Ivyu8GrRO3m5S2Ufwu8d3f/oU0s5T8FH3Q2djWpp/m8hiXWi5Ia
Mo203hE5w8IKxaHdNH9X3QhPvKA2qleH5m/H4d8D8ycmM/Q8PoU17Dyq7BbQ
/Hi2FdbTs5UDD06i+fF6WNNeutPRivIL4FLlwz1KND8XPIJ9BXM+aijSeN0F
R864vcWc1hv+odYs4+VxcX22Lo0X6fCRX7/WXaP1T9EDuOEA0xliTPP7dnhC
xufsFVQv1VE2LHN11SE/vQAaL47CzGPRrrrpVN9i+NI1lT97aX7Oa4P5nSN9
ee6Ud7ot1nuy71dNvk/1vAu/dj8sM4run9EXmPf1gCNPkubzigzLhPdM2uhB
+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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.6164448*^9, 0}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0, 2.239123866917866}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6164448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6164448*^9, 3.7110528*^9}, {0, 2.239123866917866}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"ASHR\"", "\"EWH\"", "\"VPL\"", "\"SPY\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3128555116229284`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.09423031449561094`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "13.932411439463875`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.711174863262967*^9, 
  3.711174985124008*^9},ExpressionUUID->"27a0a42d-13ef-4c0f-9476-\
33b98b917515"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<PUTW\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OUSA\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<GSLC\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<GURU\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<TLT\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<OUSA\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<GSLC\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OUSA\>\"", ",", "\"\<GSLC\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<GSLC\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<PUTW\>\"", ",", "\"\<GSLC\>\"", ",", "\"\<GURU\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<PUTW\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<GSLC\>\"", ",", 
     "\"\<TLT\>\""}], "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<PUTW\>\"", ",", "\"\<GURU\>\"", ",", "\"\<GSLC\>\"", ",", 
     "\"\<TLT\>\""}], "}"}], ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7046912590027647`*^9, {3.704691320868693*^9, 3.7046913619411926`*^9}, {
   3.7050416338567667`*^9, 3.705041640480579*^9}, {3.7069033536388907`*^9, 
   3.7069033670207906`*^9}, {3.7069035797598486`*^9, 3.706903606180378*^9}, {
   3.710568225137865*^9, 3.7105682561776037`*^9}, {3.710568327260388*^9, 
   3.7105683275636005`*^9}, {3.7105683650758905`*^9, 
   3.7105683683781853`*^9}, {3.71056842746857*^9, 3.710568455356102*^9}, {
   3.710581351825737*^9, 3.7105814033368454`*^9}, {3.710594899331478*^9, 
   3.7105949241959553`*^9}, {3.710595183348261*^9, 3.710595187412383*^9}, {
   3.7105952213365235`*^9, 3.7105952239515114`*^9}, {3.710595528125757*^9, 
   3.7105955296509542`*^9}, {3.7105955844155025`*^9, 
   3.710595592135502*^9}},ExpressionUUID->"9ec59700-6cdc-4997-9164-\
7d1dbcdd846e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9818799199621584}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9881438055822361, 
        1.1134215179837934`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9818799199621584}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9881438055822361, 
        1.1134215179837934`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1134215179837934`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03680562787153341`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "30.251393125803663`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.711174985873869*^9},ExpressionUUID->"d070d64b-5a67-4f66-a0a6-\
51cc14fb2a8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9322846129834262}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.0908154965427868`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9322846129834262}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.0908154965427868`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0908154965427868`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04241804967357875`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "25.715833352475688`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.7111749864538217`*^9},ExpressionUUID->"4aa5e9f4-32f5-4b45-891c-\
8832f317e930"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9440985654153454}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9533530628714065, 
        1.138443011992628}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9440985654153454}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9533530628714065, 
        1.138443011992628}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"GSLC\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.138443011992628`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05222910378777903`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "21.797100264604`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.711174987056816*^9},ExpressionUUID->"3eb42f91-0820-417d-af67-\
b29d3a9036cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
z9rr5jLxzvr/5WO3kw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
z9rr5jLxzvr/5WO3kw==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9453877114845008}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9568744690212868, 
        1.1866096197570073`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9453877114845008}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9568744690212868, 
        1.1866096197570073`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"GURU\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1866096197570073`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.06397471754420402`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "18.54810252092331`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.71117498778415*^9},ExpressionUUID->"052c6b57-0206-43b2-97ad-\
4bee9ee64015"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k4VfkfB/Ar8UuluYUGRZfUoIxLKsvQPZmxiyjTbgulcG0hu2vJElJj
KctFKU3pFhr1q1xKUomQJMWUJZ1L0lQoms98P3/leSyv5zznue/n/f18z/lS
cfNz8JjFYDC+wvd/v+GLY+lNU/jn2Ab4wQ0Ez1c2qLRSJ+YXgC1dfSWs9Ilb
G8F1NhH1lAwxYxxsvFNeiV5LnMk9QFPi11YYtC4gFp4Ez0ndpdktTjx2B+z5
vq6Xu5SY9Q5cmqrn8VGV2F7hIE0Zafes2SpN3JcDVhIqcGe0iZn14AV2Wuu4
esQcEXhQvW1PuSbmX+xDU4Veod0fFTE/B6whcV/4aRYxuxYc6rNddMeA2GUY
7Lvi784GDcwv40tT6iYmJVfw84TG4KWcvy78ip835gWe9nfU8VtELGD60ZSg
U/vZPjbmNQQv95L5n78W5vUAH/rgUCL24R3JmwFefH39UdODxK3SXJpaeIlV
7c0lZuiD3bODtcTkiNlu4Ed2p6/0sYhd0sCrGKsiA2dGSd6r4A9VZr7pJuQ6
a60/TfVyOk24asT2zuCKc0v9nTjEMcngCYeVVVKxxIJK8LbJ0J0r6oj7XoAV
5Yu9fa8Rc3cF0JRw7omQRSPE/ESwrHfZ6zhZnAcB2HvJZp9T83AenoPP9r1+
PiOHfUsE0lSGnW2p2ytyv5AH3uR5mx3YSDx2EXzgZfct232YvwusyhA3f7oR
888KoimVqJ+LTRZj/tXgZWan83OWEDP/BFsMd9AFItIH5wlY7x1z9G43Mfcb
uD0qeCj2FTFfI5imXt926zVmYP+O4AWrJUVSx8h1lzZwiZ1+4HQ99vsVfKRD
6WxGD7Fw5SGa2hrkbqD4mnjMHvzrzIS5D03MCgdLb/KQcPhMLJgE8zZt0Ovo
IO5bHkJTN5W0HU4PEzM3gRVUFH9gVWH+ULDmglK7qD2YvwSsk7SqfoMtMUMl
lKacHGaz2iKI2dZgE5ODtHck5g8GN4o9TXMpwvxF4OqacWs9d8zfBB5Y2GQ4
fI7Y3iKMpgKjt6r+7EkcEwB+H+Y4cdIM8+eDt3uVvr0+LSL574J/cpUZVMwk
Zr4Hb7F3ezzjScz3O0xTZlPu/Bgj4tY8sEpqmibHmZhxB/z5oezmJj4xexTc
n5swMa5H7CIfTlPX5NY1yLOIx7LBP+2xSpnQIWbVgUXy0z7Z2sT2NPi8qdrs
bBliwYYImlpTd3y9nTIx5xZ4ij23YKsjMfcN+LzZiHONP+ZdFElTuzKWDQu/
0CTvL+DnprMtlQTEDC+wqc5olHQ/ceYA2NLo7YhVD7HwhyiY1whvbbqTeMwA
fE2rRLIV87D2gqtu1E5J1ZLr9ungLuqhxSVP4r750TTlHPY+7HEgMXM9eH36
fff+NGKOK7jMyv/2YhNibiq4P1Kq0c6VmF8NltKto3Q2E7P1YqDf8ZG+/fnE
LnvAjsZVX9hhmP8I2Cd+u+wvuZj/CnjbqQOdJ1Mxf89/193FQybyiAUJsTR1
ebXFPQMe5r0E3jsRHF55FfN2g51qaoyftmDe2XHwPqkuUy3oxv4ugmVE4bpq
k5jvKXiOYfKDC7K43mI8mgqPHFLTSyDOXAWOPvtNXXMj9ncePFrBqzSIwPXu
ANvKZQ75hRDHzIBTuHa8qQxcf/V4mjoqtkj2cTTOqwN4pcyqSIXduN5fwJZr
n8xRLsf5XJEA6zEa9VHNGufTHlzeHpFzSAHn8zBYK9lUTmEesXACnDPtyhc5
4HyqJsLzZmd4gYkK5rUF3xve8rDnLq53CDjRK3iw+SVxTDG4QerkSMoE9sdK
oqmA/IHUmVfYn1XSd/1wg8D5N2R7Dd7geheCY+hT+oYDOK/3wN+Wl8sb4v0u
5kdoKla5/w9vaezTH9z5gsHSwz6Fp8CWqbo2J05j/gbwpIaTDMMe84+BN7Io
62bsQ+CbTFPNonMPxdZin7ng1ZJvGG0M3P+3we7slg/tvZh/BJxdmp3yWBLz
/5hCU7lC3cR9uH/ZQnC5Zldbixqu/1vwwFBn4yM25pVNhfXyCJL0MsO8JmDh
DaOQe9m4/jfBTzc4y+cewPUfArfE2qlmJ2LehWk0Jd9U3ac/H/MagfWs9je7
jGPfnuDom5NJsyRwHmCfUfmxBkVC7K91wVF4H/W4Vyo14/wagOfUD/eWleH8
uoOlpY2Y6r7Y91Hw772LvB8m4v6Zlw7PkzfjXQ47iFnrwOPNE/1T4TgPLuDW
9HV5osc4DylgfvMZ/RcXcb9VgcXNvf50wv3DWZMB6/3N23Ia54W7G+w6uMcq
Ep+X/CTwMYUsrtNmnOfL4EU9mYPK5jjPPWDNV3WFn1yw3x2ZkP/dAdHsOOw3
PvO7+8cqwDsGX2rk435jPQO7tIurXaWwf/Fj8L5TXbam1gn7jQUHN3DtREU4
DxfAeRUL960OxedvJ1jieop0cDrOAyML5qtwR00BD/Nrgg85fW5RxPcHuxx8
y+bQrCdJOB/t4DVqW7TkmzH/NLg+acg74CPm/+k4TR3e/SF+6/wR0mfr8e+u
C6bAyjcsavY7ket9aidg/uLzo4O1iJl24NtMh6w0JjEn7Hu3fgbrzHVPaKGx
T9U/YH/tK/v9QhbmtQGXW+ZWSv4f8x4C96YUjRfUYF4+WGni2Z2+e9jnsmw4
f56Jv1SYin1agtuGrF9JXcZ5DgTnsHcxXlZj/gJwR9z1q2ePYd+N4AhNnq51
LvZplgPvR7OtbcFc7JMLDppkRTz3w3k4CV56ON58nxfmb/je7HfggIQft20p
xD59cuG8KFeSvD8F5yEH/C3osWfWGcxfD75fXNTogf3Yi8DvVkTXdslj/4vz
aGqzvyhquyb2+we4u2rjjg457LcWbDle63XjNeYfBlez3d1cpcl1vsxJmop6
Ot/xwQ/YvzF4aff+f0KWEmcOgjUdCq9YUMRC5ik4T13KCJtxJB4zBN/+bbSp
cQsxywOsk57DElwkFrwGdws/LuRF4TxI58N++GdeY+lZzKsPftSh9nA7D/O6
gRWNQ+z3+hFz08C8poOpg+7EjHkFcN6/WWkT7krMXgu+3nC5WeBG7OIMvm9q
91drJ+ZPBi85mq1acx/zV4J7mHL9nc+wT91CmtrdVzP64RH2uQuc+2CvvI0M
nscSwf5Zx8olluN5UgA+3KvY/c8aPE8+B9u3lL1wZON5d3sRTRk+OtO7E8+P
rTzw2LIjr6KnMH8FuKli5xf5vzF/F9j7BPvGVz7mn8WH/1ekfokOyMB+Y8Cu
2d0OciGY9wl4wf317YOhmPcbeJds+JzDhti3RjGcDy48f8bH9eWcA+sO2RYl
47xw28CqXbfumq7A9f8Kdn5y/mLjNlz/lSVwno3sb4/VwLybwZ/iJ+XzdLHP
FvBAnNUmPXPscxIc5JnXeu4I5l1eSlNvF6aUCVJxHjaBpeYyZeKKMX8ouGYm
X7+4DufhE1gsoqtotBTnQeU0TR0vbxSq4bxxrMGFL31vmtpi/mBwLu9SvrU6
5i8CX9NO4Cfj/LGVz9BUXNWEePFu7NMCPF/GUnx/FuYPAFccafUrz8b8+eBl
ByVLxQcw/13wr8o2RpKnsd/fymgqSWqnbNKFkQ3/Aob7pis=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k4VfkfB/Ar8UuluYUGRZfUoIxLKsvQPZmxiyjTbgulcG0hu2vJElJj
KctFKU3pFhr1q1xKUomQJMWUJZ1L0lQoms98P3/leSyv5zznue/n/f18z/lS
cfNz8JjFYDC+wvd/v+GLY+lNU/jn2Ab4wQ0Ez1c2qLRSJ+YXgC1dfSWs9Ilb
G8F1NhH1lAwxYxxsvFNeiV5LnMk9QFPi11YYtC4gFp4Ez0ndpdktTjx2B+z5
vq6Xu5SY9Q5cmqrn8VGV2F7hIE0Zafes2SpN3JcDVhIqcGe0iZn14AV2Wuu4
esQcEXhQvW1PuSbmX+xDU4Veod0fFTE/B6whcV/4aRYxuxYc6rNddMeA2GUY
7Lvi784GDcwv40tT6iYmJVfw84TG4KWcvy78ip835gWe9nfU8VtELGD60ZSg
U/vZPjbmNQQv95L5n78W5vUAH/rgUCL24R3JmwFefH39UdODxK3SXJpaeIlV
7c0lZuiD3bODtcTkiNlu4Ed2p6/0sYhd0sCrGKsiA2dGSd6r4A9VZr7pJuQ6
a60/TfVyOk24asT2zuCKc0v9nTjEMcngCYeVVVKxxIJK8LbJ0J0r6oj7XoAV
5Yu9fa8Rc3cF0JRw7omQRSPE/ESwrHfZ6zhZnAcB2HvJZp9T83AenoPP9r1+
PiOHfUsE0lSGnW2p2ytyv5AH3uR5mx3YSDx2EXzgZfct232YvwusyhA3f7oR
888KoimVqJ+LTRZj/tXgZWan83OWEDP/BFsMd9AFItIH5wlY7x1z9G43Mfcb
uD0qeCj2FTFfI5imXt926zVmYP+O4AWrJUVSx8h1lzZwiZ1+4HQ99vsVfKRD
6WxGD7Fw5SGa2hrkbqD4mnjMHvzrzIS5D03MCgdLb/KQcPhMLJgE8zZt0Ovo
IO5bHkJTN5W0HU4PEzM3gRVUFH9gVWH+ULDmglK7qD2YvwSsk7SqfoMtMUMl
lKacHGaz2iKI2dZgE5ODtHck5g8GN4o9TXMpwvxF4OqacWs9d8zfBB5Y2GQ4
fI7Y3iKMpgKjt6r+7EkcEwB+H+Y4cdIM8+eDt3uVvr0+LSL574J/cpUZVMwk
Zr4Hb7F3ezzjScz3O0xTZlPu/Bgj4tY8sEpqmibHmZhxB/z5oezmJj4xexTc
n5swMa5H7CIfTlPX5NY1yLOIx7LBP+2xSpnQIWbVgUXy0z7Z2sT2NPi8qdrs
bBliwYYImlpTd3y9nTIx5xZ4ij23YKsjMfcN+LzZiHONP+ZdFElTuzKWDQu/
0CTvL+DnprMtlQTEDC+wqc5olHQ/ceYA2NLo7YhVD7HwhyiY1whvbbqTeMwA
fE2rRLIV87D2gqtu1E5J1ZLr9ungLuqhxSVP4r750TTlHPY+7HEgMXM9eH36
fff+NGKOK7jMyv/2YhNibiq4P1Kq0c6VmF8NltKto3Q2E7P1YqDf8ZG+/fnE
LnvAjsZVX9hhmP8I2Cd+u+wvuZj/CnjbqQOdJ1Mxf89/193FQybyiAUJsTR1
ebXFPQMe5r0E3jsRHF55FfN2g51qaoyftmDe2XHwPqkuUy3oxv4ugmVE4bpq
k5jvKXiOYfKDC7K43mI8mgqPHFLTSyDOXAWOPvtNXXMj9ncePFrBqzSIwPXu
ANvKZQ75hRDHzIBTuHa8qQxcf/V4mjoqtkj2cTTOqwN4pcyqSIXduN5fwJZr
n8xRLsf5XJEA6zEa9VHNGufTHlzeHpFzSAHn8zBYK9lUTmEesXACnDPtyhc5
4HyqJsLzZmd4gYkK5rUF3xve8rDnLq53CDjRK3iw+SVxTDG4QerkSMoE9sdK
oqmA/IHUmVfYn1XSd/1wg8D5N2R7Dd7geheCY+hT+oYDOK/3wN+Wl8sb4v0u
5kdoKla5/w9vaezTH9z5gsHSwz6Fp8CWqbo2J05j/gbwpIaTDMMe84+BN7Io
62bsQ+CbTFPNonMPxdZin7ng1ZJvGG0M3P+3we7slg/tvZh/BJxdmp3yWBLz
/5hCU7lC3cR9uH/ZQnC5Zldbixqu/1vwwFBn4yM25pVNhfXyCJL0MsO8JmDh
DaOQe9m4/jfBTzc4y+cewPUfArfE2qlmJ2LehWk0Jd9U3ac/H/MagfWs9je7
jGPfnuDom5NJsyRwHmCfUfmxBkVC7K91wVF4H/W4Vyo14/wagOfUD/eWleH8
uoOlpY2Y6r7Y91Hw772LvB8m4v6Zlw7PkzfjXQ47iFnrwOPNE/1T4TgPLuDW
9HV5osc4DylgfvMZ/RcXcb9VgcXNvf50wv3DWZMB6/3N23Ia54W7G+w6uMcq
Ep+X/CTwMYUsrtNmnOfL4EU9mYPK5jjPPWDNV3WFn1yw3x2ZkP/dAdHsOOw3
PvO7+8cqwDsGX2rk435jPQO7tIurXaWwf/Fj8L5TXbam1gn7jQUHN3DtREU4
DxfAeRUL960OxedvJ1jieop0cDrOAyML5qtwR00BD/Nrgg85fW5RxPcHuxx8
y+bQrCdJOB/t4DVqW7TkmzH/NLg+acg74CPm/+k4TR3e/SF+6/wR0mfr8e+u
C6bAyjcsavY7ket9aidg/uLzo4O1iJl24NtMh6w0JjEn7Hu3fgbrzHVPaKGx
T9U/YH/tK/v9QhbmtQGXW+ZWSv4f8x4C96YUjRfUYF4+WGni2Z2+e9jnsmw4
f56Jv1SYin1agtuGrF9JXcZ5DgTnsHcxXlZj/gJwR9z1q2ePYd+N4AhNnq51
LvZplgPvR7OtbcFc7JMLDppkRTz3w3k4CV56ON58nxfmb/je7HfggIQft20p
xD59cuG8KFeSvD8F5yEH/C3osWfWGcxfD75fXNTogf3Yi8DvVkTXdslj/4vz
aGqzvyhquyb2+we4u2rjjg457LcWbDle63XjNeYfBlez3d1cpcl1vsxJmop6
Ot/xwQ/YvzF4aff+f0KWEmcOgjUdCq9YUMRC5ik4T13KCJtxJB4zBN/+bbSp
cQsxywOsk57DElwkFrwGdws/LuRF4TxI58N++GdeY+lZzKsPftSh9nA7D/O6
gRWNQ+z3+hFz08C8poOpg+7EjHkFcN6/WWkT7krMXgu+3nC5WeBG7OIMvm9q
91drJ+ZPBi85mq1acx/zV4J7mHL9nc+wT91CmtrdVzP64RH2uQuc+2CvvI0M
nscSwf5Zx8olluN5UgA+3KvY/c8aPE8+B9u3lL1wZON5d3sRTRk+OtO7E8+P
rTzw2LIjr6KnMH8FuKli5xf5vzF/F9j7BPvGVz7mn8WH/1ekfokOyMB+Y8Cu
2d0OciGY9wl4wf317YOhmPcbeJds+JzDhti3RjGcDy48f8bH9eWcA+sO2RYl
47xw28CqXbfumq7A9f8Kdn5y/mLjNlz/lSVwno3sb4/VwLybwZ/iJ+XzdLHP
FvBAnNUmPXPscxIc5JnXeu4I5l1eSlNvF6aUCVJxHjaBpeYyZeKKMX8ouGYm
X7+4DufhE1gsoqtotBTnQeU0TR0vbxSq4bxxrMGFL31vmtpi/mBwLu9SvrU6
5i8CX9NO4Cfj/LGVz9BUXNWEePFu7NMCPF/GUnx/FuYPAFccafUrz8b8+eBl
ByVLxQcw/13wr8o2RpKnsd/fymgqSWqnbNKFkQ3/Aob7pis=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.8431904837111754}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.8513292138325894, 
        1.014103816260869}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.8431904837111754}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.8513292138325894, 
        1.014103816260869}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9273105046816433`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04568606999881272`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "20.297445254226115`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.7111749885616555`*^9},ExpressionUUID->"ae1d2805-595e-41bd-93f6-\
79ef7bdb4295"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nk8lPseB/BJuinJiEPLSbKnLC1KIp5OHEs0RVpwDBI322BkKYwwyjqR
ZayjKK3Goe3k1pQKp7rmqk6ONjmOlicXbSrK/fZ87z8/r5fl/fr95vl9ns/z
ZSwMiNwcpMBiscbh8/t3+LB33k1T+OOwHXzhxYCPm/Xov0JLKsHa+yPU7w0P
fbe8Dazuxz+Uq8iss96C59530Jr1D8YiXihN6ThrVRZPZSwrA/8YqD9Pfwbj
4Rtg6bKssylKjHWGwGpKXHVTVcacOWE0NTtpqbiRzbi3JIxYZ18HL5GGjkTM
Zmz/Jow4n6cZTpwvsQ8n8lpcBYvr13T7KzPmvgonzhOpR9CUbvcHSb0K5rcF
Zzi3Od7H6w8Hg9VL1mrZ/cBYyo6kqTk8DR8HfcxrDV6swZMOG2DeIHBTs2us
gS7mzQcr/nui/8tx7FOFR/TDsuIR6xYB4CeqWtefVTHm5oBZotD3FU8Zi86D
w2RT/Kk+xjqWUTT1+s++/rP9jDl+YMWzxuOy14wFB6OIPqRNUWTfT8BfktRs
VWdhnz7RxH6JELw6YH3cremM5VJwuF6SuZUW5n8UTdyPxZQYmnJpyHZTw3VZ
GnjuDHZlqyb2eSaGOF+nG2z08df6O3NwHhT4NNXa0X7zynzGgiVg09B0s03z
sN9TfKJv+wdg96LkzrT/55/gE+dJFsXSlPlUQWQnPl+5RyxxPW5XLDkP42CD
6iqTMHy+MsM9NHWhSynJ2Qzzc8ArZutYZ5pi/r1g06PuzQpLsN/PYKuVT6hT
q7FfvTiaWnZNucXQCvO7g1ce/2YrXo7548FGZklmySaY/wh4Ucah008XYL8L
4yHfuTHtwIXYr2s80Tc3FqwrWTxvdBznoxr8g+P7ydndjGUd39ctSlQPP8L5
cEqA32+Tu7UvcD4F0WB2rdk2Lt6PtALcePe2grE75r8Fts3Z2Snwwvwj4AE1
j+jfN2C/kYk05cU9OVDgg/2Kwe6Hb/SdCcL8N8Ce04pDlgVj/v+S5s7eS+wf
Lgb7v7Pir9mN/V4Db5WvffshCeeDBm838uB5xWBeu300xatNn6aUjn1eAfs6
sOMTU7DPl+Dd5k1pafsx76wkYr/cBhwmbJvUH4d5g8EzMi4E7uLjPPwNzpMH
v3MvwnlQTaYpbt358Lx6zLsanH273yP0JObd+X19Y1bKeC3mzQM323Sc3IOv
752RQlNdtvsvPK/BPleBK/TNS2tPYH5/cKDp8vGlpzB/NniGZbKHpwTznwM7
LEkculWFfa4QENfj/gJuaOjYN3Qc8x8At7n4Jqfi9WS/gsWOwnmRRzH/Y/Cy
mmfT9+H1pRmpNDWpNENJeAbzNqQS57F7wOtqv3L1KjCv4n6Y38XX+rwLsL8z
4N839s4PKsZ8D8EXfrYz7mnAfJPSYH4vF5VebsJ8i8G7rE4kFN3E/k6Cuw1r
GhOvY3/3wXO4A9MdcV3wDTxLu9JtUIZ5jdNpim5cU3wT3bsZ/M65kZK2Y19j
pOUGGTTlum7X69x7mJcDTl8dIGR1Yd5E8DTf9uaqDuzrE9jbId3eshP70hXC
/l3mmWYDmNcNrOHVezt5CPPGkRbUgN3dHgePDGJ/Opnw92iDnrfwOfbnAv7n
TwtGPz3D580Hf/Q0uqr+F+avItfl7eAjwS8LxW+xz58P0JR9l7Vk8D32GQWe
veKgU/MHzF8ODnMv4vt8wfw3wZ/9Km3ivmL+YfBTm9zT1Cj2GXEQ5mGruPvV
GPZZCvZ2jdM+9w3zt4JlITUSxQnMPwget3W8dHryCJNfK4tYt5CBOds2/+2p
xKxzX4Mjtiu/varBWKSRTVOWAapebpqMZWtJc/4Fjl7VHPFhLmPBC7DnyjH/
rJmMpWo5NOUR2B5wUZdx7xrS7F3g53y5yT0DxpJ+8NywO7cc9BnLZ+YSZq3O
JV5vEUiuc3PBuTtufDNZyHhYOY+mKn37PLt+ZKyzEmzmVijWNcT8XPAp7yTl
YlPMnwVOeaa7ysgY8zfnEfnsl+fD3zsq6tkgrvN884k+JZngVkeX+dZTMH9j
PtEv63E+8fxEO0TE62Xp4NYYLe2QOZj/rIi4H50/RcT9ciYfoqmonamReubY
b+ohYj/7NHjCqWUlWxvz/0Gaxyog+pSYFBDrFifAhbJX0xRNsN97YOMX4XnO
83E+voLHd6v/1qOF82FUCO+fluu2LFDAPuWFxHxIvxQS89Orf5imtPy9nPum
Yd6Nh4n7sU8Az3eJ/Wkvni8fBfMjR98InbFP3SKaWutVe9d5E+bdAK4bc3lq
44l595AWScBT/OqXPtyMfS4opimF1Inmmg3YpzN4TfwYR8MV88eAnye2Knls
wfyV4O0Jzb4pWzF/G3ggq8WgbAf26VhCrEt4YBU3l9sev2D+shJiP+sm2Ger
b0+zL+YfAhfwpJ9H8DxZeClNFbtv32Pkg/NQAn4dEnSkk4v5r4PvBJ8u2on3
x3lD7hdoion97CJw4bsTLxvDsd+rYL1cMzteDOZ/BTYMfXi5LgHzq5fRFJX3
wvVRCua3Bav32jzcsRf7HCDXZexymppaQjeEpGJea7By7OElVZmYN6ic2C/9
C7w+TNTOFmKfKhXEfrYVOCkwZ2daOuYNAJcKK95fzMK8OWCdA6eqcw5gn8qV
NOWXL9nmmIN9WoIfeFMq/vk4D36kRQfB/0kqFS0+iPmbwGqPLq2KE2Gfy6po
ShCh0DdQhX36gKcf8Te9U475heAn785fdC3B/FLwerFvx9oyzP8IPKrZ5pRa
iX1ur6ap+wdmzsw/in2mgYeSN1UWF2H+s2Djo3OtV9Vj/u5qMr+ChKbOZ26Z
pI/nDQskxPU4D8ABZZp/nDiGeSckRJ/SRTXEfvv6GuI8XhdpyThYUN7Zp9GE
eQ2PwPtfMK/E/Dzm3QRu4fHHWi5gn53gtIR4P5dL2OdnsMv+fa0Pf8O8ekcJ
67iT5sST7v0InjlZUXwNr8deWEtTg8fKv/Vewfyu4JA0S/m6NswfW0vkkVSD
g+pyPFSuYZ/adfD/dLbAKKgF+3QC90SZKhnfwPzR5Lqsoo64/vAtcNoxB278
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
7t8W8A5hv4zp9aW0j3guLEiYcnvTAO17BhY6f7JUo+N5PIflk45OE/ZR/yc4
cPI9OQt6PyoNMljmzsqKJxca6XyQwpukcUfTqEfyN6xf9d/Noyz16mXi+yro
oZtdK/Wuh7dZL/IuofefHwn/fnfxbGfqlQ7D1xX/bhuvyu3Pm3kYv5cuuPfo
fcPZaC2cEOHkoEv22AG3mSv6/EFOF8N7d9spXNbgrDs9C/tll/Gb6fls1sA7
nxUXZqjR+RAK+zlm1l1Wp/PhKBxl7aKYMonO52pYVcl/rtVMOh9+ymaZk9Wq
L6JncBYL4HkxZVfi6HZpHvxY6NuTpkP99+Ch/ee1ZNOovw+2SnT0X6HJuXJ7
DsvkLDaUmc/m3J8Nj7YVidX1qf8OfM0rd9xLJervhfP9ghSk9PpEmrnomxp8
eyMdX/UwHGBfPG+3MZ3Pt2Bnhay2vEXU/yfccKzXLJChfvU8/P6YLr/xNzvq
N4cnl5v7R1vTnp2wzMS2/v0G6lXNx/X35ln7s87UawrrXBSUfrWFen3h5pgA
p2nbaM9XsErEvfE3AmjP8UdYZozvgvpqur/qYtjU5YdQUz/q9YJ7W55Gt3hS
bwrsp73CvMiL9lQ+yjJyKunerfR4owXw/aXv/P3peB7ucLTCNklhMPUnw1G+
8XpzAqn/IrzGjd88Npz2NC5gGWOHZTc+JdKeLrBq8vLghVHUnwCLeL89H6b7
yySwhaT38bsQ6m+CVcqP8OyFtKfTMfz+CeC/cqLHS+Pg71omGZ7yof4ymD8x
7z9h9HijBtjywk5rDVvqlxPj+7pk84zBjbSvCI7Y8SR2P+1j8wIWZunVXPSl
3s/w26vrVg2vpF7D4/j+fpTxdYAr7VkMD9U6DIvo/RLUwDzjhVvkHal3BJ4Y
5vlgK+0p1S/E9/eNpOjhrdRrCyvlzrSOiKQ9n8K9OgvmtJIr/4J5lZOnBkdT
76wT6A1yvFm2l86Hdf+2jRDuTXAffBNHe76HhbYPc3x30Z4zTrLMuJbIMyax
1G8FM3r253ftp/5weGWMln1BKvUfg6uKHi22TKE9dYpwPtmdEf1I9rCEa8eE
Nz7PoP4QuEn5QGvIAeo/Akua/J7Jsqj/Przhpsv8qHzad9UpfF5+UFVYXTiw
7P8LkbKY
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9311543119113761}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.1134215179837934`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9311543119113761}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.1134215179837934`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.10211850726329`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03882053609511283`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "28.390089837065315`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.711174990048379*^9},ExpressionUUID->"9bd7ad89-f3a2-4916-8f09-\
9469ea1d958d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9440985654153454}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9533530628714065, 
        1.138443011992628}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9440985654153454}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9533530628714065, 
        1.138443011992628}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"GSLC\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1259322649882106`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04425315614730643`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "25.442982218947183`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.7111749913629074`*^9},ExpressionUUID->"364f02e9-9e8e-4a21-afc1-\
9426649bdfb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
gkfY75ZCeN4H1ENjno9Z/A9T6qSo
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9299032372109344}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.138443011992628}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9299032372109344}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.138443011992628}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"GSLC\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1146292542677074`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.047080116021321464`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "23.675159461436294`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.711174992700119*^9},ExpressionUUID->"932a6cfb-c5e6-44f3-9531-\
a891d39c9507"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
u/1Vdc+6/wELJ7d+
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9299032372109344}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.138443011992628}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9299032372109344}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9398337026767292, 
        1.138443011992628}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"OUSA\"", "\"GSLC\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1142266755064025`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04326382661654876`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "25.75423310059684`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.7111749946052527`*^9},ExpressionUUID->"4c23380e-1890-4d84-b252-\
41bb7e19adb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
z9rr5jLxzvr/5WO3kw==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt1glYTPsbwPHRXorpSpY/Sm6I1KBd0aFwK5pcy8MtMiSkjEiLJKW9lEhR
WlAqmiZtltJiigijuqRFQ0U6LTNRynrffu/f81g+zzlnfM97fuc3zeUc3uQi
xWAwfsDv8b/hl+VfB2kK/yleBX9wj4KPbvOVq5IjTr8CNmtQWxJLD45b+Gjc
KnlfzRTIccYQ+BCn+J2jCnEc142mlL09hG7TiCsvg6UaNQv78PPEAnB4T0ea
ryyx5iB4Um3uvQ5VYvaMQzTVMvytup1JLEoED/MESd6TiZnV4M0tHqL3s4gt
+8AJ3r1ZfmOkj6vuTlNtbyau/P6FON0SrOvQaB3bQ8yqADsppz0dliHXO38C
r3S09nSQxv4pHjRV1X+1bv4Pcn6lBfgkL+AOC+cjdgXnZicyrLCXzzxMUzsr
uKXv52KvGfh2foJM/DzsdQGLM3bGN+A8LGPBNZrP00K9cJ4qXJr6syzAorCV
mGEClinjPzLbj70ccN2pPV5TdhM7R4PbG/NtmDziuJLx83+F9GQnEGsaHqGp
GTadfvapxOxdYEpumsWFy8SBEeCAGZlvr4uI+YXg/7XPPB6uiP3t4EoZaeGj
bzhPR0+ampm44YRONc4zFBwQd//aqS7s54Plfe868vH5MlrBXjGzuWsasV/2
KE3tfZX8UCyF6yEYPFzV2OU+SI6L88ChOzddan2J/c3jxwN32QeNYL/UMZgX
Xd/37Cv264INjQqHEzuJmTfBzrcqPx7E52f5LzjlnkRFmIX9v8EtOc/FasXY
r+NFUyV+bvV6l7D/b7Bi32tZSTrOtwHck3vnk34YzvcHWFnngZvLU1wP84/T
1Nj6tZE9uJ7EbPAOfp7eBezRPAE2cbHTbMPj/DGwWmiIJk8J5zvPm6YO3hql
tXF9MjeC1dgzp6sKiS19wFwN96rKIuy/Cu63M+m9cxPXx1wfmvKMYjm0ZON8
bcHFM127Q49gvxdYav7MkOUm2J8GFr8c4X75NUD668C5HUv2KSvgfNf70tRP
VamOK3j/gZ5gi6XBm0orsD8FPEcUZe6O76uoFrw+XLAuE82UgG0qT39JnID7
xWE/msrz4khmKBMLL4F9Pm66fhbfB4YAbHJNUhqlRcwaADtMkQy+N8L3cfoJ
eL8fbxT91sf37SI48+TNpQVWuF9UgVPKm/Iq7HG/oMEKntbFvRvwfVzlD8+7
Zu2BXEdcDw/AJRcPGe6zxf2tB7zU59zSn3h9+h8nYT2VWowlrcRec7D7mg9e
mf/vdQULqp87uS/G/aEbHB+147WuHa7nyQE0ldyU8UZpD/aagmd35Fy/Eo69
e8HltDSHjsDes+DoaQ+qO2NwnsqnaKpeSZFtj+czjcHccwq7D6Vi/25whtMs
Sh6Pc6PALA1/Kw+8Pr0YXHZEy876LM7TIJCmbsk6LiyIx3nuBGtcyixLTsH+
cPDtlC07byRj/22wqNGsMT4K+9vAW7ymlvTh9fyQ0/A81dqDcrFHlA+eFjHb
bWsw9raADUxeNU0PwF6ZIHgevi7JtR44v7yg8ffftOjGGex7De70UciUyca+
CcE0ZX3jzD+x6LjF4LrAbWyjUpxfLngov992FQ/n1wQ+vWKyjQefOPAX2O5T
RkpQIfYuPENTT5THFMJysXcTOH52ScjCYpzXd3Bd3lTFEfw8oXYITe1XX79l
0x3sZYPNMwQmK29hrx/Yy5i3WvE2zmsULPydJa+bj/PSCoX/r9VdmP0MezeA
373QWtv+EXu9wXozAmLae7A3A7xjWd2+7yKcn2YYTb180RXd/QTnZwM2Vz/c
ES7E530MHCSY+1KrCftTx893dA0/14z9j8HPp19LMPyC81wXDu9nWZeUaT/O
8whYsProFMdB7E8GH5GOXsDA88U1YKHqjIMqyhLSLwYrvR5dJqtGzPeIgP3F
O7ppqSaxKAksJb+mYqoeMfMh+GrWgWvsFcSW/eCnWjHVtsbE3GmRNPVhbF3d
SwtiViV4dYB/qcFmYude8MLvmYVG6Di1KPi+vR/n37mRuHIlWKxbIueznZhd
Dvaf5dNbziEO/AieUGKcmGqPvarRsF/+cpn85BT2rgALqrQXZ3tg7z6wScuU
p8zDxOld4BhFp7g7LsTCSTHw8wCjTCd2CzHDFDziIhuivwH794DzXum7NGGf
cwy4i3HLNm0rsXjiWfg+dxbRms44TyNww3FXgQ3eH9sZzFlotHfIE/sjwYe8
171c4Y79ReDizmP7/96P81weS1O/Kh7sOYD3y3UCsz14wQ8XYH8YeCQreU7R
cuwvAId7Fm+TN8D+NrBh/r3eNH2c74442C90ShrCdHG+Z8AtTxJL8vD+xDyw
bl64fTbev+YbcHveQAPHCfulz9FUqWXhQPoOnO9psKLR+YhuO5zvLbBrW3DI
mDX2vwJHrhjgScyxnxFPU7U7+P+42mD/IrBp4RL2D7yelQN+f1b27gecp3Mj
uHO01cCLjf0/wZFJOeei12D/gvM0pUWZnHivg/MUgict1+87aYXz/AY2czMe
+Iw9oj8v0NT0NbWzEnE9Mu3BEXo9q9n7sNcXvHF+gUYY3q/wK3h4skzVogic
p1YCzPN5je2+VOy1Aw/tWk/dT8He4+CJu1XOz7qBvenga2+L/GMv4zw1LsL9
fS5bJ3MV5/kXOKdge74Lfl7gUTBD0t24PwH7r4CjS+8NLsPPFz0C84rWmE29
jfNcm0hTqXXb4hwycZ5csGCeUR9VgP2XwbZJ1TXbS7C/BlyuI2EH4nHWIHjL
8leJ/Xh9pXsSfF4xbW12H9dDIvixzxyZtnLsrx73ohxf9WDs7wMft+24Kx+P
/eqXYD/gjHZo4+czE8BDKo/eHK7B+VaABw1O5jysxf5P4Jbd1fPdhdg/5TL8
PKdteybtLfZbgNNqu6w723GeH8DbebxLH99gLzOZptQXhEmrtGKvGZgzWFk7
9gN7XcD+VYMJHLkhMs9OMMunmF8ygVikkkJTq+pDk1q+Yq8JuJobW+L0DXs5
4OY3h4KiR7A3Guyk98uioB/nOfEK7Ifmeo8ffMR5GoIlgUqU9iiuh13gpm+q
QQpD2B8Brs92mH29B/sLwVbakcn63TjPZamw3j5HpTbJk75AR/An3labPZ9x
PYSCk56XXzRHi/jguGY7D2fsZbaCB5rUFvvi/advT4PvZ410CQvvVxgMrvCS
ltvZif08MPXMb9gDj7OawVlfGgS8D9gvlQ69rkbvAgZwvoFg09waWdVh7P0X
zPAWW7Z/x+f/e/z87Sp+D5qxVycD3qdewc0unK9lNpjpzO51wj5uA/jxH5Kn
G8aw9we417NIfUgde+dfpakvRcZFDzWIGQ5g7UnqJ0aXEMe9ADPCpLWmLiKu
HAMrLcqarYbHxfOu0dTUo7Y5xauINTeC/VmR39tNidk+YO07+9umGeF6GAEz
uJz234bEzLnXaUqu/vJokSWxpS14rueK5aMUMdcLbBdV/8LOgDg9Dbylamu+
Nl7PmpMJ389uruyfLGLn9WDJbitVJXPs9wQ3D482xpthfwpYYeMym25j7K8F
b3bjcsVWuB6ss2A/zqxtyNk6tOo/WGrPBA==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.9416902350271266}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9533530628714065, 
        1.1866096197570073`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.9416902350271266}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.9533530628714065, 
        1.1866096197570073`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"GSLC\"", "\"GURU\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1461580499111428`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05077846140105377`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "22.57173648604007`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.711174996688937*^9},ExpressionUUID->"c084d8c4-5151-4f3b-9924-\
eb7be8945ff0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k4VfkfB/Ar8UuluYUGRZfUoIxLKsvQPZmxiyjTbgulcG0hu2vJElJj
KctFKU3pFhr1q1xKUomQJMWUJZ1L0lQoms98P3/leSyv5zznue/n/f18z/lS
cfNz8JjFYDC+wvd/v+GLY+lNU/jn2Ab4wQ0Ez1c2qLRSJ+YXgC1dfSWs9Ilb
G8F1NhH1lAwxYxxsvFNeiV5LnMk9QFPi11YYtC4gFp4Ez0ndpdktTjx2B+z5
vq6Xu5SY9Q5cmqrn8VGV2F7hIE0Zafes2SpN3JcDVhIqcGe0iZn14AV2Wuu4
esQcEXhQvW1PuSbmX+xDU4Veod0fFTE/B6whcV/4aRYxuxYc6rNddMeA2GUY
7Lvi784GDcwv40tT6iYmJVfw84TG4KWcvy78ip835gWe9nfU8VtELGD60ZSg
U/vZPjbmNQQv95L5n78W5vUAH/rgUCL24R3JmwFefH39UdODxK3SXJpaeIlV
7c0lZuiD3bODtcTkiNlu4Ed2p6/0sYhd0sCrGKsiA2dGSd6r4A9VZr7pJuQ6
a60/TfVyOk24asT2zuCKc0v9nTjEMcngCYeVVVKxxIJK8LbJ0J0r6oj7XoAV
5Yu9fa8Rc3cF0JRw7omQRSPE/ESwrHfZ6zhZnAcB2HvJZp9T83AenoPP9r1+
PiOHfUsE0lSGnW2p2ytyv5AH3uR5mx3YSDx2EXzgZfct232YvwusyhA3f7oR
888KoimVqJ+LTRZj/tXgZWan83OWEDP/BFsMd9AFItIH5wlY7x1z9G43Mfcb
uD0qeCj2FTFfI5imXt926zVmYP+O4AWrJUVSx8h1lzZwiZ1+4HQ99vsVfKRD
6WxGD7Fw5SGa2hrkbqD4mnjMHvzrzIS5D03MCgdLb/KQcPhMLJgE8zZt0Ovo
IO5bHkJTN5W0HU4PEzM3gRVUFH9gVWH+ULDmglK7qD2YvwSsk7SqfoMtMUMl
lKacHGaz2iKI2dZgE5ODtHck5g8GN4o9TXMpwvxF4OqacWs9d8zfBB5Y2GQ4
fI7Y3iKMpgKjt6r+7EkcEwB+H+Y4cdIM8+eDt3uVvr0+LSL574J/cpUZVMwk
Zr4Hb7F3ezzjScz3O0xTZlPu/Bgj4tY8sEpqmibHmZhxB/z5oezmJj4xexTc
n5swMa5H7CIfTlPX5NY1yLOIx7LBP+2xSpnQIWbVgUXy0z7Z2sT2NPi8qdrs
bBliwYYImlpTd3y9nTIx5xZ4ij23YKsjMfcN+LzZiHONP+ZdFElTuzKWDQu/
0CTvL+DnprMtlQTEDC+wqc5olHQ/ceYA2NLo7YhVD7HwhyiY1whvbbqTeMwA
fE2rRLIV87D2gqtu1E5J1ZLr9ungLuqhxSVP4r750TTlHPY+7HEgMXM9eH36
fff+NGKOK7jMyv/2YhNibiq4P1Kq0c6VmF8NltKto3Q2E7P1YqDf8ZG+/fnE
LnvAjsZVX9hhmP8I2Cd+u+wvuZj/CnjbqQOdJ1Mxf89/193FQybyiAUJsTR1
ebXFPQMe5r0E3jsRHF55FfN2g51qaoyftmDe2XHwPqkuUy3oxv4ugmVE4bpq
k5jvKXiOYfKDC7K43mI8mgqPHFLTSyDOXAWOPvtNXXMj9ncePFrBqzSIwPXu
ANvKZQ75hRDHzIBTuHa8qQxcf/V4mjoqtkj2cTTOqwN4pcyqSIXduN5fwJZr
n8xRLsf5XJEA6zEa9VHNGufTHlzeHpFzSAHn8zBYK9lUTmEesXACnDPtyhc5
4HyqJsLzZmd4gYkK5rUF3xve8rDnLq53CDjRK3iw+SVxTDG4QerkSMoE9sdK
oqmA/IHUmVfYn1XSd/1wg8D5N2R7Dd7geheCY+hT+oYDOK/3wN+Wl8sb4v0u
5kdoKla5/w9vaezTH9z5gsHSwz6Fp8CWqbo2J05j/gbwpIaTDMMe84+BN7Io
62bsQ+CbTFPNonMPxdZin7ng1ZJvGG0M3P+3we7slg/tvZh/BJxdmp3yWBLz
/5hCU7lC3cR9uH/ZQnC5Zldbixqu/1vwwFBn4yM25pVNhfXyCJL0MsO8JmDh
DaOQe9m4/jfBTzc4y+cewPUfArfE2qlmJ2LehWk0Jd9U3ac/H/MagfWs9je7
jGPfnuDom5NJsyRwHmCfUfmxBkVC7K91wVF4H/W4Vyo14/wagOfUD/eWleH8
uoOlpY2Y6r7Y91Hw772LvB8m4v6Zlw7PkzfjXQ47iFnrwOPNE/1T4TgPLuDW
9HV5osc4DylgfvMZ/RcXcb9VgcXNvf50wv3DWZMB6/3N23Ia54W7G+w6uMcq
Ep+X/CTwMYUsrtNmnOfL4EU9mYPK5jjPPWDNV3WFn1yw3x2ZkP/dAdHsOOw3
PvO7+8cqwDsGX2rk435jPQO7tIurXaWwf/Fj8L5TXbam1gn7jQUHN3DtREU4
DxfAeRUL960OxedvJ1jieop0cDrOAyML5qtwR00BD/Nrgg85fW5RxPcHuxx8
y+bQrCdJOB/t4DVqW7TkmzH/NLg+acg74CPm/+k4TR3e/SF+6/wR0mfr8e+u
C6bAyjcsavY7ket9aidg/uLzo4O1iJl24NtMh6w0JjEn7Hu3fgbrzHVPaKGx
T9U/YH/tK/v9QhbmtQGXW+ZWSv4f8x4C96YUjRfUYF4+WGni2Z2+e9jnsmw4
f56Jv1SYin1agtuGrF9JXcZ5DgTnsHcxXlZj/gJwR9z1q2ePYd+N4AhNnq51
LvZplgPvR7OtbcFc7JMLDppkRTz3w3k4CV56ON58nxfmb/je7HfggIQft20p
xD59cuG8KFeSvD8F5yEH/C3osWfWGcxfD75fXNTogf3Yi8DvVkTXdslj/4vz
aGqzvyhquyb2+we4u2rjjg457LcWbDle63XjNeYfBlez3d1cpcl1vsxJmop6
Ot/xwQ/YvzF4aff+f0KWEmcOgjUdCq9YUMRC5ik4T13KCJtxJB4zBN/+bbSp
cQsxywOsk57DElwkFrwGdws/LuRF4TxI58N++GdeY+lZzKsPftSh9nA7D/O6
gRWNQ+z3+hFz08C8poOpg+7EjHkFcN6/WWkT7krMXgu+3nC5WeBG7OIMvm9q
91drJ+ZPBi85mq1acx/zV4J7mHL9nc+wT91CmtrdVzP64RH2uQuc+2CvvI0M
nscSwf5Zx8olluN5UgA+3KvY/c8aPE8+B9u3lL1wZON5d3sRTRk+OtO7E8+P
rTzw2LIjr6KnMH8FuKli5xf5vzF/F9j7BPvGVz7mn8WH/1ekfokOyMB+Y8Cu
2d0OciGY9wl4wf317YOhmPcbeJds+JzDhti3RjGcDy48f8bH9eWcA+sO2RYl
47xw28CqXbfumq7A9f8Kdn5y/mLjNlz/lSVwno3sb4/VwLybwZ/iJ+XzdLHP
FvBAnNUmPXPscxIc5JnXeu4I5l1eSlNvF6aUCVJxHjaBpeYyZeKKMX8ouGYm
X7+4DufhE1gsoqtotBTnQeU0TR0vbxSq4bxxrMGFL31vmtpi/mBwLu9SvrU6
5i8CX9NO4Cfj/LGVz9BUXNWEePFu7NMCPF/GUnx/FuYPAFccafUrz8b8+eBl
ByVLxQcw/13wr8o2RpKnsd/fymgqSWqnbNKFkQ3/Aob7pis=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
zf+Rc/DqbJYZO9Dg5Dv53fL/A5kzyZk=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.8369735239245876}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.8513292138325894, 
        1.138443011992628}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.8369735239245876}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.8513292138325894, 
        1.138443011992628}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"PUTW\"", "\"OUSA\"", "\"GSLC\"", "\"TLT\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0674976328002128`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03003986979324708`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "35.53602729130952`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.711174999415848*^9},ExpressionUUID->"9cb2a090-d43f-488a-873b-\
35e601b506a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nk8lPseB/BJuinJiEPLSbKnLC1KIp5OHEs0RVpwDBI322BkKYwwyjqR
ZayjKK3Goe3k1pQKp7rmqk6ONjmOlicXbSrK/fZ87z8/r5fl/fr95vl9ns/z
ZSwMiNwcpMBiscbh8/t3+LB33k1T+OOwHXzhxYCPm/Xov0JLKsHa+yPU7w0P
fbe8Dazuxz+Uq8iss96C59530Jr1D8YiXihN6ThrVRZPZSwrA/8YqD9Pfwbj
4Rtg6bKssylKjHWGwGpKXHVTVcacOWE0NTtpqbiRzbi3JIxYZ18HL5GGjkTM
Zmz/Jow4n6cZTpwvsQ8n8lpcBYvr13T7KzPmvgonzhOpR9CUbvcHSb0K5rcF
Zzi3Od7H6w8Hg9VL1mrZ/cBYyo6kqTk8DR8HfcxrDV6swZMOG2DeIHBTs2us
gS7mzQcr/nui/8tx7FOFR/TDsuIR6xYB4CeqWtefVTHm5oBZotD3FU8Zi86D
w2RT/Kk+xjqWUTT1+s++/rP9jDl+YMWzxuOy14wFB6OIPqRNUWTfT8BfktRs
VWdhnz7RxH6JELw6YH3cremM5VJwuF6SuZUW5n8UTdyPxZQYmnJpyHZTw3VZ
GnjuDHZlqyb2eSaGOF+nG2z08df6O3NwHhT4NNXa0X7zynzGgiVg09B0s03z
sN9TfKJv+wdg96LkzrT/55/gE+dJFsXSlPlUQWQnPl+5RyxxPW5XLDkP42CD
6iqTMHy+MsM9NHWhSynJ2Qzzc8ArZutYZ5pi/r1g06PuzQpLsN/PYKuVT6hT
q7FfvTiaWnZNucXQCvO7g1ce/2YrXo7548FGZklmySaY/wh4Ucah008XYL8L
4yHfuTHtwIXYr2s80Tc3FqwrWTxvdBznoxr8g+P7ydndjGUd39ctSlQPP8L5
cEqA32+Tu7UvcD4F0WB2rdk2Lt6PtALcePe2grE75r8Fts3Z2Snwwvwj4AE1
j+jfN2C/kYk05cU9OVDgg/2Kwe6Hb/SdCcL8N8Ce04pDlgVj/v+S5s7eS+wf
Lgb7v7Pir9mN/V4Db5WvffshCeeDBm838uB5xWBeu300xatNn6aUjn1eAfs6
sOMTU7DPl+Dd5k1pafsx76wkYr/cBhwmbJvUH4d5g8EzMi4E7uLjPPwNzpMH
v3MvwnlQTaYpbt358Lx6zLsanH273yP0JObd+X19Y1bKeC3mzQM323Sc3IOv
752RQlNdtvsvPK/BPleBK/TNS2tPYH5/cKDp8vGlpzB/NniGZbKHpwTznwM7
LEkculWFfa4QENfj/gJuaOjYN3Qc8x8At7n4Jqfi9WS/gsWOwnmRRzH/Y/Cy
mmfT9+H1pRmpNDWpNENJeAbzNqQS57F7wOtqv3L1KjCv4n6Y38XX+rwLsL8z
4N839s4PKsZ8D8EXfrYz7mnAfJPSYH4vF5VebsJ8i8G7rE4kFN3E/k6Cuw1r
GhOvY3/3wXO4A9MdcV3wDTxLu9JtUIZ5jdNpim5cU3wT3bsZ/M65kZK2Y19j
pOUGGTTlum7X69x7mJcDTl8dIGR1Yd5E8DTf9uaqDuzrE9jbId3eshP70hXC
/l3mmWYDmNcNrOHVezt5CPPGkRbUgN3dHgePDGJ/Opnw92iDnrfwOfbnAv7n
TwtGPz3D580Hf/Q0uqr+F+avItfl7eAjwS8LxW+xz58P0JR9l7Vk8D32GQWe
veKgU/MHzF8ODnMv4vt8wfw3wZ/9Km3ivmL+YfBTm9zT1Cj2GXEQ5mGruPvV
GPZZCvZ2jdM+9w3zt4JlITUSxQnMPwget3W8dHryCJNfK4tYt5CBOds2/+2p
xKxzX4Mjtiu/varBWKSRTVOWAapebpqMZWtJc/4Fjl7VHPFhLmPBC7DnyjH/
rJmMpWo5NOUR2B5wUZdx7xrS7F3g53y5yT0DxpJ+8NywO7cc9BnLZ+YSZq3O
JV5vEUiuc3PBuTtufDNZyHhYOY+mKn37PLt+ZKyzEmzmVijWNcT8XPAp7yTl
YlPMnwVOeaa7ysgY8zfnEfnsl+fD3zsq6tkgrvN884k+JZngVkeX+dZTMH9j
PtEv63E+8fxEO0TE62Xp4NYYLe2QOZj/rIi4H50/RcT9ciYfoqmonamReubY
b+ohYj/7NHjCqWUlWxvz/0Gaxyog+pSYFBDrFifAhbJX0xRNsN97YOMX4XnO
83E+voLHd6v/1qOF82FUCO+fluu2LFDAPuWFxHxIvxQS89Orf5imtPy9nPum
Yd6Nh4n7sU8Az3eJ/Wkvni8fBfMjR98InbFP3SKaWutVe9d5E+bdAK4bc3lq
44l595AWScBT/OqXPtyMfS4opimF1Inmmg3YpzN4TfwYR8MV88eAnye2Knls
wfyV4O0Jzb4pWzF/G3ggq8WgbAf26VhCrEt4YBU3l9sev2D+shJiP+sm2Ger
b0+zL+YfAhfwpJ9H8DxZeClNFbtv32Pkg/NQAn4dEnSkk4v5r4PvBJ8u2on3
x3lD7hdoion97CJw4bsTLxvDsd+rYL1cMzteDOZ/BTYMfXi5LgHzq5fRFJX3
wvVRCua3Bav32jzcsRf7HCDXZexymppaQjeEpGJea7By7OElVZmYN6ic2C/9
C7w+TNTOFmKfKhXEfrYVOCkwZ2daOuYNAJcKK95fzMK8OWCdA6eqcw5gn8qV
NOWXL9nmmIN9WoIfeFMq/vk4D36kRQfB/0kqFS0+iPmbwGqPLq2KE2Gfy6po
ShCh0DdQhX36gKcf8Te9U475heAn785fdC3B/FLwerFvx9oyzP8IPKrZ5pRa
iX1ur6ap+wdmzsw/in2mgYeSN1UWF2H+s2Djo3OtV9Vj/u5qMr+ChKbOZ26Z
pI/nDQskxPU4D8ABZZp/nDiGeSckRJ/SRTXEfvv6GuI8XhdpyThYUN7Zp9GE
eQ2PwPtfMK/E/Dzm3QRu4fHHWi5gn53gtIR4P5dL2OdnsMv+fa0Pf8O8ekcJ
67iT5sST7v0InjlZUXwNr8deWEtTg8fKv/Vewfyu4JA0S/m6NswfW0vkkVSD
g+pyPFSuYZ/adfD/dLbAKKgF+3QC90SZKhnfwPzR5Lqsoo64/vAtcNoxB278
XezX4RhNfYoe0CiUj9j9D8DmgSI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
z9rr5jLxzvr/5WO3kw==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
9HO7Bg==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k4VfkfB/Ar8UuluYUGRZfUoIxLKsvQPZmxiyjTbgulcG0hu2vJElJj
KctFKU3pFhr1q1xKUomQJMWUJZ1L0lQoms98P3/leSyv5zznue/n/f18z/lS
cfNz8JjFYDC+wvd/v+GLY+lNU/jn2Ab4wQ0Ez1c2qLRSJ+YXgC1dfSWs9Ilb
G8F1NhH1lAwxYxxsvFNeiV5LnMk9QFPi11YYtC4gFp4Ez0ndpdktTjx2B+z5
vq6Xu5SY9Q5cmqrn8VGV2F7hIE0Zafes2SpN3JcDVhIqcGe0iZn14AV2Wuu4
esQcEXhQvW1PuSbmX+xDU4Veod0fFTE/B6whcV/4aRYxuxYc6rNddMeA2GUY
7Lvi784GDcwv40tT6iYmJVfw84TG4KWcvy78ip835gWe9nfU8VtELGD60ZSg
U/vZPjbmNQQv95L5n78W5vUAH/rgUCL24R3JmwFefH39UdODxK3SXJpaeIlV
7c0lZuiD3bODtcTkiNlu4Ed2p6/0sYhd0sCrGKsiA2dGSd6r4A9VZr7pJuQ6
a60/TfVyOk24asT2zuCKc0v9nTjEMcngCYeVVVKxxIJK8LbJ0J0r6oj7XoAV
5Yu9fa8Rc3cF0JRw7omQRSPE/ESwrHfZ6zhZnAcB2HvJZp9T83AenoPP9r1+
PiOHfUsE0lSGnW2p2ytyv5AH3uR5mx3YSDx2EXzgZfct232YvwusyhA3f7oR
888KoimVqJ+LTRZj/tXgZWan83OWEDP/BFsMd9AFItIH5wlY7x1z9G43Mfcb
uD0qeCj2FTFfI5imXt926zVmYP+O4AWrJUVSx8h1lzZwiZ1+4HQ99vsVfKRD
6WxGD7Fw5SGa2hrkbqD4mnjMHvzrzIS5D03MCgdLb/KQcPhMLJgE8zZt0Ovo
IO5bHkJTN5W0HU4PEzM3gRVUFH9gVWH+ULDmglK7qD2YvwSsk7SqfoMtMUMl
lKacHGaz2iKI2dZgE5ODtHck5g8GN4o9TXMpwvxF4OqacWs9d8zfBB5Y2GQ4
fI7Y3iKMpgKjt6r+7EkcEwB+H+Y4cdIM8+eDt3uVvr0+LSL574J/cpUZVMwk
Zr4Hb7F3ezzjScz3O0xTZlPu/Bgj4tY8sEpqmibHmZhxB/z5oezmJj4xexTc
n5swMa5H7CIfTlPX5NY1yLOIx7LBP+2xSpnQIWbVgUXy0z7Z2sT2NPi8qdrs
bBliwYYImlpTd3y9nTIx5xZ4ij23YKsjMfcN+LzZiHONP+ZdFElTuzKWDQu/
0CTvL+DnprMtlQTEDC+wqc5olHQ/ceYA2NLo7YhVD7HwhyiY1whvbbqTeMwA
fE2rRLIV87D2gqtu1E5J1ZLr9ungLuqhxSVP4r750TTlHPY+7HEgMXM9eH36
fff+NGKOK7jMyv/2YhNibiq4P1Kq0c6VmF8NltKto3Q2E7P1YqDf8ZG+/fnE
LnvAjsZVX9hhmP8I2Cd+u+wvuZj/CnjbqQOdJ1Mxf89/193FQybyiAUJsTR1
ebXFPQMe5r0E3jsRHF55FfN2g51qaoyftmDe2XHwPqkuUy3oxv4ugmVE4bpq
k5jvKXiOYfKDC7K43mI8mgqPHFLTSyDOXAWOPvtNXXMj9ncePFrBqzSIwPXu
ANvKZQ75hRDHzIBTuHa8qQxcf/V4mjoqtkj2cTTOqwN4pcyqSIXduN5fwJZr
n8xRLsf5XJEA6zEa9VHNGufTHlzeHpFzSAHn8zBYK9lUTmEesXACnDPtyhc5
4HyqJsLzZmd4gYkK5rUF3xve8rDnLq53CDjRK3iw+SVxTDG4QerkSMoE9sdK
oqmA/IHUmVfYn1XSd/1wg8D5N2R7Dd7geheCY+hT+oYDOK/3wN+Wl8sb4v0u
5kdoKla5/w9vaezTH9z5gsHSwz6Fp8CWqbo2J05j/gbwpIaTDMMe84+BN7Io
62bsQ+CbTFPNonMPxdZin7ng1ZJvGG0M3P+3we7slg/tvZh/BJxdmp3yWBLz
/5hCU7lC3cR9uH/ZQnC5Zldbixqu/1vwwFBn4yM25pVNhfXyCJL0MsO8JmDh
DaOQe9m4/jfBTzc4y+cewPUfArfE2qlmJ2LehWk0Jd9U3ac/H/MagfWs9je7
jGPfnuDom5NJsyRwHmCfUfmxBkVC7K91wVF4H/W4Vyo14/wagOfUD/eWleH8
uoOlpY2Y6r7Y91Hw772LvB8m4v6Zlw7PkzfjXQ47iFnrwOPNE/1T4TgPLuDW
9HV5osc4DylgfvMZ/RcXcb9VgcXNvf50wv3DWZMB6/3N23Ia54W7G+w6uMcq
Ep+X/CTwMYUsrtNmnOfL4EU9mYPK5jjPPWDNV3WFn1yw3x2ZkP/dAdHsOOw3
PvO7+8cqwDsGX2rk435jPQO7tIurXaWwf/Fj8L5TXbam1gn7jQUHN3DtREU4
DxfAeRUL960OxedvJ1jieop0cDrOAyML5qtwR00BD/Nrgg85fW5RxPcHuxx8
y+bQrCdJOB/t4DVqW7TkmzH/NLg+acg74CPm/+k4TR3e/SF+6/wR0mfr8e+u
C6bAyjcsavY7ket9aidg/uLzo4O1iJl24NtMh6w0JjEn7Hu3fgbrzHVPaKGx
T9U/YH/tK/v9QhbmtQGXW+ZWSv4f8x4C96YUjRfUYF4+WGni2Z2+e9jnsmw4
f56Jv1SYin1agtuGrF9JXcZ5DgTnsHcxXlZj/gJwR9z1q2ePYd+N4AhNnq51
LvZplgPvR7OtbcFc7JMLDppkRTz3w3k4CV56ON58nxfmb/je7HfggIQft20p
xD59cuG8KFeSvD8F5yEH/C3osWfWGcxfD75fXNTogf3Yi8DvVkTXdslj/4vz
aGqzvyhquyb2+we4u2rjjg457LcWbDle63XjNeYfBlez3d1cpcl1vsxJmop6
Ot/xwQ/YvzF4aff+f0KWEmcOgjUdCq9YUMRC5ik4T13KCJtxJB4zBN/+bbSp
cQsxywOsk57DElwkFrwGdws/LuRF4TxI58N++GdeY+lZzKsPftSh9nA7D/O6
gRWNQ+z3+hFz08C8poOpg+7EjHkFcN6/WWkT7krMXgu+3nC5WeBG7OIMvm9q
91drJ+ZPBi85mq1acx/zV4J7mHL9nc+wT91CmtrdVzP64RH2uQuc+2CvvI0M
nscSwf5Zx8olluN5UgA+3KvY/c8aPE8+B9u3lL1wZON5d3sRTRk+OtO7E8+P
rTzw2LIjr6KnMH8FuKli5xf5vzF/F9j7BPvGVz7mn8WH/1ekfokOyMB+Y8Cu
2d0OciGY9wl4wf317YOhmPcbeJds+JzDhti3RjGcDy48f8bH9eWcA+sO2RYl
47xw28CqXbfumq7A9f8Kdn5y/mLjNlz/lSVwno3sb4/VwLybwZ/iJ+XzdLHP
FvBAnNUmPXPscxIc5JnXeu4I5l1eSlNvF6aUCVJxHjaBpeYyZeKKMX8ouGYm
X7+4DufhE1gsoqtotBTnQeU0TR0vbxSq4bxxrMGFL31vmtpi/mBwLu9SvrU6
5i8CX9NO4Cfj/LGVz9BUXNWEePFu7NMCPF/GUnx/FuYPAFccafUrz8b8+eBl
ByVLxQcw/13wr8o2RpKnsd/fymgqSWqnbNKFkQ3/Aob7pis=
           "]]}, {
          Hue[0.6142719099991583, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
vqvPkkS2p5DBDxuy/Q/KE5//
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6796032*^9, 0.8345651935363686}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.8513292138325894, 
        1.1866096197570073`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6796032*^9, 0.8345651935363686}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6796032*^9, 3.7110528*^9}, {0.8513292138325894, 
        1.1866096197570073`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{
        "\"PUTW\"", "\"GURU\"", "\"GSLC\"", "\"TLT\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "True", ",", "True", ",", "True", ",", "True", ",", 
                   "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.091446163603768`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03481192844413499`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "31.35264871508868`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.704691260794302*^9, 3.7046913763890657`*^9, 3.7050414043441253`*^9, 
   3.7050416502476645`*^9, 3.7052519916019287`*^9, 3.7053147880793805`*^9, 
   3.7053149266562424`*^9, {3.7069033551397953`*^9, 3.7069033815639095`*^9}, 
   3.706903599445859*^9, 3.706903646102397*^9, 3.7105682682380543`*^9, 
   3.7105683322358723`*^9, 3.7105683754871817`*^9, 3.7105684580780206`*^9, 
   3.7105814199858675`*^9, 3.710581484495571*^9, {3.7105815506673746`*^9, 
   3.7105815730121746`*^9}, {3.710594915172888*^9, 3.710594935070491*^9}, 
   3.710595188809621*^9, 3.710595228102372*^9, 3.710595485879943*^9, 
   3.7105955328954782`*^9, 3.710595596275732*^9, 3.710595797262306*^9, 
   3.7111748648757305`*^9, 
   3.7111750018921714`*^9},ExpressionUUID->"b0a9dc7c-3141-4316-a60a-\
8c217aba2d8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<VTI\>\"", ",", "\"\<EDV\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<TLT\>\"", ",", "\"\<TBF\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687720875048324*^9, 3.6877208755336103`*^9}, {
  3.711174786602516*^9, 
  3.711174790472225*^9}},ExpressionUUID->"450dc594-3d9b-4fdc-9103-\
d430ebee1359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
z9IUnI+DhYs2Wv41+A+rsrZe
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k8Vd/6B3CVUBpOk1JISWVIhkqlYjeJkiFTQlKmSikUUUiKhEOUKA5R
yRARhaIolcqRZkQanaNMKaXhfr776Y/r98f93ffr6Ph49rPWXmvtfac47jRz
GigiItIqKiLy3//H/5mE+AoY+q8duviPwEuw1I4t4TNet//n3Jdw3VPj4NvD
2M/1rPcJGKPY6J194qw9DsIpsfnfljmyP8/LgveYR5mW5H75z/xn/30+8nzz
2VWsRQb4CRiHHycmNB5hzQ2AZWc3bUyNZV2eAXvau31zrGHdUQerlIyP+nSS
/X75P7BG8bvKrTdZm8z0FzBDFmWv8Mxj3XwOLpEWjbn8nTWnFh6xoObeAUnK
3wdP6Wy+XPKR/dxDcb+ACVuyY8WbUeznPGM4x/OR5FN71g698KRhJhvcXFlz
px4QMKpP17lPWMq6fA089vCO+VuK2e/r2AP7LkqoFTvMOrAHFl3cPLLzCNVz
cgD+XtdLNx+upLwG8Kjl3/tGlLN/L8cLttqVLdezg7VeElzjtTeSv/QzW0+Z
QAHT+kIq9UU+axF92DetPr/nM2v1XfD8Kd0N9Wbsv3dIhKszpo7Lcad634Y9
X79uStrDWn55kICJX55w36+WtckOuO/SDl3x5ZQ/HpbpO2QsXkP5b8GeQaNm
pG2l/G0wP+xT6OdtVM9tBwWMlqGFlVY69UMc/Ge/9Xv+Udb8Mjj54tQ5ZcdY
iwjg0Jwhm7YMZK0+NljANDhnxWhbUT/EwG4h1XL8K9QPpfClj9Y/DZIp/0f4
tEbtx0vDqB9GHUJ9068M9Lel/DqwuLfm7uJ91A/F8JIrY68wJqz13sEfle8c
f3yD/T6PESECxv5mnuzctax58+HnU8xu60tSPzvC3s6mu9tOUH3fwGHV3vnv
/ai+kocFzEl+wQ9LKfb7y+fCHM2/j4NSKf9GeM4IF7GZjpT/KDx9y+ZQ1b90
/e2OCJhfGwLHO62hfEdgeau5t7xFqL558Dn9XuGgThpP6qECZmfsqyEes6l+
NvA5JYtzedWU7xDc66E8eSLVm5sDBw27+Td9GvXvC3hR995LLiqsTazCBIxl
sPsvtzk0HwTBflUL41rNWedmwmlLegOeW7JufgorcXZo9pmx5ogcFTCp8wvn
SujSeDoA7+f99PownTX/Anxj5elxDrfp+tfBvoNs80z4rB1mhAuYjPEVhYWX
aTylw8enbZ9lSPOTPB8O7+1onzmc8v6EZWPe3H1IDpx2TMBMPqKt6iJGedfC
8U/lvZl6qudDOGLMp/ioL1TP73Bq18ykBBnKOyUC13fB6UU3JlDe1fDjqdNn
nFFkLbIH1tY+5uXSTPX8Ctsm/TKzkKB6ykUKGLXW+W6vcij/qsh+10feE442
WR17XIX69QysP8i1/FEQjadJUegPziqVUY3UDyth6ccb31SZ0HzgAZcNzak0
P0j9mgA/7Eyc+ZHmT14lfL5z6l2zsdQPy7gYP8Hql0aIUt6TsPdb6bpWBerP
m7DdpMzE78aUVwjrft9Q7rCfxs/WaAHTcjS8WaaQ/f7mG/DhsKrx1X/Z+YbT
Ci+Qaqw858pab0yMgCnouvlNLYzmq2j4vZWSc0QyzVelMKOv73b7Kc1XH+DW
9hMpLr9YO3COY75WPXNKo541dyG8zD2xul6Pxss1+EG1/h2+Es1Xb+F3yXcv
BpuzDhweK2DGS78ufG3BOlcb3vMqSXmPkP2+5k0wZ8CMhEwDqtfQOAFjGGL2
aYQRje85sF/jhP1L19P42girBb/JG6LAWj0MbnzipOl6kP2+cvET+Ptvj948
dDvrDg3Y4Fq3qM501vK2cObmtnEG41ibHIalHyw48kOZdWAuPP7UcsOrV9rY
es4+ic9lRVvjZlA918NHAtfstKpiP/cIhpcUecvOGM5+zsuGR59/E5U4lur9
HA5w+OH4iX6/g2W8gLEZb8btXkz1DISXdokZpklR/ovwTce3P4Jq2e/veAJn
jp5akDWB8v+FRbUMayqGUP3OnxIwV5UanWbwKe9j+JRw9dOFraz1fsFXMo4f
eiTP/rzH9AQBc1R02Ii5C+j6p8Of/bpmBw2ketbA5RvX9Myh+5nDj4R+/cJV
SBQwUzeMdG1KorxG8LZ5xwKUXlI9H8DrZaz8WujfB36Dx4YN26YXwTpX/rSA
ybppZcaRofyGsMUU3wlmryi/N3ytOaf7jgtrXje87ktwPceJNV/2DPov48Xz
ZTmsRVbBS5c8KDc9w1p9N6y8t63wnj9rh9P9f75jYpKAkYxS9nSVoHqugHsn
RckamFH+nUn98gSegiO/PH4xbiXlr4C37JXPlaf7v97SZAEzY7jv2Y/0ucd2
OM5cPbppHfXDCVjb3NRamEn9UA7/SfYaX+RG9XTjCRjj2rCVCVlUz+PwvBee
9rtOUv9ehyf5+HEjRGi8fYLF196SDwqg8TY6RcDkmwXcCPw3X3Fhm7Gutfe0
6f5aAp956pKZLkbz7Xt4o+f0w2tcab4amYr7qVrKor97afwtgENNBLkCNZqv
rsIiGQt7RoTT/aAF7nl5OSVdg+avYWf7fV4+D5YLcjS4dp7mLwfY+NnV8FMh
NH81wQsXTU5dHUfrlyFpGP9eluHbN1F+LVg5Rsbvmj/lt4ebXlhle6yg/KFw
8OgV27RKaf0ilo7r48ThfaP1nYjGf1b4e1ormvJvgA92qvxy+UP5Q+CyDXUS
KT8o/yX4hb55peAF1VftHO7XX5xb8y5Tfa3hTdld/oNofRx4EDb8ciE8mkvz
WRZ8SkxSK2w3zcfPYMZJkDO+j/rB4jzuny+P5d5Jp34IgI/bep8R0nzDz4Bb
ahJrojfTeHwCf87XHR35bz7+Aw88/fHAcwfqD/8L/fqv4xysuiU3rjCW+rkW
FlQIBu+j+cGkD+70Frev1qLxqJghYGZWu/CmmVL/PoKDrWruHGBoPuuFzeZH
iCsV0PibelHA7G4vraqPp/G3Bk6+tCn7oB+Nr2rYNsuE/7aQNbcHvqpuNtLe
kHX55EysT8ROJZveo/FnACtrGh5uesxa3gseWLvZokSedW7Xf54TWWXwRMjW
UyYL8/+diwMVjWl+0IefmXUaZV5jP9fbBafskpBrW0f5E+Gp/ifi5jrQ/DAx
W8CMsdnxyWIAzQ/L4Yffm4c1jKf8O+BG0RHnfr1lv48bD/tOCH1y/o+AzX8L
3rQp7f44J9YmTI6AeVvF+6N4knXgNvj4GBtx59Wsc+PgQRNeq5i5sm4ug3lV
+R+PPWTNEcAfV2iNO6fG/j6e6yWsTy8N81Fcx5ofA3uFRj0buZK1yHXY5som
vRWzWDuMysV+adYdyeDaVraeUfDh6rhYbwX2++WL4bygyXvmTae87/r/fOCI
PMxHN1J012hR3vlwaVZOz1ZL1npF/3nw1207N7H2eAM3/grW0YxkzZO8jPWL
nesSvUus+XPh9Id2OReHshZxgHOlhofKZbLmvoalTbxapcqonhL5/erXoQmP
UDQy1Z9J+e3gtrSjC2ZxKP8RuPaE9pEztlTPwQWYPyQrRTdIUj3V4dpa27OO
39m/T8+moN/f53HoP89p2/vMlf2clwPX/1o39Fc5a/VZVwRMTE9KbLgXawcr
OCti9LeecNbcIPiNb9+13ibW5Znw6PJ3SkYCqv/T/+ySnL+KPg80L0T/jVxy
/3UV69wDsKXBdo/U+aybL8Bd7zvnZK5lzamDF8SqDXpz6xOb/zfcZqissrOM
Nd+vSMB0f58eq2DNWuQcnDA8T2gVylqdD8/d+cbRaR5rh59wu21UiewJ1txp
V/G5WQOvSZL9ffJn4RHcqumVi1ibPIRTSxwGb3pI+b/DPUkZLh2BlH/KNay3
7xzTs3hG+VfDXwrb79V/oHp+hZVXuPsJVrPmyxVj/o2b/cLQiLWIAXxwq4Se
XyHl9YQbDFYmPalmXd4Ji6zT+bOihnXHpBIBs3wur25hFGv5lfDNWJ5BTilr
Ew94i+HVdym3WQcmwPrDmvWn0fdxpEuR/3hGXVYM1XMZ3Gul4fb3PWsPd1jl
UXIFo035T8KGbyeXDhen/DfhDMOnqrtsqR/0rmN/+2yujv5B6oet8IAJexMt
pamfY+E8v9L3/mOpn2/AC2dWtBdXU71bYYscxbRz96ieLjf6fd4cDe/SGHjQ
6Az1Qyn83b66Lews9fMHOPSLVjvnJGsPTpmA2WG/JHVEJNU3Cpa5PaTCN5/6
+Rr8paZ9zoHblP8tLDHwwQVVJ8o/vBzj2UY15x1d33JtuP2Bm/2CROqHQthu
R6WLiDH1QzMcUtX6KFaJ8g+9KWCGT+d2bb5A+efACQsYVbVxNB43wmVqth/L
5tJ80Qjz/gpPj2qn+orfEjBiNw9pSDvSfKEJu5rfefv4MGt1W9jHe5DybHfW
DofhAZ0rZ07eT/UVrcD1zlYs/bqT5ovZ8I64GRIqG2i+WA/fWSF+K3EZzc/B
sElR0QzvVTTfZcP7xm7Zd+Il1Ve1EuPdqjdxBc2PHpawZ4bmxv3u1B+Blf3q
wb8IG1YWtoZnUf2fwgcnWTpGUH9z190WMJUjRC8tTKf+3g8/6t3tZkHju+M8
/GdJxCaDd9Tfj+GtpYsfyU6n+v+Cv17WDjyoTvXddwfzj/R922++1B/pMHeq
f9rweZS/Bm6WUn65/QD19w9Yfb5afS3NDzyFKtxvgjZ8DRHQ+EuFOXn3RyX9
ofniAbwh2r394hzqj2//fV5id7FgCM1vhnexvrxzoufcVOqHe/DPn+nOWTSe
crth2zEaTp0jKa/sPey3Fj2U3ptJ43EVnKTgf6yMxrPebnjMFdPfyldofuuA
TewkI9wqaX6bdF/AHMhd8vXqJOrnFfCq4iFp6nzKu/O/z5/vcOkoonqfgkds
tdMrfUr1nFAtYBa9K5+47B7NF0vhWyfqaofS54Hb4fuzl06ddYPyn6ju933N
5bBLpfrewo3UD7oPMN8U57Q8oevBc4OV5PU2vvxJeW/A43NbLx6n+Uj9Ezw5
Z7xYcwZdf+eHWL/eWyxT3EjXnwvXJHXMtEmhfO/hkV3BK0upPwJHPkKeBUOz
xl6l+kXCvzIbRR+2Uv2uwmaG1mpRfXS9W/qbN6xGwBTHdw4cNo36dR68WDR6
1IPTNB9cgbUl0wI7auh6N8FpZy+UnKT5pHwIX8C8Eg2OkaKf79Di9/t5eXvY
NuhFQO4vut5itejHMxlxBqNo/GvARoOHFw34dz/eABccNzo/2Y/uxyFwcYmK
960SGv+ij7G+Upru4LaPxr8afL/oiMqGQzT+reHU0fILVF/QeuIgfJGzNtan
lObfLPjObruolMHs+shEpQ773Sr7uuBA1oEW8GTLN74GHNa5AXCkXXmFyEVa
T2TU9cvHeQIrBS+9K+pF85fZE6x3Vzknlh2l9Y4/PN24/X3vv/nrPLzbjym8
Sesv9VpYesKs17NpPeXQB7fOvnQx1Yzmq7Sn+L5QtZg522m+egRPjypqcF9O
81Xv037flzv1mYCJnmqzm0/rT70UWOdQ06oR5lTPatjOeynX8xzl7YEv8kPO
DKqnvJOf9/v7RQzhzpTCmXdlab17F76qsy9L1JN1eRd8eGOMa8Ftmm9lXggY
ReNHQxUbKb8+rO/3cr1jAOXfBavHTB+ookf1bO9vzsSXWJ8/1F438V/+5fDl
Ef7tlTzKvwN2y3pb6krrW148nBMWZntCj7X6+Fe4f60MSvjcSvVkYO2yaWVb
R1P+bfBT3fOzkp9QP8TB3knXX0+uovxl8LJCOf6NxdQPS+oxX67YahgfT/3g
CsfcPn892Jv2GzFwsYfOm3N5rDnXYYVdBnI6X2m/8REu8/hh/vg6rdedGrB+
9zhtbHGW6suFp6xYmSy7nPIXw5suLY86/Ivyv4NvzOa071el/CMacf8IKWnf
v421fAR8PLfLvi2T+rkI/pJ7R+/PPcr/Bt6WG7d+ZzTll3yN/YZGyOAuytc8
F97dYLnmqhHthwrgIA2lAT3zaT/3Gt5YJTn78kHaz0k04X7TcLXkA52fiGjB
98XueMZL0f6tHp50WnXDyBm0fxvcjPWauN2Tkxa0f1OHL5x+qdSzl7WJDay5
29rWOI7OTw7Bw84oddvR+Qtn0BsBc+j0wvizbnQ+NQveIZO9wdiS8lrBG8Q1
CjM8KW8QLL6qTtGnnvJmwiPtX67tpfMrB+UWXN9Vd1o3f6f9pzksaT+p/sEs
2i8fgF9cXmTd1UH5L8AFVWaK87Mofx2sdVnHancM7T9N3yJ/VceVIbasm/1g
vr670QTaD3POwZb5zet65tD+mQ+nJs04pkr7b4+fb/97XjWwItid9vO+77Cf
kwhf503njepnYYV8t70OGpT/IawXKvTY8Inyf4fTd+f1Jryg+k95L2A8Vr1x
HCZH+/f78Ep73RnWm+g86issZpjjqdNG52lyH/D3fFWe2VtE58EG8LivEw5q
0nkdrwp+skpD1duczh864UfiJa9iH9H1l/koYOTshusa3Kf98kq4Rdz01CA6
X3Tw+NjvenR8gRM0zaSmVFA9pT8JGEGDu+1s6ieTZbDimf2KvSXUD+7waC23
6fGjKf9JWDr/c9QQaaqnVCvGS/eInBpNqqceXKXpHnWPzjN5W+Fgidjp1lMp
fyx8Utxi4NzzlL8M9pTVuzysieq5WIA8VWd+tBZRPV1g7+9PvBKpPzqi4SMe
Jjs36dH5SSm8xeWFQuMROj/5AIt6T/O8uZ/qu0UoYLIz7l8rP0r1jYL7NEZo
bqbzXb1r8LLwIDndUurnt7DRickPpI5TPY+1CRipsaqHH9D5sUMhbDwl4Z7Z
KjoPbIanTBs8o3019e/Qz/0+75gDz9gZ/as3mvohH743690mey+qZyO8Lnmz
bjz1R7P4FwFzXbl0leYxyqsJS/WZ9OxXpecXtvAKheyzu4bTefsr+Iaouvpn
Or8XGdyO72/gLg6zpvPh2fDqHQt8/dbR86z1sPRzufFRvyl/MGzhaMm3OUnn
aQM7BIxamfVtoxA6T1OFdbb4a+bQ88NAS7hDwkakS4zO0wJhzYsaGZk/Kf9F
+OeV7gF/FOm8UqlTwMy05pwToecdvHWwov/SQ+2zKP9+OCHeZ4WZNuW/ALdU
b5RujaP8j+ED6pM+fo+g55kmXZgPC/bWDT5OzwP3wZtLhg04T8/H5dPhmdzQ
BUf+nbfWwOEytzJU3lL+H7Dx4kw5+VN0XunTjXqPelP0toPqm9rd7+c9HsB3
ZAKcSqrovPUbPO7ib/4FDp1nyn/F/WWBjNQQhs4rk+EJ0qWHUuj8lHsPfjde
zlHclc5bu+Fnx3mKKo/pvFW2R8DE/9I1thlJz+dWwT3b28te0fOw5g5YrFr8
xDYryjvpG/Z/lUWbx9DzcL0VcGGRgXwEnRd77ITXTvM7qP+Z6vkFfuys/KT4
CdVzwnfs13wCzj4VUj8s/d6v3tzt8PcEN5WaXVTvE/DigzGF+n9ofI3rxf7n
x8e1xV3Uz7rwMkvBsuxm6mc3WPgrrGlwGvXDcTj/q2XUfT718w1YeqF9YTo9
v+Ut+oH71fntD829qB+c4RXLwxpMmyh/NHwyZ4Kkuy/lL4EvfFsVOY7q7/Ae
XvNYKHg3mOq5+Sf6abnRx8p19LwwEv5wv2Nnqyw9L7wKH9fZ9+pdH51vt8DR
HRvbrkbS+fawPgEzKtbnvStdH71w2H3h/cMB9Pze4wocv9fIdJwOPe9sgpVT
eu6O0aLnnUN+/ff8Xq7XXYGed86Bvd4O3JxuSu8/XIbtk0vyekLpeWcD3POh
smXXZdYdYr9xP33g9eFsJfWDBuzPHfvjTSI9r90Aaw9eqHMphPrjJWzs3Wb2
5iQ9Pxb9g/ni2BV3MWd6X0MNTouof79lB71vYg1b+il4pCym/AfhBwOUDvxl
WKsP+It691ivm72K3t9QgRccvT/zijLlt4BNdfbq2syj/AGw49dv+2bpUf4M
OCDknM7vufQ8eaaIkOHN6Hu2S5ueJ5vBa4/6CWv1Kb8/nHZpup3acsp/Ht5w
Wl5adwrlr4VXWL90ibKm+hoPEDJx51O9386k+u6D5xvwlZZqUP40OIOvIPZg
BuV/BJeEnWWS6XNuL8xfZTPYwILqu3eg8P/zm6TAV09mfzlrQPmrB/b7/twe
eFik6VB7Q8o/eZCQ+dulGSqxm+qbBH8fED5ogT/V9y7s2zQhfX025e+CZ16b
7FR7g/LqiwqZTW9NDCYLqJ634Su+q1+XPqR6tsPROkeP5EZQ3omDhYxK5rir
D85R3uVwisl9oyePKO8OuPuzwQIv+n7OZzh8WPDpaWKdbD3HiwmZwDdOO99N
Ze3BwAHiCUZcM9a8bfB0je4jmS6s+XGwhuK8dI3brB3GiguZnHeOEU8qWXOX
wOaZe0zzh3ax+V3hytOxP/0a2M87YuDIjh3ZGoas5a/DB1UD7Thc1rk6Evh+
/SCZvgTWzU5w5LoChR3SrDlceOaaaxd2a1Ded/CVox0KPkasRTYPwd+bX7cg
4TBr9Qg4ZlbAF+tkylsED90++DyTxLpccij6MbrC4Wsna5Oj8I9rQ7aJW7L5
AwtgJa6RuUEp69zXsPo9L7XIItbNEpJCZv2nwzGvNrLmaMFjuaejVZNZ8/Lg
OTWZhVtqWfPr4UXl63TmVLEWERsmZHJ7xPyn/2Strg5vrlY4YObSzea1gY9M
4djtHMJaftBwIePdp+S0eDdrk1kw35vDq1VkHWgFF37Wsurto7xBcKuWb5yx
Ffu5nsgIIaOg29fZbc/aQxlWE1lr1uPMmmcOz999eldcLWv+AXhB7MdP9udZ
i2TApdNtVgjkv7LXe8ZI1E/N/3zfANblprBFQs1dna3sz3f4jez398ifg7mt
H8d4ylJ+PuybJLNZ+TjVcy1HyHzumTjpQyLV0xcuut4Udtyatd5ZOMGx1Nt1
K2uPh7C4qvXk6DVU7+/wnCFTC5cMYe3AGyVk5tZkpRadp/68D/9VkrQQe07X
/yusIXZENjSF+lNutJAZ7W+bX1zEOvAMXLnPIPiyGNWzCv6zMDfhJvVHcyc8
wrdcLc+X8sqMQf6zfs+KplLelXCfkmS5zGq6/pVwiKmzO/ch9Ws7nJYuqnLt
EvWr9FghI30lOOLvZerXZXCZeHbchwzK7w6vMy6SfSBL46cNfuJVOdbRnPpX
apyQMeidpcU7R/n14Em3dLe/eEHjayt8eXvkmOhaGl+xsM3sax4R12k8jZES
Mskvlxa6fafxvxhW1P3VuHIu5XeBff1rhQ7XqX9j4Kuthh3jUql/S+Fmm1/x
3Aoa/wvHCxnm8LTdN4pZd2yBJ/VGtkR/ZS0fBacOjbnZQePL5Br8YkmorL0F
jb+3cKZd2sAV//rBcQK+z3lZi1QA1fcYHLFvUEJdJPVDIazWnv9I8z31QzO8
KO2uLzeJ+iFMWshc+Bq7bd021tx8+MueORvHXqC8jbBIUn677jnKKz5RyKQL
F8jupestrwm7r3SscltL/ZAL19YpO/k4UT+8ghctH6vhF0x5B0/CfGLz2mfe
Ico7G06fFHtzwBbKux7W3X9PoSWd6vkCNtqnz6twpXoOlBEyN+Z8sl9iQvlV
4YUq42SXtlM/WMKrLszc3SxB+QPh7wZ5VZmzqZ5/Yfek5dl8JaqnkqyQ6ZFQ
3n2C+i93HWwvobn8hx/1w36Yf/Cvgdghmm8vwLnPEgZEqlI/TJfD3zMkNMuw
h+5fJjDXhmvHa6H7rx9cZa86Ltid7mfp8DvfH4dmVdH9twb+Wz1wXO1Tup8Z
TRYyOjHScxfSekPeB55rXW+ZTvdbk1RY7czSrREcup89gAPqNOreT6L77zc4
cW1+eDqX1gfe8kKmqcYxfjqtNzySYeP06RLCHnp/8h4sMVmQlknvs/G74XG2
zuFe9P6diNwUIZMkXpdubEv33zvwndc3P+vS+qujAz5e8jD67WPKO2mqkHmg
vnqZM92fTVbAZ4NGfqlupvVABRxU+mxpbCrdf7/Ak9bqxIfQ+kZvggL6T13z
YSK9v+exFHYubpybMZvWC9vhH0+W+3x6Tu9DCOGKctG+Cw9pvTtumpBpUHKb
lGRB+wtd+OB4HZFyAa3X3eDquoCHM1poPXwcnrDprvq1blrvjlYUMhfFnc4F
/aL17iLYfLPogG5arzY7wwmMguEper+PEw0bWwjrrmbRergEfmUUkOQtR/Vc
MF3I3Nt3ZOErc3qfYwssIymqw5Gk/JFw7V/HruwdlP8q3JKWVZxE78dyW+DU
9+6ZYx/S/m3TDPSj5c4h6vT+sUk47Pyg85pRPuW/AjPLJPNlJCh/E7xwNl85
dibVM3SmkLFK9c0IoL+Xdxl2kbYoqKL3MfkNsGVH93mDXXT9xZWETOPnYIOa
dsqrAR+RK3hssJD2a5fgZfoj808MoXq+hKV+3L+8XJX2F6LKWI9USQhOplBe
NbhM5WLblUHUv9ZwuKmt6hNaP3Kew4+WRG95Npr6YYAK7s/arhKf6f1RDxW4
fYP03az11A8W8Ii9ySp3kil/APypaH87p4DG1x9YQ2ZZ3VkaX9yZqkJG9ANX
aJdB/WwGhxfmG586Tv3sD8+74Dhe8Q7183m4MW5407zvNL4UZ6F/3DLMzmjS
/GAM/1n6LUZelOaHffCCGfNrbjZS/jT4V0n9o73j6H7yCLZUYuQcd9D9zkgN
6yP7msPLJtL9bi+cOELD0NqH7ncp8LUK+6FrbWl+q4bnD/ZWe21C9+seOKTb
ynKuI93vvGbj85+qqYX07wOT4E/HvG7dMqb57S58UX780olHKH8XPGBUxstp
9yi/rDrWi1/9np5qofktEY55uy97zDta796Gv45b8k1uJ+XvgPPMx2y710Xz
20QNrP83KpzMpPW6w3J4tPPY48adVN9b8PLiVSM/PqH6foYVRSfWxHTQfDFe
U8iYPfU6PqaE+oOBdwVu0Nej+TJ3GzxHSqTK/C/1w1gtrCfMD2b20P6QtwRu
SV/usoKuN98V7l4ddSk2k/r5uFa/388dNQf1XrBw77kG6gcdWEJkZODcjZTX
CV7zZfn8E7T/kefCCqfLVC7TfsOkGP5ZIV8f3Ebzw/y5QsbuVsDitUepnzfD
nycNVb/+gvohAg7ivT0VTvOhRxFcOOPmHSnaf/DewFllpg9evaR6OsxDfZi9
9ke0qR+OwpPHvrKRpf0CtwDeJJn9WW0O9cNrWGvDW9WLtF/pkNAWMh/SOm52
/+uHI/CjZVyfZDnqhzzYaojh0HvzqB/q4Y15RxYX0v6HIzZfyHzUyNUe+4Py
q8N+hWEpLSLUDznw2sqzk1JVqB9ewuZdLk6jtKifBy3AfGD55u5+L8o/C27d
6zruPa3PuFbwd6OtMcwqWr89g+Usv01+uZj6WWQh1tMXbPhVwyi/MhwvDD00
y5Tym8MNKc7xoZso/wF4qT5P4tpsGm+/4fz6bzVZG6m+M3QwH+qH59k5U35T
eNDFLkV5K8rvD0sYlxz+/ZXqfw6utdkta0X1KJ+2CP0et6SrfhDVdy28s2fS
Yi0a7/K+i/pdP5Oz8AspWYW2Curnh7DtTevvqzyoP9YsRn+1Snx5Q+cJenvg
9S5a+nz634d48OAiSY2JPLr/8+7D0vfs5TS3U39/heV7DXLOUT86eC4RMhPv
h2zRPkz9fQa2D9zsE3OC+rsK3rO+Xc4mhfq7Ey4PfHLk/b/5TkZXyIxR2LnX
mObP3AQ4bpOzxQm6nzdXwp6H91a73qb87fD73emF9+n+77FMD3kXWTRV0PgT
ufWfA+IFh95SPdv0+vWHgxSDfuvpjPT/1896cIG/wgTvOMq7FW6zm97j84Dq
2QpfW3J226Mh1A9jlgoZr2qJzXPEqR8WL+13fZpd4FcbcoqLBlM/x8AFDbJS
l32pHzjL+l1f/kJ4sZrH828034s4wWf9Hitc+0T5o+D0pjfFkTReHK7BE3qG
Fk+m/urQXo7PtyW8VF5D/ewI318pNnw2jQ+TY3ATJ2dEMa0XAwvhDebmq5VG
0/nDxhW4v11J99RWo/4Ng4cnPQnj19D1z4d/Z5+rH0nrL34jXGVpXp9D/cU9
vFLIZDc8Xv2O7kflubBP55oJATTfdLyCXWxG7zdeSvkG62P8LnKJziWbzIbN
XNa/PetA9cuGm5iFJUsnUf1ewNMeF61TpPlEb+AqIXPS89Qus0LKqwrHFni2
2dB451nC7884jB35lur1F258q3w19iVdbyUDrMcX7mk2HkXr9XVwzxDTq4kf
qZ774TFFujk3H9P1/gVXms4XRtN6P3e6IfZnzs8ir3dTXhNY71NUSNZnyusH
q7xvvqVOP6+XDpuMuv3Vbhbt3xRW4/dNudVTN5r2G2thl8BPrxWP0X7DB96/
bfoWNzrPcEiFl3ypXRhD+1vuA/ij0s2IPn/aD61eg/0j1zH8iijt573hm2tk
+rwm0XlEMqxwcLj3OAvWufdgrYMaa87tZ93cDVuE2IY7ytP5w2kj9PvTlLqn
zyjvHTj09+kClX/7o074/tazI4O7KO+ktdgP+FV+DBNh/335KVim7/S0c920
f6uA5y9f6Dh/FJ0/fIHnTqmYlj2A8k4wFjJPjauvd0hT3qXwUpuVjq9f0v7t
JtwiOqrzs4D2b0LY2ObWa7kDtH8bZyJkUsY8DHc8QftNXXht4vKCveWU3w0W
6Sme1J5A9fwEj1qvnjkmmuo52hT5P3ILQhqoHxbBil4mmVX/9svOcDt3xbH7
aVTvaLhOSib10ibaf440w/7w5MVWFzoPaV4A+1inG+dsp/xb4CUPdYpeelD+
SFjivPfmAZTX4yrsMizl980Uqq/2OiGzw3Lp9lU7qb6b4ECfc70ZZIdw+NNs
j4sDb1H+K7BM6DuPrH/7d3tz7Ncbnhluoc8DQ+HNM3Li1Ol65F427/fzzQ3w
LDPn8effUF5xCyFzKH3Vxw8dVM8Q+MpMcY7hD6rnJfiG06U/PXp0HvUKXh2X
KzZXkrW6qKWQ+dZ52t2MzrMc1GAHYYSOwTw6j8qCTZOa1qjNpH54Dst7Dhqq
SedlJgOsUJ83g/3mjaF+UIGjrN+6ulO/5VrAShKRr5fL0XnaE7iwKUtEdjid
p/2Bx/xceDPpG+WfaS1kSvTjPnTlUH4zWCxMWlmPzgNE9sPHHeavmeBJ9eyD
P62oWXjZhvpBcT3W663Xp/mqUT8Yw6duGvj40PmF/D54TqB/Zdhhyp8GV5+t
ztTPovpOtREyysLO9j2bqb5G8LGjoiGnM6gf9sIVUl3dvY+oH1Js+o0PXjV8
+/jtzBd0nqJuuEHI6JtdOrKqk/rBCz7dtJnr95vyJ8FLCo1+lE2j8XgXtun8
UB0mQfXv2tDv+gXushUy7yKuhC9QoPkhEa7bZvr3+VSaH27DNypdkx7fpvwd
cOLMG8kXWin/RDusBzcFPlKgfuHHw9kD7so0Uh6RCphXkSL66zXl/wx/u+1z
wZD6z2G8PcZvWE21RAvlZ+C4yVHrLz2gegrg4C+p38Y0Uj+P3Shknp1L2STy
nfphCfz8e1ZEJ/VTsyt84O5i5x6a3zw+whH+lqPyLKmeoxyETJcT0zTfgc5X
deCNcmHFd8Kon53hFQ4VyQ2l1M9c2Gi2fHZLA9VzxCYhU1oqO72ol+o5H+78
tDfm0y/q581wYc+uud5y7HmsSQQ8L71uYeZC1oFFcN+xo4vnjmTNmeeI/jDt
sh5wg/rZAV766McNDp33ehyFt4w4E70zi/IXwHoNhsO5dH7Mfw1Las6TchrL
fp+D3WYho/Z7WZphHp0PH4G3PbO23v2Izofz4J7Fyqc+xrLuqIeHbMlW2nWZ
tbzYFvTPwuJVz6f2sPXMgf+uPmX26QBrzks4+Gn1D7Vw1nqDnITMmatnVf0j
WHvMgr3WNGxdeoe1SBa8cdHcAItjrNWfwUtWzExMH8vaQcQZ60PLfTY6G1hz
lZ3/u58Gxab1Ul5zuFFtHYdfRPWsg4Pfz34Tlkn1/A2HqYerfX3JOneGC/a3
E7fv+p3DutkUfuhVys+ienD84VGCWIXT91nzfsKOV0OKpCpZ86e5ChnXvHbb
pnrWIsawh+sBcWYu5feFi9OljW9No/xnYd1tm34M38K6Y4qbkOlV/ba2aDxr
+TVwsPaUMJVblH8PrOmm3pN7l/Lz4NXHH4c5DmJ/Pvc+fPtFr8b7K+znegZb
MZ8dDLz/oJS1hye8wcjtXsgQ9ud5Z2COT8uruhms+VWwROH7xrMNlL8Lfirf
OFNPmurrsU3IjDTL8N/2guqbAPf46p5uq6J+qIRrNN88XdFN/dAOt80uyLP6
RvmltwuZH6EPulqeUX1Pws3PEj0ejKP+uAW7tZwYLiVL/dEG95luNDQcSv0h
5S5kDoatX2zfRvXXg90M6gdxqD/Vy2CFsm871qtRfVthvcfp7eL0/dwxO3A/
e31jXMAY1uWL4YIUxkplEtXfBX7VPdyD94b6gbMT98PgHYU1HOrnhfCs8OgN
B0dQXifY6ZPtYJ8LVO8oeD3f2PaAEvXDcA/sP/JnRFWrUD3nwyoFBW+VX9D8
4AhLXEi8nv+S7nfH4IGXNCYIb7LmFsKrTf+UHv1B88PcXfj79UM8DrfQ+mcj
3FA2oLK3j+bjMLje2fjDY23Knw9fNVU9ELaX6t0IVwTFaWt5UD/Y7ka+xNx9
7ieonodhQXxouXoN5c+FqydentZSQvnrYeuyDGWPOqr3YE98vzD62vk46odg
uGxbn9y2QOqHbNi6znPqoWnUDy/gpdliUm0DqR8GemH/Ulu7uYn+nkBVWCg9
eEBnM2tOJuzaVjHg0CWa357CvZ9T3U3TaH77C+toafPOZ9L8puQtZHLMX2nZ
V9L8tg6ebb160VCa7xwew2VtezeqxFB9f8FnRhXbnUmh+Xn6HuyPFzQfssyg
+dkE1lU+xAym+VTeD5aPjit0ukr3ux+w736DjMNJdP9Q2It+CrtZwb1A+dfC
M0XHz3UPofw+8EGD/YMLZlP+VPiF8jthBz1PE5nig/VubkF1uTH1x2pY9Iak
Wfxayu8N+1Tn7LtLz+e4ybDCHn3zVA3Kfw/W9HuoE7mN+mOVL/aDH3gT3LWp
vrthwXm3me4cyn8aHtBuxnPsof3IHXiDi9i6BHqey+mEj0bvC1lE53+8nfuE
zIjVJcvL6TyEfwoWaSw6zXjSeUQlfMc44pFoFp2nfIHzDj5OjllL+6kJfkIm
Xq46TXE57ZdOwLxpCa8C6XxQ/ia819Fm4kA6XzERwqrjv+eZ0HlRrq4/7ifK
sjuCdWl/dAOe9yU74okr7ec+wfF5E2x9gynv6P0Yz3mVF66Pp7yL4LtXOid7
/Xve4QKrH1eJ+kn7be572CnkiYQC7c/LRx5AP9xbPGvdL9qPLoBdLEtzVtN5
jfyWA/2+zyQSvsd0Nh2l9zeahwVgPyXxtGpJAp0/aMN2bUWTvOi8UG8TPPte
Nn+kDZ1HhMPB511D9vrQ/vkKvO/DX94hL9rPzwnE/LnFjj/+33mxPexcuOH+
i3jaT4fCVfs+2d+h9xPKL8NK6T+00i5Q/gb4jGlDrQudL+aGBGF93ORipU3v
ozRfgq20K8K23qO8r2BD086Md3Reoid6UMi8mWabWUj7c5FsWHVW6iMjOl9T
fw5P0vbkjabzAYcBwbifxqtJvQyg+qrAjRcDZTgM1e8inNH0zV+E9t8mT+Bb
PtYyY6nfAv/AN+SzRcJC6frPPCRksmplrROp35rN4MrXDbai1I+8Pti5SJST
FE3XWzFEyPArcxYdpfMaERN4St3usN0KlHcf/E0QxOwaS9e7F5a2tN9tvpr6
c+phIZPfU/tVTJHyGsEtVknVOXV0vffCl7rit0fReWpgCnx9y/CPZdQvHPkj
GG/vK6My3lH9DI/8dx4a+ahGivrVCz7fMXaZLp2v8JLgy+/K9JXp+/h3j/Sr
t4N+qJA5YjF737/zIu4uWF293vL2fMqfCNefUHq0ns7LO26H/vf87pai6wrK
3xHarx65O8JwPzs80EBkBtUzHk4cumzztT+UvwL21C+RWk39rfcZHlmkOGD/
AMo//ijmL6Zi3QU6j1Ivh4OWJJ/NHkXXXwA7nL32ykCe8o4NR/8fMGkqnEV5
l8A8ucj44R50/a/Dxpo/b+jReWngR/iEnWLBxO2Ud9Qx7C83SyTr0XlRsw6s
tVwz3Y/O8znO8CDRE0z7b6rnO1i+J/VXBJ138kdEYD2TNmLYFD717wK4uMo6
ef5FGl+b4VnqH3fOCKJ6R8B3m7cnF/573iIZifF3OGKZFr1/JT8PNvScIivy
73zdAS77Xad/gc4TA4/Cr35dm5F1hcZbAexwu9XI6RXVUyuqX7097KL69Rvv
CLzeKUaklc67+HlwmeO8Wc5zqZ8b4APV9fG1NH9ybbhCRmr49iupVK/yQ/Df
TMbrogH1Qw7cECKTsoDGl/xLePFBvmnEIqr/oGghc23M981telTfIHjJACWH
dfvpfpAF+w3ltPw7P9R7Ft3v+zxEYjD+bTMPyND5Nk8ZNjxebdSykvojA57p
fm7frm3UH3Uwv9s3/2Ia5f8Nl8+KSpe4S/lnHBcyJ1fkJJc+o37gw0fO6UYn
0/Of3J+wVqja/CIp2i9Pi8X+19/suBm9/8AxhmVsbBMv0PMhPV94nNOqyreN
VM/v8LaK/S3LKqieU+Mw/hObqrbS8yL1NfA9jRuBNZGUdw/c/WFliwbNL1we
rP5ryJDNMVTPySew3r9TyrxxonoawPuk2g4fOkD5PeFhi+IO3I6l/Gdg/+dF
i+dR/zdXwWGfLi8I30f1XHkS/VrhsMPemurp0d/8BLjb5UvdNrr+Irdh2+7B
Y/JovKu3w1PlXPK+76F6usfj9x99Vz2O8nWchG/tHLj2K52Pyt+CHy45mmJH
55cmbXBJ5nftdHqeFih1Ssj8+jowoLWX6hsHT/5Uk+3xnupbBjvqfestLKH8
rTD/we98xaeUf0yCkHl//MXiTjJ/MfxQUvO3J523cj/Av29efPWX3v8p5yRi
P7qgfcdieh+nYyG8J2bwvGwZOj9xgnl3PqQ/pfPO3Ldwyth53Yrq1A/DTwuZ
0F3xQ5ba0vnDfFipyGrAqyV0/uAIt7qvKY5TpvOTY7CnaIzCe2k6f5A80+/3
qc+FXz5qzPSRpfOHjfDXRU+G/6X3Rbhh8KxKhamuByl/PuzwS8vdis5nTTST
sF7Rz5TsCaPzCFv4YHZEdxe9T5Z7GLYvLq/cVk/5c+HyuQ+DQ+j8klMPj6mb
J9Si8xDe+mQhE/0nq6CMzm/5wbD51uiAu3R+J5IDj2lcs9OO3p9RfwHLB2To
TPt3HjiQJ2SUJwyUsKD6dATC37cMDTLVo7xP4Wl3IufJG1Pev/Al/V1pq+n8
OVcpRcjs6B0etVJA1/8CfLi948toOg/3eAwnrI9ZPu4HXf9f8GinzuZ8eTrv
mZ4qZFYknE5c9ZP61xRuyvuxPleU6lkDnzSJXB4wjur5A676GVTdZkR5Fc6i
n6Pv13+m943k18J9QhsjS2fK7wNvc3GStaHzuuZv8M4cwwmW9P4OZ0qakNnd
J286nvpNbzWs8CDA6/0Y6gdv2K7G4ds+Oq/nJcPdyS+ufaDrry6XjvvthZ71
E6dQPVfBT588Mjen9424u+H4R684X6wo/2m4773byGg6r+24A88vcD9hSe8L
Ba44J2RiB12VvOHRpfs/aE9ijg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
tRPnl0NjKoKfUb8X4MQp86bkfaF+n8NevMf7u1sp/09Y4lhYWB6nk80/vgv7
2RCB2il51qrL4WDPy8bRSqyb2mFZDadaOyHlHftLyPDbz6qI/aS8S2De7DFz
rF5SXk+4svbhnJVvqM9vcLTTycrWYupT+Tf265d6a3/nUt7FsOn7lNFKmZR3
J6xupR6WQ/0ITsPxzyeHt/hRn4rdQmasxt3+Hg/qcxEsvXNX0wwezYMrHJu9
9tlKH5qHk/AKzS1fFh2n/EXwsY1prx5dpz7n/xEyu052V/NPUZ87YBOlUvWi
RMofC5dcGsgdTNdHtxD27nwwOy6G8n+CUy7ZqhxNoXlw7MH9tXmsGj+b5iEa
Xhwxae6rBMqfB8fP1oyLTaX8H+DYN2/+Po6m/LK9Qublu2OyUx5Qv5Fwrkpt
kk8B9XsH1nYf4RJ8h/I3whZmNzTKP1B+6T4h81Q81frNv/yz4O9H5h6ZQb8/
5hasn2V+ci7No+A9LOl8rujrGco/uB/rq/fOmv9OUH49mKclXPOc7k/uJlgj
o2eTPL2/6S0coT7wSfM+9SvxV8hc1Cnw1Gui/DNg+Zi0pBGllH8DPHni22+R
tZQ/BK59tGNIynfqV2wA6/+V/CHHv1G/U2GNeId1vwez8xhjDfPTet0tpFgL
guA97yalyKjSPKfBtTlx61wWseZN5ogYs68L7n1lWGetg68e/FD8cCHN9wHY
rvhI6KlVrOWvwiuWt5tuWsHa5BU8qmD3YWdn1hVrxPB5e4Ni1Day5vjD/oOO
V5s7sNa9DN96vKHqjy1rhzL4oXfHnpVbKH83POx1YKn7brrf9g0SMUqTE2Ni
d7DmJsPrkl0bXwdS/hfwYiWprbGulL8LvvNixHalIMo/UVzEuJ+cGXn1Emuv
8/A5Y20T52zW/Gfw+8nRyfYvKX8HzB3/+fTS95R3mYSI8RvpdPREC/X5BA44
OMr4wD3q8zvcK+0kPvMm5VWRFDGDXq1fqkifxzWDFx5a6TmbPo/nAR+Q0o7Q
f0d9foXb+wcSrT5Tn6MHi5iqn/+FBnVTXgYuyb55zIb+Pd8d/v5qrtb8Lsp7
Ck6ZHhaX1UF9KgwRMYYBb2OU6f0xC2H+hIyfa+nzBS5w+tjPGzeN7GLzn4Bj
/KPG5JNV78HNXq4HyxazzjKWEjF7R97a/cWKdZMTfF4ur3rDWNbyMfBp+aeF
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
/F5s95/Mx+5F/wOIzm6V
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.9622146812073438`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.9622146812073438`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VTI\"", "\"EDV\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.5556753999084696`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.17361970520785822`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "8.960246753362522`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 3.705314944965003*^9, 
   3.7069034649383307`*^9, 3.7069037328449516`*^9, 3.7105682953630652`*^9, 
   3.7105683517795725`*^9, 3.7105683944284306`*^9, 3.710581453565096*^9, 
   3.7105815053723936`*^9, {3.710581564095255*^9, 3.710581582483427*^9}, 
   3.7105949540693645`*^9, 3.7105955015931377`*^9, 3.710595549161105*^9, 
   3.7105956143497777`*^9, 3.710595818486801*^9, 3.7111748866995935`*^9, 
   3.7111750037978535`*^9},ExpressionUUID->"b4664e0d-79c8-4133-bcb3-\
914aace1b865"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
FeU9JYO1vRWcoKPe/fkJ66hA+O7ljUrv+1kXXIcjN/PnmY+j/FWwcl6C4m3K
H7D2No8J6Dpo+4g+P+Mg7KbyRv9AAOv6FHh2ZrqdehhrkdfwdJ+z934rsdYd
hKMXV2TXTmTN3ZfLY3Qe5TT51/DY+ibDEkJlv/eOpfxc2HN28uXsAvZ1+58w
J3yhn9cIyj/rDtbXgVtehVmwlr4Mz1NcF7rVh7X5c/hr/Zvgr+XUH31wQGZ0
37IYyi+Tx2MmZIupnHlG+Y3geVIVFuHUfwnf4YgS0QBjO8o7/S7mh2pdwyoz
1gKG8OrPYS+tOth8HG84f4XftEsiVM8ueOotkRO/6ft2St3jMR/tTN+e/Mz+
e2l9uPVYtWiRNOX1gm1iL/pslKC85+CsT01auvOpnlPyMT/sGb+6bhjVcxkc
tf1g65AlrL22wWMGHKQm0PdLOA0vH+0n57iF8hfCKkIyQ20jqB9072P9/nj6
HtlHVM+tcF2X8upSYernWNhDrkYkZhr1wwPY3UdVSp5P9W6FywqbIhMHqJ6b
H/CYXeUZCh+7qJ4n4G28M4cV31H+fLg6zOTAt2bK3wxLZU1vOVBH+UUe4n7m
sNxjSjXVNxJWmWJYNekb9UMeLP8o94ZUD+X/DPvIhj+ouEf5xxXwmCfddheX
l1D91eFDFRcTlhZRfW/DLnKTB7qoPwPq4bwTLj80Qyi/UCGPUYoWnHP0I+VX
g90ueL3TlabxaAe31M0/XqhC88V7+L0qZ3I1jQ/uyEc8xq/dsk14C80X8+F9
gssHbQ+z5tj8+7r9Efj2cIP5w4OpvoKPsf645qci5k7zhQq8zvK4aDDNJ+Yb
4EWpvX+yVtJ4DIJPWWdIq62n+e4G/KD8J/faaJov5j7hMdpCL86703zptQ7+
VKkrE3uX+iMAjkqT1+m5T/2RCjuLPFea9pPqXwUvCGgbUmhC9V1ThPW3YIyL
8wKq7wHYf6JZQdUa6u+r8L0tjXMOb6P+eAWbB1uJl56h+g/A2sft4/qTqb5+
xejXkfdVIl9SfyTBhxbtHbI/jvrjBcwdz5dVmkn90Q/PsN098to8yj+zBPNB
LedRuCf1xyX43QeNgtdB1B/l8KqPOuqci5S/F/5WGVY7PJryriqF32ndGRtL
/VAGL4pOtZtpS/3wDQ7749PQtIvyTitDvWyWZpfS9xdZCaf9rhs2g8av7k44
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
q7MWZkKuN46heksPN+AzK59J3e3+O95U4MEs24Zs2h/W34D7U/f1L6L9lMgb
WPnZ4JVtNJ/oDl3JZ3Y7fTDSOUp558JjBWuPatpRfdfBj7v0J4ZdoXr9gTXr
+XZHT9H1nmPIZ+4tbjTpLqK8a+DBnEkNwrR+7zwAx7xNNn95kq73AJyyPeb5
kpt0veVXoR9fF+5xofOJenP48IfXORbplHcfrFyRc6U0h/ImwfnK/WPV39H1
nmnEZ5bXSjurV9D1NoXXvhL4UCJL5w974JqVr7r0Byj/JfiqtWjCqQm03y+H
+wVeuQ/QfkXayBjz6+Pc2an7aP/mC9sbBH7ODqDziHh4wi6rNztS6TyiDL7R
K6zS+ox1/Tf4iv0QuxH7ab923oTPZJ16tGjIKjp/KIb3LFbbra5M+6MuuIi7
oWm7K+WVMsV6tGPJNuettH87C58+Hnzk42bavz2GfxQ9r+j6e/7QAcst2v3m
1A7KO9kM+5ddQycGHKK8enDiplPfytfSfrMQVhF3eGq2hc5P+PCxWT5rLcTp
/GSSOZ8JVbHp8phD+XXgp5+X79u0mPJvgZfP/WKxcyqd57TAKw/tlBoiRfWc
YIHr9dZ+5AJTyq8Nu52ek5urSvld4SLTMyPPT6f8J+CzhXkO979SP4xfjflA
Id5zDu1v6zXhHamp7fvpvErEGT6SeFOVI0L5I+CgtFMVRjMp/x14+EDg+5F/
66u+hs/8SkqLXDea6usAT6pRvMTQeZV9GOz7Tac4VJvy58Dag2ul1y2lem5a
i/uZYOm03cupnqFwzLY1mf6+dP2z4ElP1TIfLKPr/w426ZC43OpMeUdaYr2V
ILtnPl2fhMOwzVhDWXE6D+Omwy+/pW8uuEp5a2FF43IN0cOUV3Adn1lh3K9y
5iHlnQfPFjmtqpNI9UyDR3mN+yMZR/WsgYsV5PwWU3+YD7HCeljyQc2bY5Rf
yeqfv59hCWfd9jA5fp7qWQkL7eiQ7Amhev6GBb5cnyq3l/LPXo/XpfreTF9B
+VfDNq7bjphQvwgcgJettJjvMI3q+QtWGzrviNbf8wi5Dbg/nbujZ9BD84MZ
fPXF0tFz6PpJ+8HJFbbtpnSeYn4FlkznztPSo/rKWmM/umGMntJEqq8JnPgr
pcDbhPLvhut1tNIVaLx4JcI/eVU7ko9Q/mfwwKE7YfZ0nsdZtZHPeMYIL9cI
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0V64oG/rj2lsl+rhCfc+tIji+4riB/xHYx734gnzNzuF9baLadv1K6zvbnjR
77YpHpb+fB22+09Zoj3K/F/h3QW15SNYX22T00bhytdF7jN4vwz94ZclbR57
Wea3z3CgZHrwDct6rdEZo9CoKGDYR87HIh/4UMkh99p8f5HOgTOTfg9YyPcD
3Qf426mVbVdY+nODs0Yhr835qQ58n5D0hTsOjk69znrJlXDZOrdp3yzrta3w
89O+6R6W9UO9DKNwt3Kr5bt4v2W94VFP7zv/oZXT4SLJlIUZfN40m+Ful/t9
0/L69BfgsM37LqyzzHeyTKMwokBvvdcyX4TASde2OW7bwfwb4fd+N/2cOb6a
z8H9YoZ0/ahh/tfwwbdXB07ayXpOOod62cmDDtKG9fCoiPtfh3L8EWfA4clL
7Q7tYv4XcOegBgd+8fhK8Xkcf+r6jxcs49s6uGP/Xi/qsl16GrbdvOL6Ee6v
eA7/3lk38KRlfK6qMwpzPHWnWnG81LnA17NEL79xPJSfgA/65u+YxPFJZYBz
nXqVpnH9obW5gPnUNaJuDq/P0Blu5pYQEhLP/GNhm4zh4VGbWd/HsF+rM0Ej
aH3FLLz/5D05/SiG+TvC+2vPSTwby/yj4GlvJXZL1zF/FDypwtxGvbi92foi
ns+Ljon12S5pD98I8HkbE838I+A0lwqSA+uZfzm8fuCSqk3WMv9hOKHls2Ou
Caxv20tGoYfz2cljmU8ZANs/HVf4hPXRqOAlWz4Y7Hm/9AfhxZHb3w3Zyvx3
4YhW31695fisHnoZ9cseu7Q35yfdYrjZnFbe32jzPjhvfdnau5b1xm34V8yg
uFq8f/Iy+MK1uIvP2b8M4dmYXxddbdx5G+ubDP/w0ft3TGT+m3CNdzZ1r1nm
7+/wKbvBlVfxedY0vYL3s1t+yz3YX6RJ8LHJu99V5/1T5MGZ8ZemNuXx1KVw
btaqXZHsP+Z+OTherDhyP+ulugr/zm5i7cP+qv0ELzrYbGV15jc4XMX6LMhu
4W7mEXvDI6Yfb59qWX/Ohv3OXvT5zPldb4arjd3oWsZ6iBrkYjwOPfpiNs8v
7QObBo+O+cTzKWbCy1w/X3Xj+ka9BR5UUGzVh5bYX8P8H/bTprZl/eMBZ+2/
ZjrP+6maBi94UUdlS2s3wcpKr/qe4PrCoPvrrjvW+rM/K93zjMKjxapu8i2s
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
rH/n/j8DxXIt
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0.6702829368002565}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0.6990357643620589, 
        1.2740923155981088`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0.6702829368002565}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0.6990357643620589, 
        1.2740923155981088`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"TBF\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9553131280615489`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.01530350615171597`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "62.42446133524967`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 3.705314944965003*^9, 
   3.7069034649383307`*^9, 3.7069037328449516`*^9, 3.7105682953630652`*^9, 
   3.7105683517795725`*^9, 3.7105683944284306`*^9, 3.710581453565096*^9, 
   3.7105815053723936`*^9, {3.710581564095255*^9, 3.710581582483427*^9}, 
   3.7105949540693645`*^9, 3.7105955015931377`*^9, 3.710595549161105*^9, 
   3.7105956143497777`*^9, 3.710595818486801*^9, 3.7111748866995935`*^9, 
   3.7111750056551285`*^9},ExpressionUUID->"ab7fb684-832e-4eb3-a4e5-\
54a6072f92ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IWM\>\"", ",", "\"\<RWM\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6877208799567623`*^9, 3.6877208858208823`*^9}, {
  3.711174793824665*^9, 
  3.711174795576869*^9}},ExpressionUUID->"4277d921-c313-41ad-9dbe-\
20988045f588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wqJXrl5sN2adeBgWlrm/64QJ66qr8O/Kw+V2etTn9A/Yb42/s5QxpT7XwVsC
EhamS1J+f/jDCeNf/NmU/zKceiF25rsZlL8G7tpb77VxHvW5thXrk7rZiRs7
aR584dwL3op1uyl/Oiwz2MSP3UD5q+Dbhn81XaZQ/j/wuPxJOyUon8CBj3he
iDrbdKyieUiBtxm9d+3UoPyV8K7x9lr3rCj/L/hb97rEVGfKr/IJz7sk984k
P+qzAo4pi+ANT6K8PXDK+ZKvT2Ipr9JnHiPSNbL63l3Kuxyew8lbplBGfZbD
hm5K5aUV1OeP/16X9vYqLKe8Cl94TEt01fCTNZTXDOb6J+al/aa8nnCwbdSh
cplfbJ/f4SjR76q18qyVJ37F/bdfoN9DgTXHFP71q3Lp25Gsue6w1VrGbVIz
5b8A/31+wKyvg/oc/w3nf3Wxf897qE8TeFhvza4pw9n3J+6AfYK+rHfSYV0V
CY9x1p8npstaoAgu3juxQ9GUdbgRj8fYb5YWXsmwLnaBfcSeCHsoUv4IWOTa
u8oZepS/AHat1A/gz6H8n2HbJxnWPsasWxz5PCbzdKCCxwLWEmHww48aWQsd
WZvkwwtkecctdrD2bIWbm05mVwax1jndxmMszn8Z9moPa4dc+POnv8ILVlHe
FtgnUOb5H2fKK9KOPO9rVczWUN65cPMS3ZKDG6nPm3DEn/vHIvayzn7bPuTv
t4z8zmNkj1wJPMKlvLNhMS+esTLlN7GFc8bq+H/zoT6bYO02UYcr7tTn8I6h
+WfCl6bLyGido/zWsOywrS8PksOPwqpfDxnoHqA+hTp5jFO2QnyaL/U5A/5l
Ff/txRbKvwH2Ua1ZmL+V8nNhvSUmdgFtNM9X4FP+EuIRTTQP037wmDy74a0v
hGkeLOHULD+bzKc0z37wnJHVTgGVNM+X4e/ntG63XqN5roYzAl5cFv9B9xen
i8e88q1Ilhaifg/COnUTPzTTvCunwYU7qqWuq1D+F3Cl53rzNCPK/7tr6Dz4
dGM/NMl0opkH9ZsMe/7+qhUZQvPwDG775pBzPY7y98LHbVoCOdepf+UeXM8w
Sa+PadRvAqz+c3bW+TLq9wk87Z6RcvBjmo9u+EtXXIH8I8qv+BP7TSXf1tIS
6n8ZXDxX8u74WpqHTjj2Xv1b0ZeUV74X+68pFSm3KinvErhnjcLVj/T3PHfB
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
8UfcuED97lXmM/slSmREM6nfBDjaYpFcawblfwJ/MBgzwjSN8nfDwi71dVvu
UH4lFfw+0912ly5Tn4/gnbqZV0bS5+/shAW91W7eTqC88pOxHlit+2R+kfIu
gfUd/E5G7aI+S+FJl8Iy3hyiPr/Dz+fNjdq6j/LKquL5EOyTdSmI8i6CF/mL
nvfiUN6d8Js9b3Wsl1CffNhU7dCZcEXqU2YK9kcF636m0PUKN4YX7QveWLid
8m+HEw40t97+f99n4djQrL9FdD9ypdT4TMbtlK1/aX6zF8D5MxTEptJ61+IM
i2RmSKXQfEhEwN3rckK0kin/PbhAtvLNmEDqU18dz5v+nLHH0qlPR/i0yDKp
6VcpfyhsWW2739OX8t/57+d9Ts+IofU0/AOsJVfy1M6Z+t0yFeubzMfNQnT/
ck7BLt3j09fT8597G3ZKzDP1UaL87+CM7HsJkbLU5wkN3C829q9WjqA+c2CT
Fo2d57Qp7xv4b4JdmHsJPd9GTuMzfIu6nx/peaMzCy7jaB5tpL6Lr8OXxpuv
fEn3U2cjfLNuqo3wYcorPB37v7K9+o3UN0cb3rV68S+9m9S3Ffx87dimZzRv
EvXw/MUasfMKqE9BzSH9emrCjb82HHc+T/nXwyvSel4G7qb8AfDzl7ynvVrU
51/Y8/u1+ftp/xOuMQO/P1RvmzatN8UW8AijhILnRyn/Ifi0ibTRJrp+ypdm
DLk+2Wpa6KPV6OkuJ5qHNbDcuOVT7llR/oOw8TwfjqIH5U+F5efV736hR/mf
//f+lU0iO2bQPKzWxvVxvtoQ40fzsB+2TAnRvbuI8ifBTvdNCw6soPxP4RsF
537toNeLf8J/dR469tF6yvGeib+395uPAfXNjYfbngt8t3Cj/I/hkSZJEe91
KX8X/L645pPU//drijrYj3gKbnraReefGFgiZdG0tE76PuIhPPZZWfLJq3R+
64QjRy/lbgqm85HcLHz+uKdebpPo+bIYlngoWXuX3FkCH+mrr3/VTufPdthi
YqPO3/l0/pwwGz9/JUjn2SU6fzKwHedEzuRM2m+6wRaG9kUuHDpvjpuD52XZ
xLNOnynvwv/8xmrJuUg6b7rCPR45eR636bx8Fpb7qBc0jL4vCJeci+e1xvRN
jndpf24If9hipLZ2BOV1gjPeMaXxtL9UDod7uqpeZ2rR/XcXNnw9kHecvr9o
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
Y81dko79xZMP71LM/hn/D/8Znrs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
bA/NWXePWDQlF85fcnDUi+K3E/8HKO4pFg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
7pRz1w==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.9547461267035042`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.9547461267035042`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"SH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.2096984353551246`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.05401598063376296`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "22.395195295204854`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6877209007057943`*^9, 3.6877217416893167`*^9, 3.687722164894137*^9, 
   3.6877229814657383`*^9, 3.6877235801277614`*^9, 3.695714571930441*^9, 
   3.6957281426149473`*^9, 3.696233927274042*^9, 3.6967607413772273`*^9, 
   3.696761478024253*^9, 3.6967615514443197`*^9, 3.6967617479688573`*^9, 
   3.696761935722108*^9, 3.696762079427864*^9, 3.6984977509213963`*^9, 
   3.698497818863474*^9, 3.7020194373725157`*^9, 3.704691001590322*^9, 
   3.7050414278141985`*^9, 3.7052520522880807`*^9, 3.7053148130018167`*^9, 
   3.7053149500649757`*^9, 3.706903482661978*^9, 3.7069037513837814`*^9, 
   3.7105683044374156`*^9, 3.710568355798375*^9, 3.7105683984282317`*^9, 
   3.7105814598412404`*^9, 3.7105815089697623`*^9, {3.710581568330058*^9, 
   3.710581586577138*^9}, 3.710594962173704*^9, 3.7105955056542945`*^9, 
   3.7105955529080296`*^9, 3.7105956181547236`*^9, 3.710595824886775*^9, 
   3.7111748918075633`*^9, 
   3.711175007649477*^9},ExpressionUUID->"a28330e3-01e3-49f9-9bf8-\
00ed679d88e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Vsl01krbRvPBkDqM7+7PdYdSKK8mLD3W4bD7Ecq7rm5gXv//zBk03G8o1XNw
PY9ZsXp0uUYTPQ9mwm8Pjs3v7aS8drDUsp+J4uOpn4/Cu09dbhaMoXpfgxVm
xYemK9D4Um/A+PjcnWIuR/PZaniod+DjmZn0/PWFbb/oLKm7S8/fy/De6X8i
jXzpefEO3vx4noj0bZofrBt5jNwh/efj5lE9veERo7J9B/2h+eESvKQivtAl
jvKXwJE1G2+vpvWC2y/4WX5sSkEsrW+8mnhMibab/xiaPzST4Al1a9ZVHKHn
2eumAZ8X9gPu7NlfHE8/nzepGc8fvx674+OonkXwF92RJadc6f53wz/rVYdv
taS8E1p4TFSF+1vPzVRvU/jpbBWdEyZUz+ewKa+1y1KV6tnRMqDeQgqfsR5S
rbU006L5zBjOFwkWb7tB9XaD3+yQsB3aSv3QBp/Z0KHcrEjzw7hWHrO4NtH9
kTTND4vhXZZ3O5K7KP9u+EeDu8uUN5Q/Gh5e8Sw48z2Nr9FfsL+Yt6HG5DvN
b0aw6ry24OhJND/sgG2NtAusaD4oiYQzvV8dO2dF4+8RPHh47katrTS+FvCw
Xsp83TJiLc0P2+CKd7anOKNpfjgDe7f6biw0o/wP4KoJIe66RpS/Bd5p5KTS
6ULzwxY+j1ETGvwm/xjNb6HwnS1TJl5/QvNbDv+/9Xqrm/5Vmt8a4e/CSge3
ldB8EPIV/TBU6+zdzTQfZMFpCTr2rWMobx3M2DVN/kjzUd7wb1j/RVrenlBD
9daBv9Vc/KpeQfW8DdtsuMbd10P1/ARbrzDXF6bnR92wNh4z/ZV6d/hl6gdt
2CVMrXAxjW8je3j3pJwJI+h6STUcMqMqNzWU+mFIO/bvVR1mp55QP8yC28RD
9/8spH5YC8+9/KbmeS6NPz+4wyzFL/k4zQ/CAh4jMtnn0C5av1jNgC+8+tP7
4d/zzhYeduzB9uwwys+Bjbu9ymppvqi7Cnta1kyp4NP4UuvgMYMY8QtFE6mf
V3X8d55+JqdTivL7wCof1qdxaH0ndLljwOdpvoX38y88nfRv/WDVOSCP4BAc
ZqQXfZTGk1IK/PpyuJ6aL+UvhrcHP3OfcYLy/4Qz9V7EHKP1m9TBLjwv25/c
+P2W6psIV8/NPqxF48XtFZwUaTR8HvU/9zt8/Uz59wMfKL9SN57HBste9ZMd
L8KD7r5/yu2l+hbCZ6JG5S7XpP7ogs38tkfx6XkmUOzhMZZjfzkoDKJ+NoGv
2vvJhytT/wrgnIm/5nOWUv/Kf+cx2nLxPUv+rdeWwpzu0wkuQ6l/98D5Pw0W
DxtP46vt+4DP0xz7A/VRdqzYTutBx0WwrxwnyeMv5d0Ffwu0l9SdSnmjYPVn
zy96N1E95Xp5TPKifu7NBKqnIVxc1ZCQQuvnNJfeAf1XFwGfzkyuufKZ6v0Q
vuSVYb+I1sNcg5885qv2sS+uS6mezvDCVBGH/H/rtTNw3/lH8VqLqR/uw/t0
n5Zl19B83AyvG5c8f60s9cPmXzxG9kGNXhjtV5ROw9rbOOuN6PlidReWsKl+
UeVE680GWOXWhujzMfQ8GdmH++8c4TC7gJ4XJ2Gr8in79SKonzNhP0mpc9I6
9Hyuhe205pWPpP1gidhvrF8Ts/h5dB4gpAN3XdWUmJlH+/kM+EBpc/P7K7Sf
/wi/D9sacIdH5xFD/2B8/h4eJaFMzzutPwPyWq2HvSr8GyqsaT1cBU/NbfV5
G0nPO5G/PGbL9Q1hfV2UXwP+GXj2/u+LlH8NnL5VRxBF44t7DF4092hKGo1H
zUH9WF9f/mrAofo7Tof/+s0Q9qX9U5gNLPko9oByKo3HI3DtJvVLd6ifBFdg
302/1oXo0PpNVYjPiKjO9OGp0fptJVyrneM3h9avdYfhQCM7V4ex1N+p8GWv
eVbd2tTfpfBwz9u9AQb0/LAcxGdKJNQi16+n/j4E51ZJaF9woP5Ohm//Sp9Q
6E3z9RtY3M2h+aIxzde98PXX0rUe+jTeDgjzmclRbyObhtHzIwHOdbr5/dh0
yv8Szgo1WBtN+6u0HthJYd/K6bQer5s4mM9YzO67dmEOjb94WPW458ujR+j5
9wLOsgi5YeZP+Tthr2829kNjKO8ykQF58grg/69nO1y6fEqctArlHT9kwN9r
tQR+LhP7uYKhvK7w8G+yOhfdqJ7f4HHSycpek6meY4byGdkviXXKwZSXgS1E
F864I0J5d8IntF+dUKX1QclZ+KO41ZjZND86jhrGZw7F7p8dSOvpsIWw5geT
vKEh1A/b4V37ZiWMoXoLwuHJNpO/RCdS/lzY4P2TZ51p1A/6onzGKvyFmfBH
qudWOKN139m+RsofBivnrViz5TvlbYJXPzc+NljpJ3v/N4vxGfN1Uz7o6rPW
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
EdWrD36y2HCd7ie631MCBua1gislKh8K7rLWPASf36P3vLaG7ncv7HJ46ZbR
eXS/Jx/H83mdjW6hJuVdAW87wUucdoDu9wE4dtIqYz7Vj5NwfMDfK6V0gs8o
6xX7cSuoX83g1Nb0khXD2etu7nCHvM/zz0Mofzz865law9wuyv8C7hedf9xz
C9VzWSCfyTxcV1wxneq5F441T7tYTZ+Xdx621y3pvPyH8hfA73Vmdyk4U34B
LDcl6KDpRaqnaxDmP6aqT/Y21fMc/Kuwr23DK8r/FH77dpdO/0+6/99g+eBJ
S043Uf4xwZifjq1IOl9L9z8Pdl1g8PuE/F82Lw/evVRSYx/9ftiok7jfofZ2
pS8p70L44y/1NOtnVM9cePy2aIUgKfb3OZ9hXk6WaFEM5ZUOQX/fMK5cpcJe
r9MPGfB5Us4hAz6P2wRXSl95OSacdYnEKT4zsevRvThH1kK6cMDRsfrKsyj/
ZljXVslzvzTV+xT87NatT3u0afyMOM1nKgyGThlG41lpLmx1ti90uRLld4QX
jlo66GEE9UMwPNHc/FBSHOW/A39Nb6yovU/1nB2K9frR25caY6meG2Cu37gh
YgU0f52ARY9n6t16Rv2QDofnn7oe1kH9/BGeGRj57st31mHrwviM3nm+V4YI
1dcfdrkqPztqIeW/CW+qlj/83pbyV8E2KVodCaGUf/AZ7Edy0+Wenqd+OApz
h2adL11O9b0O2973X9xP482oAm4w2Ow9po3mL6FwzNema8yFZ1P91eHww2Kc
2//qewX2Tum8s8CI6vsOvn/rZ/sLb+qPP3B6rMcBAznKPy0Cf49O2TuPV+zn
c0rgRzdeKQ6h+SPtF1x6OenidRXKqxI54O+VsoR19ywt/0H1N/KCD4VedKoL
oX74Ace1WAZN41M/TD6L+XHvtJazc9j+0jSHFx7/PtFkA/WzJ2xb5uQou551
GBe+8c05rraT6jkxCvtb2Yuff01gr1uZwm6ZIfzyH9QP++F7MZfidr6g/HEw
c8leuzOX8j+HoyPuFQ1up34wjuYzofZJu8WKqZ5u8KfQ1Qn3qN9LYuGIa3rt
Kn2UvwCu9RslebWA6t0Ob74bGL2D/v683efw98zRfrX9PfVDNHzSXTlc/QPl
fwIvGDpow4+R1A9f4WMenTv7plH+0TED++EsPKydlxnsS/V9BG+9bjJkXTTl
/wKruruusrpA+WVj+QxfPzLBOIHyL4AHBws1SNN8FNYC61xZU3N8M+WVOo/5
P5EperOe8qK3mVv1U0cUf6W8W+EPAUz9bqp3WiNseTvexrON6il+gc+cCEnK
Wv6Z8s6/MOC6kRNsdCjr1Dw79vfdQuDlCo2vPY+wFhoRh/nHc0jSi33UD3Pg
sJNlHw/FUj84wHJ3RN+p76J+CIL3XNSNObiEdd5tWG+eQ/wMLeoH7Xisx3O0
rP120PxmD582tpK/TvNl2nF4bY2HkqMozW9p8KiK89nnprCW+gDXLdd4X7OG
NXftRazPLBRcFzqxLvGDRYr9k+oUKf9N+P6LypGfIij/ezhj/E69U1spvzCX
z2QJ8+V2rWUt4HAH/H1W5bDU+xdB9r6Utx8ecdhEZNdYyquWwGfSTm4Kn7GZ
tdFlOP1qQ9ZWhur5Fk7yeblh3L+8v+HFrdpnWihPydREPjNrxrv7J+nfE7KG
lTfZJJanUj2L4a0RqZ7y96ieP+GXUsNz4lMor3ISxt+Np3npXayVLOBFJ28p
6/+k/Adh3trmjQvKqZ7f4RMLFeyt6qiek5Kx3yqSVDRX7WfzL4efSZQL+vso
vwesvKjM50Ih5b8IF2felw2/Q/WckMJnEg0LR6Wep3qawKlNh/bEXqX8++Ct
AvWmZ6sp/wU4WF9/pYgG5X8Gd37UOXltFdV36SXM56IGBdsc/xr+D6GcosY=

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt23lcTN0fB/Cx7wxZk2QrS2qUJUvMtfRYkkGyZEkoFTVIsmWsZZ+UPRlb
WSqTLFmbLGU3pZRsExEzYeyl8Pv8+szzx/M879ed5TPfc+455957aucdNG5O
VZFI9KG6SPT//+If2fqleoH/axyEfylOwwtejUrpUaXS6qfwqwNtfPvzuHTS
Mr2wb/j3wXdo+Ro4z27t8b3/Pv/fqgR4XcDjzj2rVh7XPoEPjymqMY+vF1VZ
rhe+XsnpXP638vXKVfDFtXUXxPH1mhPwrJBR3TvRxsdwYEb/Hrn8fKu/8GBD
2IudfL+s8wq98PztlHkVtC4Onl046pvrn0qLs+CWR+XLY2lpOTx14eITIr5e
3mmlXhAfrrntdQXzj4EtIhqbD+Fxr1J4zpS0brG/mbd9mF4o6H8s24Gfp3GF
a9btd70Kf58xBPaybLWxZg3W8wfcunkH71QeV7ddpRey1z53qVKt0roRcMaZ
WmWdaHEwvG309rO+1VnvWDjy9fT3e2qznhYKvRA22f7Cm5qs53+w94Dh9nv4
fskCWF4l55mE3++1H/bpnFksZz2Vt+BLhvy/B2iroav1wi4Hs/REtrcsED4T
XlpnLeuh2AO3jVDuii+vtPo6HN3x+uLJtK4EXrO7SLSglPUMWKMXFCr/4wGs
l2onnFFxx/iX9dKmwSMXu9v5lVVapIez3Q+W3OLrJU3X6oUlk/fMyefna3bA
WjNjFd2vShuvwPMKZ9k3+s7+UAx7zZ37vtZX9ofG6/SCQ0qgdIaR+fvDJ3+/
9Ejj68WXYAuPnzuVtLQIdumcu0BHyxuu1wtJ0x5duczvUznB0n6uIdofzO8N
d3Pu/PS3nv2jEK4Y0cJ9tYH9o94GvP9BSO0GH5i/FxzgkKna/575Z8DCklfT
G/D9VpvgBiGre9nT4mnhesHedZ6/jL9HGg4XtQ4d8KSE+ZLhZWHr7MqLWD9J
hF5w1xXYDnzD+k2Bb01NrDKBebzWwU17HD7STMd8SXCX0NOGlny/Jh927f50
iOsL1m/iRr3wvkvtP0W0YjU8wzqkS9hztv8p+OjwuKDheWz/XHiwV4OC/vx8
sWgT6r1gxP30fNYvDDZWsRpa/THrdxzeFbBsYZUc5n8MT3XefLfsCfPabNYL
x+t3lvfl5xuPwbPv1ilplMt6aWH7g7MD1Twu+w37/rt53sj3Kzpu0Qt/Wr7S
55vyusFXv3zVzqSlD+B3qrrC6Kes5y84bJE40ZKfr2q3VS+ot46uVsrfrx0F
O8reODvx94hC4OnFLc+l8/3K7/DqG+0kTXlcY7kN/XXPTc9F/D7jcPj74C+K
Hc+YfxE8akuLXfWZV3YANj7ccUifxXq23o58PxKrvuXrxS5wP4NVrzW0VA6X
Jvb1PMX2lu+Dl+3UnTpPq27Cd6PGxhx5zf4wRKkXMl8EG0Sm9t8Nlz5TzR/G
z9Okwx5BSx4MoY0GeF7P5Ta5WtbTP1IvNLGaOeUS+4vuGmxe6JK+lP1T/AFO
K4v9lcb+KTXboRdenuu3rYjjhzYSfhXxaGZTnj+iK7DDpdc9r7J/St7Bt63n
b0r4yfYXR+mF3X5V/9rSyn7wumvt6h3j+60uwsX209Pb0bI38NOjcfMCTeNV
g2iMx42KJqTw/eo+8NGW05YrTfPDTFi6+3S9bRyPVHV36oXQxR1P/TDNVz3h
63/Md8zmeCiaAbs8eHtlMMdjyUb4y5Lb50tqcb6qtUsvTIlwdd7D8dbYA246
/6zhFI9bTYWrjjuYfYrzl2wDXP+6X8/q/DyFGp66xcH1Rh2O//a79ULHvpl7
3pjm28nwglHTHd9yvJevhQufpvbqzflAlQgPia2V/Zzfr82Dn7VZeyG7Lsd/
jz16YcDKaQ8z+flKBVy3SUifbw2Y/yTcrPHcg/XEzJ8Dq88GtrvfiPn/wRvm
pn+b0pjzVfxevXB2789icXPmzYY1tTvdXsk80gr4fcNei9ZxPpJb78P8pIks
f1+f9TwGH74/V5fN9pM8gusfHmmVaJpvy+DBHwoutuDvUXbYrxdWHlzZ/TI/
XzMa/pYyt3UX1kN2H75WZ1fGah5X/IRvTki8Vo/51VYxeuFewY2Yr02YfyR8
zifgQL1mzL8Y/tRBk+tiznp+g+v2tby134L1bHMAeYMGzevXivmHw030mT3H
tWZ/WAj/nvX5yNwOrHcM7CL5cPlfJ9bTPFYvpHZ40mtlW9ZzGHzq0fn+8W2Y
Pwh+fD7ri4HvV+yFDy/70SO0JfPfgP07fXvdl++XDj6oFx7Wy5VfYz75PPi4
1ivAw5L5d8GHaxd4t+XrtRo45feib4Pas55+Kr1wYVj1Wd78/Zoo2HaFR+h+
1st4FX4pt1buZ32t3sNfEk/8/Mj2kzU5pBfiJ99Kusf+pFPCny/+GbuH7xdf
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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.947338212511264}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.947338212511264}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"IWM\"", "\"RWM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1689795823144369`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04777218677362714`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "24.46987800357043`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6877209007057943`*^9, 3.6877217416893167`*^9, 3.687722164894137*^9, 
   3.6877229814657383`*^9, 3.6877235801277614`*^9, 3.695714571930441*^9, 
   3.6957281426149473`*^9, 3.696233927274042*^9, 3.6967607413772273`*^9, 
   3.696761478024253*^9, 3.6967615514443197`*^9, 3.6967617479688573`*^9, 
   3.696761935722108*^9, 3.696762079427864*^9, 3.6984977509213963`*^9, 
   3.698497818863474*^9, 3.7020194373725157`*^9, 3.704691001590322*^9, 
   3.7050414278141985`*^9, 3.7052520522880807`*^9, 3.7053148130018167`*^9, 
   3.7053149500649757`*^9, 3.706903482661978*^9, 3.7069037513837814`*^9, 
   3.7105683044374156`*^9, 3.710568355798375*^9, 3.7105683984282317`*^9, 
   3.7105814598412404`*^9, 3.7105815089697623`*^9, {3.710581568330058*^9, 
   3.710581586577138*^9}, 3.710594962173704*^9, 3.7105955056542945`*^9, 
   3.7105955529080296`*^9, 3.7105956181547236`*^9, 3.710595824886775*^9, 
   3.7111748918075633`*^9, 
   3.7111750093345256`*^9},ExpressionUUID->"99b99da1-2e37-41ff-9ca4-\
cdc29d6f1af5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EEM\>\"", ",", "\"\<EUM\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EFA\>\"", ",", "\"\<EFZ\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68772110106639*^9, 3.68772110604591*^9}, {
  3.6877212572034655`*^9, 3.687721262025201*^9}, {3.6877215083368464`*^9, 
  3.6877215085778017`*^9}, {3.7111747974777546`*^9, 
  3.71117480151537*^9}},ExpressionUUID->"b1d487e7-f623-4847-a8d2-\
c923553c7741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
5t02NOn3s5zAP42d3K8XYd7woUl/z3j+MIcabmvmeh4kZmqBBzS7WD9uEWc7
gvXUFJY7x2L+EPDK1gD1r88wf9l///7gQfXhWuxzy1+Yp4PizoOB2OdRcLhH
f9jrC5g/GGwtHvN0/v/yl4D/2bz6/EYd83+e/PM8uxHYDz7J94Wcxj5vgJUK
eobPXMT8heDo56/bVcUx/8fJzp41yqG2z9HOXmqO/V4HM+a1Bz7bif3mgT2l
R75H/sR5/gC2ys+q/3gU8wv+g/nwFbg+MQXzq4IVnmtJuuDzwMoBFz9ayLwq
hPPcAd7vXjR13Uyc5+ljHCr7keAn8c+4PiuBlQM+6ehX4Pp8ACyfSe0Wm43P
WytYNtRLbgeuDyL84/B+s9PgeSIf5pcHb/hz7tlXfH4Z+8Cf6KuYvZrY/2Vw
g9Kwd4YL9jtlgkPNeT96dok79rsOLBe/ojWtGefDHBx0sDJRvhTnwwts3XE+
2fsp9n8XXHd+hZ3Yir+k3zU0LiWxWNpOYgNxtilYPzTG7Ooy4q6LYM7urS2y
UsQiqWBmuwLtnCox/RV4vOQbX7U8caPRFLB2Wn70DmLaeXCkwa6Jb/uJFZPB
oWHnC83siW1fgJnntsjQvYlZw+AZ4dLfg8KIpc7yQb5ChYCPeN04ESw79Gx5
WQ7mfwY+uVcxgBuK+QfBrMKWMgm83rVsKpd66rbbq6GMmBEPNllWxa/8i5hd
Bxbnzhre9w/z/wJn0spfX5IZIXl38nOpu3PjXcN1iCuegLUf+ma5jJCf5/0E
/0l4oCY+n1yXWjyNS4UtUQldvZzYeDv4yo/5R0aWEDNPgsU3ZvjFLiUW+Q7W
PPMnd9pP7HPhdC7lsVGd+Wcquc6gwJfLZ9/VjsG8J8Deu2McDhRj3jCwI+tj
e6or9jlPgEsl8jal2itgn5rg//c8VziAt/ye2XNaA/PfAk+c+z387S32XQre
OOvNVv4B7FNjBpcyaui0D+EnebrswSGuau/4vuM8sMDNFUuUyrBPRg/YwM3J
8AN+fpqdIJfqyZy+PEoK+wwSnPT7bQvAT8N2p7+/T1wxU4hLaUSdt5OKxfsd
AJZtLMsdwLzMh+DgNIkvFp9xPXgPNq/mpnptxPs9YyaX0tldw52di/lUwL9o
P1+X+WN/D8B+AceoKG3srx18Zt5Uo2wK53X6LJjHscufpy3FeVUEW0aMLojA
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
XN346P8H4idF4g==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
H6bEPQ4=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2XlcTO8eB/BJi7I1JSGpLFEkaVHK0iHZokGyJSNLVDKpSImkIlnGUpIw
WpQtCSlbU2kPE2mTpIRmoo1kifv9zad/7v3j3vt+nenMZz7nOc95nmOUy45l
m/uwWKxmORbrv/+l/3BC94gZ/N+2WfRfQbfI8tYbyn3+tf7n1Goy76nms7t/
pbZe5S9m+gXlJDfDvGBy00xbmQ34e8ENsprVywvOOC6qIGts6X/PFedjyQSI
mWHZqUrD8Xn+frKvnc6NXFh4lZxcnJKyHp9ve0Ves+TbFxsc1/lL1ppaetIM
5+fo7RUzheKYkm/4fP0V8iCl4Q7j8Hl22f/b+jf57dC8OvUe5NcNFDPlSwau
3/xHaoE9edlSweICmNtN7pqbeXpPt9T80fvEzBv3i5IpOC60I39uf5hsKCM9
f9sucsYKX2dzHA/6Tl702sLJ+gf61N4vZhTuaa3T+oW8C8hrNo/rY/hbarYP
edDOzB9FyGd9kRxTXnPWDvlFmkFipjty610LfB9rHjlqabXjCPRh5EUO+77N
LQGf554nF7//VheJ4/w8ckZeoXcZ+tKxOSBm1IeUjrjQ26cnOdakcft45A2K
Jr8MeBCq1Yn8OeQ1g+K2BHchfwv5iZNP5i4c57kHi5kzrtc+a3agz0iy5YzT
Ae74vCiLfH26z4k6nJ8lJvu/15gi+x351Q6KmVuBQxvm4vPCU2Sv0wdiR7dj
PDwiu9lGhz9sRf5PZPu7OSpxMEclRMzsutSQIvmC/FbkY0u6DFVb0O8D8vxh
IY+LJOj3A3nq151dxfh73qBQMROnHlkZ3ob8FmTTz7EHjjcjvwu5rlgQEvUR
4+M9mXOjf75aE/rtHyZmbluYXnDCcaEZuXCP3Ryrz8i/nvy5q49eBc6nc4S8
cEbVqKZG5Ft3SMw0dHL3heDvrQ+R2Q/mPniD47zb5BqrY4aKH9Cf0WEx46ds
UTOgHv2tITtsG3rW4x3yhZAfXfg5cx3+np9CTni6r28Q8giryBED1OY3Ij9n
ZbiYeX5u67gAHA86QHaOOaSq+AnX/zp5WGaSMBd91r8mT1+7sN4P14fNOiJm
Ut9kD2XQv2AfuSdereN0HfpLJi+eH55mCrNekZPtqtyMYe74CDHTopz5fusb
9JVIznuuVLqtGn2JyGf6anunViHvL/KDLyUjP1ci79ijYmbsFnFPPZy6hFyl
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
3kpyavbs7fM9kfcA2Tl99UZ/nE90nbyvfJ+RIvrnTmgQMxYB7t1huD/5DmQd
vf0Oz9CncB95/EX9Wi18X1syuetcQR0L1nlFdn6U6bMXn09d2kjz96pHVeMD
0GcAeUTrqQGVe5D/ClnSf3mULsaHtYhc2nms5lzv8+IXeZ92iL0+5mfWng80
XqaHuRX1Ph/iya+TQthByMt9Ri6UT7r9NAj5f5DPO30/OgfjQziqSczY/XIK
XI3xE1RMlvMc4zoA91vqN7L3yYrPFhjv9Vofaf8ksPE/cBV5F5AXqiU6mCej
zwJyiuGrv79wf4rayam+Gtn3E5FX85OYmZjScTgO97eRLTn/V9mtuxnIyyM/
HzMyamoO+vxKPh6XU80Sos/hn2m/lf1N0zsX42EOWXxDdXEZPh+0nTyuYtrA
lXeR/yw5NFRTKykTfao30/3ToyP6ge/jWZODP8x7G/EA+d3IDwVFB1pxPtGZ
5v/7PlYW+dq1L1mBT9HnDDHtnzsPvtfOQ5+u5FXrioPe4/NtJ8n/Gkd2tJQi
/yOys16/DweeI/9H8lwl69dvX6PfTRIxs+eGoWpYFfo9QbYQpfDmfkb+TLLW
jguuh1uQv5E8dWSh8uJu9Hm0hdYPyj8TD7Wjz3RycvKvQMO3yFtPrhi+4Nvd
ZuTt94X2h5s2/HFvRF5TcsisLpW7X9HnHXLSvvu54h/o8y3ZV8Xvo3on8vb9
SuPRPzEkDd/PNiZfiLAUj29AXifyxclb757sQZ815J8bY8dzf6NP+VZaD8yZ
cnCgfLs0/2SylWWHnY+K1NzV5Iw1F7fmD5Kaf5CsmqbSdaKv1Dp92mg/3qDt
z1GSmmNALnF6HPxITuogR/L7/K/Buv2lTg0ixxw7+/rsJ+S/RnY/WbKtFXl5
+u10XFbn51z0K1hO1n23p/HcO+QPJD9XTz7YU4f8yeRtQ/J32deg/5fkFqtd
fc99QL+cDlo/nX1R97EV/fqTN/XIzuLBOolkrco1EXos5H9BTpyVVLWuH/L/
JLM4M/rIq0rN9uuk+dpCb81ybamt48hFNwZO4UyQmlf6/xZ0kSs+5irumCS1
SOcb7R/G8Q+cNkK/l8i3nO8/qpiKfovIrrWf95tMk1rYSd7k7jtIEW4b+Z3W
X7aTtb+bo//5ZEN5m6M1M6WubyOPqV/TJGeDvCO6aP45teRPLj5vPZe8xbLl
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
aC7Gw9wr9HsWRQ+as+f7rP8BdBK9bQ==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 2.3118057150120297`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 2.3118057150120297`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.342104966174442`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.087650117179934`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "15.312072697167984`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+JuvTdCRytfO86Q51ED0R/OnncB0QcvsiSB6PUcT6aB
6CXbef6C6DvVj92PAekW+weKLJ2vHSUaQw5xAelDR6bsZOx67bjCXeIrU/dr
R5tdvwKYgbSFkVEUiL62akcRiN7hU9AForu+mc4B0el/OKSD+147sim1KoPo
fn3R01xTXztuemmjoTwLaJ59m/M5IH3hziR509mvHUMmLDgQDKQdpuZdBNEy
yXE10fNeO/L52s4G0S51z99FLH3tePvity8guuKi3y8QHXbELToeSGspSiaC
6L7gc1kgumwv3+dUIM3Ru8YsDUh/iF5gA6KfTDrhAqIzFB/FgWimKHu5xmWv
HRtWZumAaAAfxp+h
  "],ExpressionUUID->"ca98dc12-1d6f-47a6-b7b7-806a1b36f16c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3Hk8VP/6APCRhMR3lKgsWVIokYhsOVIkyyQqrbRYoii0WGqSKFkmZass
LUglRKWNyZatmhaJkokkM8mQkMjvuefxx+/cP+6979dMM8885/ms53Oo7PRz
2jOJRqN1T6bR/ve/8B/GqaM8Av+vYAX8FzMffPyY44cV0qQLmsFztl4djJxH
2mJTMOX9/uHgSTL6i4fHev/nzNvgqz3Xjev7SHPegwcHBVb+SuT7aUIhPML2
c9I59amkWcfBFpXFQ4pipNm5YPqSnjDRSaQFb8HKO1v+Sk0mrfwP3Oa5dpb4
U/LzGRqhPGIgf2UwvYw0Nxu8Pl79WqsPafpr8JOb8WpXt5C2+AtOWyt7eIYB
aX/1MB6RrbR29eOmn2T8jmCB0ulEjir5utsw+PJM07MLB8nXWarHeITV16h5
SS9Is+3Az7uP1M0OJd8vOAT+eEVUdo885vM3eIegWHTVC/L1grnHecTjFdpz
NsiRr3PXgNfR431SNUnTA8EfBgvEDVIx3+ngoD9TDX7UkeYoMHlEj368s8Vl
zKc1WDgs6r51OmndA1S7XQLr/XY35kVgvqvAcbPmHPkvHvNpdYJH7L+/IpR2
ljRjP9jTe/PtWXYYfwq44axo3GsjrIdycPt4WWVlMMb/AywXn7XI0x3rwSec
8nmZieDrbtNbZM9h/GXgPJcejzuBGD8PPONOoL5jJsYvc5JidsJJyvcJnoC7
/rbeZWzB+LvAcoEly34RGL90BI+w19kecMIL4zeJoLyf/gicYzOaejMA8/sV
LHXlpOfaDIxf6hSPmNuz7WM1G+M3AuedyDO5WIzx7wSnzaN1Zx/E/H4Bf1+Q
HmV6CfMrEckj5A/H/xhZifEbgK1FmQXiNhj/DvCDo91yd4Mw/mjw3XUSLsYu
GN+2KB4RmmM0pOaI8UWBb+zqjlc6j/EVgv9tr5jaEIr50z1Nya/uZnAag/00
4S7GFwH2DNY+y/LF+O6Anx+TffbCEOP7AP4rc0/AX4H523iG8v3ME2co9Vlw
C3zG90DalrfY3hrBQWuYNpW92N5o0ZT2mnksmlJPnBvRlPzQ3oK7uIInn0ww
3gVneYSo39nYpuOYryyqlTng/rktu5y3YrwjZynXkzkvBn7/ip7PcxIwXgfw
eXWJVTNYmM8X4JMDis8l4jCfQ+BW4avvjS5ivCqxPMI5Vlb1y3OMdy14872B
r5u+Y7yHwHWyZ/ed+Y35HACzgouNOiT7yHwqxfGI1XmCUwbzSAtswLe4/qs9
lpBWDgDThZU05iqRZqRRX+fKx/OI6RrqBvGmpOmrwRvmXJi+awtpC3/wyN1/
Sza5kva/CLZ0Y2e3B5DOrAQP0bMlmy1I665kweeL5o3cMCTNSga/8Z6x4KcV
xvsMfF1OavaHbRgvH5yY3FK7eD9p5t5zPMJux6e82AKMrxQ8WzWGtUu8n4yv
G6xcXZ1+/zvGNyMB+vdVYa5dfaQ558AdpkIfdV6Rpj0B7+p6+H5jNsb3DXxi
Wq5u6UPSbvTz0F6Y8aOsLxivMfjsgjMnXj7B/D0EXzPYN6TPwfx1UF9nSl7g
ES+I9Z9KSkgXGILHL0/6sOINxu8O7pJRzw/6hPmamsgjxEvaNRiNGK9+IuXz
aDvAJ9eyLI7cxnjPgI29hBUWpGH+RJPg9507+OZ4GOZvCfh6+WWV0/kY71aw
1rJZXbIXMd5I8OaG5lPW1zDeArCzSePPDjZeb51kGK+acgOzIjCfruDFpw32
s8/g9T5JfT0zDyywK6l8sxXjb0qmxOO2IYVHnNZq7QsMwXwywdX9Z6ruRWH8
N8E/9Vz9F6Vj/O/AkWl5z1UuY/zj4OjeOof6s5i/nFQe8fBUTM/fCxjvG3BX
R7yr5j6MdxScN6Jj2KmD8c6/CO9vGfu6diXmMwv8cdPSa9PFMJ+vwJu6Y2wv
KGO8f8DZG35rJDAwXrVLPOLbrdfz52N7YNuDX6kNjG1ZjflsAF8S3ph1TAHz
OQjeYbTBPXkdXn/lyzyi5vjDXjFPjN8WPMXGo2INthd60GXK9cn8Bc7LKl2R
eALzqZjGIxhTfBZFOWD8NmDVsQ8PcrF96x4EB09fJy2B7cvtMviGv3OY0X+Y
zznp0D8ZJdkafMb+axV4svYWl/Nl2H/5gWP5dZUyH7D/SgX/25VydtFt7L8q
wCPSIZNPPsH+yzKDR5gtWrVjXwn2X77gsEUFewqxP8pMAgdURI2ITsH42RmU
eFjemTxi7LSytQUX+//z4L0GTW9t27G/fQoWO37kk2k+xvsdXHu/Xmz0KsY7
/QpcD5fimdUpOP6zwA8juG/5OH7SH4O7Yg/a1NZivJ1g94Y7Xlf6Md7/rkK+
uSON9wcx3uXggFl/+jbi+KpbAnayylZdguOFWzt45o+g4sEr2N9Ou8YjCvw1
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
bsOvFf8HkNJ4nQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23lcTO8aAPCR7MVQ9tTIVtbJXsKcFFmqsbXYmlCyZVChzaBEyAihhdFi
yzJRlB8aayU0yZKyDMoyhxr7Vtznnuef89w/7r3fz5mOZ57znvd93mW6z18x
zd9IIBC8NxYI/v+/8B9pzDo9g//XMBb+S3EGnLPJ79TrR3X/t/oJ+HXL2y6C
85wl3mHk8/KN4NGu7yqjf3PXVSfB041mTQhvwl3XPgL3uPVuZs517rqgUbie
WeEUe0z7gbNyPbXmeDi5n6EcvH/c0CnxdZxFf8EjrvV/08uSu7/UJkLP1BTc
P3iiE2fdEfCs0ZZ7o505C8vAjyS9FJencJb8AfdWdHdrsRDj7xWpZ8RR49o7
7eKs8gD7j5LMvbySs+wnuH23AdaDNnJWWkfpmaOVmevm7eWsmQLuuvFftHY4
Z0MoOLDZ9VmFp7h4Fd/An30Xe8w04a6rrdbrmV3N5X+j1dx13UTwo4mTGu9P
4iwMBleXWWT65tRy8R4E/3wUk5c1h7PWQgF/X3ptbvVpzoIJ4DF3AzssPs5Z
vJJalgxu5tZ6xpVKzsqb4Cnx77zLbnAWOW/QM132TNwWc5+zNAgc3cRy/2EX
jH8/uLroR/eYAGwP18A+HoHJ9jru87oPYOtS0yfxbbnr8qUb9cxBpZNqym3u
umov2LS82LXbBYy/AHygZWzWx48Yvx78SJg6/8d+jN98k57513ZS09xkzpoE
8MNpKzavesfZcAnsF9f/vZMVtoe3YNuW93vvl3KWto2G9ld88khlY4x/FHjk
1vUuMRaY34vgTdL2Y3+8wvxWR5N/T946Rs9kPui3UuyF8Y8Ej0jIKPJdgvHP
jyHxyF6CT7UxXLFPxPy22qxnLCZOqx40DNvzMPAg5Y6uP/pje/bdTJ6HKA5c
eufcLjMTjG9uLPl+kljwNPMMN/FhjC8bXLSrblzLu5g/8RZyXTxrC2kvsmiw
2P2/H+HPML7TYL37uQ7VThhfBfjLhEzJqsGYP6+temay9mLEFHPM3wbwvdab
c+Nn4/PPAj+Lbj318BNsvw/B2uvxre2vYPyCOHhfmiw2m3IM+4Mo8K+7smFl
rTlrj4Hjtj3ZLrDG/qA8juRH1mcbaf+GTGqRFsyavPwc+AXb62/w8AehHyrz
OSt6btczQTPKTsds4ax2B88yTVxzRYnP+y61/Af4s/T29SkKfN7dd0D79t5h
aT4Qn/dksI2FxQC3Dx+5eEPBXWan6Ku1nJVfwZnPpF9bZnLWWMbD/Tp263Ey
irPBFSyblVESsZSzaDV4n0VZdtpWztJUcGvvSdGNAjjruu6E9nug51ZzKWfh
eLBhvvntRhacJXLws65PEhx6cpYngRcd3JEi+/mBi/8GOP9VfjMvN+66eJxS
z0xSDfbdLMN494H1T70fpo3FeK+CJ8+TjWrVFuNlleR+iiW79IzZ2771DkrO
uivgXQE7DkX+Yrn43oM3vn2hUA7grkvMEvRM4sCueV69OGt3gbsHVHSxmcNZ
cAksUNXdWL2fs/gNeFAf77nKNZxlwt16ZupHyTnnUZyVDuCmvbPy7wdzFuWD
W50MOG03lbP0NTjOOuPegWUYr+kePZPV19e1eD1n9Qjwkfllg+qmY/x+4NFH
mkREjsN8tdyrZ16dyG8Z7I7xDt1L/j2BL1hfE+kduQPj3QrOzEifviSds6ZZ
op7R9E6vcKjkbLADB70KXe4cg/HOAd/LlP7ocwTj3ZxIvr9CDTYstXd7upiz
cNA+PXPI8t28VoWYTx/w8PkWWQfOc5ZvAjcJjHzmdgPjPwUellF7z7wp9/y0
j8FdresmOpdiPj33Q39htdeouBjzqQDLFhS7e+Vj/CfAju8eH/qZgPE/ANse
Tgm0S8b4/4Grfa8tsMzG/B09AP1N2kSTulSM9z7438ur72rfYrz14ACdr6Zq
ArbP3kmkvQoywWaiipSqXdg+S5NI+5T9AlvPPbfPrTW21x7J8Dy7O9ystcP2
6gYu9FvU27kzvj93wMGHXxg5L+Cs+A7+Nbvp152tOKtFKdBf68xd7Gow/kkp
JB/CELCmWptTEIf5/ALeujD0s/klbA/dUvWMb2byqvvNMX5XcERSWf/70zD+
VWAfK13k6v4Yfwr46dys87mr8X3qchCep9fef1lF+P67gJUVb3VX6jH+FWDn
ORPj08ox/gPggwcW9ejTCfuv6+CLT/ZER/zD99/pELTnBB+33GbYfy0D/6tI
8TdP4q6rEg+R/kerAZ+b87fdTznmc7FKz5w9qB2+WoP53A3emtpjd+5ljPcy
ePI+06dZ7bC/fQdu6jnk8X4b7G/bHYb33cfhWpkYx3/lYdJfCv8DNzP3O9ft
CcZbc5g8b3mbNNL/qezBrysZGwcjHL/ywD12jMo1u4bj1yuw39T1rmndcPwy
SSf1gmZ4Ohl/DTLwsxmbh1T1wvHgBdjkaW3JD2PMZ4sMEp9uCDj8abrULQ37
23kZpD1KtoB3Jba/PO4U5rNpJozXKf2C3byxPdiBw2uKyvsYsH+YnUn6X1lM
Jnk/lWfAVQFae+VVfL8GHiHvo9QbvO91j7ZGW7B/2AhWHvO9/tMV+7OT9Lru
0RHyfspnHoX2onr7uqoB2/N68PKeE3cVPMD2fJxa8ACc8SZkTc1njP8v+JPI
6cjmO9g/RBwj8RmOHCP9k6gM3GXh1eUFltie/xwj+VH0Og7P63HdVc99mM97
x8n7Kv8J/uRTN77PPWwP1ieItVPApQ8rzGt9sD2UgB92vlZT9gbz+Q1s3vFc
50bO2B6sskj9aZgIdp7es1VRDLbn4CxSj6o/Z5H6UGdxEvLXolua0zmsZyaA
xzOVxmZ6rMdWgvdP8SkNHI31bjI48urQwst5WM90OQXv090sdfhKzmJn8Omm
JaN8XbG+CQLfcWqcF22F84n94EadbrR+/QTnE9dOkfmFlDmtZ/p4mo1cWYvz
s6WnyXX1XnCPlEqJhTvOfwrA5hNGjSj8gfHrwb9ujDr7XYP1WOAZUp9pE8Bp
jKd5oQX394LL4ITnfu8/OOD8p60a2v+/SeEn5uP8Zie4SBVf2s6Hs+giuPPB
vLWvRRhvNbilVatZ32dgvK2zoZ4Qvnt2+A/me2Q2mV9ILoCvtRrqkWXA/uwl
OGdSjsm4h1iPtTpL6jntsLN0/iADK9vu3eD7F/uH52dJvahpfo7Uw4bB58j8
STQXfMhdHlEWhv1b7DlSH+qa5MD8tEVlMzGL/ZsYfKSkae3MFhj/LHDx+J8p
OYOwPUTnkPmE6nQOnd8MyCX1u8wrl9Tfyg3g5s7vta+3Y32elUvnPw9zyfxB
MeM8ub86CvxffOqz3vMx/mPggM6mfhETMf7y82S+IGk4T+Zz2vAL0J6iOwy2
D8b2fATcdVvP5lnR2J614FOWOyc5WWP7+H2B1P/KnnlQH5k+aVvmjfOz9Dwy
35XeBX9WTHvZbii2jx9gVdTPA/sGYnvunq9nYnVju+eYYnuenE/mG6qv4OtG
be5o07D9Wl4k8wvBxIvk+YtXg0d3kl2+Mh7bw6eLpB43dP0PxjPRju52g3B8
Hg8WWw6pzLXF/kwODuras3XNZuzPkv4j47+w8yUYX9KZfl6NsX8bd4nU0/Ll
4E9v9zR5c5url1X7wN/PWFtqvnPWXr1E6kmZ5LKe8bZp0sg9DOu1JZdJ/afZ
c5nU54YrYOceKR8b3cf++P1l8n3Ui67A/fzOHq4Nx/Fu1xVSrwkvXSH9veQN
+OSLRYdXv8LxRFhAxhvBzgJSf4rzC0i9JXsNTuz1fWjkY4zfVKNnlg0IMk+y
xvhHgE2W7Ik73wjHu/PgxA+ue54+5PKh0IE/2S6y9euC413LqxDvMXNX9zfc
dd1Q8NMBPQ7UFeD8wxe8eqVXTeQZzO8z8AjbFS1/5WB+m12D+UXtiUt1IZwF
g8EhvWVjbNph/HPAPm8GP7vfF/O/GTx8KTMw2Bjza3wd6sOP30YkVXB/Lxp0
nTxPqQ8441TRI+dPGP8m8F/9m6XFwzD+U9SS/jegnlxWW2bXDPPreYPU3yrF
DTJ/0Z64QevPhzdIvpXTb8J4VPl3Rx8HrOciwd0PxfxXNBfb99GbpB4R3b9J
no+0/iapL3Rht/RMdpBr51Mm2D4yb9H4S8EB76PHnd+L8f+6ReYzqh6FeiZ1
8Ysmfgsxv2mFpN6R3Skk7V35vZDM/wyTisjzUBQXkXpc/aWIzLd03Yqhv35m
OuvnU4zXtZjkS7KqmMwPtQZwcODg+el+2J673obxYWG/NUt8MF4X8JhU3c+0
bxjvittk/qI8AA7xNX1RZIb57FRC3hepUwmphxTLSsjzVSeWkPmNTgPO6dK/
LqI79hdj75D5imrxHfL+C67cofXauzvk/dQE3CXzSYMSLK6JsW9vg/HVgB9a
vw08ORTja3OPtA9hPFjTLWqmbDvmL+8e6T/kr+7R+t2kVM8E7g3svPkE1mvD
S8l8TZZbSvpP5Qt6XdNCS9qvYYiWtF/RPC2Zz+ialpH4hHZlZP4lmV1G5lPy
mDIyPgqM75PxVzzwPpk/yLzBkbd9Ju1viuPZRvCvbfFtPQtw/DgJDrzX/mLv
k1gv9CuH+iG2W7dVEbheNrOc1Avq9WDz1vGJvb/jeHy8nNQjwgflZP6kmvYA
6gmPbqKdkTgeRzwg30dwFLypY+BBz5c4/yx7QOaXsj8PyPxTlPEQ6t0ki2MR
uTie3QP/67Ji6873+Px/PiT3V1s/IvNJyWGwbeXEFvdTMJ8lj8h6mOobtdbq
MbzfyVHanTMx3klgvWW/X9124vMvekzmr5rPj8n80GBRoWdcuqxZ0ica459Q
Qda/pCsryPfT1YEv7rsma6TG9tDlCbm/xBnMlg+ZVvQJ4w8Cd522ZlHLTZjv
/WDbsp6bf7hje+hYCc/roe5bzFfMJ1NJ2ptyaSWZD2v2VpL5paGgks7nx1SR
v1cHVpHxWZdQRfoL4eUq8r5L3laR9Qmt/1Oy/iVQgi8uchg3qp4bf8QXn5Lx
UlYN3rI8OaSuBfa3rZ/Bv9fP/K5lN6wXdoBfB7598/MvjmcXwJPkJxjNSRzP
XoKzPmUftYnirG71XM+c7R/6ze4yjsfDqOU5YC+7vtE2RTgePwc/fG9f1GoI
xt/8hZ5pZ/BY3/45jsdDwC/PPd/hnsJZU/WCjO+GJjo98742rcqrCsdfsY6M
z9JZ1Ipo8ORFMVdq5uF40PglPM9M74oCCeZzwEuyfin3eknyo9rwkuRTm/WS
/Puyvq/I3ytnvCLXNVFgWV+L0+cvYPzHXpF8iMrBXd8zx9PvYj6nvobxYEC/
sNhZmM9wcFiu5LyfI9Y3R8BVw10tbptylmjBw4IDst2nYfy/wXdDip74fdZz
+VxXDeNDcNfhGXWcxenggu9d/gvujfHfrSafV/4Ae/+MeB17i7Ome42eKf+z
6Z7mHmfFbfDwwXt2lBthvF/B8RePF5+q5q7rLN+Qzwsngt/9KJw32BaffyHY
eOS3glgh5vMTOHx1UMKbDxivxVtyXTwefOL3o76N73DXZXKw9HLe3qhYzoZa
cOc/2854L+Ys6vxOz1htmJBxwYWzdBy4cuzyQxmzMf7l4Af52Sdc1nNW7wNn
5Rk32xLBWdLhvZ55FWb38VQSZ7kEnLcueqJhH2fVEnD+iLO9Qlw5a/eAx9WP
nN5hGcZf8J7cTzlaD/ON0Mh5F3ZiPhdRG3bpSTyiS2Dv8ycKTNZg/G/05P66
hSz0Fxe8Ftxeh/ndCU6PlORHjcb488EDBd+uZbTF+F+Dwx2ufnJh33P53P4B
2sOooL2NaznLzoON/02wetsa49WB/RUeMR467rqm5Ud4H/5Ihp5uivEOBZ+t
//h4aQvM5zmwWdS30Q8quc+rn4HjN9TbmL7mrGtWC+3h2qMBoruchYNryfOR
zAHnbTx+53YNd11bCT5x1TZu/m3OgiZ1euZObDtdh3iMfxC1zAe87MZIzyHL
OSs3gaXRrb49i+EsMjJA/drEbPZ4L87S/uC/G7JPzVdwVniCW42zM9xOxvgV
BpIP3QnwPceu9lcN3HW57SfoD/96CNYf56ya/ol8XhsJDovY3f6qA7aHY+Ds
MZo/b7zx/bsPXv6fWbm3FbYH6Wd43gWlTm9vcPczhIGXNm0VdvoSxp8JfsVE
TzE9gPGXUit+gee5bBsx/jDmd+0XPVNYEF3oOJ+zJA38ffxHXx8G478DHmZk
Ijf1wPi/fyH504q+QntUGLfMjMT8HvpKPq8sBiduMnsUIsL28QVc18q2ndQI
4+/2DfoTF8ml5DEYvyt41aSvkxImYnswfCPPQ9j1u55JaVF6+0H9Oy5eF7Dx
raSo8aYY7wqw/4S06tPPueuCWnBBtGbdkB7YHjr90DNXbiWknl6F8TqB0zf7
O/psw3iXgTsbZw8ecgHjTQTfHGfbZkgjfL/a/yTPQzEWvEET8SajENvDYvBq
prTwwh+Mfze18Aq44PLyLg96Yv/g+Iu839oA8NbPXbPL87A97PpF28N/v0j/
Kav5Rfpfw4Lf8LxXmiwpn4LjRTw4X+57q/0kHJ/zftP58qvfZLxRm/yB+9V5
yU6txfFiG/iTIX+LphOOF7ngeSFmM01mYv/8Aixaa9392Q+Mv0U9jJ8DK7q5
zMXxeWg9Wa9Qnq0n9YHmKXjfiVC532Yc75o2kPhEduBCm4sx6R1xvJ7dQMZD
3ZMGEr/Q+C/0D2ft9MoDGP/Av2S+LfcGDxRH6pbcxPg3gh3P9P3ntQvHj0b/
9EyTQVrHU9dwvOsHnpqzu12GPcY/E/w3277EZijGv/4fGY8Mx8HLz9Z6RJVh
+7ARsMyWobUP3JtjfqeBTe3evm8vwPgjwPzx+ih4Z3b0+PJEjL8MnCoe7K+Z
j+OfRyOWiQ3V/Cz2wvyGUYszwJ2H2kt/LcH474F59ZfyJzj9/Ecfq7GY3zVG
LD//0sPgQrsXzaP8sX2UGJF/X/0NzFsP0Vk1ZvnjnfwgeMMv21iXYmzfRWBe
vaD9DL435HvumzRszxOMWSbx2/KOF3pgPm+Cec/PUAeOWDKxjckhjLdLE5bR
n9ReeLoN43UGP/g8b/IbBcYb1IR8H+FH8NSsoJ3FLOazY1PIx7vtPd3FuP7A
gHnrCaqlYN56gHYvmLcfITNvxvL3v5RjwLz9Bk0gmDffMCSAeesPosvgDbZn
M1pF4nx+VHOWv16l8wfz9ruFSnD+cZNF5ydjvNVgXv0tWNCC5dfH4h1g3n66
7EIL8n01rVqy/PUhaRyYt/6oyAHz1/+eg3nzB13zVix//Uk4BMzbr1dlg0sX
RJWf9MT8VYF563eCpiYsw6ZnDTUag/GKwbz1IdksMK8+FjU2ZUm9PsCUtk8v
8Pvcbw4XnmB9tgHMr3cFreF5DUtea9IK3/++4Ifq7X2W2uH7P6M1eT+0UeCN
BmPjpeH4fh1vTfKr7NOG5fc3mqlgXn9gCAcHD4q5aiTD+I+AN54erKvrh+1V
24a0Z527EJ73ioZUoxPYXteBefMXSTqYtz4ovwvm1fuqH0LSv8hUbVl+f628
DV7+VbP6lwjj/Qruc+5N0JvhGK9lO5IfRSqYN36oC8HTVl2ttdFjffMJ/CM0
JNLqG9aTFmYsv/+XjKfW3jAj8QnqzEh/J+5sTvItG2dO3m/lcvDd0yFhRl8x
nx/AvPVXaYf2LDPpuNcr2Wmcv0nAvPVA9RIwf31yD/jHkYakmmP4Ppl1INdV
ozuQf0+7CDx6uXfVUwbjT+hAnr/4Epg3HmocOpLvZ1jYkeRftBPMG2+k+WDe
fE7xGsybDwvndyLtVbK9E4lHfr4TeT4qHbjh4jz3xhuxPtjamWXaaQr9PPpi
vX4OzJuPaJ6BefWjoVkXlmlb/KHadi3WY4PB7wrHMstCsL5Rg3n1r64SzKuP
hU26wvM2DriwZQbWk4PAx2+7m47uhPWZD3hdTN7+5C1Yr1eA8yWPj3kkYn1m
ZMEy465vOxuyBOuz/uD3Mcu7feqF9ZkneHVz6z4df3P1nUYB3unqsWXZS87S
f+ANsaUuxrc4K2y7scyeey0jSy5zVk8Hn70uGVHSDOOPBBs0dkt/L8T4j4F5
9aiqtyXLlJf8Uf/ugvWuFFzZVPO38SyMPxy8+l99uuNJjD8T7NRk3iNDPsZf
aknub3CzgvF6/MiqxhmY37XgOiPjnSE5WK+nWZH7Ke5YkXyov4MznHd3ej4K
8xsiIs9HfgjMq89VxWBevav9IqL5t+xO/l5zC/w+wjWpQwXGa6AWdbWG9rjm
xebbg7AedgHz5p+662DefFtYC+bNRyWdesDzWvs4c/BerBecepD6QLUMXFhn
UmPUAd8vllrWvidL6rGxYMc8j42DX2B7Xgx+PchhvHcD1mO7qRXterHMoqAm
65OcsX9z7EXqIV0AuMvngP5RXfH92wVudyHtefBTjP+/XmR80dr3huc3KntQ
h/NYry8EL2uo+V4ehPVNPJi3PiDLA/Pqe+UrMG+9ReTXh9Y328C89RdFLpi3
PqJ+AfYdwtjtaoL9wRYbll+/qs7akPFV+xTMW78XNLNlyXk6O/Cjo4sylK+x
PzsD5u2PGZ7Y0nrMuC/LhJ/sOiS2FuMd2JfUbwpv8L1l6Z6xGZjPx31Jfydp
1I9lnPW1U/y0GH+/fqR+Uc0E887TadeDefslsr9g3vlHpU1/Un9ppoF5+5uG
CDDv/JfoKJi3f6nuNQD61xdnLSxdcH3VA8zbHxCGgXn7u5IMMP88yj1w3Oyp
KxyCML9uA6G9VncVL/mI+V0D5q1Xyw6Deeu/yhJw8P6L6xe3x/Xhb+DS3U0/
rWqJ+wXBg1j++WLFQTDvvLa6CMw7f6v7DOadBxB2E7PMrUsTrvcah+fVk8G8
8yHam+DS+lFnnhTgeQ4DuHh95uiZdpzFXexY/vkJmTM48KZh+JR5eD75GjjC
pH+QmSfu338E113+GvDaBc93dBwM/dGGTSEWxrh/z4CvOb+sm/wZzwcvBW/y
zbn9LwjP15sPYZmDxXWSjyW4fz8GzDvPrw0Ef2h8aUV8Ju7f7wZ/3rpm4ccN
uP/SdijU8+PHdfJNwPMQo8C88zcGf/DTRG8vzxA8z6EE887zSi+C+ed7Rg5j
+eeNhQvAvPMLkh1gp0P+Fod7YPwXwLzzCaqX4N6+I/+b7Ij5lA1n+b8fkMWB
vZKPn2wXhed7csAVf6fNcWrA+J////OxgfstXmD8zUew/PMriljw9PtltrlT
sT1kg3nnn3RVYN7+m7DpSNIfSMQjyfujPQ3m7e8JnoBDPN/Nrr2J+0eN7Vn+
/oRsAJi/f+8F5p0nFT2yJ++fVODA8vcvFX3BvP069Qww//xlFPisf4/E+1ew
fmsAKw85SCz/YH/RZxT4pcnCA5Mw/qlg3vlqQQSYd/5LfAQsbt/aq6oK+4ue
juT7Gtwdyb8vWgfmn1dLdyTfR3EX3MTXe9bqUMzvlNEs/7yjJBQs0K55ZT8F
zyupwPr2TUPHMbifdBus8ez3XRCP+3dfwWPajHKo/onv2+oxLH//T5k6hrRf
TSE4Z/qTnd164H7SpzHk+4ksxrL8/TR10lgyf9XdAN973rCv6CjGXwfm7RfK
x0lY/nk4wTUwb79R/EFCvo+sA8PyzzMpJWDe+TrNEjDvvJT0PZj3exCFmRPL
jCiZuliwDPuH0U7kfdctAvtsae9Y+RLfxwRwQ1Tw8cl++L4Jx7H882VaBzDv
PJvAH8z7PYF4J5h3XkmWD+adFzKMcGb5v2cQzXcmfy/dDubt7yrOg0N27q2P
L8Tn7+vCMn2L/hl1a4TnvbaCeb9HUJ0Dy+78NbkShP3bM/BzJ8cBveOwP9s8
nvTHGjV4qaqdZl5vPF9XCZ5yRR66by2er2sygWVOD5/u06se+99B4J45Bz3+
9fnE5e8U2C138pdLfTkLK8B1D/NCbllxlhi5skzZ/QFJzCTO8v7ghhCP3ivN
OKs8wRL2yICwq5xl/8DXpivCZ0RxVtpOhO87zXI685yzZjq4pm7WJfkdzoZI
8Id2s/8k2nFW1IMPTCt/nBjOWd17EuSzw/w3pfYYrxR8am2vSNVkjDccvDd/
06p/RhhvJpj3+yttj8ngObZ1YQdwPHOfTL6feC14/oGS4MlZ2P+mgcsPqvdN
3oz97x1w35+xotc5mM/JU8h4KQ2ZQvKnOAS2mzFMcKIrxl8MHjP84IPSeRj/
F/B/P+4n7+iI+UtxY5mJFvU7ep3FeG+BA/+mPv7gi/F+Ave4fP3+kxAcL7q6
w+f/tKtfFIfP/4A7GW8M193p868FK1I8pVoFxtvJg2XiHT8KwoNx/HX6v+c+
ShiZgr93uwoOKejWZWY4/t6N/b+LnFIHFWN7bS8l471qLJh3PlO7GNy9YvCc
xb74/r8D837/pGw3lbR3jSNYG/dy+f5L2F8FgPm/19k1ldRH6jbTWGZFu39x
Le1xPLOfRt434cJppF6SxIN/plZ0bDUb+6+8abT+HTGd5Z/PEfuB+edPtoGr
968wLjiL9WXudLL+J503g+Wf71ZsAV+tyrKrccT+9SyYdx5I9xTMO18tbDaT
5Z/nUcWAeefttWfAvPP+gkow77y52NgT6hEvXZhnP8z3QDDvvIbhJJj3eyDR
Y/Cm5xcbcl/g+kkjL5b/+xZFPy9Sb6tnepH1UckDsMvL4uLNG3H8/Que0utc
0pI2OP7aeJP6XTsNzDuPKIgE837/ofwD5p0n1/TyYfm/fzF4+JD4RGE+5O+l
GWDe+TCd9SxS7wvdwLzzJ5I1YN7vI+SHwbzfB6hKZpH6WzxpNsuEul2vMFuL
+Q2eTcZD5UEw73yIpgjMOz9i+DybjOeKlXNIPaBOBkeUR91dNQPb800w7zyR
0ADm/96wy1yWfx5Jux8c3n7qp4/pOB5fn0vuJ/4IXvTYYXSj39ieO85j+ed9
lAy1VA/2TQmt+3ER27O5LzzfmaPyxNexPY8Bd+18+9biDVgvBPqS9it/60vW
u1VtZWQ9TjsKzPv9lCBARuefShmpvzSt/VhmeHLxZIc8bM8jwbzzMaIFfiQe
6Q4/8rwVF/xovTt8Psu8Prwn9oAA24MMzPs9gjwOzPu9gioHzDtvqn0O5p0X
ks1dQNqTMnYBmS9qsheQ98lQtYCsl4uaLmTJ+dTTC0m+hE/AvN+PSRr7k/Yv
H+BP1scFJ/3J+qH4kT9ZL5YJAsh+jrJvANmP0swIIOsb0nIwfz+rAcw7b6Hu
s4is3+imLiLrvcIIsCbHdd+vR7i+83sRWV/R9gxkGZuV5pOXvsX1Ew8w7zyI
eB21LB08aUSDyioL13e6L4b5rIPxdu9zuH4yBczbH5WGgnnnQRQq8M+h6T4Z
mbhfcBs8zzEgZ+l0XN+ZuIRl3l3pcmVXH1yfWg0WjQ1ROH7H9bRU8ESJdc/f
P3E9rXAJWc8TfF5C1vOU8qV0fS0JHDAm0u+BEtfXboBvQSd8IRvX1+rAWeu9
At6G4Xpg52V0vXXfMhKP8BqYd35D8gHM26+Wd1hO45eA/67d3nfLYMxvATjF
KWJpyF9cr3y/nNxPaRbE8s/DaEYHkfVkw6Igst6pFq4g67U6hxVkvVLoD57X
ON+sZCquX+4EJ17ShHawxv0CUznL/Bhd9DTqC+ZzpJysn4nng9dd8bd3jMP2
sB2sMPJoKeqI8Z4H3436OMdRgu1h2EqWf95C6guuakgKtzXB9rAVbNLI947H
FIz/HJh3XkH3bCVZP5XPWcXyz6eoNq8i6+VaNThs3JtgkT3GXwXmnf8QN1lN
1l81m8C88xeGU6vJ50UVYN55CKlRMMtYuSY17uiM68P9g8nfC7OCyXq15CE4
VXBiwu/TGP+/YLLer7INYfnnVbTTwbzzP7L79LqyPoS0T03vUPI8DdJQst4t
Cg+l69e/wLzzIboea8j3EbqvIfmRrAUPvGJ9yPYaxp8Gdlyf9nLXM8xv97Xk
fRNPXkvjDwHzztcoD4Ffj/QtHjwZ23MxOGBNX6OQBGwfrutYcl5m1Tqynq5O
WUfal+7WOrLfJfy0juxHq1aEseT3BAfCyHqu4EYY6Y/FtWFkP1/WKRzm96w0
JFiO66+J4WQ/SHQ1nPRvUjac9N/qsRFkf0hyJYL05/J3YN75EVW7SLI+rXUE
887vCRZFkv5dWRNJ7qdpEwX1/3Bpg98x7B/swTZh9vdchuH7uDCK9C/SeHpd
Z7Ie2vNPu8BnCzCfI9aT91vit56sx8u3gfedS/4y6gHGn7ue7E+KhyrI/pts
noLsdyq3KMh6uuYsmHf+xfAUbLI633SXB+YzZgPLnDzzYtOpgThen9lAn3/l
BtI/SYw3knwKTm0k30/8eCPpj2WNNrHMy02e8i3v8H3rB+adnxOdoJY+APPO
3yn+biLji9ommvRPumnR5P1V/Ykm+3faXjHw/BrS5lw9gu+XFMw7DyUOiyH9
k+ZnDOmfDNabSf8pcgObubimDnmC+3NrwHPd1RdFdbg/d5haKIqF9lE4wdpY
iO//JHDVjY+VW1ri+x8MvtkyIijhH/d51cFYsv+nLQJfKb0g2qrhLJuwBd7H
rbY71pdwVq4ED3Vr3HHBB9w/TAZ7b7ZOG3+ds+EmuLJNzYbnRzmLDOCCHTX1
pitx/zBoK4wnpQWNus/mrNsP3lKS1+HdNIz/OtgjceafhO54Pu0juOXM8O/r
R3CWd4xjmew7/hczZ3IWa8AD45M2LGiN8erBN8vu3f3U8JaL13wbjM/a7n2H
/uGsGQP+biopyBuL+by8jdxP8Rb8zaPd6yE7Md6226EemhrcasIgjHcUeGgr
uy9vUzDeAPCybdtyE5ZiPqvBx8tXKzsGYD5b72AZz7LOE1NkeJ7OHvyq+eOs
Zfsw/gXghrhH4tH3MP4d4HS3vOS8rZjPVvEsc2Fa9zPGgzGfw+NJvqQysEF5
3G1oNvf9FHHg7x38nXbv4KzOAbt2LtjaejdnyZCdLNPxmdv+CVM5y+eCV3ZZ
NuDOXs6qWHBbr4T0d8GctdnUgqfg40m36kIXYn5nKcl1TTT4fvLq3UMXcTac
BhsntvNT+HAWPQHvmHUgvnskZ2njXdBeHo14OfoIZ90GsLRd9rmUjZyFJ3eR
z0se7SLxygUJMH6Wi78bH8T4+yaQ+4mPg4UHFhYuuMFZVg5umGqrTLmD8Tck
kPxp+uyG99uj1LV7IeZTC77TPu/gwzjM529wmuczy92PMd6ee0h7E3qAOyd4
fvp0DuNdB55ZOeZO6GnM5489JB8C673Q3ucem/XZCuOdAhY9GnvtoQTjDQWv
qjjQYup4jFcFnmNpkzprFObTKpFles/5c35oN8znRPDcpzPXvWDfcPGvBpf7
HF6R3xHjTwVLnv8e1WQGxl8I9u/YpfBdX8zn+H0sM6rD8h79bDCfcvA3q7ib
y6u4+2mTwE6zPL+2zuUsuAlufGhE9ayjnMV1YFdd2/fLd3HWLN/PMkuO/B5j
PZOzYR+4Y4bqxxEPzqJr4GPp7KqpZzlLP4AvHxrU+LoJ5r/DAZZJfrVU/D6R
uy7cC7Z6sdBFHc9ZUgD+/uzC4c/bOMvfg9ta1hi5ruasMktimQHz2i1MnYXx
jwavOvQhUO3MWfkGrJAty+okw3iFyeR+Bgewl29Bs9lzMV5/8Jm3D8YNG8tZ
/TqZ3E9nmkKuC0eCbx4er+43CeOdD/5qc8bV1Rbj3Z5C8iFolQrjqcVI3zg5
5nMYePfRo69eeHGW+YKZTLfkhdMw/q2pNN/nwC16fanI34T5HHyQZWrTvkx/
PwXbw5yD5PupN4N1PcYPq1dg/Grwcb/OHo/mY/xV4Ip3G95+ZjCfPofgfVr8
9HiqEPO56RCN/zS4pI9RZlxvjL8C3Mtf5NBmKcZvpCKfNyjAQ6rvetcPx3gf
gje/6aNa44jx/lOR76O2PQzt0yrhSJNQzOexwyQ++X2w/ZKtbrPNMN56cOXC
Z4fq02q4eHunwftTe2j9nljOgqlgo+wN+jbjOCtLwYo+BS3XzuOs+QWuXTz+
nOtkzoYe6Syz9sPvS0FWnEXu4JLaGcb6npyla8Ff6xodO9qHs+47ePuQ4V+H
deQs7J5BPi+ZDJ65skVr4a9qLv6QDPJ51SFqsWUmscwVfGz1gpnb/nJ/r1wF
jlp1PvvuH86aFPCCwVula80x/lvgsmDhL9dGnBUuR1jG8szTPvrK6rH/A+RU
XS8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
3qieHPHYcKYOrl/s8oTmAxe9za800Gc0WWfD4NVO6Iv3njzr/oneSX+/dOTr
91TGvI7rW5DSFf1Fkc36923Y+btjOzeHrK2u1tBFCfnekeOczT/Mw++FqiX0
fe88uLnkR4clxuSAO3d6xWF/fjZ5Z4WLfcufju3Rb8hqv3O6rWnvsLiXhL7/
A/QGbMb5FZPJr227plvj+Jw15NuLap+/+NlhqXIpjZdR/bIEvzrMnlj6r98B
+k9YuN8ryRofb43r87lju2AvmcuzXjm5rsMspTKaj68NMTjypcNGBuS/C322
T2voMN+RPFXm169dhrx7/u3f+O7PBznyppGvGHLSY+s7zBtfTs/bcK3HrW/Q
pwN5h9fol2fed1gUSNZwjPq+pxr5L5AtpzM8s3fIX0F2XTvk+se36HNRBT0v
C7Vn5WF/yS6yx/W76oLXyH+OHDH8BdfhA/KXkoN3eLzQx3Z+Kzl0/f0jxTg/
58wzGfNzw+lLbCnyPiVH2K1Rl9cg70/ym+MP0mJwfpFWJd2PsHllv7A/N4Wc
psw544i8gseV//5+aFk/4hXyfidfbObGmeP8Es0qym9xsFYDv2fZkAVLe9+5
Bkc/JCvG+wkU5eiziTxm7p/N9cijGPGcnvcNWWZGL5F/LjnTY86I2M783uQq
mzI3wyr0+ZX8PvW3pu4L9Kn+QsY41m6cPgDbuZbk4sCnkdsqkN+LHNkoCVGC
hfFk1TGtqh9L0OeQl/T9teB21m3k4zPkgEkTt/R6jvwe5LiFgkO+T5H/KDm7
9VbtBlhxl2xT+DL+ARxk/orW41fshpaWoV838q+pw4on4fjSWLJKmsZQJ+Rh
3yZ/KDnSdrgS+T+SvVjzZ/dF/xLnanreRreu9sX9YkWTL5Xr6qh9Qv6bZA3B
Ad8dGB/8OvK9l06b4j4if98aGWP7VS8pq3N8HCQXbmi7tRG/510nO+aMcnZr
Qv63/xw3TBiC51fU+zWtP5eqbOyH50s69f8WXCXzlXZEjMbxhK/J8T1Liso7
x3PPNzJmr0jLS4jnhzWZHBZunO76FX2+Imvvb580CPkV3aX0vaVpW2mH/TlG
5Fnzb06OwHjhrSDrNF80uY4+gkLJobc1hu7s7LPbW/oe6P8tzRrjiTuBbFXl
uGc1nlfBMrJ87uobZrAwmOyyRS8vEceXXCK3TJttOR598ce9kzFljTzFDFxP
9BLyoMOLuG0Yn+IA8vyC7ak6nfnPk5W89tt9rkX+cnL07RHzVuF8ooW1tP5M
M5ojxXwk3UnOcRvXLViB/GfJd3jDPuzF/MeVkJcqlXN6NCL/b/LrgHLrva3o
c0cdjb+2P766mL+NTpOFsriP3bE//wlZdvJZhRfmz+gfZJ/7O2rKMP+KR72n
9WvW7+SjbeiziNy4RryhHb8XNZOVNqdad8f8LNX48L/92fPIdunepSa4HuED
8kHf3z5bcX8ljWRx8piJl1uQd8TH/203siIvXG60fTzGG19AHm61WqtYGe+H
L2Rh9dQSz554/w6rp/XK9LD1yXgf8maTn/cfu7OhF96/m8hV4gat0u54/x4j
mxlrXtiH43HVPtH7+63NoFt4fwi45PRpbvGusNCdHFY6VaNABeuHI2SpZGDv
3eiLdZf8cHa3V7wuWB/MlNH121fwQ2CxK3lN2FuJJ953ihjyW82Lag9wfE7u
v+3ibtqfsT/vAznrsSP/B/JJN8hlzLNsX9+J2M4+RPbVeh9qgOvl3iCn294/
fBzrBUEtufKo/dsHWA8YRTbQeAy8lNmG9Qn/GnnqOpcCZ6wnoqXk6sHr17pi
vSRW+Sxj9k9UD16K9YhiCvnr7bEJW3C+oCvk5y9dMhvU0WcNeXf1zu5vcT5p
jy80vo0z9HePQN5J5MSDHwO3IT93Fbn5Rp69CvJIXpJbs6tWaOD3rO5f6ffN
hinDxyC/IflutfQZD+tD/nLy48f9fn7C+jI6hNwn5eSkBePQZ1cFjW+P0Ebh
ZPSpT+7jHf+mEOvToKXkQu3N6x20kD+IXLr0en0Zxov0IjklY1N/FtZ7grGN
MqZO5sHeg3zCxeSM85O6XML9kewm22dkpPTA88A6Ty68M+SJSefzV0Y+PqC2
yw7sL+Y1yZgLtaEu43F8hT953c5PtxbifnBSyX9OV/vdQ3+8EvJs1T/FGljP
B/0ix1ifGZrUud71+0bvhxCf14uxnuWeIj+4Wef/u3N9Xkwe5B67ahX6E7aQ
fZRPf/bGelfCaab1svexZyr4PuCfJHNEFQbb8fvoR+QXYo3gw+hT/I0sbbiz
/4oZ8o/8TvvXiJuC0C/HmjwpSrkoGXmkCnKYpzxhOMwe3kLf8/L+H77j+4Y7
h7x1U/+sqKnIu5l86iUzwBbfY6wvZPPllhq3O78nhv6QMaOOrDl5aCTyziKv
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
/2zxH6THzek=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0.6238773816627788}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0.6517229822688682, 
        1.2086349943906562`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0.6238773816627788}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0.6517229822688682, 
        1.2086349943906562`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EEM\"", "\"EUM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9301789883297622`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03380964359621204`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "27.512238799050145`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+JuvTdCRytfO86Q51ED0R/OnncB0QcvsiSB6PUcT6aB
6CXbef6C6DvVj92PAekW+weKLJ2vHSUaQw5xAelDR6bsZOx67bjCXeIrU/dr
R5tdvwKYgbSFkVEUiL62akcRiN7hU9AForu+mc4B0el/OKSD+147sim1KoPo
fn3R01xTXztuemmjoTwLaJ59m/M5IH3hziR509mvHUMmLDgQDKQdpuZdBNEy
yXE10fNeO/L52s4G0S51z99FLH3tePvity8guuKi3y8QHXbELToeSGspSiaC
6L7gc1kgumwv3+dUIM3Ru8YsDUh/iF5gA6KfTDrhAqIzFB/FgWimKHu5xmWv
HX8kLNcB0QAi9aAN
  "],ExpressionUUID->"20e01f56-aa90-4a28-bfc4-bbe2c049d54f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
cp1NOtQ8B653v1dPnK3xe+X/AEssjUM=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3HlcTO3/P/Cx7xpFliwjoRBjK7s5hLJOdgqDEmUZKndCRsiesSUkg7SQ
jCJkG9lCMrJlbSTUjGWQJVvfF6/5PR6/z/3Hfd/Px5k585r3uc51Xec6Z2o+
bd5I3/Iikai4okj097/4R75qkVHg/5r74l+qo3Dtd0/9fv/+8NfaR3BQFQ/v
SdwuGx9qFPY5emeE/vm3XRkOx9S0N46mNcnw2xetvH7++mf9AzjV+8rSBO5P
VG6xUSgoeBdcm1Yvg+WH7a7rf/6zLgm+PUTIWMH9me/Chv3Dii6V/rPkDxxj
+zGwC98vd1xiFNwHLHih4nZDPPys/YjofdwuvgNfLwqNbE/LfsJZe+8rPPh6
ZculRkFSvdC88wfzj4DrXuxZEv79nxXf4UP9Z7hO+Mq89mFGYbBrvUHrvzHv
UFji6BnZjTYvhA0nmlv34f5VX2Bp085R+i+sZ7NlRiGxXSeHe9yfwQPO+7om
YzfrJQ6CKzaM00/h95fFws0brzDcZf31jVVGoXz9tFhNuX8WDYK7tG/nEsj3
S+fDIbnOd5/z/YrdsG+TjOp5/H7qK3D77i1eLGS9JW7LjYJDu41TtzGvfC68
pMONIiW/vyoabhgz1MrJkj8TPn96y9qF3G54C4tXL35kNrOeAeFGodOu2THu
Jazndjhn/wvDpM9sDxfgPt2dBz3l60VGuOL6ynb3uX9p3RVGoZGNVURj1ke3
Be46ePK9YO7PfBa+l3LQLe8987+BXz6x7yHh/uR1VhqFwsLWjzNoVU/4Se+6
i5+8ZX0z4J6bJn0ezu2yQljfJaH3L+5fWXuVUUjumvHNl/XQdIPPNPJOqsV8
+mnw60lhDt34+YoX8P6Xbc3PPrG+NSKMQs0faVX0b5i/K5x9f87qW6+Yfwo8
+kXah9FFzL8ONntebtWCFk9ajf2Pb9XmGfPKVsO2hfGN975jvmOwJO9t03Xc
v0i6xigcnTrVz4H7l06E5w7bPOoWtytWwvqPCeM+c7s6BX6pajjJsYD58uAK
edIN516yfuPWGgXt6Jz0wBes33L43ZJd9WY95/E/DEfsSZa7PuHxvw/PKvm0
asAz5hetMwr256+eczSwfmHw22JJ+UH5rF8i7DlxdeUn/DzRXbioz+rLQXy9
ovV6o/Bx3xj7d8Ws10HYx/ZNzFXml+jhb4umjk615P0B2zgGNizj91E5bEB7
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
z8wbk5tzuzYM3pF9Nb+2E/MnwuYf52JPtWH+u/CmoQcm2bI/kv2Gn/T66N+R
1i8+aRQ88toPC2d/J4o/+T/fR6qHS4S+JcH8voof8Mdj3bLm8/xVO5wyCklD
Tw2+xe8nOQCX+/P5XgnrKb8F59/Y0XY+xyPVN/jxp4JGrrS2+WmjMLNT0thR
lvnGEFg3wbHxJ7YvTcnf7c0bndDzfNU3zcD89e63Tft5fok84Hv1z1abQEsD
4dvtQ8bFMJ/uI1xQq1ZQQ0s97c5gfJh975fA/lIyEJ7W9fedwZ2ZVwm3S/JT
vWvHvLvgfefzqruzvxM3PGsU/I812laO/aOsP3yscIJNefbXyjlwjvWeewmj
2R52wN/aPbvcYjjzX4QTWxys13MQ6yk7ZxRkJY5S/4Gspz88vsLLuK9uzL8N
vmf+XaoZwPzn4cUNqh/ZNoz5i+FVPWy+Led2rd95jFfnXBsd6816bobbPzj/
rgn3Jz4LT5Ne7nquP/O/hm/eKuwzqSfziy8YheqVs8z+fVjfTXDetltP+rE+
0tOwydtpRhVH5n8Jq24kOPzkeKKupTMKs8vd/54hY35X+Ok5m/6D+P3k6fCQ
cZp10qGsrwGOnCeqms182uoXjcLZC1bCRm43dIG3TSwyLvFi/inwzVPtFhyY
xvo+gy9UzHrw0Jf1rZJpFOoMjnA6Oo/5O8ERocPbWvkwvzccm7Zjnm4280fA
7mck7wV/1rfiJXicm+aLH+vbAfafunVqxizmnwD7XXGRXuT+VCvgHsscHzaa
xPxHYN3HvOvqiaxvu8u4PtoWabee25Vj4cJ513J+j2R+1eX/eb/+ELz0Y4Xf
cUOY/z6ceWX47v6jWN9RV4yCeM2Q563ZvnRL/1q3pd+mEcyfAL+e2Lr1CL5e
kgv3jLkX+GM88/+CGxyelz+G9TOEXkX9dfdbXKXFB+GFL/0+X5vC/Lfh1p8N
M/z4fmXp3+0rNvueY15Ni2u4nqny7ndPBeu7Hz7TWpjYdTLrmw1PFv/cX+jN
/F/hc42OdKrO/ZsHZ2G+FL23+cmprOd1eE1k/RfJ/DztZ/hMasSUoZ7M2+Q6
5p+pwwyVBzOvOxzVy9ZzAdu/bAE8rSjg/Xu+Xm+GP5UaptyTs552N4xCy7CO
qTNZL+kA+HG4qME6tj/FPDj5gaSOiOeDeiesvzdpSxktaXDTKHiOcvG06sd6
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
JAw1RKYEH2LePrBnWkFq4EHmnQmHnqgzp2Mq826F6wzr1yRQy/l5nS4mIS5j
4Zn+Gs7Pe8ITp7slqbjd7As3qDE3xe4286phY6vA+ifuMG8G/Mt73eyN0Zz/
duuK+WmljefqxnD+Ox3+s+xis9Ez+HztRrievfO7b97MfxIO6dHrR/OxzP8C
HjvDrZbA10sVLibhR8UvOc9krOc6eEHZx4+efZj/OHwuu3B/+GTmfw4bOq5J
eziT+au6Yvw95JkXu4r1XA13+lm64vFh1vMYbHBKVXkcZf4ncLzUdeIxPfNX
7mYSgnL+bKzP4yeTwv0Obz60mM9D61Pg71cHZYfweSLRI/jgtJamr2eYv0J3
jH+BdlcyLjG/M+zXsJtHdz7/ox4H2wVfH3GQzxNJHsC7PbunlfJ5cLmoB/qv
0PaxJ+8xfxvYOiT3/p9c5h8NLxg3xWM7n482hMEOh7Y9LuP1v/I3nNu87XZb
Pg+qad0T339av8F7+Hl6T7ibQurnaXl+eAmcPM3Lbj2fb5fGw+3dc2q68/vp
HHqhPwo3Vd7N9QfzcHjP7HNvL/D3GZJFcIls7ZC6vJ6RH+j19/pycOcPvJ5R
3YJfL7ja4gSfpxIP7Y3zb/jhE/POs74LYYX/SnVPXl8pNXB5P+2cOTeY/wYc
pVjsJU5i/hI4fPaDdOcdrG9gH5w/YU9qlpxgfffAP/ptaON/ivmvwebt4uHh
bM/mj7CxfHT7z3w+TNK4L/r/MLstX9i+tbtgn18rx3y9yvpehpsu/G/jcZ7v
4g/wlVuD2n/MZt7+MpOQP7TRutnX2R4yYUnFwh89brKeb+HJXaOGP2U9FLYC
rneD3O+GZDKvDF40JeyBD+uh84f3qF8UzGJeeTHs0vi/1A1sTyqbfpiv7Dn/
Lov9hbY3nNK3zZnZ25nXD96eefZX4lbm3QLHDLrcxHcO6ynuj/b80ntHrXms
Zw94jqrGD7dFzO8LN3lVbtjivcy/CY7buNBzzBLmPw0br/qbRs1mPV3dTMLT
2KWT3oSzntPgB48qPo9Yyfwb4F4lw/w+8vip0uEKo+z31t3P4z9lAPY/x3yx
jFauhXPKD3TqzeOpSYNTgk+6dkxk3mdwu32ffp7i56kjBqLe1VqO2jSL9dPC
XkXznEf5MN9j2N3qSRcnN+arNMgkdFhYogloxHwd4E3Zbre2VGL9jsCa39/G
X67O+uXBtV9PvGNry7zl3THfOz2lntPP9//ytoP/uK+3MoiZdyx83GlI/ujc
f9sVZfA2d6FK1LN/Vjt5YP5zanqc6tw/60bBJ9vPnTPoyj+bl8IuF4vyqrz/
Z9UveOB2dYMtD/5Z22qwSai5o0WHM1//2SCH51hL62wy/rN4MRz9MsDX4d0/
yw7CWW0ivx7m99G3GIL2eOjKkg9VebyHw+dfeyc1Mvx7vTQEvu1Xcnmfmfn3
w+1P98s784H5s2F3nzW2bfn9JEOG4npkpNdSx1P/LA+G1dbz6484xPx74XZn
tqVtSWT+6/Cvgzq7aVHM/xn27z+3yJ2v18QMMwmiJTUqRmT+s/4qXLPTvP4p
T/5Z9BE+5RR1cclt5rUbju/XIbdHhbus50549PW60ZMLWc9L8Nw/NQ/cucq8
72HhfsPUPpeZt8EIjH811t4f/5B5+8GPB/yotYz7F1+El0y/WzvtGutpgrXX
Ti9dxvoo68lNQq1XDZck/WL+vrC/S8rtmTVY71nwwJm2063teP4UwQ3CHo9c
UIft19oT88kuxzO7Vmb77QWPmxo63qMm2+8MODZdF/muCtvvZvi8KnnV9648
/61Gov1MOTVI0ZnttztccC6g8p4mbL8+cNSrsy77O7L9RsJuq640n8XxVXkK
/vxqUfbs7mwPrqMwfnkUt9rajef/VLhih0zPUn6eYj0cPnRe8mN75j8Bj2s7
IutDXZ5Pk0djvu4d0reXhOf7GnjNCJttDS15U+G1Ns4JF3k+Gp7CurILn3u2
Yt4qY0zCvaji/6Y14Pm0Cp7UQbPH0Yb1PApXUL4NT+T5IXoMhzW4lNmF9ZJW
HIvjL25b2e0j22972HavZGYrvt+cDG+O8T1bkXklD+G3yYdG3+vA/OXGoT/+
oHn4Qs78beHaomMeD8cx/xi4RYOP2b9GsJ734PSC4tEHOH9R/oGXNkv3b7Oe
+R3Hm4R1NcpKK1vmkyPhL5LxbU9Z+tul8NdGe3JOq1jPn3CPV0aZP+d7upYT
MF9JDTnTZynzj4B/VViT/iuM+UPhDYeHtq4yifnjYFVcSH7QKNbXfqJJyFuw
wuG7P+s7DB6Y6OadzPrL/oMLNk24pG7D/PvgluNixn1vzfw34doqubSDM+s7
2Av1bvQm674j20MQ/OFmtv3MgcwfCy+yPTkznO1NlwX3injl5dOJ+T/BnYYX
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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.508820564602099}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 1.508820564602099}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EFA\"", "\"EFZ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.041179726109847`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02041376514231386`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "51.003806443901865`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB+JuvTdCRytfO86Q51ED0R/OnncB0QcvsiSB6PUcT6aB
6CXbef6C6DvVj92PAekW+weKLJ2vHSUaQw5xAelDR6bsZOx67bjCXeIrU/dr
R5tdvwKYgbSFkVEUiL62akcRiN7hU9AForu+mc4B0el/OKSD+147sim1KoPo
fn3R01xTXztuemmjoTwLaJ59m/M5IH3hziR509mvHUMmLDgQDKQdpuZdBNEy
yXE10fNeO/L52s4G0S51z99FLH3tePvity8guuKi3y8QHXbELToeSGspSiaC
6L7gc1kgumwv3+dUIM3Ru8YsDUh/iF5gA6KfTDrhAqIzFB/FgWimKHu5xmWv
HW9IPdIB0QAhbZ/i
  "],ExpressionUUID->"e50d1cff-e694-4397-95c9-a4089c3594b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<DUST\>\"", ",", "\"\<NUGT\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<JDST\>\"", ",", "\"\<JNUG\>\""}], "}"}], ",", "start5", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6984978302715607`*^9, 3.6984978560185995`*^9}, {
  3.70201941324889*^9, 3.7020194137295437`*^9}, {3.7111748035998693`*^9, 
  3.7111748053174796`*^9}},ExpressionUUID->"9d865506-bd6c-4380-8300-\
cddcfd93fe89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
2gY2Xm77rPBeXg9PgH/GhAjR7aj9Nj6H/R+Nq5e+gtIlRUtbhLZ/xreOW8jr
93KY59eov1INhp+1uz641FLe31KkjEV475ZU1GsQ7e9ROsO8fkz7WzQDYI63
yfrFcG2aQKH9JwpJWYvg1ya47Ph+vP+lGdzoSKO3fuPoerq+MMe/vD8nBJ5y
/02ufBCdL4mF6XWL4v05TcpZhFne4o4T3l8UAN+s53tt4TQ63xoMF9hvJdsP
hyrXIgTi/BvhOtQA0/VNvaUWYbBv7u4fY3l/0Tz4b2pL39RQzv8euED/rr4D
t6ykL7zwLKXrsmHanjKL9+voyqN83iYcifGk8tfehHn+mvcTfYfF0XiNFhw/
1KlgEZp8zM/tPpHjgx0V7NL11+Bu5f/WHxvG/fE3GA9vwN9RlB9prYoWQbJ+
VPPm2ZzfrvCO/i1TltQmGy/DHM/zfqMMODTu1jqf0XQ9efVKln/z5RyfdYFX
123TN8ubrJ0M76otvsE8nv8Ci72N8hn3x1UqWwTdVLFF5vGmAnaQpgbGj+T+
OAj+OEhc8KHjTZthNI5uERbeD1GxikUQV6cdU3g+whO+cbW47MA+jtfHwXM+
tXs4ahLHExvhedFBp86k8f6Yc7A4u3zOl+Mbj6qob7daFz2fz+U7Gi4Q38nW
w5MnbMtaXpj3n5yGeb6e98u8hQvuhxpZzSIMoQlD3n+4tprd+6c+AYeE1MAQ
kd8/E7yh2fipDe5yPLaqukXYn9MKESjXh0T4hTjdlEr5MbyAC+4/LFbDUnA8
IGsNi6sBW+9wfdDD4mzN9nm8n+cZXCBelDrWxP03ijPM9LwVLWHub7n+DoJH
X9u6NMXI9eFJTVt7yfvPCteyCGL0378ltwctatldX9sfbrOy6o1m2yndoIHb
P61WyOE4x+t/4bd4ezcuoHSNU23Lv/lc3n/YB8bg++Xkk7z/cCH84k74kXXN
ef/cAbjA/jxd4zp43uEjBrwP4PZBCa8dXfnujRTefxgM3y9Rte/T1pz/fbBp
9ChUQX4f78Ecj5GtvepahKHnRo7f040smwv/RxMuvP8wGub5F27fbsM8v8Lt
2084fIqqa5MhvL9vlszO6l2wszjcrcDtww2Zrf/j/GfB6+r4Jci8uX2rU88i
uLhV2RCwlNuHqzCPx7n+WuvZlbesZn2736v0gVvdFWcIyaZL8Mgyo3ULVNw+
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
8HyEz/7/5+d/QaS4nQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
I583RYHV91VPzPGtK2NFvM9xAay+p0nK+ZT/M1jircXU76DYOuev+tsl1O8y
sEoXdMjD73OdBV9QB+xk9vd+ACd+ujL7xAMxlD9zHJ35xx7zl1K/MWBVzwnU
YrvnFFjlc1P98FD+t2BlLx/XJlurx9W1g8phrUn5fMfBqjru7kR5Qq/BKj++
Jg2/35Iunq6p2z5p51IeexVwqVCaF2WSst31d7yI7ze/BMv+INtSx9e137C+
F2bg+E4NXAnxkvci58/TAyz5U/b3zwVLPp7yOVIk0DUVPtcZyPlyVwAr85d9
2CzK3xW8FAZ4ZAnOX2gWuIcKCMx83nIALOfRPOqzbEKRN8lejhfoBFb7o3py
WQ9usDLfrZfOobyPwep6k6uqzH+HRLqmrn9UucB26zTwzuEqo8F2xy4w0/u7
yb7fEuvh/D7lsU8G51EbehG/37UdzKdvcP6898Blrt6qc78s9RVI+JvOevOW
e9S3uShYXae4sZzz79kCVpcPEi/m+vHfAav45+ARjmeKnwTPr754M91Kjme1
gher+mJl9ne0TCLrY2Uc7jdLnN91uc8Vm/vZXgCswvd5n9nuava7/v/72zsK
zOsa7zmezZRUpz04cJX72Zk3qaFPsV+NwY9wwPaoynb/CLD4x3zetA68KGv2
i+0es92d6w+d53fPxnyfrwGY/mmQ/UNDwRIfsL9lNTh202VzP85if7sfLPkK
rv9APbOuHUIAFa80nzcPAat4rlsutttWmMPrYwH15zxvDs/3RtH3J7AK1z78
wf4Oz58R69t9BrxclR9jsb/vPZj55JfcP6FMyXTmaxIPJbuWJAvr74rs95Ng
Fb7v0siBN8nC8/OQ45szJNc1XmeYRPls1cDKX5n3lO/zHwPvh8M7eA77m16D
Jd/J8axpU+iaup7UJprrz1EZrOKFKsfJ7l4pjPnnfrL8B1bnX7dF3G/2VCl1
ngfjfTMpvw0s+R3uH293sMRf7B+YA64Ngxr7PdmZPJWuqXT9nYTs7ykPVunT
3X3Y7u8CVtfLslTj+02zwOo8jroi+20/GObna9X/ZH+VSS3v292V+yvUMXXk
/p8BVvmtw2buf/sesKtJ11UZ33J81yNw3ZvLLqzOQja3T6Nr6npg3leUzzYV
rPyRpgXIzp1gdd1qjZXv9wTAKt6vGMXnHZPS6qwnnL3O97m3gVV+9GN8kfdf
sLod9maF2KsE6bD+y+9e6Mwg+i4CVvn/FXfZ3+sFK3NfNqecX7fBqjrd9gDZ
HC99hH2xFQKLP8v3O1uAlX+RbiPZdBMs9R72t8bOoIfz32Jv84O9KmApzvHd
TTNEjOdzgcXfYLv9V4aI8V15MuqMbzrX5XryNgKr60o7i9B+BYaD5T4A32de
C1b+xqLKtP+enJl0xucTr8l5YAfz+lNmsmko+Ej1TvXLFef7rKvA0TguNi4n
Oy6CVTw7JZ2sh7qZdebL/aVlPQwGK3/wUg2OZ1+eWeajT3I5z85ljjj/vR/B
CCfi53/P77ENsOisp87/SXYuBavbN5+zc3zPabBy31K1IPvfgdXtzFh3Rf+Z
sog9KDJC9HkCLPlDWQ8hsPj7sh7SZ9VZH088VvRdNWuEPxI4mjViPZpfgVW+
3Z+X49vSZNPD8SvHc1bKFj4/jnI/eXpmi1jvVh0s9W62O1Jmjzgv3RXBUl9g
u68bmPW6KWwPzc4ecZ66kuUQ+7sto9iHcmCVjk3ZXuxDZ7DydysfkvN3JljF
I3tncHzbPjDvF1Riu790TllvC8vzeVNHsNQHydbpOSPGd+wG837ebdor90Ow
qh90nUq2/JVL19T1qKof3NTvlFxiH5aMJrt2gJci3p/Zfzrlv59L9vuhxGx3
TsytS75/GdmzNXf4fDo9lfLeBav7NQXikE0J8ugawsUTM5qSrYXz6OH7HlOo
z83gtiuGlBznJodu5THW22TKGzevsX4nUd6CecWetho8kfI2z2v4Q+Oozxtg
1u/sw6nPWPlkv6XfNoLy58tnfB/Z0wQs9ZChlH9kZLvjJ5j3aTOy3Z07v/F9
wyh/w/wR7wsNA0s+Ooryr4ns781RwPAfh3A91I9kc1QBY/8Movwrweo686mZ
bHdeAMv9DrKpbkHjfKS81kEFw/rL7KL8y8C831xnDOU/C5b7omz3fSgo9idh
1ZHUb/9COA/VBaLmo6jfGLCK965MYH/vqULiX7a9xvbA20Li/ybLOJbyZ7Qa
/upo6neRNbz+evD7/cetejhfLfKHwL/UPwcGUP50hXXJPwxju6MKWMVHQ29R
/6EjYKl3kS0vCxv2dTDlT11E/LHyVcguDazi5a0fB1L+HkUMe0r9OlMUjdC3
pwJYRbc3L1Mef9eiEh/kWkc2zS4q67/9nxzP/WcxXdu90Ft5SXe2+8oWi+gf
6lQsYn4tbnDVvSP6dGlN+e17ixnxBvUTKFVc7FG+J7IeOhQ37B/fZ5tWPEI+
567ixvnD9eZ5AFb1y04V+LzVUSJCv47JJSLl3w6W/B2/33evhBEfivwJS+qs
/58tRnldE0oa8RnXm3dLSbHXk1PIergDVrdh5z/mejHHL6XLfYlyZJsVzNul
N7k+/JvA6v5E2Qp83nQLrMpf5SeSrXFKy/esusH15SgAZv7pAdndDMx0eAKu
b8v10uKvndjF99lNZXTm3364+T5XXjDr3T9kPTcuY9hLkX8EWN0mLZ6X4zl/
lAn7YwPY7slVVmd9/c4Isr9BWbF/gx5wPNOwsuIfVi9Ae2BdDW4Ch3dZRbEX
2csZ8S45VA+s8r/dQrKeh4BV/XFHNs6nfUW5sL/ahfPjOg9GdL1kfIv+1G+d
8jrzvS3vc75sA8HqPoCpGNudHrCqJ/bTyZ4zYOUu7EtB9r8H837icbKjXwVd
g/d2TLdxPPcSsPp5wIe2fSn/SbCqf7x/3o/yvwHz/p2J68mSoaJxPrLduxCs
8l2/spMDxyqKfL5yHN/8GszfcxwQeSvbdE2Vd34uZX/TEVs4/t/Ddut/NvHP
3Ov4PkcqTdfU7en7H9jutoGxfM/kyM52X3ewus/5bi73g/0FmNcDerPdlbwS
7FnDZHEThiiPtzxYXZ9NtpPtgS6VZH/cH0k2zwKr+yh7c4u9MFfW5b5pF8rr
L1NZ8gv2GSJ/J7C6Ph3nhti3GZVF/2XjUJ+OPWB13fhgJtFnySq6pq4f5CvF
77G0B6vt2vcu2+1Tqxj+O8dz7QQni3tqVPU+Yh/aVY1YH85JYJWv9t6U+d8G
VvcNLi8Sef+tKvHe2ONk9/hq8r2ZB4k984Jb3vnUe382sQe3q8n3f80s8x2v
uq6p6/NFEop+C4HV7d6GJamfwEawul9VtLus15tg3g/JwPfZYtdA/DD/3Ogh
v6gPZ34wvcOUfShvU7D6NYzllpP6+lVD4vki+XpR3jw1dU39uuaIpzflbQT+
inDogk4ODQer1+9sxOdd38FSv+L43py1dN7n3/VN1qe9ltjH5QllfQ4Fq9vx
eVaKvKtqyXqp8Uz2T7ba2L+JYj82nac+TPXA6vW96sp8Dwa74aDZnsl5thzM
2/KxaD/d58C8bzaO9sRSu47Oet+YnbRX9gF1xF68XE774loa5o3r2d97uo7k
++456f8E3oHV/fDNuSZQf4vryn4xlxF7dQLMevNtjm96A2b9r/p4ypu+Huxf
8s3zk4ykffUtAKvr2B8+kUNHwer6++JC7G95VU/ihwsBsj1NfV2rpQpOb/l+
V6X6sj4ndBX/7DBYXYddsYztNr2+2K+F1zm+M6Ud/u7MAb0rN+d4nopgVS44
nYr+n78bmPXwvfT/HM/t4fO7DP1Hd7IGOu8blO7M8X3lwFJvIoc6gz/CgN+9
Iv7lzAZ6+D4ox/f+0VCX3+/8En2Wbijx/JGWfN7csaHkA7+moj9rmw5W99HX
NOJ4zt1gle/fZKI8ppKNdI0/D3rLdutfjST/ueIX2TGlkbGe5Dzb0Uj8q0zl
RJ9tG+usB2wtTHZNbCz7I+UjkXdrY/Hv0u+nPgJ3G8t69F0TeRM0kfzS/UZs
94xrYuT3OJ5/M1gdb94SbDfdbiL5qnytyNa4TbG+VEA1R+Qt2FTyA9FxplGf
G5rK911PL/HFDbAq95yfRLbHagZ7PruF9WRqiS/ygZupBE1HPu9tAlYObMyF
GdTnVdXO+6hk589mct5Xy8P4xpO7uc77LwsKcnx/w+bh9Z9M4qPhYHXf1j+b
73N/A6tfvwzWyL4cLUSffbvy+VD9FuH9/UHkjwKr+3qdmzIes68Eq/sgA8sz
vg1kbalrg6b2/9H+m8SfdcHKPcueUvLpg8CqPPL6OsdzLmsp/seBBZL/OdtS
7Pnbl+xvrdVKD9fj2d/Rv5Xkc9qtk/gzppXsz+sV2N93SjEW6K8XEn++bSX5
7XcTKa+rT2uJV9psYn/vIrAqt5+Plvj5OBju+cr15fg+cwisft6aIg31Z0vX
Rtcu7V+UtWMpyU/NB/PnpAvY33QUvFrVL8Zy/qwv2+jh+1KcL0fqtuH8fmey
W2sb9udvc7/Yg+D4mbK1qejj864U7Yx8vsSbFdqF52MMOdC1XcR8OJ+BeV9/
tsTzfzogr1oQtyReLgvm9f/Dkk/rDMbxUrrbQX6/1Q1Or34AeUT0mfQvw1+X
fESpv2T9TtM4vqUDmD83jpF8xDSwerzAaNH3LjDDqcKSTyvRXvy5F5cknne0
D+cfUkg+bTJY/f5zaHORf3t7yaeUOijy31OsLogXkfxOmw7whxGwzEgq9ZUJ
HfTwfVfJr20Bq/rb1YaS/7kDZn17A/M9lvgddU39Wm9LV8mvb+oo8VL3esyf
mm91DJ/fySSfHaeTrIc5CaXeUqBTON7+xPyvaQOYPy9Mzf7W62D1a6YRGvOz
DlNn2Z8tJrK/Oy9Y1a+WSz3G17izxAMTRnN8+5XO4f3znuz6Aa7d+fDiqy+k
PpCri64Nh39vdvF7Ag3Acl9Q6gPDuoTrOTvJnq9dwvHYKclHZe8q/qZtA/NX
pvpg3leuw/GtQ8DKnZlaQuRfAVa31Wc3pbyhLN103je6ESJb6oBVNS7dFH6/
fWA3yUd1ect2l6ebfP+tdmz3nukWzu/35ffZanbXWT+2ZWR/Z7/ukg8ePJPs
WdI9HH91lPrGye5SL6rwu9QL3oLVfZD8v0S/zh56uD4s+l0I5q9do0X+Yz0M
e8r3W16Def9oANvtaXuG4/kOUm+b11Pio9ZPmD83HwHz50UrqF/bf2D+nGCn
5NdS9QrHZ+MlP2zrFVE/sh7qFZE/dbwAy/0usW/J/9bl9/bppb5V/m8jn8D9
EeoCVveDKhWV/LC5t66pX5s3jpL1UKa35D+CaaUe16m37Ld5QyUfOKO35Lvi
bZT99bsT5+XCQY3iJhP7UMop+VL7GcmntXfKfhy8Q/JpU8FyX03k3emU+Cjf
JLZbiveR9Z31stQL2oFV+eLxIbJrUh/Jd4xYJPJvA8t9GrHH//aJrL+17qtr
J65//HEntdiH8X2NepXI7+2rh++bs910B8yfm56UfGa8frJ+zlQh+8b0k/lv
nY/yhDb2k3xm5Z30Hyw3wTnx/rtJeb7bY/eXfOLcS+K/5e9v5JPpD5jXg9X1
v0pryLZr/Q3/l/6E81d/o94q/kaeAfBXlIGKFv+t0QCjXiz+2+UBxvyx3f19
QDg/eVXygzkHyvuOpOJ5ELKD5b4Dzw/LUHAslW9qJf7EF/Bela/qzOcD2QaF
86Ma2831Bol+Evdku20wWP38cXUi8d+Wg1U173IzsinL4HD9Z6nkL2uDn6n4
9yTlcQwYLOdVtyiO714KlvviPP98pwdHnG/2GkN0/r7swyuO7+o7ROK5nDPJ
3sVDJJ9tX8j3BU4MEX8jaxPq1/wGjNNhbok7jAc8vaNkP6RoJP79ArC6f5qq
D/MXpmNRRj2K/r71VZRRP2V/R5qhutyXi0sORYPlvp/EI4eHGv6AxCP6UJnP
EfGZL/RWHCbx8qwxZNvBYUa+mc87n4PV76t8aSV/kmw49icC9gvZKb+/3HDR
f84hfN7UZXhE/tH9ZLhRvyX7/hhh5K/5fKg0WP3eOWamyNsxku3TR0h83r8+
xw8kGWncJyCbS4LVfclvfSU/9dfI8PuyMj/jnDLSqHcwn+jZAVb3rbfFI1uL
uXT+fm10B7KjrcvIT5PdEyPZt9Vl1EvIobsuqYen6sr40DtuVER+MLAZrO4P
Pn9Lecy3R0XkX21xR+u8398svehvI5h/7WKU5M9ujI7o74g1xqh3Mr5x5xsT
9h9vcX4t/4wx6hlcP/arY8LrtwfZ9XNMRD7Zm3tsxHoLNBxr1DfInm9g9Xuc
6Xa+z59jnK6p8sVlB+Mdk32cUW9nf2vUOMlPzFop8ednsPp9SIuWXP+hrONl
PdkmSfxZd7zUqzaM5fj2QeMlvj34SORdNt6o/0h+2jIhYnxbrQlh/3662K/+
E4x8q8SfMRMi7KH/1AS5X7CwmNiv6hONehn3r7vPxIj97FsEnqf+XkgfqW8c
nyj2o39zsb+hiRJfD+gi+//vSbpWGu5F3V5sD8yfJPWqf9qQzUcnSf41YT2y
7eUkI18o9iv1ZInfzz2R+M03We4L1Gkr8gbB6q+9nOjH73GnmBIRH/sqTDHq
zRJ/HgCr+2Kfy4k+n02JnP8/p4o/UGyVzH/ZqXr49xGS/+0M5s+X+8r+fzxV
/L24eWX/J51m+CeyfktPC9fbcpCtHaaF6+0lpB4zDaz6uerJ/v9teoQ9sJSY
Lvm/VW/Y3+6YLvst+oXkfyeD5fcaZO92sLr+eTg32VZ0Rvj+yHGysw1Y7ovL
ep4ww7gPQvZvmSH3d/7+KfmUuzOM85/sbuk28qXs7xvrNur/bA9tckt9upJX
9t8tMP8axxmxX3Fm6uH74WwPjAIrd3FqEY5n3jDTqGeSbddnRuwnp2lWBHvy
gtV9yNIJuf6t68CfVEK7leTXr4DV74n75OP8u3/MkvNlzhGyL9dssY9vt0o+
wj87Yj96v8426geSP8k+x8jnirz150S83zZkjuHvkP2fwOr35H8mlfMr61yj
3sj5tdaZK/K92Sf1rYFzI84ft2euHv59lqyHzNFSf3u5V9ZDzWipR9ZPyv6u
ftHiP/9TVeoZS6JFnvSSrw+cjA6v//RSP6w2T/azKY/UD53zpB6T5ivz/f6F
8/TwfW9Zz8fB6r7u2Lsi/+t5ko9ovkTOs17z9fB9fjl/582X/fipgKyHI/Ol
nr3BLPb4P7Daft3+kvpcqgXh/O8tsnnuAjlPrkfJej4EVuFkytxyHr9YIOdt
54eyH5Mv1MO/bxD/oTxYRfdL9sv5+3Sh2PMxCURe8yLjPpHIW2aR7P/+L0Xf
nRaF798Ulfzko0V6+D6j1Fd+Xyz59z67ZD2UAqv0wrDKsn7bg5V7u6ea7L+p
YJWub9hJ6kO/LQnnL/PJ+VZ8iZwnydbJ+dYOzPu792Q9TAJHqfukici+bUsi
6lf2IjHh/d2b7Godo4d/P8b59I4Hq79+8iWv+A9esPrrLEvzi327ExPp37RY
qmuIxnp2Xiv2bcxSsQfZE0p9aNNSyT9+ry7r4ebSiPc7YnvC+/k8OeQCy+8X
uB7t1zxynl4YRPlcvzzijx2sJ/XlPMuM84j1I9vaZWH9TBR/5vIyqQeEfpE9
35fJ+qxSWtZvzuVYzypAKcZ2U4PlYXsWw3b3RXDdWqNNe9pRPt+XcP/e/4m8
2VboWkM4nEEz9WWpB04Jf9I/V+rLg8Hq7+VMisfvD3xcEfYf7HzenGVl2B58
JNtqg9XvDereYH/ngJXGfQTxf5euDNe7ros+M63S+fcwxm0R+1AD3BoOT0kv
2d13lfhj6RtI/XvxKsln5LPJeXJileQXKsfIeqi6Wuf9X0uCERX/BxYW9x0=

           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
D88Q4u0=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5533728*^9, 0}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 3.550460681379901}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5533728*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5533728*^9, 3.7110528*^9}, {0, 3.550460681379901}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"DUST\"", "\"NUGT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.01646602156687848`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.37758786657644633`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "0.043608449911736694`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 3.7053149633465056`*^9, 
   3.7069035505908546`*^9, 3.706903797311335*^9, 3.7105683203375397`*^9, 
   3.7105683653040447`*^9, 3.7105684089045687`*^9, 3.7105814805549703`*^9, 
   3.710581518617149*^9, 3.71058159627557*^9, 3.710594982263451*^9, 
   3.7105955180649395`*^9, 3.710595562903785*^9, 3.7105956279583416`*^9, {
   3.7105958430849175`*^9, 3.710595850567733*^9}, 3.7111749068030643`*^9, 
   3.711175017325411*^9},ExpressionUUID->"2a79df47-499c-4180-811d-\
ddb7a9db3d7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
7b97
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5897472*^9, 0}, 
       PlotRange -> {{3.5897472*^9, 3.7110528*^9}, {0, 2.02497558129051}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5897472*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5897472*^9, 3.7110528*^9}, {0, 2.02497558129051}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JDST\"", "\"JNUG\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.011832163907475771`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.2833071724460495`"},
       {
        TagBox["\<\"ret/std\"\>",
         HoldForm], "0.04176443471345217`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, 
      TableHeadings -> {{"return", "std", "ret/std"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 3.7053149633465056`*^9, 
   3.7069035505908546`*^9, 3.706903797311335*^9, 3.7105683203375397`*^9, 
   3.7105683653040447`*^9, 3.7105684089045687`*^9, 3.7105814805549703`*^9, 
   3.710581518617149*^9, 3.71058159627557*^9, 3.710594982263451*^9, 
   3.7105955180649395`*^9, 3.710595562903785*^9, 3.7105956279583416`*^9, {
   3.7105958430849175`*^9, 3.710595850567733*^9}, 3.7111749068030643`*^9, 
   3.7111750189480753`*^9},ExpressionUUID->"45510cd4-cadf-4fea-b2c0-\
1d2d5e583e24"]
}, Open  ]]
},
WindowSize->{1218, 757},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4686, 117, 327, "Input", "ExpressionUUID" -> \
"8c08837f-8e1b-421e-be78-0bc82eda6287"],
Cell[CellGroupData[{
Cell[5269, 141, 1634, 43, 159, "Input", "ExpressionUUID" -> \
"ca58564d-e2c2-4c41-a41b-4195dc58339b"],
Cell[6906, 186, 985, 15, 38, "Output", "ExpressionUUID" -> \
"a0f3199d-ddb4-4b1d-9a30-f30e6069c5ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7928, 206, 994, 26, 135, "Input", "ExpressionUUID" -> \
"c113942c-4311-4f42-8218-9bcf4d67e72d"],
Cell[8925, 234, 35114, 656, 479, "Output", "ExpressionUUID" -> \
"fe17608e-2a34-4b06-b0e4-ca0ac5312115"],
Cell[44042, 892, 35054, 655, 479, "Output", "ExpressionUUID" -> \
"cf8aea55-8fa8-4b34-8c9d-64fcc9678bb8"],
Cell[79099, 1549, 36058, 673, 479, "Output", "ExpressionUUID" -> \
"95a14eea-43e0-48b4-ad2e-e0bfb2ea1fa8"],
Cell[115160, 2224, 36342, 677, 479, "Output", "ExpressionUUID" -> \
"0edd85a3-9d75-458a-9be1-d687f61f5155"],
Cell[151505, 2903, 78682, 1416, 479, "Output", "ExpressionUUID" -> \
"27a0a42d-13ef-4c0f-9476-33b98b917515"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230224, 4324, 2969, 71, 303, "Input", "ExpressionUUID" -> \
"9ec59700-6cdc-4997-9164-7d1dbcdd846e"],
Cell[233196, 4397, 21976, 441, 478, "Output", "ExpressionUUID" -> \
"d070d64b-5a67-4f66-a0a6-51cc14fb2a8a"],
Cell[255175, 4840, 22636, 451, 470, "Output", "ExpressionUUID" -> \
"4aa5e9f4-32f5-4b45-891c-8832f317e930"],
Cell[277814, 5293, 22408, 448, 470, "Output", "ExpressionUUID" -> \
"3eb42f91-0820-417d-af67-b29d3a9036cd"],
Cell[300225, 5743, 22080, 443, 470, "Output", "ExpressionUUID" -> \
"052c6b57-0206-43b2-97ad-4bee9ee64015"],
Cell[322308, 6188, 22981, 456, 470, "Output", "ExpressionUUID" -> \
"ae1d2805-595e-41bd-93f6-79ef7bdb4295"],
Cell[345292, 6646, 29757, 582, 470, "Output", "ExpressionUUID" -> \
"9bd7ad89-f3a2-4916-8f09-9469ea1d958d"],
Cell[375052, 7230, 29627, 579, 470, "Output", "ExpressionUUID" -> \
"364f02e9-9e8e-4a21-afc1-9426649bdfb6"],
Cell[404682, 7811, 29992, 585, 470, "Output", "ExpressionUUID" -> \
"932a6cfb-c5e6-44f3-9531-a891d39c9507"],
Cell[434677, 8398, 37117, 715, 470, "Output", "ExpressionUUID" -> \
"4c23380e-1890-4d84-b252-41bb7e19adb7"],
Cell[471797, 9115, 36871, 712, 480, "Output", "ExpressionUUID" -> \
"c084d8c4-5151-4f3b-9924-eb7be8945ff0"],
Cell[508671, 9829, 44726, 855, 473, "Output", "ExpressionUUID" -> \
"9cb2a090-d43f-488a-873b-35e601b506a7"],
Cell[553400, 10686, 44455, 852, 473, "Output", "ExpressionUUID" -> \
"b0a9dc7c-3141-4316-a60a-8c217aba2d8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597892, 11543, 540, 14, 63, "Input", "ExpressionUUID" -> \
"450dc594-3d9b-4fdc-9103-d430ebee1359"],
Cell[598435, 11559, 73016, 1288, 479, "Output", "ExpressionUUID" -> \
"b4664e0d-79c8-4133-bcb3-914aace1b865"],
Cell[671454, 12849, 69242, 1227, 484, "Output", "ExpressionUUID" -> \
"ab7fb684-832e-4eb3-a4e5-54a6072f92ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740733, 14081, 541, 14, 63, "Input", "ExpressionUUID" -> \
"4277d921-c313-41ad-9dbe-20988045f588"],
Cell[741277, 14097, 69627, 1234, 479, "Output", "ExpressionUUID" -> \
"a28330e3-01e3-49f9-9bf8-00ed679d88e3"],
Cell[810907, 15333, 70878, 1255, 479, "Output", "ExpressionUUID" -> \
"99b99da1-2e37-41ff-9ca4-cdc29d6f1af5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[881822, 16593, 819, 20, 87, "Input", "ExpressionUUID" -> \
"b1d487e7-f623-4847-a8d2-c923553c7741"],
Cell[882644, 16615, 69989, 1242, 479, "Output", "ExpressionUUID" -> \
"ca98dc12-1d6f-47a6-b7b7-806a1b36f16c"],
Cell[952636, 17859, 68415, 1218, 479, "Output", "ExpressionUUID" -> \
"20e01f56-aa90-4a28-bfc4-bbe2c049d54f"],
Cell[1021054, 19079, 68970, 1225, 479, "Output", "ExpressionUUID" -> \
"e50d1cff-e694-4397-95c9-a4089c3594b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1090061, 20309, 597, 14, 63, "Input", "ExpressionUUID" -> \
"9d865506-bd6c-4380-8300-cddcfd93fe89"],
Cell[1090661, 20325, 69847, 1238, 479, "Output", "ExpressionUUID" -> \
"2a79df47-499c-4180-811d-ddb7a9db3d7f"],
Cell[1160511, 21565, 61549, 1101, 479, "Output", "ExpressionUUID" -> \
"45510cd4-cadf-4fea-b2c0-1d2d5e583e24"]
}, Open  ]]
}
]
*)

