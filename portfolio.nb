(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    402812,       7441]
NotebookOptionsPosition[    401281,       7388]
NotebookOutlinePosition[    401658,       7404]
CellTagsIndexPosition[    401615,       7401]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "=", "Today"}]}], "Input",
 CellChangeTimes->{3.668865213943282*^9, 3.6689641859036446`*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Wed 6 Apr 2016\""}],RowBox[{"DateObject", "[", 
     RowBox[{"{", 
       RowBox[{"2016", ",", "4", ",", "6"}], "}"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.668865216155445*^9, 3.6688652244696302`*^9}, 
   3.668962677789529*^9, 3.6689627763892407`*^9, 3.6689630029914536`*^9, 
   3.668964048816325*^9, 3.668964188757974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"HedgeChart", "[", 
    RowBox[{"\"\<USO\>\"", ",", "\"\<DNO\>\"", ",", "start", ",", "end"}], 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<UCO\>\"", ",", "\"\<SCO\>\"", ",", "start", ",", "end"}], 
     "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart3", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<UWTI\>\"", ",", "\"\<DWTI\>\"", ",", "start", ",", "end"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9, {3.668032724636281*^9, 3.6680327747307005`*^9}, 
   3.668032842681288*^9, {3.668032886551777*^9, 3.6680329055850186`*^9}, {
   3.668078288605977*^9, 3.668078304671023*^9}, {3.66807873300231*^9, 
   3.6680787607888904`*^9}, {3.668079398596377*^9, 3.6680794079436197`*^9}, {
   3.6681123583237514`*^9, 3.6681123663217044`*^9}, 3.6681124067766967`*^9, 
   3.668865148002112*^9, {3.668865210375526*^9, 3.6688652109191256`*^9}, {
   3.668962642710268*^9, 3.6689626429272704`*^9}, 3.668963000681808*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
70lYzzvg7F+LLp7ZVWr5Pz1WCTU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Xk8VPv7APCpRFo0bYpsqWiRhopQzEFRiWlR2jQI0TbtCTcVt1Ix0nqp
Jm1uhWmhRcukFFFNlBbFqEgzYuxJ8Xvu83x/f5z7x733/fqcOfN4znM+z3PO
DPNfNzewK4fDaYR//fdf+EchPqNk6H/VTvAvbja4m052zYr7df+ZXwmO/lii
SnmHFvVNUTLK9ri2wV3weIkd2G/Qk+781WjeLbB93h73I7/Rws/gjT09ot7J
0eLeZ5XMunZh016b+v8sswFH2Gy8X1WN62ohuMetARsCf6GjysHhtmeXvXqM
lmqfUzJZ22xbRt9DKyaAi/r83B62kOL3Bee5nnCs64nm7wXfSxgYmz4ALdc8
r2RetUVadb+Dfw/HCry+tUuJZ1+Kfwk4caT9x3VrKf4Y8GGbmAuHZXi8OAMs
Tkqr+uGCNrG8oGS+r0vJlRmhBT7gqTYfb1o6oKN2gU0P/bMmpqIW478CXt7w
rGV9X1xXlIAf9b9+9tUAyq/3RSXjbWdobOGLluwA73I6/cPsHFr+L7im5/aY
4CSK/zV4lLzIM80DzesArzzz95NdGmhZRKqS8ZkxeWbQa/x+9QWw7rboIrEB
xf8K/Ela8GzzdYq/HewWccE/6xLFP/JfJfN0Zo5f02OqhxfgIVtGHM5eQfH+
BHf7e9xbt25UD6aXlIzV1u73vrykeD3Aye9rxycxlM8C8LsUbhm3mfLZDB7a
7/c8/wqK1/iykklyVswf8RStngEu0bIzCt1G8W4CW+2LMmv8Q/lsAMd43Rni
p0/5NLjCuj5cN3Cd/hHpmX4U/3pw0yjBSU05fl6UBJ7qvnCYYwiao5+mZKbN
v/by+To0zxW8M8v5WLw3WrgWPFgV3OnpixYfB0cc7c0MDaH4c9JY94+ASYfr
x3SO/b2E8rkKfF/jZ9Zqb7T0CPhil5te66wp/gfgf24Ol92U4fm5SnBt5LJr
Iz+hJSszlIxRa05a2Qq0/BBYs6UiOqvtB8Z/D7ztk3WLbA1a2E8K9b/E7piH
vAbzGQ/uZ7px350atMkdcJhAd/iODLTgKzhfn3vomAM6SueqkjmZEbjbZQNa
OhncnjDIK7wXmn8THNrjy6vkZhXmswK8oJuzxTN9XJf0uqZktvsnHIj7hOvy
SeB3rozPky1ojhC85entwm9CtLgM3Ja4+aDgEVrW47qS+eZg3m9iIlptDe6z
r13ruznFvwzcFHNHotKg+PeAk/tbxjydilZ0v6Fkxhw/ZrhlDprLA29wzd5U
l0rxLwZvnl9yerQxWhQNPjni39qSVfh9knTwDpFHWGMSmjcuU8kU2/y9yu8W
WrgQ7DvnyGSL3xT/TnDL7sX+urPxfLLLmaz8qd+Ay3aF2dVW4PFR87OUTMiq
y8UmD9HSv8BfxBPN5knQilRw65E3BSPD0dxi8F/FA8O3BqP5f8CJ7zJNZjpT
fsNvKplzPI2TQRsovxfAO9fW2Bt9pfjl4AihleftkRiP8BfY/M+DZS9fU/wj
bimZWUv73k88hjY5C95r3GOGRgJa8BzsVZz9cmepEuNvBWvcnZo24gZaOuy2
kqmUeM05qEvxzwKXNS8NujKc8tkEvsg3zpNU4/FyoztKRmvhoDUFPIp3Bvh4
lahPBofi3Qg+POvE7B7ReLysHtzkF99gXYhWD81WMinWK0odxlC807NZ3y8Q
gZXpPR0bXlO8/4BvnToanFOE5urdVTJVp+r63/KlfLqAtWuHuztfpnpeA3Y1
sR3KfMXjJcfAN2KvLfRZTPl+eJdVn0L+PSXDPZbVNLuK8hkKTi0oXdqnjur5
MDjlnokolUf1cB+cF/kucagW1fP3e6z7Rxp8X8m4ezQdWjSM6jkBPPP72IQ3
3lTPd++z6odfBU4ILGrcz6F65j5QMib1KzKcXlB+48FTOV1yC1spv7fB0z3n
v7J8T/F/AfcI5w+NDsHPi/vIlMyLUQV//W6j+G3BkxumvQu2o/stS8aKL0oB
7rMnKX+AiOLv+RD2uxcGj3v2p/gngh/39j5vHUnxLwevv7h7y8ZNtF98Al89
p/pTWoKWa+UoGbvIrmteO9H+Zg3umxG/9PclNG8pOHNqwI60JNrv/gaPGNzW
bd4ctFrjEewv5YcmHh2JNhkPfna+0EzDGS1YBLbpveMvVSY6ajf4R4PE8HYJ
WpoGnp8ujH2wEPdbvsVj1v4vWgDetHjiqbxM2p+jwBN+B8y76kT78yXwm4iI
fX/WU395A66Y8Mx07SrqH/NylczBNWIexwstiwT3jF+kufc+9euL4FVXz9Tf
3Y42KQKHrayLHbcJLfgNPn57d8eBbWjF9idKZlnTmEluT6l/nAdn5RkP1E+h
+F+CNXZ3LPx5k+JvA3OqzY7PcaD4hz9l9TteCjjX9MWLXrHU/wrB0+u/P59x
juJvAbtUvEjpa0n9emYea96Iygfzp7d+XnmV+nUj+KtL5ezUCsyvwjBfyewe
bfZ49jE01x08cZ1b1LqdaP4GsIO+/SrBJrRcDW677NncsYfqYegzJSMXPOhX
OZHqYRo491g/+9O7qR7WgccH1Lwq344WnwAHbM73DH1K9TCkQMl8/KN/1mQD
1YMz2DW/2d4vhOphNVinv49v1Baqh6PgGW+l5k/MKX4ZOEEdt/enJlrkVAj7
T1be9qDhaEkIuJm7dZJPL4r3PtizctXAsVVY37xqcKzb79KaAuoXQc+VzMvr
ewaEcKh+xc9Zf5+gEnxA7mMdrU/57ftCyZzOLbtisIOudxxY77vWw7ALdL1v
gR9sLf0y5hhd78/gcWUHHfr3ovmy90uW5TbgXhYJGhqNdL0zwUbDBu9IXkjz
WvlL1jwl05az6ls9AezftWrYlRiqV185q34Vmq9Y9ca1An++kOZlkUbXewlY
1cRZGhdH+YwBrxkRYxR+l/KnUQTz4RitH5u7Un1aFrGOF/oUsepDvKuIdb/L
rhSx6kEwtljJyPYtmG2fS9fbu5j1eekO8NJCmxTfA3S9/wXPjXJ5/cqf6vU1
+PVDZ86L+7R/zX2tZH4ZWZvey6f9KwLc2P/txnGP0JyL4Oz7XU7Ik+j6vwLP
PXR/aoWY+nE7uH7z6c1X46gfnHvDmhcEL8Acp5XbrLJofvj5hjUvSU1LWP2G
fwZ8Vx7RVZFP/awA3KvmkfaaRurHzeCbI2MHd5ZQPzN+y9rvOTPfsvqDOA98
cr/9m1g76gcN4OwJ0zRWHKH5zOCdkgn8ZV5pa0vxu71j9TvBenDsXSe3qFya
D+rY61z991Bvf+3ctfMAzWeu4NQFx+vDmqmfrQWfmTnVRVlL+T4OnjblfbDx
Zcrn4A+s+0fIgDO0bnQuT6F+tgqcde2Ckn+E7rcjH1jXQ/3gA6sfRTmWsvqh
dCU4zvtm3pxY6meHwH5ek34tcKX475Wy8sv/Vsq6fvLAj+x+LP7IOj/vDtg+
PrLkyxqqh68fWfOuWOcT1FvxvZBPNTTvHAR/Hdu7qs2A8nsTnGmu9H4dR/VR
8Yk1r0h7lbGsmFTGmr9FN8B+ecxMfT7VRxk4dOsfvbGTKP4e5ax5izMBPDOX
88XAkOqhtJw1f6m7K5RM/LNfEyp3U7w88MhO4+RzB6ieF4P5XAO15lqKN1rB
mme43Sqg3+Uuiuv/L+VzHPj8c4ekzxco3oVg6xnXxy7toHh3VrDyIb9cwZrP
hWM+w/zaWhVpP5DyOf8z6/lB9hc4YLlgZMIdij8VPHtxxo775RR/8WfW84x0
zhfYf01nSLvcoHyGgy+VtuxxC6T4L4BV0/T0QrwofvkX1vOF6Bc4t3p0a5gr
5TPsq5JRtI2c9XEkzWdnwQcm1Pis1ab4n4PX7a8YfSQN51FxK1iS5M3JzaD5
eFgl7M93c8csTKR59xk4O3XvutY4ms+bwNzev5ZXlKMVRlXwfKQ37uWABzQP
zwA7G6y16feZ5t2n4BVFE+Z6/aZ5vb6KNb9zDL6x4uNNBz8/qaOMb8R1oQjc
O1C+iFdH83oteN/xgSeeHkCb6FUrmUJNTl+9MLTABTzevDp7WyTFvwYc5bOx
37S33zH+Y2BP9077QW/QfN3vSmZR++4670K0iA/u9WFA7qNqtCQUnKJjN253
PVp++DvrfJwH4O6TZv75loEWT1UqGcPJ+1dUFqFlweAP+adrE6vQ6gQl63iT
u2Br227frjWiBVVsK1aoYD8vVHgnaFN+48F1eYPX+2mh+bfBj5et8e/jiBZ9
AZ//l/tj9Fo070CNkunQ3VTpHk75zAIHf/aM3LeBrr+ihvU8JOv5A+rTMajs
zTnK90Rw/57/DOs9iu6v6+CS6WeOJllS/X4CD7j4ynjvUqpfrVol470t5tiy
gVS/1rWseuMvBdvKt6+MvkX18KGWVV+c7nVKZpB+psf0UxT/eHBSy/7J37dQ
/IvY6+Ld4KLL+SVNV6keuqpZ3yewADtuduUJ66keFqhZ+5M0Ss16HldcAjdW
70pZJ6f7a3Q99NeVoauHn6L9YV49632FPBIseRCVHllN919qPWt/5RXVs56f
ZYIGVv9Sb29g9UuT8w2s8wtego+fuXS07Dr1kzbwnOa/nQKXUr/Y1gjzfpji
Y/pV6ncp4KTTM320f1O/K2xkvb+RtIA9vhXM5Zyi/c2kiTV/CE83seZJcT74
gs/P8V5ptL81NrHef6gNm1nPaybu4AN3yntc7kP9TQ2OTtau7/We4h3aomSc
Tk5+5G5B8U4Dl27w1bmxiuJdB37SszloWS7NO7XgL7dG3XYopf42pJX1fCd0
bmXNZ+LV7HXZUbBzgXeYzTCa1wb9hOct5yU2+vWUTydwheGctsO+1J9DwAVD
pPNydlP8iWC399ygpHKK/z64PTvExK6D8jmljfX98iDw04sWge/bKP4EcKfF
Dx3TvRR/NliS1n3a2jsUfyV469wtfvODKZ8Bv1jP7yZxv1jziOAWOCjma9i5
qTRvfgYHVl8JH6VN82bvdtb8yd/fzopPlAl2X/H8l1YVPV+Ug50X9Nc5a07P
m9q/We+XORPBscs2d3/yjp7XroGv39L4Xj6W5vePYP+T84YuM6f375p/oN6f
q5bPc0SbWIGTywfPk7TT+8wlYJ3F6Xfqv9H7yvdgh0c/Y0Vt9L5Vo4P9vtgS
/Dy4Y8B1ZzyfyKeDdbxkF9g0K3eooz69f+/SCf3hl/NUD2t6XzwWnLni3pVM
Y/r9wBs8N+8Ez+U1xb+jkx3/v2CT8SvP93Kg3w9GcVSMNv/Mnl2Z9PvBXPD+
Pge/vWmk3w8iwKWT6/ROJtLvBxfBKp33Z8/k0O8Hr8BXvYtMgmLo9wOvLipm
omlcxYtvaM528Hl92YIexRT/ObDloG6H53fH3zeEL8BTApb3mBKGFv8EZ9WF
MaZmaJOtXVWM4cRWf54jWnAGfLXi/vx7weioAnCAzHPM2Gi0tBm8cWdcgdwO
rTDupmIu6IlvGrZSfk+Bw9MrU/PH4bokD/xplt1jM2+0vAEcn+IQvTULzXPT
UDEV2r0TkywbMZ+54HUd8Rvf7WzAfNaBfTNz7g7qh+sm+t1VzIhtrT1+6KMF
ruA455QuLjboqLXgmR6jt7yOQ3N/gFdUuuv5Cpown4M1Id75Kyz/GYIWMeB2
yyGhEUVoySpwyqvAkjPCZoz3CLhPkmJ8HwlaOFBLxYxy327Qq7MF8+kI7rpx
CNcuAy1bCZ4i/fLI7zxafQhc+T7uwu3+rRj/PfCHruUuss94PqlDDxUzo3Pd
2wnNeLwiELyn+LpFPh/NFYMz56RWXihAi76CB608FftqAJ6PE6CtYhavXjkl
4xSadxCsH/NhijgBLbwJrt4UFCSMR8t69VQxRTGn3d9q/8T8xYLnvfe8HSFq
w/zdAHNbvbbuCvqF8ZWBk7ukl/foi1b06KVifnf9lfT6Ex7PnQD++8+U9yZc
XJdcBQtCn1366d2O+SsF57d8/VLWFc3R7K1iFm4yCxv+Az/P44EnPIz/ONEI
14WLwbaucRPHleC6Sbc+KkZv8rBTda14fsE48PSxi3KEEeioheDyX97KJ13w
89Kd4EUTRn/blYLmc3RUzK746pA9r9CiMeAYzmof0RK0ZD54kWmZga/gN8b7
F/iFeVJ5PyM051+walhtqFQXv09s3heup9p2XWQ75k82BzxzgNIk9RDmVx0O
ttT4ceWSCcV/ATxFMJMZN5LyLQfvKfl8ecgBPF7hyVUxJTsUqqdj0NwwcO8c
+2WDRuDx/LPg2vMG/omX0KLn4HTrFEvDbDxe0sr+vFDST8Wcnm1bfr+Q6vMZ
eNTSpsAdyXT9m8Az9i/ttf8txWvUH+6/BWLPh4vx/FEnwV7Zn4OLdTF+6VNw
frnD0KH6aEU9WKwbPSGJweO5BgNUjI2Va+zZgbjOnw7WeROtdboS1+WPwUll
1+T219CcOvAwRyNPRTCapzdQxSSanfZ9c5PidwG7dXvZvMYA18VrwFXbcqP/
yUKb1IAL6xZM9xZTPnUHqZiB2z1fbjei+uWDez05Ee41i+IPBffxW+/Q8pTi
Pww2nP4xdn4WXk/RAF0Vo36mO+fJFqqHqWD9nLTE9aZUD8FgrwUCv+hbeDzn
EJiev/B43l2w2Z60qw/d0DL7wSom9tjXto9SPF69AuzdxcUj8DLaJB681cKj
2OYBxiO4DXZt+hJitIvy/wXc4LX5W2IV3V/+Q1T/e96g/B4Ad3ctyGHWUfxZ
YOednKlCPq5LFOCMoh5Xqu3Rwn16KqZxypFuHA7l8zq4uO3awChzqodP4CH9
W/sWeeG6WktfxfSrPG39fgnl21qfVS9SKTjvLr/37HtUvx/A6dnLv4yYS/Xb
fShc/4zFYTunYv3xx4MP6zxpMWvE/U60CDwkoO/zK1xc57wDX3f0dTDsieZ1
NVAxX1ykoeM2oYUW4LELA1MXn6B6XgC+0k/Ld4Qu7bdR/5n79r6dPVrQCd5t
EWs2RICOGm2oYib1npkkckdL54GfWTTfzr6O8SgiwZqt07UMXNDcVLDoYX3n
el+0xMwI7v+v+gNfxlA/EIB/j6t+ltCC/YITDr4ls2gaU4XmnQdfveglvBBP
/eIluNJpjkejB1o92xjyM3zttDFL0CbbwMsKV8W8b8PPC1LAXV5XWPn0wvWo
QrC138MtMTzqFy1gvbemJ7wt0fzNJirG4WD1jUR3yu9pcG7SeYf5Q/DvleSD
41cWxgvLKP5GcI+/zkV6mqI5RsNUTNiPIY5RW9CyJ2CubXXcqZ8UrxrMeccX
HLLG85kMNYX9OfFiv7PmlO9p4KWuZevuOlI+H4GFKq0ta8ZTPmvBLi5/ph8u
pv47ZLiKmay539EvhOJ1BmfmZl/1+k75Xg0efnqOTfMpNE8FPv1w5uVgJeVz
0AgVc87nkcdrJ7TYCbwyyuS9xnM8vyxkBOv6qBPBK9ZPmp1pTfnsPxLmk01b
blzzpnxOGcnKryII7HLH6dCBKRR/Anig1WjreD3KdzZYq0V3pVUw5dPOTMXU
NbzhTHSlfK4A/7x4p3FGI9VDnBkrP8JbYMt5mrEmGyj+z+DeydyXreFUD37m
KoZxWxr44hdasB88KM+2j+Zhij8T/Hr1UcYxhOq5HPyg+zK7olM0H+wdBf0o
1mK1pJ36wzXw7qetxvn1aPlH8KxhDm6Dt9B+rDVaxTxKjzGu7qD5wQr8IyFl
iHEf6m8Z4Byzn9oFLrQ/vAdP1+g87POT5hmNMSrmcU7nyqXJtB9bgv2Sa4+3
fqL9zAf8ObTn8Uk/qV+8BY9usZJN86f9rMtYFeMxKVO8fwBaNBY8r/bnmdLv
tJ95g1ertUNrebjfyXeANxwptnoWghZ2gOMyBbP+7on7r3iUhep/vwfjumyu
BWt+UUeArTI2vzoymfbji+C0yur4iGE0P4wcp2K+WkyJ+foTrfACZ5rdyfp+
Dc3dDpYJdmaZDsD+wD8HLtBTNFxZjha9AI9Odd91p4bmh9mW0L/GfJzel0Hz
toLpeewPxn8GnH/hd26tIVpcAB7Ae5wxWo6WNYMP/8noG6nTgfndNB72Y86b
RScc0VGnwDLNnGzbajxemgcucPxQUT62E+NvANtcrNmavBDNNeTB+Y4baltK
0ZIkcOoZw+f212BWgvzmgtXjLm2VBqI5arB0usG2BB80T98K7ke7hm25yRS/
K1hr9QPvMZcwP+oc8Ki15y6Nukjzzw9wssYnX5/FuC4YbA3PE8UB9XbvaH5j
wM1Kj4v2ATRvrgJHLuv6MuQD9beBE2DeV52fy6uj+dIRTL8X0Hy5ErzIOOOk
TneaLxPBOu3pR+4epHroN1H1v/cJmH+ZA3iuZpF2bDrFGwjeZOjn9m0E1YMY
nLt06iNTf5o374B9jtZXa66lepg8CfabCqOyU0dxnRsAjolddMX/BZp/EOwy
/pbin7M0b94Eu0/d+LzTj+aLCrC+bX2HhgHND0IbuH/+FJe/u0fzbyz4XnaR
3k4BxX8DbGVvHdTVieaLMvC1Hp6B/EUUfw9b1f/ed1I+94BVNsfn9RVTPq+C
624fvazlTvNPKdhS79gR7X9ovtCcDJ+vNbsYeoPmTR64IDifN/kNzW/pk1nz
OOc92G+Kt+6jZXh+Xjc7qPddRk3JrnQ/jrNj3a/ihXasecakBNzo/yDBMJXy
y7FnXe+oMeAcv8Iot0C6H+eDo7skty62pfz/BS4N+OS++Arl9w944XCdu+4W
eH0l5g5Qn+mTvvocpfltDlhXLyZtSQ7NbxHg5Rb2qr3fKP4LYJHOluxjsbRf
jJjC2j/UnuDGt13/SM9Q/GFg3RRn/4BFFP9ZcKpT3ais3hhP1HOwnzDqcfhR
2i88psLzxOh2w29v6HlkC5jeF1L8ErC6KdQ0OoTifwbudFj7OtwN7y95Ezjy
19rUHSq63zY6wv7A9N3uaUr7xUlwxPGSaVXttF88BbsF/jnR8BCtrgcvujt0
6whd3C9MDJzgee3R86/ak9HSf8B3lryUL2jG4xWPwYp/p46r4aO5deCHYeer
m0ejRS58mGdyZ/Bln9GcHLBBm2nNdQM8H68GLJIdiOw9CC3UZVT/+30e9xsx
H5w7vGNNSyCuy0LBOmm5C62G4LrgO7jbR+3b1pG430QNcIb9zaJmhrcYLZ3q
zNqvFMFg39e+o+060NxDYPGY/BOH13f5zxKuC+Rj8MClwR5ouT34zO6I47oq
2t8CweWL61a378R1Xjz4Q8+ib8bf0MLb4Ak2xW55g7v+Z7WtK/TXVeLOCB20
iT9Yap5ZW/0OjxccALufPrM+WgsdlQV21Y6bG9mO38dfPg3uX0VcZtF+XBft
Aw+w99j8vg3XJdfBxs6Rq/XjKd5P4CW5G09+D0CL/54O5xNnVU5cg5ZJwfKF
syeU16HVH8B7y+2LPr2n+Lq7Qb8J9f/1w6UbxjcenLFTXdtnO1qRBp5V3V6v
DNPA/L0Dj+GVHHt7Ec3v6g7zR35y/KpPaJEFuCQk+XzIfrRkAVhj3e36jj3d
MV+d4FmM1ryRTpoY7+gZkA+rGnNVHlo2DywQN03W7cDj1ZHg4w7Vqyda4fmi
foPD20+5hT7FdanZTMhH+snDAam4rhCAt0Q3XO3lQPGGg4vqH4hMhuPfwz8P
/qd7nw5nG7R8+CwVMzKpYXD2Vjye4wnOdEw0Or4Vz8/bBtb3SPoWcASPF6aA
r2p9//yhLx4vLgT/OLVomdEutMksD5gH8f7Dzws2g8O5M3j5fPz7ok6Dd6pM
Z/b7jJbmg8+8PuxdfxmtaARbzi1RTjqKn5ckz4a/Jyj76exjaPkTsKFk8P6w
hRRvPXgxx31gUAyaN9STdT1kJ8CppQ/PFbZi/OpHYP3l0vQN3yneWjAz0e3U
gwtowRAvFXO74ZP5MnPKtzOYMT6ZKRxH+XwI7jXB2KwjjfKpAo81fCjPm4cW
DRKoGIvznlWVOmiJE7jyVVLXxWR5CHj5t41qt7lYf8JqsLvu17sRIqrf/nNg
f/jbcF/zFFyXTQE/ilr5I3Qu1W/QnP9/X4k2SQD7ZN1rGmiLlvadC887pa8a
jO6jFXbgGfaunlJdPB93xVzW8fw4cNgiu6D8eLy/RLfA+T4D9gak0v1vO0/F
TMsJ1gtOp/nGD5x+P85/00m0cD/4vDBLPcGV4s8ET9oW+ui2H93vvvNhHr8Y
eutOLN3ve8HlkkpN80aK9xq45dyCPn0bKN6P8/+/X1K8Wt5Qb03FQwuz0ZIY
8HebANFhU8pnhvf/979u/P8DPhnJlA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
m9rdcWiivCkt8NUc0dJwup9s8FPU22+54grVgzsHzpvSMqOY8lhvga9Xz//U
sovqqYQDLsU+TaL6cHSfoR9GWzR096W8trDE2e2yBl0v2AQ/0dpQtoXyic7C
21KKU5fT/fX6P8d+HM/UetDn4c+ARxQU+u9aSfk3wIr4HtfO7qT8p+Gv4f2O
3KL6yiTwLxfukvc7qJ5W+XLmYZXd8PVk8Xq4qHrbkjnUP5ws2E3Vd+1MP8pb
B0eU+uuv7nj+a1/ImSipdr/b9HmUIjj91ZA/M+n1/I9wlffqoBwPytfzJc5f
c9Trlv1H9TsOKz9LItUov3U6XDdRd/kZF8pXBSeq56SNp3GxZoGcsdMK+ubm
TPWdAn890S6TLqT63YZVVmYtil5C9XsPJzi6zchdQHm7SbG+LBsdPG055Z0E
n0rzT/ag99NbBe8e07S2aBHVq8srOVP8bF9ZwTLKOxF+VaDxdetSyrscthif
HZFG+XwOwg237c8cc6P6dS6UM/Jz6W736f14hnDtrt8WGnQ/wRJ4Y+rcb1do
XBQIe/zoXhhGn09yFc4qb+odT/fnj3stZ6yrzfefFlA9F8E6RpbDPqyg570X
tj9fH+pO95MlwDGOVkbl9HpuEby0s0/icup3sVORnPn4PWhix/yQ+sN14y3W
hKyj/FdgntnSUxvJvFewywfti0E0fwU/Yf0biQbOHfM95o2cqTDPHHZ1G+V9
CTt307Ay8Ke832H/o/eP2Qop7/Bi7MdWI3/U0vplfRl+c6v3fyE0H3yewwON
gorK6H7iVtipU4vvFOov6dC3cmZio27wqgOUdy58cvk3+z40LsqDTT4/GJFw
hOrZDG+Ys1fXeS89/0Hv5Ex+6ZbcZvo8erNhs9XVzuqhlH8z3Pf6/sXDab7L
vsC+WotFnWg+cgeWyJlD4d1MOK6U3wZebJuZZL6K8m+EHdWSn6VTv4gj4PLw
qQx3PtWzX6mceXkywsVyHtWTgc3eSPRf8im/Fzxq6p+ikdQvklNwVorH1iAH
yp8NHw2WbI2h+wunl2G+ZDqE3aV+T1kHTx8e8EmV+kMWBjce4WeOof7hZsK9
M5YoStZT/k9wRVnf1Fx6nlL3cvTPDZfRtvT5OCKYbzH9fosT5b8Lb9LrZ7KL
3k9QA+dn3Z3G7Zh/WhVy5pz3D3cVqofeMfjzcb9+6TQ/+Hfg67+fX/Ol/hJ+
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
24/ZSL8ProM95myuTPai3wfD4OEJB54k7mGtlwkX5p2ZZsej3ystu6KeN4bn
1fuylrnD3lrFSW9n0d/DRPDGopitfb3p7181sEXkf8p4If1+7dYN/aK3xTkz
njXvGPyr4K5j6GXKewcO/WQ4/UEM5dPormC+TvV+Mv0xa34w/G5nQav95Ca2
frfgs1ETtHruZ51SCcsd5HXVnqxlXTUUTPtr8/h5K1lzJ8FlXN2mRnfW4hvw
k/UljXGvWUvLYIH61simNNacLpoKxiZoQMprZ9Y8Hmxmc8LK9C5rwTLY1PpQ
mao9az3VHgpmqdJ4pjyeNX8CvCDtZ36lP+VdDGsZR2odT6C8++CalXW+JTLW
1hwtBXOhd9XpdUrWPmNho3FhWaOfUd6FcPz+nOLKQc1s3gD4XtSZxT01WHMS
4J+3NVz7OLDXi0b3RP6y4K8eSqrnAth+ZuGKkfT8lH6wkU5L6aRGet5xsIvf
LR+nS1RvKTxtdPvilA30vB25CsZW64JQ4EjP2xe2/NEn2DaCtXU0rPvJr8zs
AT3/F/CMTsmxO7awFn+Dw3wdZpjY0vMW91IwRV2N+5/So/58Bi/Z326guY7y
foVNJevHP/WjvEN6K5gvf3odek/9IrwIu+WalFdVUn/mws3mk8qml1PeJji3
MsTX/hTlHaStYP7o5BysfUd5Z8E2x3vqXqX+kj6Cs6xiB23MoH79Alf2CzeN
o3rwBuig/5y2rfZeS/lnwq8M149cHUT5veGQoZonMtKong3wkokL//ATqZ59
+ygYnYuFh/2KKb81fEv1whiXGsrvCe9+ouHqp0X9Gw6HVyTYHFpF/aDdF/N7
89s1ltHUD9Pgh/0UR00/UP96wAuv6HAmUL9zwuBvIdKYQU+of+/DqVMf+18U
sZZY9EO/LbfzDFvGWrkGnlC5QW/rEurnE3BxlsssUzXq5wy4xu9+cew5yl8N
m91cl7RZg+aXa3/Uz/WJw6Su1M9H4cMh2/r7TKP8afCFixN0rF9TP8jgBOPc
CfMKqJ5HBuB5PD71qLsH1fMm7J/H+C4YRv1QAefmeH3/sov6QX2gglE0Kpfu
86d6G8MDXokMzyygeqbA5TFnR/ywo34ohW+WpF5rG039oKarYPresVCMoPXV
2ghObDiZL6ffE32WwgZWOWcm0+/fnHfwM+Oze3Po93WeyiAF47v2+1zVjr8H
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
4QN1exsPerHmH4XLpxlt6J9O+dP+jVc2CPfT+mr9ny32B/9LB8wM2Ot9jsBx
70o2eSfSenwTjqk4aikcx45LK+Djwomzz3RmLQqapWCGpYRsT9BkLUmB5z6M
GPnQj/KVwlbnuvkNsWll86nNxvnzib724sus+Ubw9aIxQUtfsZZdgw+FpFuH
J7ex9XsH91irDLjwjrW1yhwFIw7V6Wnf7Rubdzx8f7NPaUk2Oy52gQMHixqC
LrPjgr//xt9Mfbpw1nc27xg7BaPKm1UqlbCWOMMbbd4dOdaNtXIPPHb3sTd9
17H3E/6CZ+qcC4h/xd4vRX8u6lF4edfnfHZcxoc7d+2k772B8vrBw6duDHLc
xn4e61g47Hmrk+sB1tIR87Af2ty/7xzJXs9xhAOsvX4l7Wfvz9sFL0tsHHtc
yl4viIKnZUzrFjqNvV6UD/s0Rbf8imKtN88e30ddTxknGrOv52+HJ02rD1ed
zH4eYSR80OtR6Ns81ilP4SvTtG2OhbOWtcCfNXJDL5xkXy++4KBg3h/IWehH
lj6BlZz272t8KG8TPDozrbb9NGueruO//fuo86w61pKz8DhDTcuk/qyVObAs
tumMmpLyNsKCV+qnNW+x5vefr2CqGuOT9zFU7xmwjnDvCPtZVM8HcJg158bK
IqqnAk6/03xx4X7WPn34mN/50taLs1mLreBh25csUKV+k66HF19bYeshpvlT
B/+VprpnlrL9Leq9QMGss+9SqRNC/TsV1t/S9dngbHZcuRa2/bO32OQ9a73Q
f9dXGqpZxNH87+mkYE6ev9bkOJB9vcwcPnug2a3SgzV3DZwpsth1MZbm23E4
wlvNrlmHtU86bOkwUWQzhua/qbOC6dVDjacyhc43q+HhB9emc4azFoTAK3QP
nt1G81d0Gw6/vjVJkceav2oh5vvS6+8rGmm+H4YrW4Zc2jKXzZOSCs9+9+Fp
b1vKWw775ud3e36K8qovUjCz1CYVLm2j9eognHej1vWdA9UzGb7H+Zh4zb3V
6n8iu1bE
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 2.860384539786026}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 2.860384539786026}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"USO\"", "\"DNO\"", "\"USO & DNO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.668865224885637*^9}, 
   3.668962690770999*^9, 3.6689627769605513`*^9, 3.6689630067008095`*^9, 
   3.6689640495350714`*^9, 3.668964189633591*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fqgful/+HRZutEB/Qfu7ziNHw+W3fV114RiNh+fm8K5XfIX7uU4UPYlh+12n
XA1nYTLCpFVntt+Ngs3vrsZ8JouXwnZzNOjH2H6ng1UXZw8K7c/26473Ndxt
jweoH1YPw+/z3qc0CJ4/9V3elwFsv94L171r/sVRyfoJ0zxePUlc83jxhC+C
u2/9Mu7McNa/7YajB3n9yclm/ZsS3pa77uxcfaonmUu+hjt36+Xn5oU0nrgA
9s5qOPtBY1a/1+GKEAP0M2RRJXzm+cfa91vJyrkPeM/TyeFBDoPauGSw+N7B
RoeDHnkbsn6iRQH62ZKaM5Is9r5j4ZWHU4+VjySLM+FJcdlfBviz910OLz1/
/fYqS3pfic0eYj5c2In+6QPlt9/D+v2e9WsXYPvj7ZfdcKZx+Sv4r/2R/Loy
srKJSsONkf2udlSyeu2j4n2e+XT4o7Xy8PRosrpRIfbveyuxnlM9CXvBwQPH
GQYuZfPLD/bkdDnZqWx+bYIXhTwtub2KzR/9RxouIu1dbWQl69cdYW+D+Vhf
aFw6+RGvP5Wvh6c35apONGT98En47pMdKbvusH7XrkjDxXs4Yn1g+fQu4p1/
FGFFvHjUx+EVPseWHP/I+svHcKf0LZgv9L4SvR7z3rdqDfx54NoEnSl7/0fh
eaouyCd7/4WwzyiRacAI1l/+hp+ednsxwJ+tV0eKNdyTlLPo92h9lBTATYYI
O1sJ2Xr7A9atHZ6lUbL11vKJhouzEZ66s5EsToID3fs0z95HluXBa1vWHHjk
zdbbb/Dhif4//xSRVV2eYr0otJzfIYYs8IBPNDiikZ4ky3NgxcnL+1o2ZvvZ
F3iJf8yKBm3Zfmb2TMNtX6Zf6HKNxT8SfncwGPOZxb8Efj702QeujKz+DG89
E4P3QdcLO5Tg+spnF46Vs/nvBvud+djGYxLr1wPhndfno19g8ysBXiNw3L4+
jc3/ds955yspBwesHIr9hs3/ANjH8KHXixJWD7vgZYMvzn52iu0XN+DqnOOe
sT4UT/jQFxpu17bvZcI6Nv/nw+MKN+DAQOPqHXDS4nsh32Us/muw27lRC/eb
sfxXwA5Or7D+sPz6l2q4kS2WNYmbyfIrL+XNd1FWKf+88RauvDQX6yVZbvxS
w83ZaDfO7R/L7zY4Jbe6jeYC288uweISG+SDnh/+GvarMYs/PZD1E0ZlvPOA
2qmMV0+y82W8/TyxDK7TumJ+klWNX2E+/JryqTaSLOgD9xvcpeOe56w/eAEb
03rC6sFAzdvfzUVw0NMZt2Y/Y/XgC5saFJ7qmcfi3QjXVb040dCZ9QcNX+P9
nA3fv2Ysy6cDvC3vXfNCF1bPk+CskX7ndySw+RcBt5c4cUVSNv/S4e7RU062
j2D57FGO85GTqmBdEMvnRFgpejF4+3q2/q6DDU5PeHaqJz1fdwxufzvBrHk2
y3cR/MPFJ7rHOrJi/BusF9Y5OE+zeg6FXWKm4vzI4k+Dz/YP++rWlJ03VHzL
fsERDp6GxoWsHla91XClvr0mrZ3C+rMUOL5hQvnIfmTpA9isOna63VbWX9bC
5tFlejFObD5avMN8WJUd8fsaOfw+vCAlFPsbO7/VwN8rfh4xUrD33/m9hpOV
ZGO+sPORO/zNJg/rLXv/9+Ancy6h32fvvxoOKVAUesxi79+sAuvVlzdYH1m8
I+DdM25FDApl8crgXSa12x1OsHr4BPeKF0zuPo2d39pXajhHw/TATpns/DYM
/jp2IOqXxb8Y/itauumRN/Xbij3w90W/JnWfxs4/bas03KtBU49vG02WieH4
1bkhPiasX18Il+ec3ZGgY+fPePjbybwYtTU7b9yo4p1P5EM0Gs7ZWHvt5mSy
ch78J3m4qq8pO39uh5dnt8b5mp03rsKlXRq6eKnY+eg9/Kt1e8wHdn6bo+Wd
n4Rx8GjaL9l54zKc7/0C6xHr19/A/qO6F0lPkkUxHzTc7A91fRbPY/35RfjF
uEM/tm9j718N5/wwtxJ+YfOv6UcNt2+Qx6Xr9jSu6wuPXP/kbU42m1/n4PY7
63BeYevBy4+83wvUhp80XMmNpjifsvNFb/hBq5SbmY9Z/U79xHvfquefeOcH
gcFnzPdujkfz61g99ISjlm21yVjC4p8CC0YtTpt5iZ0vNsCRexqgH2PnHz0d
zsdtAuRPk9n5wh4u3YfytmL7nQ/80N7AJWMJ2+/C4Qb6BZmPQ9h6fAK+ZKeH
/pz1Y7bVGm58YkvvPzlsfZhQzev/VWthz2GTuvV6zfrJY/AmA8ONV43Yevyo
mvc8peSLhqvS723+dhrrz1bDDn1WBm35y35PS4X9Xb9es/jF+rWH8LfAmVif
WH/x8wvv9zfhyq8arlGtpEXFVtb/JMOzl/x9v7U163/y4YPGaRqlJ+vPv8Ob
JAFYv9n5wrxGw8VEXoxbNJX1P4fhHUH90E+w/icXLqgoxvmRnS++wvpmUxYO
CiXrOn1DfRilSrI0rB8eBU8d0iGvIp71tzr4bHWlaYiW9WsdvyOf09z76Fmw
/Xn4d97va7Ig+JGrLfYb1q99glsWZ2H9Z/2aaS36z8wY9DPsPOFayzsvyBfB
6sEf0D6y3wN3wwF9WmTmFtK4pM0P3nko3AV2+rZFnHOF9WsLYP9/PQ7YeLF+
bSdsYhk5ULaTxX/9R/3vBey8Nvgnr19VzYUDD/RB/0/jgu1wcSeLAb7u7Dx0
Bc7RbcR+zfL9Dj504BH6W5bP2b803N6ac6Wfm7N6iIX90rtMW65m8WfCC+ZE
DDlgw85H5b/qf39g56Nmv3F+/ncT9UH9tzgaXtYvYuze32TZBXhwryYFrWyp
/0589bt+v6Lfw1VN/qA+x+0+t/lrJcXfF64d8tlR6Uq/t8sz4AtjU0ZxRTSu
LIX7DY1E//ae4m9Up+H0oqbjfPOO4u8FN21RivqhcYkf7DCo9eteH8jqEnip
8+QO9vFkof5fzKe/Npj/ZLEj/K1SJTs0ip4nmwz/KrrkbRhI44nrYefo8fNa
VNC4qME/DXdk26e9jWaTpXZw7+KZnTJzyXJvuCSkuUKSRfcrw+BHQ/1elNym
cd1x+HybMpwXyeHdBVput+q6wCj1DeXXC1YF/Dv6NLmc4l8Dt9KMbbG5ksaF
R+HJe2ahvySLC+FJHntQb2TVuAZarn98aIOLx+h+wWrY6s1AnC9oXHQEZv0j
jUsL4HkdNzaa/UBN8f+Ao051G2m39TXld4Welht42BjrL1mSBKf039x/3BG6
PjwPbvhw22qHE2TFN/h+uOntwLV0vbpLQy2XPy4N9USfJzsEZ/3ojv6dxhNz
4OGD2z2JEdP9qi+whfAV+utXFO9IfS23rZHJdYtfTymfd+FpUe+yvvmXUD4/
w/vyz8dPGUrj5h0MtJwwfgr2Y7LEDa76+6dpavoTijcQ/pAaPWRwZDHl8yPc
zrnQ71/NI8pnu0b176OI4uVgrbx2ZTtpIcUbAI+JOfjv37+HFO8uuOfdpS9/
ZeRTPlsbarmiFeY9la65lM+h8Jxbe7D+3af458NdPx9Bv0LW7YAnH/5bHCPO
ofivwUt6/+nv607PUwxqjHie+S49v4PG1f5wyu+vOP/R/UI5PDGgsC02EIr3
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
sg4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
LrShs/4P4cwSXQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nk8VO37B3DJGjFFGxLtqZgo7cxpQdqQ0MaUkqSIFkUSpU1MWdo1qbSq
iUKJJqkURdolhtIyI00l0qP8Pt3X95/f88fzPO/XPWfmM9e5zn3f5wzzJUFu
y1RVVFR+4F///ot/ZKITco7+V2mPf/Hy4NVd/nRz9mQW1MOlmQ2vYg5//edg
/TQ5V53+Tmj9l1k8Fk5/kiNtf8fMz4XHTTwysGgQO15YB09wPmu1eiCzSPek
nLN0Vh8yrTOz1BYuHGw/fUgLO14phF+uss+Ko/ePqoHHdVKbE7qYvV6ifUrO
Gd4rSm4JZuMyGzhzncNjr+PMPG84pPVUk/owZsFO+G9erWt1EnO5xmk5V1Ew
J9kjglllBDxAPzp4wS7KvwAuPdDaHu7PLNwOT+mV1PvbQGbRZVjt+6mVA1yY
zSzT8f1Ex0arTWJ28YJVd+XX6k2k/NFwWOr7jKQhzJKLsFvvF5uDe1D+F3DV
2qefXg6g+s49I+d048a8TQ6i+m6BnSdu9CvTpPznYIugvStma1D+Z/Dp1wfU
91hT/r+wxsacuQO0mKURZ+WcadX0tB1jqL7pcMomRcdRnSj/E7h8V/XwJw2N
LP9/sF6szc8N3pR/wDl8vz+tO4q+snHBYzjp44+sKZ+Yg3/BR2XVlsGVzOK+
5+Vcpy+rj65tYS6fAX+62ftaQAGzsAT+1UVrv7su1fMnHCDpHmP6nI1L+1yQ
c2fL7wx+m8KsnAY/6bQmx/0ms9laOCpDZ2qzGtXzO6w12/BulZyNy0wuyrmr
XrN6N15l5jnChkUV1u6llH8NvLoux+Yo5Q0+Ah92C9K3amdWMcqQc8NUjvve
/8nMnwI7Oi0L7m1E/bAazpBXrH7cgfIfhHfsGbPgWOsXlr8QVhk26EtyINWT
uyTnZqWFjvKPYo5aCRtlz540YgWzJBmOGDRrSN5myn8Ljj3oqTdPRPnl8Nm6
E61T11B9/S+jf4MFq9bFU333w0Xn1JSLPlD+fNjsgmWD9xzK20Ui527MU3c8
LaPznwBn7jqb1SmSzv8N+LPkRPzlMOrf93CYwcWPVuPZ9Rald0XOPSgtMNxU
T/UeA4f0Pa+ssKP5IQcendR/28TZzMG18BbrBbb1fGaxTqac21rZ/eWdmczl
o+D5v4fK1oqZVYSw8OUkt24naX6ohnd1eTw1Q0jzg1aWnPP4YZF6cCOz0hqO
nWla0m7AbLYIlrxaWFJfTPl3wH5NscsudWDjMvWrcm5foCLe/zXND3zYRtsh
IYmuL8F8uOiNy4EVND8Eb4Pbt1QKeoRQ/kvwvZLav4/3MfOHX5Nzz3qs3j9z
Es1vnvCpvgHlh9Qp/1Y4KMz4UQjVW3rh3/g5K/6ydVT/5/CMuwP1or/T9eWe
Lef6XHYffq4jzW+R8Pl1lS+3ttL8cBbOLVHL3eFA8/NTuPP2S6qDfaj+f+D0
masMFy6k+obnyLmmo10qbKZSfdNhrY+bgm8uofzlOf/v+wp/ww9FBwqH/KR+
7p8r54KPHNVdQufP7CQs7G8zZvZwZpdH8OQ3Nt3mHaf+aIFXenh8ty+k/ObX
5dyQtSverpxP9Z8OF6WMGj+X8omb4IXZr4xSdlBe0xtyTlBzsefryZR3Gszt
yrh+bDPlDYUfJYTf9/pO/fDtn9/HFGxNpn4wzpNzU+/MttszhvI6wJvnqi4f
IqC8wfAS8eMsURzlPQz7fTWzW7qO6tnrppwzSbs05Ige1XMyvNZkkv/K/613
q+DfW3l/wxwp/wH48PyQH//R+lZ+G7brkjw6LoHqKciXc16KW4fnOlE9A+By
o1Z3gTb1QxKsci9/hGERzW8FsK5xQv+IeprfPv87viQl99kLmh+WF6B+lhXG
N2/T/LAP9ntfeHzDBZofbsLjTfipdg7Uzx/g+EsTN1WNovy8W1hvlIsSU2i+
UkmApR6Tb32rpfntOpz16uHsnvqU/x1c6aC3ZCnNX6LOUjnXkNRV99l9mp9H
w2aCue9LNtD8lg37H8y9fiuT5jcZLJ56YVOjO+XvdBvzh/XeXl7nKP9I+FJM
2ZzJoyi/D1xoflwSPIzmt7dwzbnF9jqv2Hxarlko50Ye3t9yPZxZxRrO85M9
re/OzF8Ie+w+ovpkJLMwFhYp1WrfzWdWqt2Rc96PQnwtwpjNrGCntc8vJq5k
dpkHr77VYWBGT+aoGPizsdVNt9YGlj8DLta2bulxjVkwrEjORS78ON21kDnY
A+6Scc5x2RFmcRRcZ6UxZPJF5vLzcKfFq53zbzOrPIffxK+zWnWBWTTnrpy7
fe3I5wZ6f+lmuOLqGvHhCGblGbjDzKCMkVuZzSrgaN0rS0dlMru0wdzpAbb3
9jDLNt2Tc4GXD735sZGZdxreWf6p7PJ6yl8G274YXLluM+Vvhd1ruj3oeJDy
97uP9V0tukbrGDM/DY6X2IfEr2IWlsIqyd4TFgVQ/mZ4xOo0ZYAD5XUuxvWy
YFCNeRRz1AM403HrxYc+VM8fcOTJAT/Doylv7wdyruvqBYIDpymvE7yozP9z
yR3KGwJ/+KEeLs+neirhk7rL5DIp1dP4IebLxo4hnh8o71Q40OOhx6lcyhsE
N2VJ+s7Io7yHYIcQV+FuqpdZzxLM70daQj/T+7tMgucf6DhpHuWLCoRjfVfa
HqbzKUmBTSerLTxdRfml8JIOFcuOfad62pfi+jxsFKT3kuq5Ah6ps+5rgoLy
FsBqqd1SptPr+Z/gDxlzrtqb0v7B7xHq0X+F9NdXqqcIvqF6pahjDeWrhyet
0q62saJ8+o+xv10Z3vF1m4LVLx4+us2qnfvNLMiFVVbM3mOhSfnq4N+rNl+J
rGbjYt0yORfXd9CRNSXM5baw6rC4pwfeMguvwRv5fvPiqphFNXDU68gXDlJm
qXY5rn+tL0N307jSBu453TIi7BWzmTfs7LB8zsr7zDKNJ+jv9l63Uhso7whY
0quk/xYDOt8L4PWzgzTzG9l48HZ4guqST/26UP3UKrB/6rFwn/VXNs63hAsd
0xtW/aG8XrDDrIfWE3TofEfDJw6d1LcfS9fXRVivqNu7L2ZUz6FPsb/qFBaz
WZXqORc+b/Tm9igene8tcGHF8+ZpWnS+z8HFMfM0nS2oX5/BZVNUVtfupPPt
9kzOjfn23rNzAvVrBByyb9qUF/co/xn4zbYtMxrEdP6fwNuLy8fuO0T9+h+s
YVXf5kP9a3bquZyTbfWS2U2g+eox7NWtbH1oBM1Xv2DhnrOpefbMkr4vMP+6
ezuNH8osOAEXxOpUhAxhDi6B054fcM/XZBb/hONn6Gv/WE7zbZ+X6I+F+aKn
5jTfOsOmdgfeJNoxi4rhPhGe8xLaqF+/w1mimC2aXjTfmrxCvth+M6zPU35H
WMNm56O91P8ua+D5V1Vq+89lr5d9hbuf6WTfWUT1NHqN9am0ST97EPXDFDgk
szgz8j/qh9XwY6n38FTqb/FBuDh5gYG6CdWzRyX2L2dd73f8X/9y8Nck3z6r
ulM/rISbR/qOfdiH+iEZLh977megMV1vt+AzTvv0r6+jfrB7g/7fze9y3pb6
wR/mlaXJat2pH/bDg8NzHKYsoPz58DqJ+QDbLMr/EZ4yI886keb/8mVV6KfD
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
xOojlsGBGw7s4EcyC3f1UnBpO7k/UUnUD1nw3pebFBtL6feAt3DWrFkLLlP/
KTWNsB5Y2K4ZPIDV38waXvAs8csxfTYukcCpNWVpsmf0+0olbHw07mIvHv2e
oW6M67mPxtC2Onr+ZwUX3jleurCd9mfzYJ0af09VD9rvvoK1L5ya/8mR9ruq
Jgru66a7V2bQ8wXhMLh7vDpvLD0vEnnAiyvuZusvov1wFFyREBE99Q7td9vh
aeNrIlydaD0Y0hufb+h+L5Cez0nmwNaGdcW9TGl/thlu7mSQ2/SW7Qd4Z+H0
B5UlfbVp/RpoquCMhFt7HY2h9dcF9nmjiM7+9JHlD4dvvHWa8SKXmX8a7h+5
/KtpIK2/ZbBef+3m3Bvs/ZUz+yi4lAv97sS9YzYLg2eN2BBdnMeOd0mD67ra
XbvRmY1HlcJfN6fPN3ZhljTD0VpTJQMXMgvWmSm4KvPYxgd7mYOPw0V7VTut
baP95QM4nSt4cnMkrb8/4BeSJanz2ym/qbmCu3hfxachmx0vvQc/myxV7F5D
+0kl3F6U2D+7D91fGPdVcLwpu/86vaD98FTYb172vs567HjZHbjm0eKrBV/Y
+/Ma4fqwsZra3z+wvD374filJ9x3z6O8k+BdKSvumFZTvQPhdzv72Iib2Dhf
AQ909cyzPUb17NZfwd3qNKuxXxV7f5E9rIwJVFTcYu8vXQFHj7zo09DGrEyE
RxnNODBWzF4f1XUA5ltte4MdX5klE+BdPUqXqyYyy/xg10rrmVfvUf59cOVz
p4DG6cyCPNhmXLSP+TiWr3zsQAV3J6IkUfGU6rkUnrS9t71fK/t8fjwc3TUm
Qn6JjQtz4WNGz5fdns6OF9XBRt76gYsXUT8sHoTrx3SeaWgZ7cf2wP2EbRsD
E6kfrsEBd/Qa39XTfqwGXlqv3esi3T8G7xyM9XMp/5Y3/Z4rzoQPhDdojaS/
jymvgp/y6scKntDvnZpDFNzpbh3879LvwfwR8E7rhVmbVen3zsuwvuU66cUN
9Hvnazhs+3/qqfn0+72ahYKrtfXJStNj84OLJfy75Ob7WXuYo7zgX8O0bL7d
pPXtJXzpsXTs90NsfhF0GIr9KPf64KafbDx4KOy2oj0yRsLmQ/FceMv7JU4q
DrSebIFvO7d0fn2H5re/8IIVn/S8RrD5UTR4GK6Hff06nnGm/Y4bvFpwLP9J
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
KJWeR12Gh/hG3MqbqCL4PxwEzFA=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 9.429984408260513}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 9.429984408260513}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UWTI\"", "\"DWTI\"", "\"UWTI & DWTI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.668865224885637*^9}, 
   3.668962690770999*^9, 3.6689627769605513`*^9, 3.6689630067008095`*^9, 
   3.6689640495350714`*^9, 3.668964190439389*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<USO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UCO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UWTI.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart3"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.668079430448698*^9, 3.668079543661236*^9}, 
   3.6680816042267323`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"chart1", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668962669523451*^9, 3.6689626724103975`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
BztoLM7/XPCuRNXS2kfNpv8HviAJbQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2HlcTOsfB/BRJCkqW1JJiEoJ2ULmkCVFSUjIoJQtcxNaqUikVChR0a6N
ktJmSRKtUtnDlFAzqhEpIr+P8/XP7/7h3vfrmNNnPs/3POfpjtu2z9JegsPh
fMUff/+NfwQhsUKG/lO8EH/IF8INJZZOJj87/pr7AT7+py9H6xdr/tA4IVPa
v+3RlR+sY+bCUhm8tZe/s9bPgz/GO8Yu7mXNa4LHD933yrGZdYhsvJD54CVf
fK6HddEsOGbavDnH21iLebBRZtr6k0LW3u/gDMswZ7sXrDMHJQiZUYkGMRb1
rAUz4NqC3X+CSlnL28LWh6qHJT6k/CdgjfZRBZsLWddIJeL+kobKlx6w5kyD
u6rHRR57RPk3wnq6Oa5v7lF+P9i8YPiAJ3cpfwb8M73HQ3STtbpekpBJ6Xkc
El7M2sIaVk+03KNYQvl94apvapJHKE9mOpxZfbXBlPIKnsFT3vWedKTr/LVX
hEwTN8/CjRxzBOZzAsZr11H+FPjgkOJjiVWUvx4+M3TDJr9/+fvgcyuTXym9
pH49k7G+PrKDFb5Qv0mwemRs3KAWyv8Enh19ZUpDLeXvhQ90rF6wp4LyT0wR
MsslHZTt6P7cati/f9Wy2KeUtwd+ahneFv6M8mqkChkn7qgAfcpXYwZnS3Jn
tKRRnxXwq3E2+aOov5Au+OuFQc8XJ1PesWlC5tfsR/N1IiivCWyl28cLv0B5
XWD7htGaezKpz07Ys9QuSIM+L1BJFzJFNquVHcJpHpbB2beq7jSEUP7/YNkT
32Qzoyl/JOw/ttN0YgD1qXxVyDj/UdD4eI76NIZvjjxSHxdL+Z3ghkKZrZah
lD8CnrJyYlHfPspf/Pfzzc2ns/dSn8w1IeO37av+DXvqczestC61+4Ij5Q/7
64BDhlHbKP9deFfH5AjVnZRfCC+ydbVaSo5xzBAyJ4aqD/Ogz9ecgVeOUVG7
S+bchmt1ou5W0t/nKWRiPa4Eup06RH0Gw1dW1qvPc6M+C+ATm+P12o9S3mY4
TOqgno4n5R1yHev/+MvLXf6Udw58WuHQofJg6jMXfits86+gPviN8M3VPmpv
fCjv4CwhE8CRK5hL/dbMhENMolquU/8cHnxpnx1X4jb1+RYe8f7b5H/zUSR9
Q8g8Uj9xtTSf8k+HP2p2iRUvUf7N8NHz9dPHp1N+f/ha9KfacLouGJCN+43I
/BJM+eT1YaNjKlUmJyi/DSwzs94jieaDfwy+t/Tzx0E0rzHX4AnPZBN/RNE8
6Obg+Zk6MSOMzFsPl2q8ulQfRPl94EudpfwpvpQ/Da68MGP4Dfr+4qfws67z
/kdOUb9WN4XMYZ/qDUe8qN/DsOz8q+857pQ/GV7xcH30wQOUvw5+VLvnzApa
X+5veNb6Xzaxu6lfj1whU+4yWaHNlPpNgmuNHdfFWlD+Gtg0SGvDXLrO+wl/
H/zjqJE15Z+QJ2Q6TWdud+ZRv/Hw9BaTV65bqd8q2Kjv5DINK8rfDRtEqwoP
OlH+cflY/+5RuvHrKb8pXG786KHRaurzG2yzKH5uySbKq1YgZPT9bcsfO1Be
E/hTrdV/EnzKux+e/DhYT3cP9fkFFlz1vNnhR32OKRQyvtUqr+LI6kvh47sj
VqSepbz8wr/7+W8X85OU9yKctnvgtRSaX/nRt4SMilbXIQ26zl0M68krp+w5
T/OwF16aPi/DLYvyn4dbnvoNsLxO+e/BzwJrnsj+mwfubSGzw77wxnpa35Bd
8DiJA7mD6P5F5+ASDyOzR//m4Q7885adgwRdV2+Fny04WG7573lzuCNk7pds
ueJOfQhCYfm8T25SHpT/FizeqB50jtaf+/Hv39+Rcfg+9cWXvytk6g8n524+
Rv0Gw2cuDlMQ0Hrp58P+nftFhpaU/z085dIC3RQTyi9XJGTWSNhmtf7rfzY8
pFUv24D6trgJ7ygP7rlxkfoVwB9XrF9nfpryy9zD++pidUYd9ScwgL/Xv/2d
Re9L+S2wWMVBqYTOBzFv4DyTylrbx9TvwGIhM6B7pcGYJso/HZYacU/05Brl
3wS7vPETL7pP+Y/DeweNWzeWzgfi/veFjG0sTzuH3m/qU+ElPUP8pdop/wZ4
2AivkwK67n0Uzl95K83sCeW/CqfvSnZIK6J+p5TgPGFgm3mK3qf8dfCv2iHZ
555Tfm/48A0N4WIB5U+F3VPnThDR+4nzFE4bV1HLpfdzyJoHQiaLk336Jr2P
i7zg2r5e6yz6eeIrsKfS717F15S/Ft5l3HFzP52/LH7BFtHrNo4dxJ7fBO6l
2O+HlM04S99PPhHepaE/62wn5X8M8/THuLp+oPw/4DbTlPEN/djPx4x/KGRc
H9cO4A9lrR8Hmw/UyA6mz/MqYfmw3qufWyn/d/jM5vtJDK2XeMUjITMnI6Tm
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 1.6955812349423032`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 1.6955812349423032`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DIG\"", "\"DUG\"", "\"DIG & DUG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6689627135021515`*^9, 3.6689627910361853`*^9, 
  3.668963013985845*^9, 3.6689640600053825`*^9, 3.668964194244814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DGLD\>\"", ",", "\"\<UGLD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6688645395246763`*^9, 3.6688645435645914`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nk8lOsXAHASSpuQkLWSFjEUEsVbSkkSJS1KJWnnqkiWSbIlS8hSaZQ1
CdlFjSQJJZUkNLKUmWKEKNvv9JzfH+b+ce/9ft6ZcTxz3vOc87yUDp2xODKJ
j4+vD/7177/wDys0nk3h/3IN4F+ij8EvtzfkL7Dq+WfDDrBD1vCSaWfJdcdZ
d9nU0uyvB6s2EDN0wTuqbDjrCn79M60AvG239U3Fy4P/bPsVnCy87v0cxu9/
Dp1+DzxvNGcskpipDT6mec3lVtfAP3NtwXGb4tO37CKmfwHfDjPMENPr/+fM
qQls6uABDceu+8SsFeCVews3LB3uI/HvB3cHGJ3XCSbxGPqDkyTSpQdfE9cK
JbIptST1OBkTYj4NMKv+0z3FORj/XrDRX8VC/yxi2yvgdjvF6MEDxKEZ4F1d
6ls6NxArqiWxqTf02ZoB64jNrcHHfM8L5bOJ6d5gGY7k5aS5xJkPwMv8bda6
FBOz6sGSF9kn16mQ+B13JrOp9+UFC2NSiRle4J/J+3fc/05cmwr2rsmxOWtF
1ofvPbhgqXHzvhvEtDHwcvvNpwumkfVnuqewqT1q15rChHB9k8DWTc8FBeeS
9Vd8C6b/tjUWuUlsPgze9Hxq4Oy1uP7KqWyqcvjyrLm3iQ1fg6ME1ulOKyF2
HAL3Wi43ZsoQM+bfZ1MpetxqdS3y/dSagk+aH/ho4EKu21aBjyWEti/ZQK6H
DoD3ZkvJnqkjZiqksan5TUEO1ZnE3M1gWsLMzqBVxIpnwX4bmd90H5DPy/wF
Hra7YTTXkpgl+wDyz/yb8dX7xKLG4N/2425nNTB+J/C9vc6t46cw/pvgVm+u
hJAErqdMOpvqKepc9Nca19MI7Hr8ckCoGlkf29Ngh36vS0M9mM/RYCHFgb/l
rn9J/M/Am+8OFFpc+0PWk3rIpurq5fa9UCPX6SfAVYkXXp4OJM6MBC/v1S18
1zFK4n8KdqMtFj72ZJzEzwZHjIeUB68g1xkOGWzKP+5n5eT7w2R9r4Nfxarr
zTs1QuIvAX/btGRnMpdct52dyaammqfyR+ST93NDwF92brIKuUNer1gEvvzr
/bnAt+T15u1g15rMKJN7xPSZWWxqrcfbz2IHyO+TuQp8QGGLod9JYsN8cGjj
Z3bGCWLHVnDj+zHfmt9DJN5pj9iU8tfUgdW/yPVaLTB/T+zLOjdiPlvwzYJL
XnkV5PWhLeCWRbOfPgnC+jAlm03Z+Z5dMH82MVcTLPlhlfBNbZLfijbgZjGr
lg83MH/9wAKrfm15FUbMEsxhUyuifvKLZhKL0sDzKeVQ12Ziwz3g1G9Ca+es
JJ/n6ANe0/N+E6OImPEQfFo3MuJ9GzFteS6b0iuu8OTokHhtd4GjYzMUxFeT
3yf0EjhdwKR8/wJiZhq47cSiulg6eT/3A3hFy4ktm72J6Tvy2FTnOrfvk/VJ
PJme4JFf1z8GDGL8KWDBt6tOhlpi/O/Ar1Kdi4pY5H4wHAUPLb4vxH8C77eL
+bBeDns2ZOQR8yWBg2mdGtaexLRa8Goz87bmRGLbv+AShXHNOAu8HxcWsCl7
h4QkcRtSbxTvgWsrQi4+kyA2r/l3XWmRTWMg1rdB8JoW5cyZIVjflArh90uw
Nu5twfq2BVy3s/5MzAGsZ/1g6WeP5rLuYD2WL2JTVlFHz+62Itf5NoNT37+s
XnIc43UG61y4mljjT64ze8E/dNzv3I8j5s57zKa+pu2gV1/F+rARvP942cXp
kcTmjuAx3b3eKo5k/eixYKqxzaDvBK6ndDGbil165cf6BeT7MFwPfmq37/lm
ccyHU+Bq+u5M61nk8xhRYLe/1lalc3G9S8H2Co/Xf6/D+mZYAvGbiXhlS2F9
OA6utn1f0DdCrjMjwKI2tldP22M9fgJua15isLiJWLELrC+z52T/eqxvR59A
Pd0tknY3BOtbGHjhDHXpkIskPtFisM7qLfGhUzGfO8HrZ/ROTenG+ib6lE0N
jA/r1puS63wh4HR61FODW1jfCsGxkhKnnr7D+NvAJ8QsWm96YPwzmGwqX2F0
29QLuJ/ogGUinzXG7Cf5b54H/jPPoFRBn5jOAuf65qmvzyevzxQpZVMdHVkd
/h+IWSvBf7+ICK72w/p8ALzn3LRFVQ24fzSD1dfc9plfQVwr/IxNPY517mP6
Yj5rgl1Nj6XJvcf82AdeH56xS94Q89kXfDkj1ot/BPNjchnsj7dMTNi9mM/q
ZTz5br4bnOPpyt5oR0y/XMazX2Smg19+e6mmloz7h+pzNtWnoFNbX4DrawWu
m/5z+ukPGD8dXBPe6p3ihfHfB1vm6vQeFcH1/wDmbmorPDmK62tZzqYezoyw
eGSI6+sB/uD2cCprBllPbjL4jpxs4GAN1rs68OPtgaGRI1jvRsAqBsW7541j
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
5qI/7Q==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
sTGQ2c+q08DRJtPnfbR4OvB/ihuwWQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2ndczf8XB/ArLYoiFUoapJSWKCX1qaTJ1SIZoUJC9gopIyu3ZJWGIklS
aMmIrFIkMtoaqnvTloT8Xt/P8c/v+8f3+30+Po3Tuedzznl/7lVZtcnZR4jD
4fTgX//9F//U8S7zGfrfTnP8SzoPVrR0sjIXYW3RBF+y7BlvMYR1gFQCnxm0
bjil2dTxn+NnwaWeksUX5djrejnwSLdCsy13WHvVw9srftu/9mfNk0zkM9KL
A9IfeLPOnwmrjnwd8MmUdacXHDjfJ6uNfl5QLfxUoblEI579fenDrvAZ51HX
5vFKWNdNh7d5iueY7WMtvRwO09+Xv7O+nY0/FHZcOyRboZd1qehV/H5eUcL5
J6w5+nBwYNuSigzWep5whUu/ZXAla6/D8P2y00sTsljzbsF+r+WiGm+xVtZJ
4jP1Pv1BR1NZcxfDObXlmcdrWQcFw4bRLUPCIlinp8Kc/u6zyUWs6z7AMXsz
cvfWsA5wu4a/P/nAKzV5yu8B+OTspybtWqxLr8Nht6VGD//AmvMevn6v/WZQ
J2u9QXi0gZG/pyflNzCZz7RpKs06HMde70yCp6XsDJtC+VV+Cz8VbeVesmDN
/QU7F3mkGWSyXx80+Tqfef4i4l3gF9YWr+GPb9v9JrSzDuiHKxanGZ6IpnhV
U1AvJ1Ob72lQvI7wWsWN0VfzWHu9gnlKqwsfq7DmfYel03fdylnJOn/iDT6T
W/DH29CZ4rWDeY3yc09TPpS3wbo/Gp0KXlI9dMNaEr/rt4RTPSim8pkdyYLJ
8Q+pHubB47q7z46j+rDYDDdoKsuMpnwERMMPtU0NjvtRPsff5DMu6zZM/BhK
+bSGvzCFyZl0f3hthAdCNSeHTKd6vgAXNukpXJ7excb/BK6/vWmRax3lk0nj
M3eS7jXIyrPXg9bDop39BjNnsE4/C8d6HXBV8utm438EHxBt1bBS6WHj58Px
brtL76qx1+PX3uIzxgEOopdC2e8vjYCd374KKyxlzXkAX5o5+WvyZdZeo9L5
THSGjHDmXPb7O0/D1qNKS/eUs9eV78H9qR+HvD3EmtsIi3+2nP9sN8U7MoPP
SOxdvSTiKvv3pBvDd+2e648gW2TDr+XGvKlMpv7wBR6T6T4QGsQ6XuI27v/x
5mvC3rIunQErTxYWTLvOmuMFz7OSVYr51x9q4Lo5b2QDPagexO/wGc1Zmfd5
w6keDOD5mS7r7R5QPSyDO5w9X9q5s+YehYtSNl5IdqF6ELnLZ07kRLde8aZ6
0IPrrR1SD/2rhyVw1NddVxKeUT0cgg0qFy6XGkrxp8GclVt940ZRf5uWyWek
Msa4LtWielgEX18cFuxBfy/vIMxTPPph4x66/27ALfrqUgXlFH853NmQPVD5
me4v1yw+cytyyLNFolTP+2GD3oQbBdsp/mRYk//sZ6Icxf8ONtlyJs7dgPrb
H9jZQf/wqc5vbH73ZvOZhBk6dYVy1N+SYOcxndtKf7DX9UphJVelEqMR1N8G
YGFTw7C/Vex13qQc5P9+gQjHg7VyIlyu9Ez1oAFrbgn8rcN+3eiuNjb+H3DL
yUkho3pZp6vk4n4a9fTcCDn26+sc4KDbcppiTqzje+Hek91XOr6xX1+qdA9/
3/uDveGW7HWOHZx/9xtv9yuKdyuceGbdlcGFrPO74PUeqY9FV7PuVMjjM6Ge
8QuWf6R4beBKJ7fG5Z8p3gDYZ2Z2fP2/fhwFH+rzOd9QxVp63H0+M1S22WyA
+o2FFayx4KEsx4rqYQP8UuIVb6YDxX8eDj2puKRoPuX7MVw0W7JMx4TyafGA
z5T1NgQn+dO88PvP6u+/Kzizzo+E1Wen5jzvo/gfwvvrk7K9zWietMJ6/R9W
9VWz19PXPOQztooxVi+H0LwIhxP2L+ldYET1cB/+xG/wzzClevgKR3VyjKer
0TyRfoT7LbIy4KkX1cNp+NJB3VyXJspvLqwd53NVU4bib4ANVnOm/NhB8Y/I
5zOSKkOfXlak+9EI/uixOenKTbrfsuCAv9anh52jeq6DX85d0ho7k+p5+GM+
c2zyg3tSXKpnQ7jUbyCFe4f9/dIr4Av1WzgeVL/x1bBt0dQLTbWUX7EnqKd4
o327Zag+DOCpcvPXbGQo/qVw/VlRs/etbD15HYFNNKJy7j5h3SlcwGeSK4P+
iOWxVtaF96lNXpDSzZrrAZ8L2WB2fYDqOQQ+Im2j5reW8n8Trj3rcDswm7WF
9lM+Y5HZZKZQwDrAHT6+Wsk89h3FHwR/VO8Otoih+FPgqTrTinbT680ph485
Ho3OOEX5dXnGZ3Q2PvPaeJ/qYx+sJHSrVHse9Ytr8JWE/Q3nx1O/K4PfdhhX
+ByifeM3nLp0aGj+CaqPPc+xvwn9eKRO/UT6KmyQsvSuhwTV9xuY2dkSN6BI
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
oX7sDoc+7O3PpP6dHgRfHthgEEv9rS4FXjciv2naJ8qnZhfqQ3PLpEhZ6g8u
8EaZTfN3/KT498FfhIe7OKyn+JNhKY0rRxboUfxlsPOxBkOeJ+WX243z6eae
EePo9e/cA5+bddg/gF4P5atwxvM22yXGFP8buD3m/LAAK4r/Jzxxrra47BbK
764ePrNATUh+50XKbwJs+We+5dYUir8YtvV41ZtUTf24D77ZvPzjVnOqZ+Ve
PjNZTdV3lxb1hzi47cuzC2K0L/AK4TkHggNVZKg/9MCXDlR4i0tRf5vwnc+s
WG1z8d47it8WziiQPuLeQvXQCU8zXLl0/VnqZwp9mMeLqoJ/U7+ymAu/3Kx1
vzeb+tkmWN2/x1Y0kPpZO1x2si31RT/1s7E/UA/vFY6GtlG8lnB08a8feZPo
+YM/rKMcskVpK533z8EGH8OOaNP5iSvbj/m26Inw6iLqD+awb8kt2fIs6m/r
4GNm4lXS2rSvnYG/+bffGapB+9pDeGZa0rJw2ufiZ//E79sXdLz6MvU3X3jh
PN3Zq6ZSfwuH+3yjp3yifVQvD644Jt9SYE/7ZhPsc/H0+aNHWHeuHkA+LAs9
rgbTeT4MlhWR1JTg03ktB7a0qWyP/rdv1sN75Sfk8K/Svin5i8/ceXdD91oq
7cMnYNfbr7fvbqZ9OBMWdVY7x6XzYnwtLP8uZaWTIsU/7Defuc51jtstRfEb
wkecrWxUVWgfvg1rSK7NnZJL+a2CZ9ru7z6TSf1Z9A/md16v2GY36s/6sNQv
0wabRZR/T1jkZObN2TtofnyGbRtVGxzpeY+08CCfeb38fuh9UTov68Aulr7q
W+2pPy+GzeoV7v2Kp/4cDO/08NoiRedrvSF/0Q/Kim6JfKL5oQUvWX/RQr6E
6sMNzr5bkpYYSeflA3DD8APCxvR8ovM6fG7Lu3EbjOl8pMERMDsujHgn60Xn
N2dYfNbUlcHL6PwZCAu7hCz+IMWe56SvwWLvRteeFmZt8RaOSTQu2ULnw9IF
QwRM8MWIlrlFdJ7bA1e6X69KnE/nuSuw+4ri4KHb6Lz8Gh75offb33V0/uyH
Q88HS1Ro0/lop5CAeb6of/+xRXQeuQz71RnOelxG9fEKTpv5mNtDz6PTv8M7
vNNa61upvicOFTC3bKZflaV6CoiFNdabpJyn9zPiX8Ize3sXad6l+uiGnVOG
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
uvQW/PKDZ7J+R7P5/wAhZuGG
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 2.0180662085417}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 2.0180662085417}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DGLD\"", "\"UGLD\"", "\"DGLD & UGLD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.668864553971403*^9, 3.6688651553291597`*^9, {3.6688652180749407`*^9, 
   3.66886522633328*^9}, 3.66896271770475*^9, 3.6689627977432756`*^9, 
   3.6689630206242476`*^9, 3.668964066761972*^9, 3.668964198096452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"btal", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
   3.667995156778397*^9, 3.667995177356733*^9}, {3.6681116088383703`*^9, 
   3.668111643226673*^9}, 3.6681123691444373`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
jTrA/fCSNCsPzBIR7A27Oqb/P1ViSiw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nd8DF0XB/AVIhJtJTphoz4hYqOXkJkkapAlOi+rE8HqLVii1xUPHu2x
WiSirN7ZaBF1ESXqEoIdYlOUBPGeZ84/8/MHvp/ZcubcO/eee/f6DJ3QY4SL
SqXKob/++5f+2E07HCL/1xlEf6nPooV35GYNa+14PvbLfzaU3ukQy1f7UM/Z
Xba5JVp7itxgwvaUN3Xk9+vfoE0ldoGtzcihcd2GJgTLdurRxldk88nsX+sH
yra473aI0TXs6rTGsu2NyeMvt669qjnHP4gceHdh14WeHP9Ssrf1hlvIYzk+
W9E9YFUAeWuFWF3mcY5/ADl075r8ggCOfxF5ZGaO4JUhXzcdIhdY1JcKbZWt
8Y8D6/qSb2cJNW76yDYuIA/K8746Nki2ZT9Zu6zNsMa+su2PyEUNPQvFZWXK
+e211yF26VRs7DQV53ceeWFylc7dbfJ1WwL5ue5dyQrVOP5UtLaA3KBVt9pN
r8qvt0bHg51x5KsFnx7d6Sdbc4/couP8nY/nytb9jIfvM9ZOcIilfD0PdUyU
LdxBG36QN5pW7xFryDbX2Af3b+tCDunbTFe7gnxdf5P8Ykxwac8A2aav5J++
JSv0KsbxVk90iFte//GShnO8nRIx3inkBGH3n2ZDZFuyyb2KddlXubdse9X9
DvFtad+uZyfLVncgf6nUd4ybgeOfuB/u17AFX6+qfAA+XxuK1o8nP6t4zzw6
87Mc/z8H4Putl8jjJ1Y/cqQb51M8iPkci7asR9svkmfbLm8r6MzxO9Dm0YfA
tli06vwhuF99GQvYuYYcfb/dnQRfzucZtO6tBe7PWOqwQ2xzJNwzOlW2pQXZ
tYXw9/ck2cJJtOE1+e8g7+b/vJJtLn7EITaO13xr+ES2rSlapSc3cGl1avF6
zudLclrK66GRy2Vbix0FOxuhNf87Cu/XLSFP1Q7L6r1btt31mEPcZQ6JWHNG
tlpLXrh2Wclu8zj+/mjDQvLszQFDfuZ9kuM/SH77uKy9RKh8XdvgOFjfhxxh
a94mqg7HP59cKmfepHb9Of5EtPMhuf3Edd019Ti/PU+ALXPR9ni0+gFa+E3e
kjju8Xsvzu/sk2BVHFprQ+vzyUkzxw68vVu+X1OtU2DNLrLHblOTDt9k626T
vy7bH3lgCMf/HW3xOe0QT4w5cXBeCY4/DG3ORduqnQGrOpFrlRm9rel++fu0
k9HWLPLOyMPlV46R7axy1iHGntlybkM9jrc92e/W3tkxoRyvgZzSJLFVlTay
jZvJ/QOXvjjbX7a60jl4vxCCNowjZ2TnlDnalPvDRrxuSyIfTunl8mSEbL1w
3iGGPRuSdGUe5zPyPFy3/k3+GDLCOHAGx38BrflI9hqWOlkKk20ZdQHit69F
q8+hhQy0QX0RrFpDPr1wvb12gSTn9zR51+iGGfblHH86ec9pc8/ltzn+klaH
OGqLX4pbH46/uRXypzthxfzaya4uB/vkGjh+jySwvQnZc0iPEGEcxz84CdrL
/II8Nd92LCKC8+t2CaxqRP6+0z0qfgr3j4Fo/WLyk3XhdUa15PwWuQzfp2mI
1vVDG2MuQ/+yHCDH9Jtq3h7O+fW7Ajb0JvtcmjG4eUeO34i27UOrHl6B9jVF
XIX2t85BO/eiNffRul9o+6xrNL89H+h777ncvuo95LMPFlarNZTjv4s25F2D
/myumQz3r92J1t9KhtebviVD+zk7XwcbU8gryx6f+/m9HI8l5zq0j907xSFO
Shjcfp+a+0PHFOifwiS0zUk+tcDLMqs657PKDbC2HVo/AW3aRN5eSYh/U4fz
WfGmQ/wzpGtilxvy5+uCyS6HAz929uf4o8jSwEvz+6zg+Dfg6+3Wm5BvQ9At
h2j0WDx0hyTbPIbcrnWhct5pslUXyB5R0cn/XOPn7wP5RONak6LPyraOvE3P
X0ypikuiZTtNaN078rLLIerQPbKNpe84xCux1/93/SS392q0cApteEMOcayJ
m7yB4ytx1yHWfPZQ32gA57cZebqX/4luI2Xrj5OXXb0qfImRbXqFtrrbqP6r
FenX2sjxNrbB52kGkQNazeoytw/nq+g9h9g97MSlyIkcbwA58tiyGy6RHO8A
tGERuckK6UzdzZy/Ivdx/PK/D/nU90WbFqCt+8kzylky8kI5n/UfwOcbe6Et
89D2BLQ6FW3ukQr5tkWT72VFdSp7jOPfi9beI7t5r1q2eSjH/xOt2f2Q5pM9
dxcm+XO8dx5C/ow/yIun9LzfTuR4azwCCzvIMTXTh20tcMj5vIk2fyVPu9J2
hs6F463+2CGaFiwJ/5AvX1d1Rpuuo63Z5JRfG25HleT2r/oErOlAtqy7fDW1
LMc/EW3/glZXTgMLoWjD+DR4Xsz/pMHzqa3wFPqjXnyK/XcsOSkkrfqNCO4P
6/H1zovk8tEBUzMGcX7bPsP+MJpc6fbO9DU7OP7YZzjenidHbN6jGvOQ43+P
120jnjvE+NR5i7UXuT+Y0Noz5Dp+He4+28bxv0WbSr0Aa1aRy3gOcw125/ng
JNr4+gV8v6X4S7C9KblV/S6j7go8HxxDm1+ibcVewfyhaoy2PnsF463T1e4Q
k9Nb3pqYz/FqyVWqxvqsduV4+6ONC+1YnxV+DfWT0ABt6IM2z38N86stEa2v
9wbmJ1PPNzC/Wee+gfrHGU8euGJ6lTMXeL54gLZ0T8f6bHY6fL46Di3YyI0m
rT7tt4Tjz0erZr51iE/ftB0+YhvPZ7vIt2M2z6i0g+O//Rbme9P3t5Avq887
aC/jDXIfqfwEz4ocb+47mG/t1TLgurpTBtyPOZmc0/2f3wUBnM+sDPh+VdX3
0P7a9mi94T18nzOTPLzz2f6DynI+K30A60I+wPNgHEd2OXqh0rcSHP/GDzC/
CuU/wvsNAtoc+RHrh7/JkxNfT+v1hZ+/ix/heTW1cYCtoxwwXjvXkjdN7hfZ
8i3353NoXYYD5mf7cAnmH/UatHBagvnYkI7XtSs/4fx24hPUJyb7J1ifWD0+
Y/3b5DO0n/HoZ2gfy4vP8PzY3TKh/6gbZWL9ODAT1gO2p5nwfpXrF7C24ReI
V98PbYoh32jk62EYxP3BxYn1rR/a2BttMaLt+8iL92WU6hTL/cE3C9Zj5gi0
bQ5aFY/W3s+C9YFVlw3375yF1uzJhvFGdzcb68m8bGgf9YwcsLAzB/q74Rba
/A1t0+SC9dtzsf5JQVtzcmH+dHp/BWs6ou1OtLrKN7DQjpzlknBRdYf77wS0
KvMb9ueK3x1i+o4Fu9xzuD8Hf4fnxxSFtm5A68r9ABuD0JYxP6Detq/7AfO1
+sIPqM/MgXkQj21kHo4Pa9Has3kwnujf5cF44xyWD9c1q8mJNSdc8a/J/eFU
PozXxjf52J9L/ITnT1jxE15vOP4TPt/86ifMDzb3Xw7RvrT2zlJ27s9NyJsT
pLjAprw/dYQc5jXNf/Ih3p96To51NsjbNJv3p4r+dohlN420ZG7l/bUAtG4A
+VdwZEVdFd7fSfsN+zfqIgXw/YI/2tCX3CRpzvd6EvfnBWhtoT8O8VNszwv9
n3N/rk/Oz5n1tPtJHi96kWeGBdf8vZ6fx3l/4P6dCX8wv3+pJKUtPciK/S17
NFnx+eq95EhHFbeiZzn+e2hbeCGwahZau7sQfL7+DvmB7/wTl9I5/h9kRT40
013Auh1kxfxvvEnOy/qREPeE4/9KPlqxnfAoheOvXhhs+JesyI/5Olmxf2bL
xtdrOxSRxJ73T4+r4Mr94Sra+YWs2A/VVHaVxHGtV0099JvjDXWF7zOOJyv2
e9Sf8fVChaKScv/RIJIV9ZR5LLnckcuHPx7ieNeTz7lXGFD3KO9XlnWTxOI7
SxXZWoH7c1u0dTRZ2Z9j0ZrzaEvrYpKYOCAm4EUP7s8j0GoT2vCWrNjfVg1z
B2tXofUn0dbiHtAeuuUecL/GYx6QL8tLtL1YcUkcW0M75ZiD42uMNh8mn3Ge
7udn5t8HnpEVz6uqaAmwVktu+r10E/9A/r2gP1pTuCRY14Cs3P/tg7bMJx/T
9TuwMI/3p1WlJPi9qB65Vqdoj7fPON6e5Omjpw9yTeV456JVCWhT3dKS8vcM
a3e0czZ59L0LrsXjub3j0DobubdPQmK5Mdze3dRwXT0TLexCG26jzd/RenMZ
Sfl7iOkG2pqLdlbzlMRWQ17uur+W87nNE8YjS7InPF/2LE8YX9RVvWj8+bSt
+eFN/Hy194Lny3YFrfqC1lYqC9aHkJMr3So2NYzjH4fWfELrypcDGwW0JRJt
/xtt8CoPNrdB20ahVbFo7Tm0tVUFsHM4WrOGrPg9SHea/HHm93ODUzj+dPLQ
gEH9hhXi/jC0IlhYWRHHrxNosx2tX1YJbDqKtr4gK9ebbpWhPTWNyIr62GJB
25+i1a5VwEJDsqKeNfRDq56QFesprUtVSUwNfnny/Deub/zQpt5oq5GsWB/o
/pAV6z2jr7cE+78R5PvXX5bee/GNHP8cvK6OJyv2H811qoFtOnKjwF/Rvs24
PpuN17V7yMr10l2yoj50dq0O841mBlq3E228RVasBy3f0MJUjaRc7xm2o80p
aFsOWVEPqqr5QLzWa2inE62pUgOsa4e2XyYr96My0ULFmmBDMNochdZKaH25
WmBTEFlRT1vHoJ3r0EbP2pJy/9wSiLaPRKvXooWzZOV6vmUdsGo4WrsarT9F
VuxPm96gNUPqgnUr0MbjZMXvH5ZXZMX+lmHpX5Ly9yHzEbJiP8X2HK1y84Xx
XhuAth5CO9PIiv0kTZF6YJ0/WbEfYOyLVj+uB/WwUKg+2FAfbe5VH+pP2zyy
ot7XF6BNf/mBrT3Qzmg/GE81e8nLfvaZk53K+azdgOqHysmG+fE8voWTFet5
9awGMB8Ku9GGOw3g+VV19Qdrp/tD/avfQa47NK34q0yuz2+irV/RuikNwcZ/
yYr1leV6Q6gv7dkNsb7w1kpi+NARURO9+DzHFnLllskDN4Rw/XOV3Cxv7fC0
ylz/OMmK8zXaygFQX+lDyblL6rVyieH8XiLfiGwzvdpqzu/nAKg3dBUaUftO
qlz5YiLPdyL5qmqC26wWfB5lbCOYHw1lG1M9eaaut284z29tyVvzB5bLmM7z
82i0ah3aVKYJ5MPamtx6mD51joHjHUGe/Hry0b4Cx2tqAt+nO9ME6kV7i6bU
3vNTB6vecz6HNYX6VFhFnuvTtET8Kq43T5Lb7629uuZszvdrsvfyFjeDFnM+
9c0k8bxY//rDN1z/LidPG/m1Qf+vXG8eI3f6seHXrfNcb74kf73Ydq/lCNeb
xZpLyvNExiXNIV7L4f/cIT+txW+O/xl5YJJ73/Ol+XxP0RbwekFLVqzPbQfx
uiqtBfQPbeGW8Pn6BuT14vZRIRc4/33In26Mru9eguv5Ry2hP+lUrSB/xnrk
oaOc60f24P7Qkxz3pdHaVdX4fNJccr2jnWctDeD+8Zv8/cmW+MSr3D/qtpbE
LmVyfyfbOP7uraHeVkWTRxi7bhwyguu3OLLi/Iy1VqAkhmhqpE97z+Ndt0Co
jzQzyYr9At2uQFw/3Q6EekTdpY2k3N8XpqENZrT5RhtYr9ty0frJbWF9bNrW
Fq5bk9vCet6Zhdc1VYNgPW3ZTE5P26A+VYP7x5UgrD+/kCsVbqpZl83xhghg
1SW09pMA79eXF3F8E0Rc70eSFeeJdB/RRq9gqI8tbYJhfLCPIivOY6ljycWW
HXbZUYSfN3WIpDxfZmsVAv1RNYK8xD4jrEs694c1ZMX5QP1psuI8nbN5KFzX
DEXrVoZCfzSeQAuD28H4YVjWDtejR9vBetr2Am1a3B7uz2ohK87fOZ+SAzdl
q+cncXyuHSTx+GLp45LOfD60IVlxntZ+gLw/ee++9FzZ6ifkuX2SOya+lC24
dJSU51kNfuTri5zzZ3/m86G9ydE1fRL8a/J51T9kxflZk28nSXme1RpBPj8t
OiomlM/bziHffDTEWUvL521/kRflO85HRPB52zqdqX0bL0y82pXP2+rI+mG9
d0hhfN52Njmo+vGaT0bweds95LKF3fM66WXbaobR/NJtSaWCYbJV3chz2kZ2
sNyUrZ1B/txs1e7SBzn+neQtjZ5lThjE8d8iN/a83HbFFtmasC60/kg53trn
h2zdVLJ+7vagcbkc/3by73dDRh76zfGnkIteiPKq550lx59D7tzBGRf3RL5u
3tpVEnd7ZGxxzOF4r5HX9beJX9tyvFld4f60VbpJ4u06sddmxHA+N5EfHIza
tj2c83mZbE3+/NRvCcebSZ7oFfXTvpzjrRguiS03Pu1yeBPHGxwO+VEnkZ1j
pzx/3ZfzKZFtA2YWdPbn9i+nk8Sfsz5kpRXi+IPIJx8+rbv4IJ+3HUOeU+yJ
x4FZsvUfyO4XQ4J29+Lzy57dJXGkpJ3hWZHjDyR/qlx4fIvyHP9I8hq3FzvN
3hz/WvI9QatPWcTnl0v3kMRTjwf2DVjF/bcl+XrM+O62Uhz/cHLfNeG9kj9y
/11NdoY79ngk8fnxU+Txew9nHt/O55ebR0jiy+2pYeUW8PnlIeTQ1ddX/jWa
418RAc+H6Tj531GX6gS7cz4H9YT+b1xKvlTQO2Sfmtv/CLlCC6e2anHuv8/J
20cXvrjxBz9vbr2oHjsqdPhWgvO5iFw4Iuffnj7cHw6R+64IyzX4OYP+D736
4kM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
xkMlPCoi+dHFgfnhGzy8z6Lh4z0aD+Mr+cycKwmntqZTXktY3tqr6zM9D8Zb
4E/itUGSt2g8COGK3FyFZU+pT8Uq7F/Ohr//lU/jwRz+VmFYY72bxoM/PLR5
sF1hBOU9AS+y+GL2N5KeN/lq7Je6NH0+r6bxbAIfsBFZvZDmy0hf2L3qW4hP
MOVPhvVHnMsNpc+3lMB93ku/5ZynPhfU4Hm5JBM/MH5TN8KxZa2aIXco7104
P8ogwZl+j9YneKXXtejoEnq+vB7xGZe49Abxs9RnPHyhrnll5iXK9wEOMRQ2
6x+mfNK1fMaoe5WDfxL1FwdrxCslNcZTf7fgHk1pG82BfK1wY8P8nSfp+U2V
esxnlBZnV++i+Zc3F3ZoZ3YEhFB/eXDAPcvumRupvzew7/Uem9O7KK8ED/1L
nTcZQX0LZ8NzN+9vqQqnflfDqg7hE4cOrAdiddi/rJ5UMzaB8s6Cg2WH89bF
Ud4VcNu23tJU+r6APXBc3Wy9Kw7U3+An2G+9VnfeFET9zYBrdil8zd1KeZf+
s7fjj200n8dHwSNT50rp0ftLsuA2XZd2EX3qc/pTPrNv/gvzLjnq0xWe/rKK
50zrRW4EvHCIWE+KEuXPgB+WdF2NW0T56+FpBSsU+IHUp1M9n7EvSH2emEh9
hsHyeiNkbbIpfzrMm3NpUiKtH1p18JasozL7TlL+X3DjNtuLFteovwvPsF4V
tKssp/XdoRbeabglOyiX8vY++7ffsqtOovGWq9LAZ7YXt1X/pNeNz8KpNue3
V9H4CKiGw6x+8vKp/9RueHDKhPJuGk885ed8RvLYR4n19DpnEdyh+2KldA71
WQFvqzQVXj1NfXbBfPmj9S3v6P4rvcB8ZimbHED7Ye5COPhBQfiXasq/GY4x
vbrB4SH12QGLBTIu8nepT4WXGE/f5i0IK6D8ZvBKI5vOLnq+A/xgkZKbyyYO
of3ZcdjmhsyQCppPtcY28pm0YT3330nTfMXAdsnV1kaqtD/zgXsNrDsPtFL+
JHhl2rCrM2i+FhbDSqfOi44bTuvB/Fd8plvC95afNq0HG2CVAr/zYxfSfJsA
f4oMOfBoPe0vi+B+rVcCU2+abz/Ca1KllAbR/pPn+Rrr2f5LX8xP0v43Hn4d
KjLGkfbLWrfhS+UnSnIPUf73sEZHT19ZPOUf0YT7WTKyT+EUrQeHYJXWIWOC
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
q28L/gfftwbJ
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 1.4959055177559308`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 1.4959055177559308`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9, 
   3.6679966014622297`*^9, 3.668024110181718*^9, 3.668031049318376*^9, {
   3.668032804112906*^9, 3.6680328286320314`*^9}, 3.6680328691426263`*^9, 
   3.6680329226453495`*^9, 3.668034039959835*^9, 3.6680783426206446`*^9, 
   3.6680785187740164`*^9, 3.6680795586876087`*^9, 3.6680816296349354`*^9, 
   3.6680817354333153`*^9, 3.668110915434724*^9, 3.66811167458549*^9, 
   3.668112417986598*^9, 3.668864555204123*^9, 3.668865155964558*^9, {
   3.6688652185436354`*^9, 3.668865226795666*^9}, 3.6689627219323745`*^9, 
   3.6689628015354204`*^9, 3.668963024295858*^9, 3.6689640704959583`*^9, 
   3.6689642018224144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euo", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6680300623170033`*^9, 3.668030065558288*^9}, {
   3.668111631132517*^9, 3.668111631960491*^9}, 3.668112371394373*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlczPv3B/BJJbshJJWGbCkalERqPkmWUlOiriVjJ2QslxCGLl3ZJnsu
GtJmHalE0UiL3RRZUhlbMqOahCzJ9/Q+f/x+5/5x7+P5+Ewzr877vN+fM59u
rznLA+a34PF49fCv5v/CPxr5SS33h/1T6w7mZ4GfjrX9Euyib7boPXj58oLW
Dy2YpR1Pabk9G9v9cB/HrHABG46xiEkWMgszwdM833Yf2I5Z8gbsdySg8YuU
Wd4uXstlxL/zKipmn6caDn7vWHJyuDG7rpeAf87K3FfahVn2CnxsaWailSmz
svVpLZewwqqV91P285ph4KX2Z8P76jB/CPjDS95Mt3Jm0b/U6pYJWi6lyTl8
Ux/2frwhYMfIATmKYMw/Hewc4bnixhLMvw1c82DEzXWGmP8itWBwIskvDqaW
bQWPttxV8XYq5j8HPpXLc8rUYP6nYMuKoOlZh5mlU5K03LzE1VOf7GBWbKZW
p4CPJt8L9Pdk5j0BN7y/ax07l1nYBJ6xy33NsuoaVt+IZC33uX5f1szR7Lo+
MZm8XlAEHuhi7B05gFn8i16X9U3RcmuWjpwsvYn1fAhOe9ayfF0le3/pd/AN
RbB8VTjm7X1Gy3WoPXu+/B7m9QGXdb6Y4unNLLkHnnL6v7NGvbCeX8HfFhzT
ZBswq6zPEusngCd8b7P30Tas92rw+Z0BVZdWYj0/g8u3SJytNzJrLM9pOYFb
84oy88eB78UeeWZzAvt5BVibVFFw8A7283/godJfNy9kYT/0OA/99GepcFYe
9oMn2PPTzVc5JdgPYeDKHnlT52zA/EfALjZS+4IxmD8XnLW+6eBeN+wH7oKW
mz3cYuP8odgPS8BBx6/M7O2I+Q+Cs+pGXddsxX7IAW8KWXnl7AfsZy1Y5FH5
vFCO9V10UcsteDpHG23Ffl69Dzxk8kg7bR72w3VwY/a7sKBHWO9OSi3ntO5A
34dNbL30e8Fdgnu5hA7H9b8GLvm+7k75BXZd/I5a1uES2Y/KEeCp3oUL2v3A
frhyiew/6WtqRdtULRceYNvqmDPmdaLmSajlFeBt75JfNI7Hera6rOW+Tl7+
9u487Iehl8n5I5h5mexfcdRl0i8a4zQtx81KWr4rCvtBSC2aBu4e1rTFR4T9
8A84z3ROerErnm8X6OuFg9JhP5z97XNgFvZDELV8C7hxb2K/mGTMfxb8usOG
pIB7mL8EvNa9sc2Zo9gPgRnEyk0Z5PfVJGeQ85P/OIP0t+g3+HLhDrvwDKzv
hitarl/FBv2kM1jfRHB9NJc/9z3mV4PNEtRz36sw/09wWOIR3YJjmL9PJrEg
HnxdUj0xKw3r+wB8cJLHT4sCzN8AXj+i+/XC85i/11Utd/JHcTf/2ZjfG1x1
s7ZT6GSs55ertB96XiPrzZtwjfSbcBWYX3J0TmsPrGfdNbL/9RZZWm6fqn90
1VrM6wU+EZA0fcIOzCullh0Fm6idDMo2YT3Ns7XcrGXVIU2pWM8x4CSnNtPM
ErAfloFTLH50GGNRx/IfplbfBHfdF7+g3oZZIrqu5UKmqWa368YsDwUn9C6f
0bcVs+oAWDK5zHSgLbP+Brjubdc2M9ozCz6Cm7tb2ZdZufCGltvSyvdGvD2z
JgZsvjOneydnZn42eJtBqPSmO7OoEnwu2XTzmsXMUn4OnC+Hc+wDnZh5e8Fe
xcoDOm9m4VWwo+LjlPl+mP8t2FBS1n9Zf8zfXkWsclaRzxdngEeKhtyKHsks
04BT02YM3m6O+dvcJNY4gnP6lB6LisT8s8BrZ1w/GRaD9S0HZ+xcs9FzG9bX
JBful41b53APMf9QsE1gp/tt7mD+GfS6ZDv4tZ2rm1ku1tfolpbbVRS34vgN
rK8DuPiz/NKF55j/L/Aim85dWyZj/shbpF7K8+ALWaKIRS2xvvZ5MA/tilLs
64z1nQo+m9vn7sR67G8ZuH9eaMI6AeY/k0f2H68kj+xP+eR8LVcwRjxhhxr7
eyO1PgncOqNPhslX7O9i8MuwYSMHabC/G8Eu54Ya//0H99v6Arg/1Nts8euC
9U0AP1788PkfS8z/CGzjLHbyKsb+/gF291m/8qgW89sUkvUSniok/Su5X0j6
Uf6tkNRLP/E2sezObfL5ynpqjdUd0u/88eBK523V/VZi3pXgiV3v9z0QgfXU
g7M3Xni9+Sz2g8VduF/FZi/NUGLesdSS5dTyWPC9jL/Cqg5gP3S/R66LPahl
S8FLLAcX2mRh/kNg51jjVpFzML+KWup+H+7X0C3+m7CfF1PzboCbd6dBFOat
Aqe9m5jreh7314IHxHo5OLLGddWjU5jv/QPyebKOD7Xcgzvbl5QOwfrtoRZl
gtW5p6y+e2K+N+B1y7UnJIMxX7tHxOrh1JJ0cLDv2tTG+Vi/V9Sq1mpi/TBq
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
RA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
suxxDuorHGyiZB5kh1T0NED+OeStx37c6qZuz2Fk6S9DtzLs37KSycuX8aRx
2D8RDzKl8fh50cm7z9Gf8ch38vuFueF8QCOEPNrchHMd619OIvmxgH86V73/
84RcVLtQ4a/en5zZT8lo7PG2H47zavYWsvnh2tBo/D4vnqzHbt/aX33+WdD2
OvvWe8znJc3kU/cbe3TF+o67ka1kNsg76Xpif0JwhnwrNSL4I84bxfnk0ojZ
FpPUf3/QQP6Y1s5ykvq82dSM2svotZ86tEM9H5DfHzpydhv6T5WKnGndO9bb
EO3ByFzJPFqWV5fTE/WeStaNiHGe3wnt4S7ZtG5cmbUu2kMtuejj4ZntcB7I
NeivZLwLv0dmb0Nee/LjSpbBHKwfxAFkmcahScPU54VK8jMbp4W1WP/y+wxQ
Mr/2vRtwBuOLaDL56V7msyn2i6UryauWL05uxeuqGPKprfNP1mH/QagzUMnk
JKpMn2J9LrEjP7u1qnWK+jxgOTm28m3FB6wnWYfI9fMdhdFYf3BvkAXPNZ+V
L0Q9xw2i/r/1zvA1WO9p+JCN3W+7pWA/mXOA7KlaVl6I8ZKfRU6VTEkoxPmm
6A25t3ZapQvez15qQeOZoFLvBtaDvL3kd28vGpVi/0eYQQ6eN6bnSfV+6yuy
xqPOJ47hvEsQaalkfrQmJxar7/9l8j79yDEWuN+yKnLAsm+bNNXncZ0HK5mZ
sfVvDuF8nmNNfjb+yv0U7LdJ08mnbpo6xeHzqgpyVpjNihq0J3bHIUpGf2/n
aB/8vQNvODnPRjCyP8ZPoQd5aKTztlh1e3hO9o/pJ/iE8YHbbqiSOVGe6FyC
8VswlNxOdSHqwTfkn0feMVequwvPi2wbuXacxvFyPI/83+TTbk73H2I/WWQ5
jMaX819SPqj309zIkmx/hyn4vCqUnKa9erdHPfKfI2v26dwrB9cnGWilZNxq
J6Sb4u9T5LPICp/ydxbqv08KJt96aP2yC/JyE8ih/PRXT/D3MIIiss7NWW8T
MD5qzBxO/fsFt4zzOI/lbCaf7pjjNg/72fw4snXK+sUN2H8TPSb/HixNn4vn
X9pEFqQeCb+O8zDehhFKJt7feGg+zh+Ep8nNQ15WK3A+IXlINu0gk+aiP5LX
kxtGWiy5j/0WlgmHrmeGztBhWF+JT5Llm5YXnHhZ21bf++Qe3bVMKlRt1lCR
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 1.4670781138334303`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 1.4670781138334303`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680300670903735`*^9, {3.668032821463683*^9, 3.6680328418687954`*^9}, 
   3.668032879070866*^9, 3.668032929583929*^9, 3.668034068744912*^9, 
   3.6680783651426744`*^9, 3.6680785301828213`*^9, 3.668079567034998*^9, 
   3.668081644195116*^9, 3.6680817488791685`*^9, 3.668110928922552*^9, 
   3.668111678434035*^9, 3.6681124217779565`*^9, 3.6688645564349017`*^9, 
   3.668865156480183*^9, {3.6688652190216856`*^9, 3.6688652272644167`*^9}, 
   3.668962726298778*^9, 3.668962802268225*^9, 3.6689630279484224`*^9, 
   3.668964074231472*^9, 3.668964205679905*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<btal.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "btal"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<euo.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "euo"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6681116553181944`*^9, 3.6681116650122952`*^9}, 
   3.66811237640305*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<JGBT\>\"", ",", "\"\<JGBD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668025228046261*^9, 3.6680252311869135`*^9}, 
   3.6681123743627853`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlczPkfB/Bxliuj3IkJSaSmRI7SfMNGwoicy44jUY5x/JxhWPeRyZ1j
DV3ODEqhGEfRSqbV2nWUIcIMNaXcx++93/dfL3/E8zEz317f1+f6zoPzlLmh
4TUlEsl7+vHf3/THpD1iFvif1gD6Ib1MfnLmWPOnfUQrXpLdHDqHF30q/8/q
xkfBut7klblH29q6ie+XZ6BVz8k/I4N9EzLE92sbxoMNPcmvTJbWXi3E91tV
aM1T8seWXdZeqhDfr6+XYBYmldb59KCJ+LqpO1o6Ca3YSJ5ZfX6DxVa0sW6i
Wagsjzsx0E60xAstn0Aue/3HQDsp51+H1p4hF+ZuVgW4ipZ5JJmF6vzMr6c7
iFaORWvWoPWn0KYHaHVYslkQhp6PaNaS+11F/ktdd36QskzMf5x8OfREaNsp
oiWFZFWWZ5/Od0XLf5CnlV51OKQXbYg+RvlDjnUXZoq2Jh2D68kKyK/+2rrM
Yita+ZVc+mWDZsxR0RqX42BFPvlSVtWm661Fqz+hde1PmAWTX2Dx+sWcN4S8
semajRqtaNUd8npN8uKIKtHa6hNwfUO7k2DrYPLk0Jc11zYV+5AtJG+POSQ8
sIqv6yvJ+/63IMvxp2hTm1NmIf1l+XaPVNHSIPJeU1bV1XTOPw+tPoCWtD4N
lg9Aq+aQI1WP8yqlPJ/3oQ3X0UohBayJQut3p8D9mq6ipWZyVnwP75/F3O+M
M/C6cQdakoVWNdFjn9vRskvka3nZDRZe5/F/gdbYnaX15Bbm1tiL8/ZCK9LJ
4yTZw/cP5f3hGVrX4BzY2AMtUaG1xeTRO+tvO3GY+7Q9bxZcrx9c9225aKs3
WjaRXL/0y42aU7nvDWhTnVSwVI5WjCfPyJNkPlzI+deidSnkZneNAYPmiZZ3
SzMLU+PVz6fFilaNSYO82tXk1yFlLZb/yflPoq1/k21DZeff5PB8GHUBrF+J
Nh1DS++jFd/RxuXpZkGaoJh+fxv3m0QuDm95sEcm5zeiVV/Q2o4ZZqF3+ow7
+vXcb3wG3J/yLlrzkdyi7a/t3Mo4v/NFs1DP7kPunG+cf8hFPC+qLmLetpeg
H8lgcs+Yfyv6xnPeBeS+IW13NcznPivQVsfLYNkvaKUardmPlrbKBCv6Z8J5
oJ5NXlcQNvils2jdXrL5qt2sOHc+T66RHxf4b2kj4/NCkQXWRpJH73o54F2w
aMMutPUKWvYGrY+4AjbFoqWZaEUpWi29ahayY0M+poXwebcdLb+IVpWgtY0M
YIMvWnkBrTGh9fWv0XradHbzkTDO70POWxx5OkzF+X8jn5rfy/7VVO63iBw8
9ajiwBzu1+a6Wbg97NF9UzTn90bLf0Wr1qOttW+AZZ7kbv47P+zawPnHoTW/
k3/pYx/RaQvnP41WuN8Eq0ejdRq08QRa8jdaOzLbLASMqtKvX8z9rkBbk9Gy
v7Ix/ze0aVkOWJqIVtxDqz+jdR1u0fPNxI1Tqxdwv0fRqjy09gP5H7+TqRM3
cd7g22Zht3fQSo2W+8xF69+Te4UI64+v5LxOuXA96SC0Yj7aaEVLHP80C17T
OxjrRXHegWjVXLQ2Di1reQesDERrZqH1e9AmA1odkEfn54xMJ2Em9zkTLbmC
lr9GG6bfBVu1aOVLtKZxvlm4fs4taagv9xeDVmSg1c/JT2PuRAQpOV/De2Bj
T7Qq7R6Mr/Yp2lDPiOPfHS2bRA6brzSeCee+6haApV5kx07efvF7Oe8Ect96
96YUpnDedWhJ7b/Acg+0aixauwZtOEW+6RL8JSqO++x63ywkFyX27XyX+wxD
61ehTcfJgU3WbDubzPkLyasqw8ytsrjP0EKwMRotSUbLC8g+Hc6e8jnA+b+i
ZQl/0/nZtJaTLIHz5qM1n9D69g/AiiPk5bnZ0sSH3OcdtK6aLMnS598ycd52
/4AlwWjtbbShEm1t8y9YFoRWzkObytHS1g/NgktuUf7sx5x/AFo95yGMn24f
Oa68cPxJA/fZ4pFZqF2qOOZ3k/sUyLH10hManOb8UWT5F9n9q+mcfzfZrXL2
sedXOP9VtKbfY7B+BtmhsMmmi0bOvwMtzUIrXqGN4U/AEi1afgmteoHW2hWB
ZdvIhm8XZR/TuN908q7XD6sXXOf8z8i7cwas7lnE+RsUw/2YehRDP+pUcoKs
5W/fD3K/xeQsp733YnSc3/YpzE9Jd/K+JpH3Xidyn4/JsYdSk6995j7rmOj5
8HHDMms+55WTN6XvqXAu5bzjTZBPs5Z8zu5NwLLj3GetZ2ZBe3Vwm5/F3Gc3
cqtLngHjXnDeMc/g87rV+LrxJPl70bYVv93hPrs8x/k8ijzz3LTR599w/pXk
z6nf482vOP+x55j/Prlh3qRJT/7hPkeU4HxYTj6Y//GkwwPOn1QCv09hLMH1
+KUE7k+y9AXkkce/gM+r7r6A+9F+fAH5DM4vIY/mz5ewfvRVZPtz0U2jLZy3
balZsInPXxtRxXkHk2fFbkh2/Ml93sLXjRWl0I+kzSvIJ/8FrVK/gvuzlr2C
fmStXoOV/V/D9TWz0fq9r7HP5m/AagXZvUD7ObiQ80eijbvewPhJrr7B9eVv
xj4jzHD/1lgzzG9ZJrlZ7OHwF5IKMX8p2jTNApZuRysukgsmngzb0VG0ugQt
3/rWLITWnZddc6po1QW01oQ21H8HtvqQ5w5rtvYXT9Ga8+QZMz7eTXIUrS8i
L1s1duO+BpzXpgws9SZPVg2Iz23PeX8lm8d3yenQWbTxEVpSpxws9ySXLGwo
XduU849Da39Hy2pawUp38urwRf16teP8o8nDBpe8/seb82vQphNotVsFPW+M
2OOQ1lW0biS5dKTn5LdunH8FudAvP+lLb85/DN8v/4v8dEh0z8Ze3K+yEt5v
XUaeFhBR5dWL8yeSR3Su20cxiPPfQ2s+o6VL3oMVR8mXnC5d6zqC8+ehdR/Q
RlkVWHUYrc1FG96jrU7VYNkgtMlKnjW30ru4Fed1/ABWDCRP9E3NHRXAeeei
JWXkUq/9b1MGcJ8tP4JVgR+hX+0stGEPWtnsE1gTgNbPRJt2oqVX0Dq/z2Dj
dLQkFi2/jFa9RFunfgHLYtDKDLTmOVrf8CtYsQWtTkPrnpLf9R7aYqs/56/3
DSzxQWvPoQ1PyFEu604UDOH8db+DZV5o5QS06SFaWvsHWOGBVo9F69ag5TV+
glVd0dowtGEV2nocrekssQjn7sTZBW7mfkPRpmi0NBmtKCBfvB/Su93v3O/w
GmDJMrQ8Aa3KR2s/oWWLa4KVR9CaO2h9NdrUrhZY/QdadxttrETLg2qDDdnk
+J0TEjPOcJ/laFnrOmDlALRmDlr6Dq1oUResFtC6KLRxN1rV1Aas7Yc2zEBb
d6BlWWh9X1uwKRwt1aLVL8grw+Pkf9/j8Z9azyIsqiixTelQKfa5jVzRLubq
7RqiVenk1e1dG0kkog0N6lsEexfDeN8f3N9m8kbbgTcOO4iva1LJwzI7ee4c
KFpfTN4u/fQuuqFok20Di2D3zXP19daipd3JwTv3hLWdIlp3lvz46cGuUzxE
Gx+TIy4mHu44WLSkbkOL0G/KyBF56zivHK0aTz63MbioXpRoWa1GFiEodUHt
CyGild3IPofsg2/+ynnHkD9e7vduQhDnXU1Oi5jtMV8jWiGxswi3f+29sNMW
0eoudnD/ulHkjn7OzdzKeLxXkg8P6jmm7ivu9zj51sr811PV4ue1ro0twlRt
s5wz4dznCPInV8Gc+IXHezl5/ZD00oUlPN5J5O8efsOLPnHfxsYwHqZhUovw
7sP3lyPbcp9LyW4F5y2v1vJ8jSdXD2ob5/+Sx/8u2W6G98qG+Zz/I3nzwiDD
mxyen7omFuHglmPLHl/g+fkn2lBFTs60rOy2k/O2tYd8mkPkZX71xqje8vy8
ZQ/3Z6qwh/kibeNgEap+6KVeLbjvX8iLHJausNjy+N90gPkoKSfL0wuObNjH
679VU8qzf3R962nO378prq/Z5AabGndLyOA+35KHFZks21Zxn82bWYSEotvd
sldwfgW5b84qr4PbOX8k2fdQ+RjXU5x/F/kv453j+vXcp0Nzi+CyPuZQj0zu
05/sHiPctk/j+RBBTtvoapl1iefDDvLPRr/pBtrx/M0kf32Rn2PswvOhTwuL
cM9YdmCor2jrtBYwvrLt5BWf93Tf0obn88UWsH41JS1gfUuntITxU2xtCfej
vkDO1D5qFnye85vIDnO7lfTP4z43tYL5oj2PNhS1gn6tNq0xrzf5+avhowNc
eX3pyQ2cGsnH1+H5+4i81Fh3fPPePB/qOFqEyU7V82Jr8XzwJNfyLV96qYLz
jnPE+fCvI6w/ec02FqF+wNGEvWbO705e1nrh8/Y2vP5Gk6d9a3Hjc0vuW9MG
9iPlT/Lz7EvPagRyn25OtP5v952n7sf5R5KrnjgefO/F+VeQF0/87z/sue9j
TpBX16mtRTixdOmEsTd4PijJe6e0PDL9Ps+H5WTniT9uGP7l/InklKP1etxN
4vz3yJ/npcw/d5v7HdoO+pctIetSe41S7uf5fLQdfF6Th9Z/wM8r/iezCN+U
BTdaF3O/h9G6XLTxPVrS1hlsyEFbreQSr6ziIdWc17G9RUhSvlld8pTzDmwP
7zfdQEvL0IqWHTBvIFo3Cy23oFXNOoK1AWjDzI6wn1h3doT1rLF3ofVzdW3e
tFju088Fxsc0nTwis5b/h12cP9YFzgPFZXLn8LNlhwq4z96dsM9pnWA9ymPI
rRebGjlnc/6MTpBH+5xsuBhZfmUP9zvZ1SLERn8x51zlfre44nxIc8Xnyafk
sJc7m0ct4T43dob1qzvXGfYL45POsH9LbNwsgnZ8+KJNjzivF3l34uabfeO5
zzNucP5YH7rBfimr3QX2W6VHF7hfzVhy82FKn1PPuM9/usD6V9ToCutH3RWt
C+sKv9+4qivuDz+6wvhoO7vD/DSEusN5b412h/1CluwO55vepZtFKJWaPFPr
8/4wnBz1vMfSOHfe35Z1g/crEtDq/G6wP0mGesB5KF/sAfuZ6ogH9KG9Q17g
M9r99/ecv5q8s/fGWxXl3O9CT9ifNH94wnmkv+0J42uq9ITzWeokh+c53QG0
MRstscrhPJO39gKrBnjBfmq97gX7v+wdedydwivJfrw/t/CGvBrBG/ZrfZQ3
XF/dtDucP7p+aOMM8qijA156j+O8O9HaJj4W4f626CVLIvi86OsDz4/WcB94
3pVpfWC8lZfIpWXBlxe5cJ+9eoClU8mD59V4Zorm+byNbEwZ5yoN5fzpPeB5
UfesBzzPylU9warNPaEPbSpZvnCNevhSzl/cE553rba+FkF1tnJhkJL73OAL
v09/Fm167At9SOv2ovOtZ5cusgTOL+8Fv8+YQnYJLzT1WcP9PkTLa/Wm/bD9
lKzwc5y/GzlE2dF78A7OP4Z88/DJvV/Hc78P0EpJH4vQdqLzhYmbOH+XPnB9
/Si0aSVa/R2tc+1L+49P7JPXiZx/BDlt4L8XfQ5w/mjyYdfo/Q1Oc/4ktKGj
H9g6DC1bilbGozV3/eD7hzTEH7+PLEKrdWjdn2hjlT/cn2pBP7D2UD/oz3CL
vFXqaGqVxfkryM5+A2xy/uD8bQLoeXLQuMHxe7nf/QEwHqab5OKDXWy3TeL8
5QGwntT9FXA9yXWy+5DKPY92c59vFfB9UNVcsAietpoFdXI4r0KA8TFEkvv0
vrF4zFHu8w1ZuTS1wZX/cZ8OgXQ+LnK8sn4x5/Unn+1XNOr7Qc4bEQj9S3eQ
4z0W/ww8yX1K+8P3S2Of/jA/JeHkxi4lIYUpnH87WnWRfKfvr9kxOu7Td4BF
OPDDYtiTy31OIds6ydt/TOP8W8kyo1A/2sL5L5C1d49lDnjH4//bQNov4/Ii
L9u/F/vcRP70oiJj9mPOe568oKLu1+BCzluE1q7/BWzQo62P0LI6QWClJ9p0
mrzJ61PM2WTu798guF9FzUE0H5arh+zoyHndB0F+3Wjy/OS4+f3qilb9JK+9
8sVd/oHzug2m/WlOfP/GXuLrhpHkqMOlQZMbibauQGu+ka91z9s6bKxofadg
2g8TJC42tqJNymDII11Ofnc+JdXxJ+dNJBc1njNs0DzxdWOHIRYh8Enstyt7
REuGkfc9Wdrvwy7R8iVk+8POn3Kucv6j5IxnJx9OixWtzSO/byg9u8ilSuxz
SIhFeP19svMUD9HK/5Ezb71dfSRMtOYwueZXU+x7L9H6XHKkdVerp31Em96T
n1WnfFjbQ7Tu4FD6/nNhzbmMM5w3h9z5qf3Wbjs5bwX58Av3mfe3cV7HYRbB
KeXehscXuM848mn9jL/t07jPG2TPbHng3STRsjJyRHcb/9T6nLflcIugGP53
4LLjnDeQ3GrauoqoONHSa+QHpZIIdT/RCgs5rE3SmuutRaubKWk97QiaPnwp
5w8g/yOfUx7dULRxJrnWwGGtJRLRqtfkaJsP941dRGvtR1iECRmj9WEq0QY/
cv2hNQYWfeL808k//Eem3a7Bfcei9Y1DLcLse+mRQUruszd5av3FUwNcOf80
cqJ/TLhHKuePCYXxU2eEQl6J70g6D22Km9m6iZZPJk9fm2bn3atazL/lPycF
/z7XSbQ2jZzv+a1RkwWilZNGWYTLLQ+MbPe7aM1Gchtnh/w9uZz3HLmDjdfa
nkWc9wn5wc2oSu9xnNcmjK5/q7Yicgz3uY68JOuk/+RG4vWMZ8hXPmYlbNhX
HfB/cWE06g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
S3sTP30m8A52wDdh/wH2DsYr
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlczPv3B/ChVBSNpUUl00KWykR21XxkCcmkLFkyvpa62cZOxGRJSEao
uGRslSRjSwhToVJqbFkig4iZMCgtqN/rdj6/P+b+ce99Pj7TZ87nvM/7vN/v
mbH737LJC1pzOJyf+Nd//8U/KulxNUP/q/XCv7g34MTblcZ9P337z4IP8IpL
Et/WLi3XxaYn1Ay3w75zKRNbLBsKb3td02Psqhbzs+CQztGtJ3m3WPQO3jXo
fGp9aMv9pCYn1YxFUODXeu8WKwbBXf73fgOzqMVaETxwodV84boWS97Aj4s/
Pl5A1+VtT6mZ8fo8y0Jxi1UDdM0Nhk/x99XHzKX4o2HLd78aBi9usdLgtJo5
uGwAI1/YYo4bvCn52PF2dH/+TNgmLD7Zdn6LRdth292v7dZTvNLz8NIOkRmC
pS3muSbjed63i3xF9xdOh70DNaMebKP4t8DbrhZs16yn+NPhd9Vl1rItFH8Z
LN08OVFN+RZPSVEzwwb1elq9vMWyzbB0avxSJoTiPwNXHJANmyCg+J/AosGN
r619KP4m+HX9qhF69PyKjalqJqaEd0sjpPwmw8cqo+5G+FP8D+HiVtOqV62k
+H/DR0bYfj+5jOLvcUbNOHluvDGO8iMogV2yQ/rWhVG89XBeV/k10TSK1z5N
zTTeMS0MnUXx+sJHBl101B9K+SyCK8T/TBd7UT5r4ZV/vRV9KR5F97NqRm/y
t8RTPSjecXBxkFHSpkkU7yo4NqJh2awxlM8fsLytUn/yBMqnTbqaeXQ1sPkc
5YM7Ft5meejHAXo/wXL4lI3y5Ulfiv9f+KOsJt7GjvJpdU7NfNh8zjqXoXyO
gpXPRHVrKB7RUtiqeWuMRyDFnwjHW2zZm7yL4s+FM1Rm/XyjKJ9Mhs51ySK4
blN81uMYiv8g7LyvsNBmFMV/G7b8vPH0QyeKXw2bNwbucw+g/Iae18mXMg42
2RP3tv1giv8m7DC1Z+Sl/hRvR7maKep9RfaNnke7V67zfrzrMNfr7r2ckRRv
JZx8pP2Uvv0o3g4X1Iwiyf+ZrQfFOwS2LMq9+s6F8nkVdp/00e43ja/4LTwl
oFu7dmMpXuOLOteVA+Ff3UxXTfGkeEXwkMjqyysHUD4r4KxFZX5lwymfRpcw
/tGX/7LPo+0PF0zNCBtO9+PNhp08/o19QBbugGcNKP3Z1pHy2eaymtE3DO48
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
HjZwvq86HKP1+j9SvOpt
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0.6817957412648895}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0.7136025504782146, 
      1.3497387347447183`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0.6817957412648895}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0.7136025504782146, 
      1.3497387347447183`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"JGBT\"", "\"JGBD\"", "\"JGBT & JGBD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680252337025223`*^9, {3.668031059959094*^9, 3.6680310640966015`*^9}, {
   3.668032816869893*^9, 3.668032833933844*^9}, 3.6680328714675937`*^9, 
   3.668032928110566*^9, 3.6680340567214584`*^9, 3.668078350073217*^9, 
   3.668078522638321*^9, 3.6680795594343996`*^9, 3.6680816341974983`*^9, 
   3.668081742856388*^9, 3.668110919950199*^9, 3.668111680071972*^9, 
   3.6681124225088577`*^9, 3.6688645576692224`*^9, 3.6688651569645605`*^9, {
   3.6688652195216813`*^9, 3.6688652278232803`*^9}, 3.6689627337509823`*^9, 
   3.668962805899145*^9, 3.668963031574*^9, 3.6689640779724407`*^9, 
   3.6689642095255737`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TQQQ\>\"", ",", "\"\<SQQQ\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66802991472351*^9, 3.6680299654683013`*^9}, 
   3.668112378900997*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
P7hwtvmZGz/I/Z8DVjIr6XEPvG/9P07uusY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5728924500000005`*^9, 0}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 4.322724347778437}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5728924500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.574368*^9, 3.6688032*^9}, {0, 4.322724347778437}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TQQQ\"", "\"SQQQ\"", "\"TQQQ & SQQQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.668029922314522*^9, 3.668029966891885*^9}, {
   3.6680328177136507`*^9, 3.668032837720002*^9}, 3.668032875289584*^9, 
   3.668032928798088*^9, 3.668034061143282*^9, 3.6680783575774946`*^9, 
   3.6680785234351854`*^9, 3.6680795632476196`*^9, 3.668081635791247*^9, 
   3.6680817474814653`*^9, 3.668110924402893*^9, 3.6681116810497675`*^9, 
   3.6681124233230357`*^9, 3.668864558949147*^9, 3.6688651574489326`*^9, {
   3.668865220000208*^9, 3.668865228292084*^9}, 3.668962735255577*^9, 
   3.6689628067207217`*^9, 3.668963035245594*^9, 3.6689640816749277`*^9, 
   3.668964213360017*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9, 3.6680310240717154`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart2", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
   3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
   3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
   3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
   3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
   3.667989983816139*^9, 3.6679899846396537`*^9}, {3.6680328189012156`*^9, 
   3.6680328236945057`*^9}, 3.668032854896698*^9, {3.668032892840277*^9, 
   3.6680329128159447`*^9}, {3.668081685682143*^9, 3.668081688494714*^9}, {
   3.6681123817767186`*^9, 3.668112402824794*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.6680817833225226`*^9}]
},
WindowSize->{1474, 821},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3208, 82, 173, "Input"],
Cell[CellGroupData[{
Cell[3791, 106, 363, 10, 53, "Input"],
Cell[4157, 118, 402, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4596, 131, 2035, 34, 73, "Input"],
Cell[6634, 167, 48984, 879, 428, "Output"],
Cell[55621, 1048, 50371, 902, 433, "Output"]
}, Open  ]],
Cell[106007, 1953, 753, 20, 73, "Input"],
Cell[106763, 1975, 844, 22, 93, "Input"],
Cell[CellGroupData[{
Cell[107632, 2001, 203, 4, 32, "Input"],
Cell[107838, 2007, 49891, 893, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157766, 2905, 207, 4, 32, "Input"],
Cell[157976, 2911, 48827, 877, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206840, 3793, 359, 7, 32, "Input"],
Cell[207202, 3802, 46159, 832, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253398, 4639, 302, 6, 32, "Input"],
Cell[253703, 4647, 46108, 831, 422, "Output"]
}, Open  ]],
Cell[299826, 5481, 559, 15, 53, "Input"],
Cell[CellGroupData[{
Cell[300410, 5500, 233, 5, 32, "Input"],
Cell[300646, 5507, 42787, 779, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343470, 6291, 230, 5, 32, "Input"],
Cell[343703, 6298, 50492, 902, 433, "Output"]
}, Open  ]],
Cell[394210, 7203, 5203, 135, 253, "Input"],
Cell[399416, 7340, 1334, 29, 93, "Input"],
Cell[400753, 7371, 524, 15, 53, "Input"]
}
]
*)

