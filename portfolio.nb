(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    808470,      14911]
NotebookOptionsPosition[    805462,      14838]
NotebookOutlinePosition[    805836,      14854]
CellTagsIndexPosition[    805793,      14851]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s", ",", "portfolio", ",", "data", ",", "symbols", ",", "std", ",", 
      "return"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"std", "=", 
      RowBox[{"StandardDeviation", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"return", ",", "std", ",", 
          RowBox[{"return", "/", "std"}]}], "}"}], "//", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<return\>\"", ",", "\"\<std\>\"", ",", "\"\<r/s\>\""}], 
               "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], "&"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9, {3.6701716503770185`*^9, 3.6701716506582756`*^9}, {
   3.685305952518339*^9, 3.6853059537176065`*^9}, {3.6967608776432834`*^9, 
   3.69676088094309*^9}, {3.6967609151895046`*^9, 3.6967609377087526`*^9}, {
   3.696760993933354*^9, 3.696761073622054*^9}, {3.6967611222038827`*^9, 
   3.6967611349350204`*^9}, 
   3.6967613481293807`*^9},ExpressionUUID->"8c08837f-8e1b-421e-be78-\
0bc82eda6287"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start1", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start2", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "//", "DateString"}]}], "Input",
 CellChangeTimes->{{3.687000687380389*^9, 3.687000691123763*^9}, {
  3.687614865311994*^9, 3.6876148655927954`*^9}, {3.687615693446018*^9, 
  3.6876157159117823`*^9}, {3.6876157613395433`*^9, 3.6876158485145035`*^9}, {
  3.6876161174929743`*^9, 3.687616121566601*^9}, {3.6957146336464562`*^9, 
  3.6957146442638135`*^9}, {3.695714683683401*^9, 
  3.6957146874316454`*^9}},ExpressionUUID->"ca58564d-e2c2-4c41-a41b-\
4195dc58339b"],

Cell[BoxData["\<\"Mon 29 May 2017\"\>"], "Output",
 CellChangeTimes->{3.695714691871008*^9, 3.6957281132851152`*^9, 
  3.6962338966179028`*^9, 3.6967607209181795`*^9, 3.6967614646181746`*^9, 
  3.69676153070809*^9, 3.6967617322874737`*^9, 3.6967619060619135`*^9, 
  3.696762055027141*^9, 3.69849774408033*^9, 3.6984978125269766`*^9, 
  3.7020194263341355`*^9, 3.7020197015737047`*^9, 3.7046909729002047`*^9, 
  3.705041397935094*^9},ExpressionUUID->"985ea7ad-648c-4ad1-a444-\
c37cec9340d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<PUTW\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OUSA\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SCIU\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7046912590027647`*^9, {3.704691320868693*^9, 3.7046913619411926`*^9}, {
   3.7050416338567667`*^9, 
   3.705041640480579*^9}},ExpressionUUID->"9ec59700-6cdc-4997-9164-\
7d1dbcdd846e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13s4VOseB/CJUhu5RskpQ8pW1JwSKsVKpB0Z6thKMe66uk8uQ+OWksuI
miJMKluJxk4pXVAh7dJsJUVinxJacmmfrqLz2+v319vzlD7P+671ftd3/Wae
h75PsKu/HIvFGoO///yEP9x3njSF/x2xhn+EM7xoqsqkx0NRjrF0DXhla9XF
beieILCA35UehftD+sDFiyL9ghUYS9R5NLVVdD1WSZGxbBU43dl47a/TGbMC
wAfsXDbLqTHmiMDuEVML1/7EuE7Fm6YC8rJ38aYyHrEEe6U6JrtMY8z2BStc
2DKqgPfjZoBrnpk5qati/mowO7SxOlSbsZq5D00t0NU9HzWPsQ0P7P/Gx1PH
EPOngXVNP4oHF2D+KrBmZe3NtuWY/xX4j5YieevR4X/M2+FLUy8sxqta+YxF
qeCx2/nyk3oZ11WCw4ZWOu3Tx/yd4M5vN9/bmmF+BT+aqi4r7WvZiH1WgF1N
m7dZ2GHeF2DTqH8n2VhjXnl/mnrJs6ltcMG8pmDpxvnvhB7Y50XwA6+2poVu
2OczsPzStIgUd8Y8VgBNxadfmbccLVoYQFxftwUsLA2cNIHr3CfgeSOZtuY8
7HMcbNyn7yjwxHkwCqSpZXo6LvX7Mb8LONlcUcvKH/MLwOJ35h/Fwdjnt0Di
fjLDIJqSaz55IC4A8zuD/yVSsu/H/Zxo8FiQduISPuY/Ay65m3iBL8A+9XfS
1O42XfbmaOzTEfxAQyyl/TA/H7zFXkUrJhTzS8CZs+7WPw3H/A/A7TpygpoM
7HfDLpoq8v1x8ed07DccfIJb06iD65IC8C1X0RXnZMzfBLY/OHX2KxHm/wCO
t1IcCD6K/YbspqmrH5SvTcrFfvPAxmK+evUJzH8PHONtfPsDrrOHwSfkBZc6
8jG/zh6akl2Pj99TgP2K9xDranfAkXPcC/eew/yDe4jzQ7T3EudLbPYSeTm1
YKPYe8uGxNjvwF7iPJHmPprydoruccjD/KvBQvebjZY5mD8QbOvZ365fjH2q
BcPzlH2rLKvEvCvBEVWB5/0vY15/sLyJ1DT6EubNAutdW3joLM6TbHoI0Q/L
MoRY5/iAo44Z6A5vxbzp4H3ThZ1vYjDvVTCv76NKE84He3koTb2KTomeFo99
eoGd3qbNNEnAeTgcSvQhvRxK9t0FVi+KUn9WiH1uDyP2Sw6C+ysF8U7Yn0wK
/px2f5nJWczfGUY8D2dKOE0tt/RUmozrdUng2Bl0yeUz2Gd5OHE++zn4nXBk
XXsJ5peLoKnNHdLv9AXMbwI2sPhbc2cp9lsWQfRt0wbO0HIr3FSE+X9EEOdJ
jCPh8yh5PS0U369scyRxP15rJDkP38FWE34dT/D91i3gw/29jI5OvYn5ueAj
tpFVa25g/ljw5oyw3ovXsd+vYK39g7MeNWG/8/bTVFfdwIZVjZh/E9i88K+X
KfWYPwqs2x6srXsN8xeDm7eOCeeWY7/6UTT1KNvLSlqB/W6MIvrmRYIDy793
HU/D/EVRxPdVXXMU8f3BdYimqSkOPkprpdhvGDg3bE+UNj6P9BQ4qT3Zdfwl
5m8E5yeuW1XUi/lHwWs/pNXmdGK/wTHwefBw3v+Wxn5PgnMN6le7fMT898AP
n99Vfv0J8w+R5s2KJfaPHAdb2TVfUPiG/daDSw9fUtinMsrkp8FuyqtCQ+UZ
S60FNJXqU7P2ygzGNrfBPda/t/1QZRzSD3a+WB0+T5OxRCOO2C+zAo8vtn21
YBpjViBY3ZF3OW0yY1Ev+L/VAteEe9inajycr1qa+7kd864Arx+Yc//FC8zr
By684Bvn8RT7zgSfU+yLOY/X9ygfoKklazy7Lf7EPi3A6s6Pnqnh9Tbe4A1T
ZOeKO3AejoA/p3qolTzGvq+Aa/90p2a0YJ9mQuJ+PE/wTHtetxvmEx0Cyxvb
Kv6N96v7HRz4P15Fcyvmfwmu6WiwbMH7S1MSyPd/KYE4T60D/LCTw9n5B+ad
nEjMM6scXPj5dG5eA+ZrB48YPddw78Z8k5JoykealbnuNeZblES8f/YF8Pyr
N4pMP2B/T8GqcYODLFwXToDf/7gmyx/BvD8n09TC8k2l4egeV/DkrMbOiC/Y
1xhp2fwUYn5YXPBcN8vi7kmMOTHg77EJH/2/Yl9fwEHTS4KUf2BfBgdp6vas
W+rrtZn9bCfwi+7Fzyv1cD73kxaeBp82NvmJPZexGjsV3s+nqrPZ6jivv6SS
8xqRSs5rIbkuuw92cDTjtxkw5q0/RFOJcwcMOPNxXkPBySvzWV/RdfngRTvO
7K1YyHikAZzXXKrUaor5R8A3Rgoepxnh52nfYXg/miVWNiaMe06AZ2235Gsu
wfx3wa0Hyjp80TbvwXaGWmY6Zph/ZhqxzqkDD9rPOd1iiXnfgfkxuVN22GHe
GUdoqoIjfjpkj3nXkObeAuu3sRaf3Yh99oHFpw83a1ljXvV0mrLwU1kRtxnz
riKtFgD+TabZLnHDPt+Ag2erT1P9D/apkkGYtSKDuJ7jS67zMsCsCqVdtAv2
qZRJUxqX+N4HnbBPc7AJv99oFM/j8sCH/0psifbE/GngnuL7SWPumL8qk8hn
sywLvm9ux3jf24p97sgi+pSkguM6ZsqXLcf8lVlEv6yXWcT7E20TEdfXJYPn
FJwK0/gF81eIiOdhvxARz8uVz6apenFKgRIP+03IJvarXQSLKIWHTZsw/zPS
IayjRJ+ShUeJdc55cOFE0ZmubdjvE3Dm/C1DE9inaBzc+/bkGaED5jfKoanp
+zT8U5din7IcYj6k33KI+ekxzKUpw3G9EN5KzOucSzyPTTR4dmQcx80D+/wM
Vr7CX14Tg30aHKOp4YZek5xEzOsIPtUtLM5Mwbx80iIJ2EjQP2aYjH3qHYff
H/UFT7risM8N4HW7oyc7CjB/OPhXvZI3vx3E/AXglsKRoI5DmL8JvFrpk8LE
EezTXkysS0LA1+6ctb+ThfnzxMR+VgM4+uv2bH1c5wyDj/e/P+mQin3uPUFT
lO22O1kZOA9icL+/zxK7o5j/DthzKf3gKj4fd5DcL9Q+SexXOwYeUq1mOxZh
v7Vgl7A3j2efw/wD4O8PuV+8yzC/Zh78vnjOw+x8JeZfDf7UdmtYt3zU+v8o
GJKm
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GJKm
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.977123795454931}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.9832547697967541, 
        1.1058742566332203`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.977123795454931}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.9832547697967541, 
        1.1058742566332203`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1047629704383986`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02748485962095956`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "40.19532883464037`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.7050416502476645`*^9},ExpressionUUID->"366528c8-5bb0-4fba-9145-\
bf2e10c6e2d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VxPSMf8qsEGhR5+vZGjNPxsWm0U=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VxPSMf8qsEGhR5+vZGjNPxsWm0U=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.9681953558833812}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.974272910443367, 
        1.0958240016430794`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.9681953558833812}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.974272910443367, 
        1.0958240016430794`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0943326142965526`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.029673723892998216`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "36.87884332423712`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.705041651339457*^9},ExpressionUUID->"22bf5682-e9b5-4098-b8df-\
8a77bfdd9234"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/05Hqtk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/05Hqtk=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1265411055363015`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03812792970038813`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "29.546348684251633`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.705041652427246*^9},ExpressionUUID->"ab8b24ee-5b82-490d-b8bd-\
b2cf957a1ba9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VxPSMf8qsEGhR5+vZGjNPxsWm0U=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GJKm
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.9676928431338743}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.974272910443367, 
        1.1058742566332203`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.9676928431338743}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.974272910443367, 
        1.1058742566332203`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0995477923674755`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.026055695084412384`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "42.19990250904`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.7050416546058283`*^9},ExpressionUUID->"c7b36476-a149-4729-bf72-\
77eb85f06e2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nk4VfkfB/AbjRb78KtJFEYRKVQiWU6lRYhoeYzl2hllSdYosu+X7LKU
Fim5yDINUpEl6YaEhIoZOeSmRlnS79P5/HU8j+X1nHPPeZ/35+t7r4ydx1FH
HgaDMQ/fP3/Dl8m4NUngn1xd+BEibkMSFUMFRh+XU2brgPP4I3bkClEedgFn
al5gJK6k7PkveJ2j0tkZacoFokySiBldaywgR5mjBc65oXVyZDdlhhO4ytDq
+j4tyioscOUefbGlApQbhGxJwu5LYJvdp6mf5mqAuXm3E1LyKEvbg6v3jSve
7KdskgBW69hqmFpNOaQa3Dz/6apOI2URdTuS6H+ySfcEXl+PCVb8sc6we5Y6
7hkLPikcENXPj/nvgX/16NyVqYD5B8FjgpdVJ/2o85lW9iQxIPD1yP6ujz/N
igK3ztXFqx+gjjeUgcujX2owFzH/a/CG0fd9Tdup60nzOZCExNGtTsG62Odd
cFSf9TWFjZRF+sA9Fcqqg4qYl9eRJAokB5S8ZbBvZfCbpMPflK2xzztgb7eG
C5mB2GcPuD58+Jl4ImUmw4kk1Oc3vY2OocxSBPe4mg1o5WDf5uCwVq1GCxZl
ky7wqJvrg+BkXA/fwTw+Wzs/p+B6kHcmCevPK1qb8zG/qTPtfiJBYLUx5S7h
IuxzDqwhEPrK+jL2KedCEqy1c9aaeJxxBBylkbvNHO+nEgCOu5M5pXsT8xeC
I/pT7qsUUubKuJJE4WB9yL0k7NMQfFjmUsuas5jf15XWR0gBOMGSu7MwAvO3
gS1ZjrzlmEfv0J8kka5rZB+N9vT+k5anIBcs6qdfuQP74zSDOfqM3okbmH8a
XBByb1nyFezX043mhmxwvyLPWp94zN/oRssjPQWerpO3sLyF+decIgnHJuHF
Hnze4Qxw6cW28c4M7PfRKVq/ehNgkUdm0sNpmH/VaZLgN5tm/5OK+fXAJ5ry
1DSCsN8H4KcKEzu3pWO/H07T14eYO0l0FR+qvO6P+bXBeomD5i/OY35nsMNq
q2er8PpsEQ/avIZ3gSOi9UluOeZ1BIf5ffwiUYB5k8D7j7d/zTfDPgU9SSLZ
Y0Jf0hn71ACz26/p+shjXjvw5ZLA2gDcX5jx4GabtvOW+zBvFfg2/wxjtzr2
ucOLJIKvCqcwTbBPG7Bj3eUwzb24HmLASaLv2r/h87ErwKkDRblnsjD/G/B/
nN9dXsZin5ZnSGL15Gh042nsM/IMrU8OG/wscoZ9PBzzv6Zb5Rdv6DtQc5l3
JPYZBt5pXiVubYV9loClBPL1ZIwwf683rR8TnrMk4bnIq7DnIObfDI6/tsHn
6n7s9za4xupejoQx9vsSHN6y7O5RMcz/A/xwSHRNggrm3+RDEtkGPTP2Upjf
DLyQXSV7YAv22wm2TlKdvLUe+10ANxl7R0eqYv6NvrT7c03AFkE7hlR0MP85
X9p+z571pe33w7/7kcQFhgR/OJ4vYgwuLjLV2rgN8/uDY3a6ShmKY/6r4LLQ
9O42CexXxp92vsphf9r7FdMH/DbfvXf+M7X/svLBPELnWxSbcX9updvkYABJ
3BcUGAnejP2eAQ+lx1o+JjD/ZbChQufm0hOY/0kAbT4in8AjtqbK2nbYr0cg
Sdz5n9ClIEfsNyuQtl8xGsErUsdiTM5g/o+BtP2F+ds5klCNb/FKisZ+08En
ZZam1uB+Lf0QbKH2R2ziXVwfJPj936J+EhWYVzeIJGy+y/yx/Dn2WQ/+pj38
QKkO+xwDy+0JNjV+gXl/DSaJrJse7hN/Yd7dYGJ8b5VpHuZ1Dqbt36xRsDnz
2LELxbgehM/Trs/VBEtKRuywFPpE5XUAh71+wtGQpmySCCaMJVM81lEeFrhA
Ers67DcXrKQsshOcZZW2xkCRsp4t+EBjreMiD2XPOPDgdy2neEHKBZVgYf+A
p9p8lFW2h8D1pMvmh+awT2twk4uXMI8sdZwVDd5b1nAiQoZyQzm4fqzmlhrm
5Q6Aj8tqFDf8RpkdEQrvL285v9SIYd5ScEdaUVJMC86/H9zTVKNdex/7XnqR
JMRHlgjG/439lYDXd619Z87Beb8C++nMtZXOY74lYbBf2Rk9X5zCfpXAta9s
KyzxuHQxWEuea+MziPPuBncxPZi8H3C9LobRnpetEA7XZx3IniJxvR4FrwtM
unthAec9D3ZoGVO6iPfjbIig9cswAYe4rwx4N4l5AyNor2/4FkF7PVc2kiRS
3gxUBK7CeRuBVT7Yfli9AeftB84PHZPKwnmHXAGXhC0yXovjvKWjaNfXMwAz
fO3H5oVx3mfBpbHajp7fMH8euFdJXTV4BXWc0wI+28eenNlEmXkgGv6f5Ve6
zUrivL3obsiJpp3PbQKnGWTxvziI+bnghRWvb5RY4PzdY0hi9jZHOfYUzj8T
HCdmMLvcG/M/Bpu6LozKReN6nQRvWv98y41QzL86Fj7vSf112CEO12cDuHON
u6bAdcw7Dm7p5UvjLcC84nEkETow949eLubVAS/dY/08uAT7rANrJV5x1SnG
Pv+ln88WjYf308lHRZWvMK8W2L63Q7qOjXmdwJvj4yIXKvD/ZwR8Yvvjqrwi
7FMoAT4/rC10kU3D9aAJnu6MSx0Nx/z2YC9Ou1e9H+ZPAMs/bKy8eAn75E+E
z7/HNQyn8fXS6uAfvhmLvAmYnwnWVMngStRi/thE2vOw74H/0z04oVWNfW5L
IolbGxXyHhRin1bgF7aFvvxOmD8KHCS6fVVzEOYvA/cmCQnmxGD+AXBm9TF7
+XPYrwUL5uMluTjqhf2Gs2jPy70L7u6w6bDNxPx94Kb2Q+T6q5ifN5kkDFjV
hiE4r+FQcLOiucNeFvZ7B/ye41NWmIj5e5Jp68OTkUK7X4EiOCx54lw6vl7l
FrhGQSd0STb225VCuz7rO3jqScf4kijML3+JJDJWFKo5u2GfnEu0ebDnwIIB
JW/1wzCvXCpJ6Ddxz/GFYN4j4Azr1q1Hb2LeALDEU7cguRzs8yt4T60Ao+MZ
9imbRhJmzwP6RnswryE4Z4uiUf0A5vUF85VKyHcPYd4CcJZU1/GxVuxzfTpJ
vNKS3FjThn0eojvEO522Pti54NJPH901GzF/M7i9yLnc4yX2uT8D7rfEZUaM
g316gv2u3+72b8b82WDJMHXdDf2Yvwm8TWDfxFM8rjIFlor1Kbxfh32eziQJ
nXmrh6n4PNwMcOXjL4UHWzD/I7Az2bZFPQXzT2TS1kPIqixafpE0sNF372s9
ndjvA7BBvqtSxQjm/wCOET8vLMrF/GLZ8P4tMSu8lX+ayq8NLhew/nqEb1r3
/05Hqtk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GJKm
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.11565203798735`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.032137595422356544`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "34.71485726686465`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.7050416565572443`*^9},ExpressionUUID->"eb7b1536-ca59-40a5-919a-\
df3b7b221dc3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/05Hqtk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
VxPSMf8qsEGhR5+vZGjNPxsWm0U=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13k8Vfkfx/FLGppKlyKVfbSolPqhRXKPqSxRUsOPH3XRQqFL1hBpoUJX
shaRkmQbS4uRMEKNypRCYUw7p0I1UpZ+786nf2Yej6aejx7Xfd33Ob5HGi67
bbZJ8ni8Ifz69jv+s+7ZzDL0xz5j/C98yhaWuSE1NP2QNOeilfBLzeignRM5
d7nBi0M6lpvIcxa9gvcFnbCaNpNzhpyQZYwy3SebLuDcZAifC1q6d7yAM287
rJXUmVpD1hXDqbkfAsM0OFfJOrPMvGjHrenjOfcthb+GHg/r+9D7zequcJSj
zMZjnzlbx8BF93IOtA9xDr/yzRWldQrDnPkGLiwTW1yU1qLCfT2BEFaab75d
W5n6j8LFrKTBBXXqL4VT7kgsTKS+pk6Y75N17vVV7usJnVxZxkHTrjtiDWdx
JKz+tn2cZQHnql/hinyHto/0efqewLV22cP/3cxZ/YetLNMzwi77uo32LIAX
BLzrvGPHmd8GWytaBNq4Uu+YbSyzf8/Z84WbqFcHnhmnPloXQ3vmwXcHUrI2
ZdKej2CpqI/6u4o4C3nbcf02sgE/lHIWz4XlVmeOeVNFe2+CL3sMRHte5Wz9
ANZaJ6fScJnuhxFYnH9TLY9cNHsHy5x+3h/iVUP9G+DhnqissmLqD4GVQ+4I
Cxppzy9w0x+akQM3aE8tN+yZre8qT6/nrYe3fPkwyS2X+oPgd+7tHx6VUH8W
XDDx50L9ctpTw51l9ObsvdacQ3tawnftX6bYiqnfHz6qZiQtcZz6M+Aaab/H
TYnUfxuuWvlZ1ZdeLzDfyTKB+2scNpynfffAWxu+rlhJe2akwQZplWNyTlF/
PRxnwHfLpz7ee7hh7dqE/nzaV7TrX65KhVPztEUO8dRfCw/nhdmdTKL+Xtim
aP2dsQXUP82DZVRPDRzacZb2TYLdPZdaTj1N+9bAPR0fiiqoV/AGrtG5PhhF
n0+k6MkyAv8JzARyhgD2bf00JSaM9r0B/2F9cWg4mfbthhtdzMPLo6h/shfL
6MYURgSEUL8RfOJdyq2W/dS/A+7UtDOfR/1F/N14/4XmBmcuUO9yeFOfn2X2
RerdBpfqKHS5U7/gOGyZ5Bm9yJj2nChimTl8V/GV7bTnUlg2apVBwmzqdYF7
JhQ1qqtRbzQ847SF8gC9XnwZZkarLf7WpT31vVkm42mK7S8rac8t8JrAr9fu
Laf74Qjcmj4usM6N+kvgL1EKSjWHqb8DdvN3nz0xgPZ09GGZ6SbJk4ztac/D
cMTGjvyz7tRfBPOq35so+VP/E7iiOyG7lr5/dcfuYZnCQWN5UxHteQBuD1Wr
mkbfz335cO2FaoNd1KfeCsu/d5nk9b1f0pdlmsvS08cZUv982CBl0rreJbTv
JVhkNn6NgM4rwUNYqLqsYS+d16KvsOxcZYt9WtSv7ccyMgrdlS7TqH8j7PP0
2Z9JmrTvffi1R9aeZD7tOwyPyC97c43Oz6pZ/uiJDBXc/n6+WcMvlBZnv1Og
/mA4/tkZt+rJtO9nWFPi3MNOOm+7fgpAz+Db6Xpk/jo43vRG/Xw56g+EW59J
lpp+4s5T0Vl4zcriCwp0/vM0AlnmoKlzcJ0M7bsWHnH2vK1XS+ezHyyjrC/l
m03n8xk4Vf98QMt+Op9vwU7VyxP09tLzwywI16vZzrFGivb1gRsHxbcsqa/o
NLxqXbr0xYXUXwen/iz9kw7txe+Hl1bPfeA5i/bdvRevb9Wbu4D2aUqB3xyv
HvsXXV9eLSxXtkuqVIf638GM4nI5b7q+QqVglgmqNpQ4YkD7JsKJ/OwHvVa0
bzWs/YeGkreQ7g8W5itV5m12ol7jEJYZ8rF3jKH7V1AJm8VflT3jRffDa1jS
zXDF6lDqlQ/FeaFqtSiUnk9NK+CP5bEq/SbUuwM2jpX4scWM7ocX8GIrRaN/
bOh+mLSPZZ6WTG/OcqbeZXB/d72XgM4D9a3w5zaz1c/pPLSOhdvz6jY0Xqc9
J4Th/O0/YZtVTXsugQ8POf1zvYv6neGzvuFye+n5JDoGm3hM/tv1JvWXwdLT
7v8oXUt76oWzTPoSZ/fVDbTnZvj4Wuce9U7qj4JXaPwTmPmI+othSa3szYn0
vOpr/2Yr08bWW7Tnof34vAde6xiRuwph2X0GV3PpfOU/hl1a5XdlkQVSETg/
Zz4bmEfPI14+HHjR/soAnee6LbBkS2TMMH1+ocQBlgkoqRt36Rr1zYPNBna/
3EHPR/VcuCpw3Z7b9Hy0boYLVO7JXSOHj8KNudPqA69Q75yDuJ4fVqldpr27
bODYe91ly8toryF4hpbAMYae100zD+H7q15vQJZ6eNbwR7X7i5vo+unuhXfW
50yNp+dv1SD8QdK2QKWQ9tI8jPd7rpUdQfurW8GrmJfiyofUGwD3yPx1Y9Yd
6s2Et24Ku3SX9uSrR/6rT2AB77vz4P5gJV1vX/hq2vgMZ3q/jHS4On5ORQ/9
/NLUACdW540YPqE9TaPw86GwfEPhn7SnN5wkVEpXeEz9p+DG5EtW2i+o/ybs
4+VuWPyF+vvgMWtu9QzK9HN7eh1hGYuKvE/8GZy7kuFFuel3NTQ583+HNR/+
Iqeoz1nwFm4UeG49t4SzaOpRvN79p8E2E866VbCuh4VuuBNnYQ+soji/NcKR
s3jKMXw/l/VuMXLmXLUSHs0sjYv342x9HS5KnR+gKeIc/goWfvr9N2U36pWL
xv2vMb1kUQr1GsJ9QbbilDDq3Q67HFEzLyZnPIebf4wM8aKv3yQbg+ebrF3n
NnfOvGVwsk+0fO//qN8VjktcMqpqS/0xsKLXbxrX6f37xsfi5+vTadelPDir
G8AWesWVZi7UL4SjEhx6T0RS/1E4a2HZlcRg6i+Fy3UmD7RG0J7/Oc4yj4MH
N9gF0p5OcJq2o1TXOuqPhCOeT7nqS/s1/Qrvm/GsoWkL9bfDZvJGCsE2tK+D
GP++eOzn1WhB+x6EBRFJWlL0efsK4OHyY9p6O6i/DX6jnHDeyYv6x8Th6w/k
sWE7ad/9sE3in5PEm2nfPDjOW0LjrpD6H8EN11f9FkvXW8Q7wTIe3jFfzV2p
fy6cM3/xOCm63roX4ZC0FzKh22nfB3BLgfWBjfR5xCPwZtOsqmX0eatmx+N+
Up2uGraK9myCJyX5VuZQT9EX2HaMeYfxJurVOsky3dXHNozQ5+evh59aW0ZG
bKPeIPj9vtEap+97foIvnRwo1DtIe2omsMxAbuL7WXHUawnPEdsvjj5Bvf5w
op/j6ccnqTcDtr1p/4Sh66muloj70TBs/cv9tKc5XPhZRuB5gPr3wAW7LpTz
g6g/DT7b3+H/LJT66+GZTzXb3tP7i9YksUxwiU6gjJj2FMH6ia8czY9Qfyq8
QOGXBSH097ybcI2/6dSxh6i/F04eypWYF0J7eibjvCjK6TBLpPshCRbe7mw+
dZT6a+DZPqrhKg7U/wZOdo745E33S7hiCn4e2Hg4viSc9k2ATaRel4wm0L43
4Le1EV5LMqm/G25nnCtu5lP/5FTcb851rx7don4j+Pn9NpF9bb/x/wFVVqQ7

           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.110436859916427`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03272836308221235`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "33.928884775784645`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.7050416586127367`*^9},ExpressionUUID->"a260ac7d-4a8f-4aaf-8a66-\
71fcd7e4a9d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
/05Hqtk=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13s8VHkfB/DpupW0Q2TL0zYkYkuTclfNKVubVSat0sUa5FIMI+NeYghh
NCGDWjurfZJWGqXH2lZNqXSxz1K5Jo1WJYeMLuvWZb97vn/9vF4u79fMnPn8
PvM9v3MY+Ya5+09ksVjj8P3vb/ji931PU/inZg38SNTzpql75h69hlMZK1eD
lzrk1trOZKwOAv9xxTHy77mMRS/AT6Sjpk7mjBU6Apoa2l3dlmTHuNERXO5q
fdJqHWNWAPhYt7eMt54xVwY+pFvSNWbDWDXLh6YWFcf7ZX7JWGMHTquosSs1
Yczx8yHy8KVgea/MS5eD+at9iHxsG1+aWlts+377MsY8Afhkm+R0kCPmzwDP
vJ3VE2GN+avAnCXLF+Z5Yv4usG3LWYOe0cF/LfDyo6k222rJ1RrGsjTw5cGD
dcoZmL8S/KXcJb/GGfM/AvveDVrQn4b5p+6hqZqyM9pJWdhnBfihXsLciCOY
tx18Lybg6q0TmHeSP/F60VKwMOfdJEEt9lkOXiyJqGffxj5bwC6Z04qv3Wcs
YAVAP+Xls1K6GMsswK6cQYuTzzHvd+CXn1d6JKqxzwfgPdyaON1O7PMDeMHz
XcI9HTgPZoE01d7cztV/hvm3gB22LI/d1or5D4CnsoWvXIewzzFwYOYNm+y/
sE+TIPj8ueGB9CPM7wa2/d2lP74O88eC3c04I0IV5j8FbuW9OeXQhH0a7aWp
m+HWr99ewz5dwfwc++DccswfBf7pQU323lOYXwEeuTB64GMp5r8LXjSQ5WBT
hf1u3EdTu+ps3edVYL8RYJ6n7/rFlZj/B/Lxxvp9RD7Wa7BmzlNj99+wX1Ew
YVUReIfllptrijD/DXDwh1nRh8sw/yD4Ykk07/wFzD83hKZaRI+1RxTYrxy8
0PP0uV1o9vUQYn28frC40LRpuRzzzxESVvDAOTR/uFuC/V4VEvMleCkk5ks2
O5SmssL0+RsTMf8qcM9mj9VdKZg/MJRYj5IdRvSrdggj8/qDn//leO/XAsx7
FOzeNsuozgL71BbRlErZ3uEegH3agUPW9Sy5ZIZ5fcF2Ic866+dj3ixwWNvd
mqN4/sr+B27VSPNSv8I+rcNp6oaxiaHLEuzTG2y2wlfjb4XzcCScOL+VF8He
1pIcHTHmfwx+ZHj+ubMf9rl7P3E+K1LBFd2G5trbMb8SbDX+6mF7IOZ/tJ/Y
77hTImgqN2r9fMOd2GcyOKk0PbjZBfs8F0Gsl9MWQeyn/IliOD+E9vpNSzH/
EjHxOPsXMbE+XjN4lXjf05LPMP8n8E6xaXzYF5jfPJKmIp+Mp/roY/6t4F5z
naTeOdjvfXCEi/5Y6gTs9z3YuvWj28B0zG8aReyHGj64e59Xh+cjxpx4sAE1
7bVTM2PlKPg/wc1ar98zVi+MpinHJ8ket98wZm8GjzTsOBPQxZgXAy72XLF0
+CZjUQnYPNb29HElY5ZRDE3VNnRH/fE7Y+634LzJhaNZUbg/R4K5BePL+j1x
f/4RvNyrwTTFibHqDvhX8bDP6qWM+d/E0lSC7YYy7d8YJ+4Hh1+yFJYPYP6T
sUSf6lvgxz4pJ8XdmH8ollivIiyOuD40FoKDJOn6sxsw/w2wVfnjD5b3Mf+r
OKI/wRfxNJU84GU05Q72mw9+8GnDbDO8PnOugUf8ev+7VRfng44n8inXHCCu
h7wrpEW9B8jrte5BOD/zLN5qT8J5cAJvMrg43ehPzBsIzuJMji3uwz6fgTni
io0tf2OfnycQ9wsae/Ct6hlnTHiYd08Ccb7ys8ExWuE65l7Y58xDNFWtdz3x
dAzOs+0hYv/i+YA/mDjXvhNi/kxwaUffLseDmP8S+FONhUtjEp5vKxNpaoKb
TuvZ4zjP3ycS+5UsHbzymHlRbSbO8wXwBu/c2WMZmL8TfD562ytNHPZ5OImm
5i1ibbuegHnPgzcF3FDf24N5O8ADfSEFGfsx72QJ8TjrHPj+IXlWQSTma5UQ
+6tgQjLM22Se8/ZkzPdVMnE/wDkL/vpueeqCaOzvITijw7IuNAT3g4/JxP6l
XJxCU9O2rf35QBjmdU8h+lOMpxB5GhcdJo7P4oODmgr7a30wb9xh4vNRjYAl
q+q4NaHYl3EqsX7OJvD2wn12/qmYNxpsLWv2qYrHvD+lEn2yOWlEPp4LaZE4
jbg+KIrBZ8fnbfDEPI2304j7KcGGdOL9ZeHpxDypTqQT1yfNzXTi/oGjAc+Q
VFs6V2OfoUdoqqgh/Zr8DvZZcIS4H2HXgd/yzjt99hTzD4BDfbWKSgYwv0EG
TcVfkv7sNoZ9qsDSK6Zmb/WHmLx94P1btxhOnMtYppdJUz9Ke9rsFzFWrQaP
TtD6rmwVY34t2KS0OmWqDePEF+A1ulLZiBVjpU4WTf3iEV57bidjtSM4wbDr
U+RmxuwAcGHqRa2gbxkresBbul3Wrl7LuHGWlHg/lr2UOD7XD1y5uyTj0ErM
LwVPNbwgHcbna7Sy4f26Jy4zwONxbMD5Qw0JUlvMLwC3jM1/NWMr5s8AazXd
njLoivmrsom8vBVHicdFXuC9Q3o5VXg8RRo4rfrdDmMnzF95lOiH1QkeDjGp
/7859rtTBv8/rPuz68JC7DcFLH6ZqX6Gr9dUyIjXc9rBekK19wkHzD/pGLF+
dRK4c4Lb5c4l2G/5MaIvXgtpESuHphrqo/PDl2N+C9Lcshzi+YIH4BdWm0r8
LDH/B/L5KrNcmrprdWy6fD722ZhLrFc5lkvMk9okj5g/tlse0QcvNo84XuNw
HrF+lvFxYn64ruCqoXSDnd9g3iiwqVOxTvdGzKs4TryesyCfpqY7PY3Rs8c+
N+YTn19iRD7Rv/KHfGJ+1PX5xHyI1svhftv/zeh7N+xTBH6TuvDZXMzXWASm
SiPmP1iP+W/KiXnnDsqJfCphAXE8jbyAmD/OdfCLkfCmycaYv7+A+HwS5xTS
lE1UpI3r19jvcbCd1u460x3Y71WwrO9E5WUvzP8SvCzMeW9cMOafXURTcWW5
VxPSMf8qsEGhR5+vZGjNPxsWm0U=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GJKm
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt1wk4VQkfx/EbqrdSWRplTLI0ZihlVBq0OKOUVC6hxaSLspbsUrIlZEuj
bI3cQWbI1W1TectcEkrWkUEpTdaOQauk9P46/7fnafk857rne3/OPW7qTget
90nxeLxx/P7yN37xXziwDP1zZC3+CJ+zh2XkFF4dvzSZs3gNXHQ5I650Gucu
N1jYoG9nI8vZuw9+ejW2sOtrzkJ5Acu8HFlisEyDc6MxbKb05NbCpZx5LvBP
TTLHIvU46yXDS0w/LPVU5iyZ5cgyp429XJZP5zzy4xdL92+P+DT8xWrOcNR2
/3I9Ke44PxGuT3iTmSdN/dfh9bO1dXSncJYzcGIZiU7Lu+sLOJsI4Gj3jzfq
Vak/Dg6fVGBXRr3Cq3C5V+oV3mrqfwLnGecoi2u58wt2O7NMe2hSZJYd5+QY
2D32m92xEs6SS/DWOx8+V6tT/yM48Llo1IrPWW3KXrzexId+63bTnsWw0bR/
Lp+1ot52eF3C4JHN26lXeh/LZFdESF/fRr268ERw0KjMUdqzCA6qFF00i6U9
W+GdnlpC1RTOAp4Ly9xxabf3PMM5WQc221B3fn427W0Djz2supKVTnv+BS+M
Sm4ZzKA9P8EVEsN2M7L4O1ccfz8xL66A+q3g0J3T/P+hr5cLgTMtzvbli2jP
D3Bq5Mu7M4S050I3lhH8XLQ/Ppf6LeHXrePq/anUHwy/KhuuM6c+QS58IVsk
Ep6nPdXdWeZXWfGjCTqf2mY4KC3wt84I6g+E6yJ0HbWPU78QFjt1h3wXT/33
4ZoYq5R4en4Tcw+W0dNYHDj0K+3rBwcI+z1iMqk/C5659OLAU9qzsRquG7/+
XuEP6n8FXzTrsq/Ko329PbFXW7zFZuqVZMKqfNNxTdp/pBJuTJnZcIVer9ow
7K4+zWv0d+pX3s8yMvzgY2W0V1cafCh7bK409clVwBVZHrY59Pwmg7BdZ+vG
RfT83koHWEbhraOiA1loApe6Wpdb0x56f8Jrrk69mUP7CQbgujBxmPAk9St6
scwZjY2jrtHUvxo2cD1fkxND/a5woYF+fTPtI5Y7yDI2xe1X3xdSrxHs8FhF
qbeIevfB9X9vtKzMod6T8OqcohUic9pzpjfLNPeVyTkF0Z4/wnPSe/OHDanX
CfYyau0t1afeBPhZ+aUpZ+n9kFwCC98dfaa7ifZc4cMyezz6ZU/Rcf4eeOMr
3XZTa7oeTsAf2f8UawZS/xWYyfjRiJ9E/Z2wcImyGj+K9vzZF9e3tJvbPU/a
Mxoe81U49+gQ9YvhT8Xdq/1pX94jOE7T4L5HAPVP9sP95sab2dF0fUqOwbd2
OTvleNGeIrhGxMvztKf+NlgmqK/W2JH6pfxZpmC/paKtgPoXwx11YqMDdP+Q
uwBXlbfI57jQvg9h5aqfSpXWUP9nOLZuhnvPVurXDsD501dFuq6j/m1w0UR/
n74l7dsMr/gh7cGJtbTvxy+PL9nQO5eOS7QC4QbBlOW21M+Hq5qybKdtof4j
cHNVct9sC9p3DK45Kj/YRo/v0gzCXkZpOs9sqH8rrDpbbeFberzJITg/5Yhp
oBH158C7Og1vuKygfdUP4f1/TeAyx4T2tYCvf7IwH6P7uSAAPpwu926HHPVn
w/rPQ/X+O07353twx03D+oujnPkbg1lGe3zy4CDd78N94VkPooqN6H4s/hWW
CTGpPehO/VXwiEhl0TZn6n8J92oJHzQ40b4HD7OMvUzKkGQv7ZsBL1TaP29y
MPVXwnmeTy7d8ab+IfhgkcK+QToumHeEZRavdPtKna7PkVRYQ2Nq1WZ6/6mV
w39Mt1Lwpvcfn4VD3H8xLT1NvWtDWKalInhi+ALtWQYfDioZd6f7k3c//E3L
3jHDi9SrcJRldsT5JBidpd5V8DsDtSsiuv55rrDeocCf3Oj8yT3w3KrEjHq6
/iWzQ/F+bzaf89UJ6jWEbwwYrlS9Qb17Yb37VqKSUupNglUfaE1XktCesmH4
eSCIaG+poj1XwtMqdNklT6jfEV7yIfPfx3eoPx4ODVhk1lBD/dfgoQsF1YJq
2nN5OMsEd0/vNamlPR1glzeCU52PqD8WDq2/OSHfRv2X4foyw+Df66n/MXy6
qWr9Q/p68fEIlsl543OyuYF6L8Lmw4yxJv38k+uA9aKqi4zo54GJTCTLxGxJ
NM2m+zdPBHfMq74QWUx9f8NWG7bMVrlHfZOOsczXu692xVJ/8iLYcVfXDsFf
tF8h/GxlzeLUCtqvBQ5evUR8hPYIn4Bbfcb8o+5T7/dRLPP80avNb+l4lzV8
be+yA7n0eoTjcNmGiugOOn/jt8dZxuKJwYLjLdTLh6X032x/eJd6D8MjO8xk
o+j1S97DlfYqaRX09SMa0SzjIdy+oPIp9W6B1QInPu0dot4gOImf51vYT72/
wXUjN+4P9NB+ajG4n/zQtkuKzm+yCT73er72eDt9v/3hMznDxjmN1H8ODtSY
9PUG+n421sAhmVGNyq9pzw2x+H68vTcY9S/t6QP3bstwd6TjkrMw0/GHyPYj
9d+Fw1Zqt96a8ZLrH4FfhO5L0FbkLPY6wTLW7Z+da9U4d6XDoT1N9r5anOXu
wFNnzf+8dBlnk3/hcwkfJgIMOHvPjcPnE5V8092rOOtJYOVrybz1VpwFL+Ce
hLFTtTack+fE4/PTsuboQzs4S9bASU2F1lNdOPNvwzrFNQ7vnTmH98Hz9ewl
B3dRr3wCy2glesa9jaBeY/iy7xq/Hm/qdYHrLarqJvlyFnZ/OV66h5fnwblx
ViL2VDjDnHPizDOENe5c91fdSf3OsN6Bh3aVttSfCN9sC+9Wd+Q8MiMJn7dH
e851kNUMYJNNlc/CHahfAOvLuHU/Dab+OFjWziV/JvWJr8ION91SVfxpz2Un
8X7q09yu5UV77oZlXtZaOK6j/hhY59lXTdGW1H8J3hL2Tq7Rmvofw/zb0+tu
rad9dyXj89ytmF8KGNo3Cl4eP5RyhfpGimFrx5IBFQH1t8MHfMpUhvZRv/Qp
lhlozW6SdqV9I+CE1926O2l/uSK4t0Qk84Bs0goLTndIfqPvpzfvF3wenet8
ezKdT6gDC5fVvxmmx+sVwPqKwauyaH/BX/CciI/5CbR/8ic4LuRtST7tL/ku
BfeD5/u7ItbQno2wh13ucys6n/gDrHp75vEG2qdr4Wm8vnCFS360h5wlHOG2
x1BM15NJMGyjFdo3+WfacxQOzA58PIOuJ57GGVzfDlOmWCRQ72Z4q628aGUS
9QbC6aaK5uUnqVcIm0kt7/0nkvZckMoy9zq/10oKpz3N4fgF7a2y9PzhfvCp
36380o9SfxZsv6j7m/j/X8/VcNuwYso7en5vszT8/6LIqyY3kfb0hkssmwp9
4qk/E+6U76r9SH28u3DBaO4L51jqH4bTNpWfeBpGex5Ix+dzA8MwQQpdD2lw
4rZrWdr0/GoVsOFlp6HzbtQ/CH8rFZCsRddruFIGy/juPFydFE37noEbL/8d
OS+D9v0TnmWTa3gsh/oH4FN37RvHiqhfMZNlVmm+v1BdTv2r4dOhjeszb71c
+z+6v765
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.6736416*^9, 0.955068360205714}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.6736416*^9, 3.7047456*^9}, {0.963290363485068, 
        1.1277304290721515`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1085455634237507`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.029892016255397932`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "37.08500470334009`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 
  3.705041661807068*^9},ExpressionUUID->"dbf67e15-fcc3-4daa-8978-\
85e69b59e5a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<VTI\>\"", ",", "\"\<EDV\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<TLT\>\"", ",", "\"\<TBF\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687720875048324*^9, 
  3.6877208755336103`*^9}},ExpressionUUID->"450dc594-3d9b-4fdc-9103-\
d430ebee1359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
hv+5X0B2D+zS5Wift4bypsF3xKX06kS0P1MzFzJrV9wR9f9I+zNL2HhpGBPh
T99v7YQbXvBcppyi/Clw/vRF8qIcyn8Xnn4xcpuvIV2PNF8sZKa+r9oh/4q+
v98B//N9u/9J+J/7U3KqYHFhy3PDGPr+vgt+sPV8VJE49RdvIfz3foWaW/A/
39eJdcKLwyWfqORR3lGWQmbIvVN5S/Kpz1hLzv5BVAb/832kcjt84uSdKW2N
dP10hJWQeZx3bPu0sbS/mAvLHXwxc8sY2h/cgDc0X5s3h/ozFsJezjIBvXxp
fzbcWsiYZy2/uT2B9mdz4H+uN9e4w6IZkSOm19D+4D0stvxeZyntv/lDbIT/
Xl8tmQlfqvnxdtJ5yr/ehrO/Vj4C3y78fVVxKK3/MrZC5tzPVkHnQFr/DeHk
0q12Tn/3x2thff2tNTFitL6Fw2+e86sqdGh9uwy7ZqyRZ8xp/TdYImTeyVya
MMOG1n8XuDj3jpOnFa3/h2AF1SNSWXT9j38RHn0u0KlpJK3vjkuxf73Umi49
htb3ENjyjNu3a66UNw9+EqbUlryH8jbAhfcHjvLxou2V5DLh3+ebaP0PgrUG
Rr0+sY/W/+xlnOthYs+Wca7X6krYCf/9fsNZ246TX3QWHm13afPo2bS9egrL
WgbI8nZT/l7LOdfz/CfCC57Y9wTcoPzLlnP2r8aPl3OuV/J+/fl9cfup9XS9
MUnTXvj3eSQ6Xre151z/EvsPju/p1auQrn/wf9hz9n8l6iuw/dsmcz6wlfJb
wbNWyHcNoP238m6Ynt+k/KkrONenm1QdONfXZC0cOMe/xj4OnOuHvGSYno+l
/HfgaSq7Q/rQ9V9ds5U4vqx1sYzeT/16wR0Ll0TNuU/5E2GH5teHraMofyX8
wyr4Yyttv0Uf4cltSzWOrqJ+t67CfMwbGJVD+7+cuFWc45+mm3DHcClHB7Ks
CJYYJun7gr4/MB65GvNS7+WatpPmIwYubRGVvOJRv2Vwv4O9g/eWU/621Zzr
h87yjpzrz3zGkbv/FcBn+593+zaAjmeGOXH29zmz4dT4H/fv0PWPpg1wkkpM
RxNd/+C9g33Y51fp/G2wM873QkZJNdL5VI2RM+d8S2w9LP4sdNem5XT8wIc1
VyrWBg+j8x9pF+Hf5xmpz+nw7f2CiE8FNA+usOw79bNrcmkeDrtw57nAhXt9
VX8N3q/D/8bveurTGabn92geDsLVl2U619PrSRfWcK731DTC9Lw39bnaFccH
z90H19H31/xgV87xckmuK+d4VPQcvmm+eoUhHS8p912L7YNbjF45Xc9vOg/T
85yUt34t53jNWHwd53iLp7WO2+dZ+Gjp8STeXurzCaw7s9Xi9kU6HhNbj/2Z
7YOuqXQ9hz8BHqopdbDhAfW9FFZb+qQ29zbNwyP4UHtw6rQXNA89sHz+r4bB
NTQPGm7wqslCyy7KbwPT83F0/OgLDyha8fH8V5qH7/BMb7fXq95Rn2M3CJkV
U3ZfCG6n/FZwvZ3Cp7K3lH8XTM97Uf5TsIthzbv0X3R8ruIuZBZJ5mzI+0x9
LnbnXK+x9obLs4UV4g2UPwmeH7Y4pOIN5b/9x+oitSsjv7P9mnrgfGxU8PND
cqx522HjEz01+xVZJyXAQ29kq9/vx7qmApb//PgAM4G12Ed49XLZU9lqrPm8
jUJmFG+626SZrEtOwAd+Tm/7OJy1qByeKTPQz0qJtXIHrKPxuY/BFNbWCptw
/lF7ICZjPOumaDjb7NiC7RNZy5bCr84/nuc4i/K3wgFbTU5ck6f8cpuFjMaG
FzYRQym/MUzPD7LWvb6Zk9/5A9zbMt1h3xjKP3SL8O/zdZR/FqzjV/rlmwzl
d4Pd39uP76PHOkfWU/j3+TvKOwNe/HjnOnlLyrsO9os4sOwm9WEcAY/RNX4X
GkXzMIgn/Ps8Jc3DdFhyWduK5XQ9WHcNj3t9OIzHuR7JvwSv9j2++nAkzcO0
rZzrgdZOsPzIlcwYun7sHwqnZ53wdm6meciH207v0r4xjPK/2MqZT96qbVgf
Fiw7/rWQ5vkA/CHgzZzYl5Q/B341fHLGxr40D8/h3lIPcmxuUv4+27E9eZbe
tPAbrW+B8ItXAxd+o/cXnYN/+TeuVqyg/HVwQF3Kr9tNlL+3F/7+pl+x2jS/
/pPgkqkh70bQ+iqbBXcPnXSrvY22F7VenH55v2H67wFQ/vE7ONfra5bANkKL
pwb7qd+HOzjXT/k//7z+vHhtG32fUzLOm9O/yBqWbOd/NqXr8cp74Nq5Q3a+
pffL+ebNuV7dpObDuT4qa/nHkXvEv9L1UeOdcP3Yh1cb6foiL8WHcz1STGUn
zi+bXp4Nc6N+zXdyvl9w3gHT89aU/yR87J3iSkv6fqWkaif3+5hFuzjXv/23
wSVxzebjjlL++F2ceWm6BdPzvZS/E54o7iQvQ9unJM/deN3Rq78LrS81sfB0
LXPD5fNoPsrhD+WFHyoNaX1sh9V0rEc9Xknr44g9OL8aP32sqRWtb8fhghSr
qEEBtL248ceRJaplUbS9EMJTmrX5NidpfZzjK2TYcS+k9a0Yvp6RVqkVSduH
97DR96H6V+No+zDkPyHTd+Cr5rhDlHcmrDbmRkaoJ+V145rfAteUNyVfTqTt
g4yfkNlsefPGqhuU1xA2X3TcZJLcDzbvWniTv9Q3Roe1dTh859qJlNdLWTdJ
7cX5ygqH1C9zWcsawIddLhYe28ja2AWuuzjn8IJJrHmHYNHTmljRItZJF+EG
3VObdWez1p3qL2T6D+gc8daGtbMj7BzT7T9+Pmt+CKx3PaN2uy7rkjy418oN
T0OUWIsaYLnex8VNx7POCdonZJpNQobGzaC82bDq9xntWWKU9xkcpBDaML8X
5ZUIwN8rLTc6/o76Owen3JKaqa5I+Z7CpwUpEyz+5usVKGR6dmZE8udRvolw
6Fub+swV1N8ZmJ7Xo/4eB3I+j/8v+LpiWeZcB8qruV/I2AcMfl68kPLawuMq
xIWy9PeSfsD7NGao96bPU6MehPMxuc3eqmasxaxhA7M4zUxtyrsbvj7JVvGw
CfX1FZ6QWabTfyr1pXpAyHwa2P19jQfltYDfi5cmXDxNeX1gfd/XTuHxlDcZ
bk2c5zrtCPWnHIzlV1+7Z7ML9WcG69kv3rrejZa3F3x/+q+Ae+spf2IwZz5q
KuEjQeYZV5Ooz4Uh+LzO6QfE+dTnVrjMeEWMRwTlj4Pnjb5irx1N+W/Ch08d
ci2/SflF8CaJwsXJb6jPLaE4n3izaqKP5E+2zxg4xMHzSrEKa9ky+KKadtd4
U9bGbfDPIHeZmLmsefIHhX+fV2StWwLT82GsnQXwMJer8be3sOYPOyRkukYU
+Hi4sy6ZDVf/8vdftYO19TX4icTTfN8g1v7vYHr+inXO4DAhI3X4XFLEXcpr
BDu+O5zunEB518MX10kkrDjFOqkZ9nQ4vu38AdY10odxvhmttdnVk7WYIfwu
eEvnsJWU3xV+uTXU/Iwj5T8M33of96yTPo9oYDjyLCx/ZePHWlkfpucvKb8z
POy70/RraZT/IPyjYk5hRTzlvwAnFT/hxcZQn1MicPy9q9l5YTD1uRpWN1K5
q079JwXDyWERhhcmUP5ceO7XKYnWmpS/AXZT/SaZ2Y/6deALmf3jzFYsFqN+
98Nde4c2+OhR/vOwW1H8qbg5lL/+z8+zz3NSfvEjOB9e3DK+k5Zn0z547vvU
iX1nUr9nj3B+3/gJXMxvOrhclfKLRQqZc6Prrvc3pPwT4LDahycyp1C/mXCa
ZJfCSfp7zo9gk+3RfkYzKH8PTM9bU36No1g/1CSNZjTT+lVzlPN+Od9hhTN1
C2qGUN6xx3D+OHGN9VMpymsFj67eMvXrQsq7C/46oK/OOV3q8wus8lFCTfk/
6lM1Svj3eVTKuxiujh6raHWW8nrD1zY61OzKp7xJ8G9bPameE9TnmOM4n5PS
q1I4T32acu2/HY7J6Lyt/XceEmB6XpLyV8C2He+v9tykPk2icT6nuTkl9Qr1
yYP3HBssyVym/Cfg3MD59i6VlP8mHDLtw++mPMrfAVsWla08lEp9bo4RMpmb
nfK679A8RMOWa7vdKysofynslFbQozuP8rfC9Hww5ZeLFf59fpH6jYrl9GF8
Hf7B21YhUUL5P8BfakW9gmop/9ATQiZ+x5WKo58o/yz4ib6S0KXr55z/A3wh
tF8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3HlcTO8eB/CJChUNlUhayJalUqJQHS2EMmQpLUpo00IikVJaLGkUWiip
SISyJYoWsrSYLFkKEwozoixZstzPPd/fH8394977fjXq0/d8z3PO85znpL0y
cNHqXhwORyTN4fz/f///n/v+Iob+X4c5/kv/N9zf+MdF6WzW7qMDREzOr9sR
BW9Y83lw+NoHR3W2dP7fWvfgZ23WgmvurHk/4fqYz39Cf7CfjxwZKGJSq/Ys
9tnCutAOzo/NfeYXxlq4Cc70MHu6K4B1UBfcdEj7TtgB1llaQSLm1eiSM92e
rAVzYQPuUq5iJmtOCDwutldW7UHKfwRuP+R7QOsy6/Lh60SMT2PmCKGAdcds
OCBkv7rFbtZa6+Grse3HB2aw5h2GL5dH/DS4T/mr4TVii4I/0ay51utFzJW0
PjbnKlhbBMJ6U+ur9p6h/Gnw/gd9OHFFlL8Kzn17RihfTvnb4YBpno2Hvai+
a4NFzMBu7Y/HjlF9D8LxZ1uD36ylvCLYplFh1/7/8qpsEDGzH91WXnqD6pkM
6/wabd1fiq2/sAyWadg/4KY6a+47eFKQ+tEgssWgEBEzpnXH1U92rINmwBOj
jS0GMqw5V+Fzs6/NVPJgrd8KG2q/uzHZiLW74kYRM8u2veTgJNZ8Ezi27IlR
jDLrck/Y0KjXqgeO1A+vYO/j6mOPJLCOVNgkYlq/+C7+d5d1oTE8RzP/uPNt
yu8O6wpeGdxPp/y74eUP6/zKNFln9QsVMaEn2l9UmLEWGMKpgulZNc6U3w22
T/VdGWZC+ePh32tDmqvcKP852GGqu8uzL1Rf/c0iRrktYlX8Z6qvMzzmdJjD
/Dzqhxi4JH3e1Y546oezsJXINzN4E9X/KbzLdVDuSOo/C8cwETPtTJ8D+vuo
H6Lg6R7OOYFTqR8K4KO9Ssu8ij+x+Rthx9xLzKN5rDlSW0TMWdU8pfEJrPkR
8PZn/r9d01mX58P2a2rsVB6z7ngA7xfPCR/jQPn/wq4h83jp3pR/7FYR88Ij
ceNydzrfjsMqpw3iju+gfm6AZwQb1DXsp/zdsKLdt7I1Wyn/qHD078P9jN8h
yr8ANuo+H9spov79Ad8tv33z8Vfq3xHbRMzqgSEiszo6/+bDToXaQ36uonpv
hI/Y65iKbKme32CVJ3ty3s6lempGiJgtHgUW5uMory38j2MVYnaL/X25G+BS
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
ydf01lvEnh9BP+D1axvPDKig82/ESdxPRNiWnjhO59982C1S3DV7F51fNbAi
k+pyroo1/xvsoLH4bNVy1uWap0TMvJKOPjse0flnCzNLVeZVvGCttQFeYMN9
sn0y68LPcNF3cUbKOxFbT/UCHL+1bbyVK2g8ng1fM1yQ96ye/brFOtj2auhn
zirKfwiuTXaTfhVI44PaaRHTYthiPlqZxgcr+GdDE799HOUPgN2NosNufme/
Hz8VDjmr0i6rxrq8Et7Fa87YGfOerSdzBsd/1y23nC2sI/3gAwnR6vKGrAsP
wBtXdbZW2rMWXoe3TO+cXX2WNVcE536wl36owH7/LO+zuH7Zcc3q9VgLkmC/
+ab6ViNZc8rg1YcCFKLkWbsPLBQxS5OcXKdfe8fWMxGOuM0dckOB/f5aV2AF
6fttXoqU943k5yMHFGF+LnPia+cwyjsNvrMlfln6TNYWxXD/3nvXjZvDOqgF
zhycrKoYzDpL/hzGB6Wc2NIk1oIp8GZV669S39jvjwkv8rRzWqr3sl/nv4Dl
eKaeoqOsy/uel6hfx2T41+CckpUDKb8rvH/vrX22v9jvx4uDky9039tlSfWU
uYB+tpjScZJ+Hlcf3vu82z/uFWuL5Rckfr+gHfCoZSf0xU7s17POwH0m3t+x
6gxr/YkXRUzfPpk2I1ezdl8Gl9fFJydvYc3fDt8K585SrWVdfgpe2zzK/c8j
qv8jeMwSLZuAGqrv4ksiJmjvlJ9/LrAu3AY72nQKL49nLTwBN1ztnvLYgvI/
gL8F+dx6ceUtm/8PfFvh8u99xawFW4pFTOOIt7eSF7PmHIdzDDNVq6NY6wvg
sD9tLjONWLv/gle5rtL+mciar3MZ+Sd/MH3AYX+eVg5stDY59owe1bcO3iVz
+aD1Fcr/Hd79MtpReh3l1y5BXqH479NKyj8P1nsZfKnwPtXzK2wVaeplaMZa
oHEF91e+w8xizKkfbOH1qdEX/5yhvMHwvNaMAcFVrMs74VDbBU+vV7PuGHZV
xPzu5pxesZO1lg08vaFr4scLrHlBcJL1+JCoMtaR6XBB6elBdytZc4eW4v73
57mlBXuonpbwkci5/eKaWQf5w0O/cd+v0aX8KfD8N05pRr+p3hVw9rZKDTl7
6geLMsyfLKV4a+ZRP/jCsQ4n/lg1UT/sh+VlBrscb6R+uAY/8Yt+s3wf1fs9
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
fA+m/FHwCbuKuldb6HmS1D+MF38uvVaLo+eJ4+HilQUjjy+k/Ev+STyPKI+A
t75X7H0wlPo5H+afrd46jL4eOZYjZjTEcfOue9P6+yK4/WH123WxlH8rvCPY
M/hJBD0PzYPVlKw2hFtQ/gbY+e23iLpcqu8CKTGz++8vRyd7qm8YbDo9aUqc
K+XPhTPE42Ld5lP+evj97yiuPj3v5P+Ak85E9XmeSefbpl7invl5R+Eezz8j
a3pJfP/Cb7D3SKed3N2UX7O3mBmyoqDj332qbyYsnfZtY1gr1fc27FFWtDbJ
jJ5/fIYHaFf8Nnej5x2zpcXM1GWhxbcL6HnMTZh3z+yu/Wbqh09w+QGZtjEy
1A9qMmLmxZua5UWTqR+sYLNXihm29DwlMgAO/CHgpLhSP7T/38Mr7qS9pOcx
qrJipqtOdK5UiZ5/M3D1pdan+rS/IssPbt7i+GITn/YfHYC1xtpX9BtO+wuU
+4h77lfhm8GmG0JmcV3o+b03nJbhOHjsZHp+nwSrhtn/6eVMz+/L4Kaje9RL
nrIunN5XzKhUX9oc085auBp22hbVe38ven7Ph1MdQneMmER538CCoRUHv7jT
/g3Pfvj9F+n482/T/o0EuDT0V2vQN9q/UQzXrx6ntPEL7SeRlxMz3e5yslnW
tP9hF/xWlLnOLYv2P1yA5zzccUT1D+1/eAEfa/P1q6P9isK+8uKe+zO4hvCl
t98Lil7R/oci+IHxNe3pXNp/1gS/SEt78UeW9p/JKoiZkyd5k/Sn0P4zfThj
v7bnpFTaf7YcHnawj5KCJe2f7N1fzExebpytnE375SbCistz+91xof1yy+AK
l/zkRmPaL7cdTogMi8rfSfv5OAPETFn+kpgUPu3n04VvGuZ/e5pC++UWw70s
De7E/6C82+D28Gs3mPuUNx8+v22HfqjFZ/Z4j1EUM3LCzCd+OqzLF8I99uN1
bFGU+H20jsN6gU/GT15C+QXwydQw6frHVE97rphZOO9aUMlLqudmuMDtXdFp
2l9qkQM/0Hn3/ck52m9SB2cp+vW7m0L1/g5vaFR2vrac+jNrIPphzB3egl7U
n3fhHvt3yr/CqZmHd6/5SfuJNAaJGfvpQQYPuXT8M+Ae+1MKb8EHCxLn9zlK
eTthS+6R5gu0X5OrriRmFg0KSn5M+1csbP7vUbsmh9J+P8ENmKOkdiSL9k9x
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
sxV3Z9D1WCld8v5hJuw0IMDQ7mK7+f8AH5ZBLA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt2nlcTPsbB/AiUkhSIWGQnZRkLTohOxEJSZJCYkiLIokUpaYQiRo7SWUp
RMqSyNaiLImRfUYqkhDdz52P+8fv3vdrpjOfec5zvt/nnPl1c1k9a2kTFRUV
uZqKyv///v+fIk+5wP+qHoP/MWmA7/b0Kr1uorRzr1VyYdQtD8Mm05SW2MKr
Rl9ft9tVadEj+FDzypexc5S2/QnvaD5/hQv/PqjHarlQqdLx+pOuSqdNg9tP
v7vsu6HSMl/Yv5PgfKSP0uI6ON70+fmrfL9UJJYLP2f3qbvL9xdMhgd3dB78
rp/SKt5wbfBY1/4WzJ8IH7iqdvfqYqVzOq+RC3n3m+7WW6d09QQ4MiRmpo47
86+Fw3U3ju+4kvkP/P96/IPPt+cy/23Y/Ercpo6C0trj18qFJHu/gfOHKG21
GpbV3X1mT4vj4PqOXTtbTGL+m/Cx/RrjbacyfyWs9WF9ihXr5bzSC9+3/968
mvWsbyxcO3LckdhVzCuHFaedjo/3Zl69dXKhxGbho+qNrOcu+LEo5fLwvaxn
FvxyzflHkhjm/QhHu3ef/VHCvDreckEj8XTe3kPMawHvs3Pba3iF9bwCN1k7
8ofGbdbz3f8ef2mxfRbztvHB+dpeWOBzl3lHwLsHuixrmsN6L4FFg37caP2I
9ayAb1+4oe9dxHq28pULofcnzTj0kvmHwvKaqKr4cuZ3hld8V//87h3zh8MS
g+jm4wtZTw0/ufB10+dOafz7AjN49eBX66NeM78TvHuL0WTNO8wfBr9yfB00
7z7zn4MnDurQSuU662uyXi6YPR/d62Iu67sADlzeZVV1MvOHwA5bt19YK2X+
VNjgUK/iwDjmfwa3d13SpdkZ1tfBXy6s3VvwKeck6xsMR89MDp4QwPzJ8Lx8
oycms5i/FN4cJq24NIH5VQPkwtmUkEQLR9Z3EzzlVmCNxSLW9xQ8WMumefVy
5i+GHZp/d9KKZ/6/cEKB6bYTe5i/zwb0xwR7zdsHWd/j8LWFQfGJqaxvIZxx
bELpsovM/xs2uGE56w2/j7jnRrlg0/LuzPG0dAZsm5956xXr7VwPF+Q5pczm
+ZJ0D5QLXaovWIXxfOVMhe3c7X4u5fmo9oF3LAzOSGC9g77DRW5njvy8xHp2
3SQXxs6uPfmZ9ZdNgn9WT9jptIt518Gu5pNmSRKZNwEOtLGX1y1kPQ2DkL8+
7+vHNaznBPhYxdcTmrxeTNbA2fljC97vY/54eI2bufD0APPnwjpnpgbl8Pii
cZvlwmzhm/ZTXl+2q+CvZ9M6bk1g/n1w1v6vM0POM/8NWCvnU6c9rK/sM1y9
9obdjWOsp0ewXNA7625hx+8r3QO77Jb7P73A/NnwJdvhDu683lTk8I26XltO
JDG/7hac75EeIf0DWd8YeGKwzPXmTtb3Khy6V33lXn5/0Qe4zr7lkvtBzN92
K9Y307jUHfz+QaPglT26+WTFsr6ZcMzwt/dusV+s3sJr/IfYDoxifq0QuTDI
uv3+6xuYfzgsnHcy68L1tMAFTr75LmMp9wfn1/CwdZOv+vL8SFpukwu9ur17
Ppn9m2MOj3tVZZU4nvkXwQeHfgnuMIr5d8DbpLEZdc7MtzBULvQwNP5Vy/XQ
KhRekVby4RTPr/gsfO1aUssmS1g/kzD0/zMP+9dcX03mw/OShjpcETPfVjj4
l/dOfdZLkgInXnjh4LGN+Z7CKw0aPX+Gs35zt+N6NxtTfjea9du8/f/1euK1
Jft5/k/Do72S0guYR1YC3464cd/bh/lVduB8qo3ttNuX9QuES7csambO+hec
hDOsWzok8PupFMPDgxO97vN4zr3D5cLDuIhZv/n51cdg46kJv4UjrFcBvNb8
wspg9qftL/hloO+WF+zHIKMIuXDzXsS7+H/X23Q4cvbnzOmnWc8H8CWVi17n
j7OeP+D2RuYBzzOYt9tOubDV4EF168vMOwV26GuYE8L9QsUHthduFbifZT1r
Ya3Ir/t9/+0PXSJRn8Yvo0XpzD8RVhgMOD+f65XIC36gsn9xUSjzH4S3D74w
PHk369kpSi788Ru+7kAI62kDu7batdyO66uVGDZ8M61+sj/z74dbtS+/56nH
/Lfg8Q/ftD3cjf0wViIXfHwy+prrM+9euPTMxbjgdsx7HV456M/oNZw/qhXw
on4llz60YT1XROP7LByyeHhz5rsGvzRT6+3Slvk+wf3H7r12oKhKma9djFzw
e6h/uudPpQui4aRh+ZPb1yutchW+08781PimzPcezvw2yzeceZy1d2H/lQ0b
9seAeUfCbTOODtDg/CG6DM+9ZrFHYwDr9wa2qTe+e2Ak87beLRea9ugf3msE
z/8wONPI99JtY+ZfDF/THKL/ewrrpbkH6/3vgJE5DjzfQ2CFdHvwMiee70Xw
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
+UFyvn8x709l0fCsGWNX+PJ17avwkJdtCv3cmP89vHLRhXIDzj9i7Wzsrw3v
w3T+zcNRcM3ZLYVLZrCfL8OjLNaXa7Bezm/gcaunjrHl+ZK0zkG//7B4/ZTz
XM4w2P1SXMoh3o/aZsCHDbJE3f7NbzL4xcnoJ5/4+Wma13G8IfbvunO9lA2B
69ymX8zmeqq9CN5aNSfu4DPWtxz+PL3RdEoe66t+A/0oUrw2/8r8g+GkqT+7
dua8YuIIH63Ubu3D1523we6nyucZcv+sVruJfjtz4Jc29zPRIPiP5qgdz9W5
X8+DJ9glje3Cvw/aAk9e7X3TXMH8Z+AmV0ytlz5mfQfckgvL5QusvvP5ntge
7qTds2WPbOYPguMefl/Yki5Igjs8WxtZkcb8JfDwnOTctbwfl9jlYn3t/yKk
M5935GyEi/Y+HFTO16tPwNNdfzyyzGT+Ilg8IUKk9YT1b4DbiHQ73ubzLZn/
bdwfrDrt01XO+h6DnTZZdX3L511Wj+D2+SU2wXx+Iv4Jf+4hb5v773lPjzy5
0FrxdGgun3eaHIZNMzaGRL9ife/D9XsiO4k4/0nq4OJ9K4O+c56rnnwH/Rfe
ebgaXw+6C+cUjVmx7Tnr+Q2umXDkdCnPt6zzXbkwpl4ubvGvHybC+pkHnjvx
eYDVWrjP+bCbX1n/gmp4SHPbZc9Yf5VO+XLhvdck58X8vibj4YWdJG7Xef/u
vBpe4X1q4wc+n5LEwXdTQ5u9O8d6drgnF4yamn+fc5P1tIbdHWXL8zhvBK2E
Pyce+y1ifdNi4aztHb7fYD1kObCOnv6Hu3xdPOY+rtfcDcsS2T/S5fDZZvN0
n71n3muwanbQxk8fmPcj3KLj/ZhUHi/H7cH/9R4yUvqvnhLYKnDizdacx23f
wRW6z80v8/wHtXmI/fzW7YvHWR/tSLhQ41THq09Zv0twuY6KZzueD3EFvGPv
kOh+nP+lrR7hfqE4LeX7v/lyKGxx/XobnW6cf9Php0kv7hW04Pz7Ck6ZKs04
y3k7R6MA837R1Ed9+/F6M4Nf2Gd+6zyE86UT7JZkPM7HjPNu80Jcz83/+D8Q
OK+bwm2yXAt1aKsFcJ7N9IM/bTgPh8Cdo1RP+/HzVNSKcH3q76ta9IP1M4bV
1MPWdWjNvA6wV+tftu84r0qC4c4LK8MyOjNvMrzjrnTHRs7Dtv2Lsd9Ybj/+
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
8NGi9qzniF4KYUZpbEXUR85jrrDxX5Vu88qYPxKePGTK0u1Pmf8SHNBsyrFf
t5i/Anb3+rhm5X7ON4t7K4SH26cW/OH8ZhsOu6eM+eMXw/zp8Aq3Fv4dNzP/
K9ix9fm4gVtZz7A+WC+Wegw1OcX56xw8c5mm9uYSzo8v4G8+DXHBnN9U1Pui
niLN8Ps7mNcUzrlY2+tqGOuZCrcQTtlN4HxY/QwelTOhsu4S86r1UwgvU1s8
u/iQeY3h21XrLhs3MK8DrFI2M+38v3nsCRzSM3ikEfvdSrU/9ptTQTebq7J/
+8PVnXT+XNBmP8yBK9Z2P2fZmfXeBA/2ro0Yz793/gvnp5cN1/vLevYZoBBi
MupfmPPvc2bBBrX7dXdxfqveAP+2it1VzutXdAI+nLOi7zb2a1rPgdivNjQ+
Es9lP8yAEzxjn9tYMr8/vDXlRmm/Ycx/FF5XGDRkCI8nfgjfz/J1T7fj9TXN
WCF80GiyrZM99ztfuCY44O8nF+Y/BLsn5clPzuP6dg/u+bf6sbYt83+HX077
vUKb64/tukE4fy7niq9w/wpKgK/Z2H3TWsb8d+Dnz2WVpUuY/yu8w2j5lEDO
o9qdTTBPqU6NdOX1II2Hmwe6Kmx5v12QC+c29RrSrhP7oxou2hEm3juV/WFg
ivXpfKcFodHs53Hwg6zqkW94P1J9A662XLXYxIv9UQnHDA9a+bMn+6P9YIVw
xzxp177x7A8B/lHab8Tn6exnD7jF38jDjRbsZ10zhZDe19X6wVLmHQ0f+bXn
9eEpzLsMnnvV8Eshnzeo7IIjj7snX13Gfmg7BOtVo6x7pDP7eRQ8/ebjZqn8
vOqlcODq3NX185lXAjtODbb86ce8mfCH6wkfz/17HjHcXCEUbLpVVc77P+0l
cOU1dadbo3m/thMeVPJ3ufW//BfhrSHN+gywZv7XcPD6Hh3s+fzBxHkozs+r
4x8HfuP9/A74eLHu48e835ZcgB3NRZef9WL+l3CU657O80cyf4thCiF+pd/Q
eT6sZygsnvA7LSiE9TwLX0ssGbeI95OyMnhtYN/HVVxftJsPR79uUFhoHGJ+
E1hNCA5MOcn6psBm47oesrrK+j6Do15MMC/j6yZNR6B/cob3aJvBfhgIH0jv
cnh2Kes/d8T/12t2WNIL1rcUTtWeKBzi+mirMhLfz2VtwrgbzN8PHnw936PH
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
2F/OD8vrUsv9bgo8rmZXxuoyrs/ecESNna1eIdfnRNizRL3HoSTu13dhi3D1
iEnXuf9NXI/zIRft3FjD/W8tfDP16qUX/L0h7QBs1RjVdkcC97/bcKnhlotd
+furdg284/ADz8Ocb6Sr/XH9lO2/7c7fdwviYJeUgn0enI9UbsENVaGT3nH/
NfkCnwrNC/oTw/wdAhTCRatjh8eGcZ6IhQP3e4krj3Meug77T2vS2Iu/99kq
4GgH1c5beby0MRvQr5875IqvcL+7Bus/POHtwt9nxR/hAzskGhH8vVGqsxHr
ncPVbC/OMwUWsEhve9Uxzhsq7vDcBOmVYv5+LHkHf0p/+/kT55mcNoHYH5PH
LTh4mHlHwGGV7m73uZ+KXOFbuSntg/l7jG0kXNX1yypb1l/WapNC8Nk8eF8w
82kPgwc1iwpR5fm2Wgz30nScM9CD+cNhtW917Ydx3pKmw6IJeUdN/v0ePiRI
IWTYXjwSz/nW2Qk22Br2a34084fBWVUzz4+WMP85OErq2t0ohPlfwJfUZbLT
4axnyGbsZ9fWm0fvZN5U2Oj0nQUfON9pP4c9MwuD+vJ8WakFY38Vu/l32Mz6
nYEXfSr4FnOS+Z7Aj9P7x+zKZz7VLbh/HuDZZxf7T9IfblUmFrn+q18SHNYm
z9uCv+fZPobNgrfWr6WD/sLPxxqt3KnC663PVoWwssuCugj2r2wWvCO/dbOm
fL/0N+y+r9mh4bx+CnqGYB5ZKzOMfcm8tvCx1QGqW3OY1x/WzTzdYML5J6ce
Hlew5Uc5f8+u7r4Nx+s676XGK+adBg9e0WvuUF6Ptr5wUlrj6VD+fhl0CI49
0+Z1wmvWTxSK71sS6puUzfpNhsfNi9aOf8LzvQ7+ZXfRe+K/fk2AjTtWxsn4
+3XBHXhn0am00/y92XlCGOYhtVHD/nJelayBpz24ve3BT+aPh9FTkVu53lTn
wtoHDqta//v9vhqOXd48bA7//wNpq7ZjPdH8KXLnPCfbB696OzM7ox/Xr5tw
sPjepPDBXL8q4bydZjpTuP6J2+/A+jxVtXUofy82yYHzasdZVC3keiuHpy3s
/9h6Eddb3XCFIF/x5rGxC9fb0bC3Vl3Sqy3cD7LgmyU6QttN3A8+wI/Dtg16
toF520bgfsVo5JZVwcw7Cj6yd/+iFf/2Czd47aC3mYM8uB+8hc0TV6XMYr4C
rZ3Yj5dmi9pyv1UZAb9r1qFHOyPmXwKrNPvTJ53zufNOeFibSL39fVnPlpG4
v96rLzloyHoOhctaai5woG2d4dnXus3dyf05aAcc8zfSPX0S81+Ax7ZeNb2O
+7WVWRT6b12ETgDrJV4IN2Z8sfEYyfyhcKtFOiebWTH/WVhxdfmjYfw9XuUF
nPtu4+LbQ1jf+RKFoD5AN8GI5ydnK7wioW1oug3zp8COuZVDvR2Z/xk80GPe
7fGcN2ybRiuE49kF3wtsWd/NcEKTg+uruP9qJ8PbEqyHm/zLXwqrp0X1K57G
/Cox2G8e3hdn2jF/P3hfeqtrvfj5JqfgF3MvTHo0j/Uths+NLkpcxP1f8gfO
+7jl446VzN97F9Y/P8OSPvNZzwK4bWj+yVwv1vMXPNbhYVO1COY12o37o+Q7
D/8GMO8MuG3a/JpfEuZdD5cs3rNrPvut4Af8dc4C420JrGf3PQrhvuWimcti
mHcqvNLVxMVeyrw+8PMn53t+Osq8UniY9my/vnGsZ9dYhWB6foetJT/PdhKc
8Kz9H9/9zO8FD+3ieDebTjsIz14Uqm4dyfx5cOja53E3eXyxzV6FEB5Veeo9
jycV7/3//I15cSGK+ffD1hEnJvvtZv5cuEvekfNjQ5i/CrbT7D8lkt8nx3Of
Qpg5o++EJ/y+1Xvh7i/TGhr5eaIbsFvpov3Focz/Gda3jkvu9y+/fhzqddui
POoq67sHDtJJd3+Tx/pmw/p7DP+U8HXxJ9i2yetxPXm/JW23H9fn+6yeqv/u
lyxh1cQV1mofvo/5Dwxug8I=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.8097112466706227`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.8097112466706227`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VTI\"", "\"EDV\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3689005464929667`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.12080004530246322`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "11.331953916618719`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 
   3.705041419913451*^9},ExpressionUUID->"e084323d-0c74-4ee0-a3e0-\
6d19ea06fd0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3Gs8VN8aB/Ahl6QyJYUiuqCkSFEq7FAu0aAiUlJIxIhUhKkU5ZIuyKVM
RVdJUsilUSnJZZSUFJNIZqRBSVTOc/bzfzH7vDjnfD9T088zz157rbXXUPcI
cPAUp9FofAka7f//+///vNrDJ/D/CU3gv3T/gLkvcos/eZN21/DnEw9fv1wS
cZ50IgN8be50vx0/SKvVgz23jVFWfEWa8Zv651mzA/hETYG8eIoZ6Txb8DRV
ThDfijRvP/hByD8O35I0cxDcY7/esNOVNFuNySfCVGNl0peS5lqDH6RNm3lq
K2naPvAsmej1KzZj/kxwXN3V9hNM0hyVQD7xLfXwgE40aeFasMz77wVf12P+
veDrm9a6x+/E/BlgqezRRR9CMf8zMGdVjnHKatJ0i718IuGR1krdSNKmAWDV
vHC/k/6YPxWs6NW/SH8f5n8CPrPSJvwY/nnuN3D+75bIJPx53f2C+ETa5P2X
YndjfZPB09PbC0ysMS8frLi6uSFhG+ZVCOYTnZkrA48ex3qeBVtvSW2pvYX1
LAPf1TVUCCnAvF/BFo+fd7woxryT9/GJHJt466nvMO9KcEPtXuunNVjPErC8
mnZUOQ/r2QnWlk70qCrHvHIhfCLjcouSSgXmXQ5WfrXKWu0B1nsH+Ngf4/Ve
fKxnOzg7NTSqQLyPrOf4/Xxi5ejHX6NzSOcZgBXDh37Z65LmuYONtGU3jB1L
mh4L9j22b6j6PtZT5gCfOL0+vqDiDdZTH3w5qq3GpxXzbwXH5dorVD3C/DEH
KD+vez74xbSMgcgzWF/dg3xicfFlrfnnsL6u4I0DG/1OuWH+Y+ChrAsZpmux
H+6A57XlBxHmWP/mg5T+M3UO5RP12UmuqxywvkfAuqcrl19Rwvw5YOe8WZa7
Hn0n8zeB6+blqmuGkqaJhfGJH0sS+piXSCdGgneaL6+Ymk+acwMsl+NkOb6J
tPA1mDtBpXPtQsz/D3xhrbfGeRPMr3WIT+x5/9A6dQX2x1XwsrUZiV2O2B8N
4Fz2q4wO/HlNR8CsR8+un7PB/HPD+cThz21Sy7dj/vVgvukBengG1nMIfClr
SZr2KeyHWRF8YtysWYF6YdgP68CqPwQpwiVY7xBwR/oBHlsd6/kTLFm54e8F
baznzEg+cej45LPZkzCvFTjB28W9vJT8eenB4F0XVmc9zyBtehFcVTVD5W5l
L1nPGSw+8fpsgrbpHKznWrB46r3wJetI6waCVejhjfUs0u7p4G0eSydWn8N6
V4IPnK65PuMiaTXzw3zCK843fNtH0gz//9vyr/3vqZj/PLjKsI9D/De+PQZP
kZlbmjkX8/eA3zdWe/zQxHr6HoH+KUlVuICfFzsJvOJQnMIPLeznR2A2mylj
NR/7mQ+uu9RQ7fIN8085yie6nC1KDx7FfjgD3i5Y1Or5HPuhFHxv/tjgR0WY
vwvsslxFUaIf80+KgvEuJENnvQLmXwGeZfsz9NJM7IeHYBnVrTw7/PlMO8A1
im+Hyx+Sf5858RifyJKKPxIZQJq9DOz2ipu0zBj72QM8cefcuCc3sb6fwCNf
2IWvQrC+ssf5hP0/uSNSfMy/FNzzm+UalIr5t4Fv015JzGdi/pPgyBJxxfwv
+Pm7RfOJ47YcuoMs5osGW+w45e7xGvPdBf8LkdTdWYufv24MnwjaVZC/aQTr
5wLmXV08OC0X80WBj/54oHNJDfs3N4ZyPXDegb9IPx2O98DryekEn1jue783
1gfrdxjcqne+KXo/fv63wBMzzfOPY//z3oA3TQuo1g/C+tJO8on5mp2LTgbg
5x8B3lVg6ffFCT//6+CaxOEr/Tr4+b8+Sbk+3DVj+UST03X1TOwnYTZ4io6x
sjle32rcWMr1yxgGJ4xJ8U62wLxz4viEQMeg2XQN5rUD0/OmN/caYT1rwTFJ
/TVpBtivv8BX7stWnLXDvOrxfOKTV4zruXWY1wY8qPi34PRGzBsC1llWuqkf
+zvxB1iqe4/ragLrqZpAuf6FluCcAz9vu33GzzsIbCXxctS1G/v1AtjIOahw
vTzWc/opPjF16+6J/rewH9aAe8c5H2lxxvGACY40a/OPCMJ+SAMvP6/i8DoY
+/UpePAQ53ZxDfaDWSKfsCw9byZfjv2ZAp5tdM/M8wX2ZwW4zC8yP78D+1MA
Vskpbrkmg/XcfZpP3LhWpX7wGPk6rxx8k7kn7rwS5usGizW7KRbdJscnU/kz
MP+5I6jfXIPj1WnwWYfbirn1pGml4BH/8ImZYzDfF3B2gk+zzR/ydXf6WRgf
vukYOXwhnWgE7qjimX1dgPUrBvM0s7N6p2L9PoPPnBibm7CCNGvCOcp4mGd4
jvL+vO1grtExy1PLsV7jkuD+temqPM8Sr+8l4HWta05/XonX1zawmP3hCoEa
5j0Btqzssnxwj3w/jnQy3M9WfRyUTyEt1AMP/Lxp9NKXtNoW8MZ5E94c3Eqa
cRz8uC23wj+KNCsPLJwTkftlAmn6ohTo7/jB6GAm1nMz2OZq7RF9bdLMo+Dl
l/ycQnaTZt8GV6QcktTYjPV+C54jP2mLyn6s56bz0O/RK8bNDMR6ssC2i6oc
6t0w/02w+5J5EXGqmL8RnKGQInlgJ+YfBXcqeUg22mL9rqXyiUCfsOQlmpj3
FVh320/Fo8aY908q5ednaqRR/n1aNth647qKteOwnvXgyKf2Khs/YN7fYE7d
2zQpvN8lzk7nE/6nRiVuv8a8tuBftURA9jesZw04771t8t0nWM9B8O9WxeQJ
2I95ahlw/cmoj6v1xPzW4BX5ZhGt8zD/PvCb2wVONs3fyHoOgBckVMVd5JHm
qlzgE5PsXF5+nob5LcH5QWJTvsiR1t0LHgiPPp0yRP559wzwxc5sxfgZWE/l
i3xi1PJ3poYT1tMCrMR5PFgRi/kDwDvf7FQ5vgTzp4J17FT7lSMx/xNwdfOA
mdIxrO/qTBjvf7dNfBaO9fUDx2ntv6EYjf2QDF7nNfvrnRfYDxyw6vZ/SSWX
sJ4+bJhf3b9qe+cl1vMs2OTk+/yiW5i3DHzUM77Urh/zfgWf0h2t/sjA623y
JT7hoe+Rlov3W14iWPNsqcbUAhwPSsBGvPUTZ7BxvOoEP5LU1+3SxfFK7jKf
mKm+YcTQFK+/5eDfb14k7i7EfigCG989lEb7h/ev9suU+3Pi+CswPnS0Lrkj
xPHLAPzsZfbVDeI43rqDd+tcm7F5AMeDNvBdJT1bp984Hshk8YmtZzRGCj5g
fn3w9dbZhZv7MP9WcF7Dv8SJdZg/Btz14/AT+/F4P5DKhuttQol9zjCOD3pg
u2ypzI2jmN8VHB3Y7D+I91v3Y+D+NsvMy9PxfnEnmzJeqy28Cv1s4anY7I71
dQYvUmgdjSMw/xHw0y6Dz/p2mD/nKmX84jWBm7I8Ha5/xn7YeI1PbHE0M5e7
hv0QCd5duIv7yh774Qb40JJvWU+wn2iNYP7iCluxt9jP/8DWTeUBqkHYH4eu
8wm9a5pvXvpgf1y9Tnl/tQbwuq6k5OOLsZ9HrlP6nTX3Bp/Q8lM2qduO/VsH
3rLljFV+Bnm9MIfAWSlFrb19eP3NusknZqQZx1i14fW3DnzW9Y+KfSVeXy/B
5/8Yllm3kE78CXZUP3av4BxpzsxbMH4qvG41/UtaaHWLcn2qBYO/79Sy2h1A
Oq8fbP5X5nGwDWnejBw+UWIgoOVlkaavBY/LTh43dxlp00Bwje8qJefbmD8d
fFl6g5dbOmma8m24PsUXTfEJIq1rDh7KXNrmvR/z+4O3dPizI+Zh/vPgOz0C
9q/cHjL/Y3CyhZ5b4GLSDCIX6qMeemYXgzTLF3x1sX0xV450XhI4tCyxbY8x
ad4j8OkWhqNzDGk6H/xJxuGx1UPS7F134PorqdtiXUSaewa8Msqwl32PNK0M
HH9kLfPaBdLuk/L4xN80wkJ4RUDW8xQ4UjOw+/hX0moPwU3Sx1TffyfN6AB3
2+a68QtJsybehfEuXdJPUxbzLgO/zg1bMU+StGkh2MRTRUtVmzTzE3jievU7
FWaYVzYfxu/pj6bI22PepeC5vY4NRwbJ94cFL5/YMe3HlEJv8vXEVnCckULB
1r1Yz7H3+ETIzug/pY6khYvBbavPFLz9hfndwL6pCr06PzF/NFh1JSGrro71
lCzgExKV+wuO9ZCv03XByw/dqWnpJm3qAn7ysM+gcQzmjwLHme0sFttFvs7O
Bc+U/LLP9D5pXZ37fMLMJLU4O4K0uxM4PjZ5n/VZ0omHwdfE3Ws6n5Pm3ALH
lUR7LG3B+r8Bl737djT6C9Z3wwMYf0fnD/Hx/fMiwGWb3RdvXU+adx385dDh
BkkXzP8a3HJX7knICJ/M/xc85TGjPPwzaW5YIcyHdwctPnWNNO0quOzTyhPz
P5DW5YKT6/vpME8k8w+D1TZ5Gy5oIp04pwg+T38/nQo1rO8VcPMnWt52M6xv
LTj52RVZy3TM/wv8vTDBe4wH5lcv5hMfAj21BlIxvw04PGV84M/TWM8f4HtN
arxpM0hzVR9Cf04vGHg2HvvBCrxI/FHkshzMGwSeNt3l0sI60pw+8Lny6fwj
DaSF00tg/t524f/3MTLvGnCkLqd3XitpBhPsJTZvw9tG0qw08K/leaah30nT
lUphvnDjfkZ0BdbTDPyy7Fi5+jBp5p5SyufBTgE3jv75M0UD81eAdR9P6Syw
xn4wLYPrtyPTeSQc+2E3eLf9Z73OF9gP58DTJstmxL7DfigHP/8so5N2Fevd
XUa5/vK8y2E9Uf2ubfVtrOdpcNfTe/F2x7AfSsEllidkB09hP38Bt1X7y2ZF
kWbSH8H8c3nrCkYk1vcU+CLna3w/fn66xWB3Ob+BvguY/zO4Yji9wckT80/g
8IkLBx403GBifkNwyzx9v5v+2A8PwCsVdljTDbAfeOA74dP+eulh/nEVMD/a
ta/pcgzmXwLe7LZZJ7EK828Dyyk+U/r0Fuv7ETwm3GJoZQXWV/oxrHcXJK8I
o+P4thg8XOwqG7SAtO4W6uvuxx9TxiOhxBM+wQxTuhQ6mbTaIvDJm3kraqfj
+LwZ3CpWzY4SYv6jYGMVge+bUcx/Gxw4ZvDXmkys74KnMB/qfnrzezbWdxM4
8vrnFDd7zM8C2wuEYvkbMP/Np5TPh/YG3DpO6armF7zeHCvhfrsgVnlRDfZ3
OHjur8tNc3uwv6+Br65glwdJYn+8AmeeiB+apIv1/wNO/14iNtEY6xv6jDJ+
0bPBPq828koWY/56cMq0ubX6pdjfv8F7k0xqjz0nzZ79nE+UzwuwCJLG/rgM
vvWhxW3PdOyPGvCS6apVnkuxPwbBjCvlFj7zsJ+tq/jE5H7i1i5trOcLsPXB
mKbXPPL98waqKNcXT+UFn5APVRVfWoTXoyX4nfot684svB73gvPWlHofr8Tx
TQj2H9nTdPgNjm/Tq/nEg0Xzn1RJYV6Lasr44B4AHsdqjjxZiPVOBQsuLprZ
9A7HC8WXUB+XxYYxj3C8WP2SMn6w/MCnVHjWJ0owfzLY1HDSeV4B5ueA983N
spimiv1gUgPzSeWn+2oHsZ4+NZT3p5WDG1kBtwQJOL59Badq/RlID8PP36uW
T+y5t0J5+U38/BPBfr4yW4URmK8T7K5YMnTuLOaTq6OYngAuyKy0NszD+hXV
UcY3Zjv4t3W0d3su5htfD/M7Rk5xE47/XAPwRcvKjnIt/Lzvg5eVbvbeZoOf
d1s95fPlyHD5ROmkhSEKc/Dz1wefytiTke+A/boVLFApY44GYH9KNfCJeXTx
mY77sD/1wNJX3XrFd2J/uoIzx063XoH3T+axBsr9nSbxik9M950SufIJft4L
waveFN2Ja8S8zuAfb52cNXB+lXgEfCPWJePwMObNARv6vssOmo/Xv/ZrWM/3
raspCMD52UbwQt2XciGzcL4TCfbvV21obcP8N15Txid642tKXrZDI+V+zz0E
vrJ9jk7PXcx/DSwc5cxeF4/5Gxop8wv3EfAwsczDpBjrl/UG1mtOF+8Y4f2D
UQfeELYx1OwWXl9Dbyj327xZTdCfCx+fWfUI63mpiXL/YL5sosyH2D+bKOMj
d+ZbPvFtrsWZp8txvLUG731i4/ZkFdazChyd2jzFcwvOz/rBdRNMMxbh/FE4
4x2fiKrKiWH9w/xr31HuZ4xA8MK7q8rXxWI9v4PXv1dqsUrCeio384kjyyzp
369hfnPwCz+Jv0ubMb8/uFMb/hzmY58HZ7KMB/yN8H4w7T2MLwUGxRESeD8g
wBsGDszer4r5fd9T5l+cJPArL6tIHr6/8BG45PlUt5ma2A/GLXyi0nrTHU8X
7Idd4AWKJ00VTXB+eQasXpN9NH8/ztfLwOEJZb4OGTg/7gKfW+JiIBOE9fX8
APM1vbkeE7djfRM/UO5fug/BAfpdHXpd2A8d4PgxD1UjpDD/xI/Q/58NtZgG
eD+LB8/Q3t1RhO/HKPxI+fdYn8D8mhV35NdjftlWWL94frLbeAbzLwVP96g8
mFqL89+CVup6oxW8aYRmsfIr5h/bBvnmn29L6MP8+mDnl3LO9mzshxZwiYmR
lGMa3n8leXC/nWccP5iPeXXBYeFfzPkfMK8LWN38xYIvfMwbBbb25r+M/4n1
HPOJT7BHX5qfb8B66oAjmr5rpj/HvE7gcznhbSu/YN7D4EfOqXas2bj+vAWO
7T7bv9ce12/z22G+5dDKnT8H128bwNp1ezVnrcb1ZwQ4LUlgFKmJ68/r4OCX
ryNipHH9+Rp8u2VK6KnvWE/7z5R8vDBw0o876ccm4frzKnhkyPixogeuP7lg
P8YMO+mLuP4cBjNvzNUrisH158EOPnH0ux2zioHrzyvggX+/Tfy3Y/5acPgE
m7Iwfcz/C7yBP0+1UQvzq3dS/j6rGhyn9yy35BCul3+AP1773fwT98t4ql9g
vXL9lKTTXcxrBW70PJIunovr+edfKPm5feD8QwylE5KYd0YXjGc6tfdOjMG8
a8B+DQl/PkphXibVwl5wqm1xhMEf7AelrzD/Uf4m183DfjADDxxvSjbqxX7Y
A75VvcpRUxfzp4A1dAxjtBZgPad2w3wy1rOs1hjradpNycPeDU5e2e5UtxLz
n+um9B/tEXiXYZnk+ylYz1V8PuF4+df22L/Yz97g0ALifbUl5j8NLhh//7Ty
FuyHUvC24NeKdBZpxhewjtOeX2XBWN+dAnj9fvqCHdFY31NgQ48TbO4SzF8M
fu9k8qerA/v5M9hqZpGcRTWOB3E9fEJF8MhqKQ3r+QBsu2ya815HzMsD85/0
3GBuxs9/3DdYb09myjFdMe8SsFH/N0WPWOyHe+DxC0+/5+zGen6k/nmedC/M
76clbd95FPMuBvd+sOm/0I55t4BnDqz1HX6B9XwPjrvR7fT9O/aD5He4frem
P+OPYj8sAs9b+ujGt5+YfzP4iMZNyRulmP8oWMyF+yxhKu5HiQvh/tA0bNkl
i/tRC8AHd3AU23C/mrVJSPn7eSzwy/n7JCWvYv6bYP4KumNWDfbDvD5YX8Zc
MbpZhP3gCA557cq2bcD84eAxvte+Db7B/NfBDNPMg4YquJ/2CszT/XHj9Hjc
T2P0U/IJQ/sp15NaNvV1Rj14+yFXozdWmP832Ea1T9v7Iu5fHxiA+a3H/G/h
DNxfuwzu3uv7NWoZ7gfWgP/Snn/+iM8P2IMDlP05rtoPPkE7rb0l4Ajuv2eC
XSeH6ZZm4n7xC3DUwsWa/scx/wDY3K/VUxL3l4UqP6n7xZZgxV8qcZd/4X67
EJzeWNc3B5830KcP8ok14ffj9sRgXguwftG/EX3cj2cGgFuSZ92LV8b9yV6w
s1HHyKf/6qn4i7If774aHBacYrK2C/vBDzy8KM3pdy32czJ4zXGJM/QIvL4U
hvjEgSu773mcwH42GaL2sw9Ya5+PeaAT9sPZIcp+Ib0cXBD1zsiuHvth5W8+
UXsv4A37HfaDF9gx9fqWr9KY/zTYxaZklvVH7OcS8KcDGl7vDTF/J1hyRNYr
ZgHWc8cw5fmOWsIw5fkKowi8Qq+hXroC+6EdvENy07jAQ/i8YPwInzCbk3Oj
9ALWNxbMLfk16HkZ63sfPD6rXmPteNx/bwPX9zvErZmIz79k/vCJpZHlMlcF
mH8J+N2S6urlRrj/ng9WDCCWNu3G/fcP4MVfxsUFZuLzQ6m/UL+W3vatbbi/
rfeX8jyT4Qp2eF7QMzcC96+bwbmWEhV703H/XeIf9PPmlq73Lrj/vhBckaBD
O7oDnx84g4OLlwavnoH5j/yjnIfQFRvlE4c3PEj6shifH2iD9TTua/ykYf6N
YNeTF5u/T8b8kaOU55nCG+AHT0r6BiRw/12LJiDCfC2Nsvqwvg5gkedXvEPg
gLd6FT//YX9fA4s8XzFtACe3TzptooH1XS8mIKLLkzNH8XkXLRQ8naEZ4NiO
/Z0F3l89Pv1mC/ZHHXj0+fG+9b14PQ6BVZrVTb5PwfruFxeI/nyMS2CR56Os
l+DWizcbHTow/0/w86EJ4zImYP6ZYwTEhnex8gmrsL4XwVfKXZ4ZmGN9q8A7
/khJ1h3H/P1gkfMpumslBKLPUziV4Kt2j4yr0rCe38Eiz2PVlCUFhJrP8UKW
L+Y1B39l7z/wGM8rsPzB42cM1IdGYj98A/fPLqwe2479ME0KXLKI+CeJz+8J
8E1v1eifs/H5vS9Y5DwONwm809XkxNI9+DxmirRA9DxcojFY5DwfZxfYmi0t
vWQvPk86A371/hjPCs8jqJX9/89PM3LvwPN5eSvGUt6P5wk+ICO0Z+D5Hnoi
WNkxb2hQFfN2gEXOM9F2yAgI49Oatca2eJ4rHlzZ2vUx0RnzFoIPdqdFJbhj
PtlxAtHzSIyT4PH5x7sfN+Dz+gLwb7VjTZtm4vmzVvBXweLy3Kl4/mysrIBY
/vldyqMPmE8fPGWXm6n0ePJ19l2wyPk1bgvVNKnxAmKG6pIUmzWkdXXBNIe5
vZ9iSbu7gDeb0a0vOJBWGzNBQPgMaM+OiyfN0AGLvXXVSd+M5+WcwKkVP9sy
rTDvYXDQw2b2smjSprSJAkLzUlD36YOkmfPBcxrH9Z5iYd4NYP2hY231LzBv
BJh7qC/m3S3MewP84fWYyKl/SCdqygkIm/RDZ4I+kebYy1HeTxgGbtye7rgs
BvNfBcfptHn1bcL8XHD3/tfZbnh+j2dHFxAC85WXtonheb6DYPuGa6qP8Lye
6RWwy/j7BaVf8POvBbue35jhi+f12L/Av69v15mdg583exJc7wauSTxf7M9q
sGZdy7rmKPz8f4D1Apl+n3Zhf6pOFoiex2RdAI/29/iEZmN/PgcTH1WUd3/E
/uwDB61Yt15OiJ//DHkBMa71nsVLPE9pugZcYPGqhoP5uE/BaQaJo4tY2K/f
wYk2L2a34flTXaUplOvF3Qzs3jrDkueH+feA5Ttlt47I4fXTA45Mv20txPOu
jKkKAmLL9mGpWPzzLFPwXsOY8gWxmH832I4wu6oTg/nPgUXO3zHlp8LPpx5n
wb2C9VwF/pzgaT39Oeb3Bj9caKo1Rhn74Qx4Cy/auWAM9m8p2O/E8hO38XWO
0TQBsTDlx/vNCtgPO8EHzis9uWyC/XAKLP+h1NkZ/zyjGMz/I9M5tQnzfwZ7
Tk/qvSuL/eChKCDoz9UvTRjE+saB5w0WrXAfxfwPwIVvDCwcFmE/88CfrX+p
3qfh9XRCSUA8uV3S7fUV63kP/Ozxpkt38XrlfAS/fcDLlpqIeaWVBUS7eKWH
H54fVVsMfrtiWuejFqxnHjj4eY9B+Ses53vwyQuhvdvw36NLThcQ224LHR/8
wbyLwDKbw6Umd2HezeCbRg9m5ypiPd+Bl56sL5jYj/0gPkMgel7VfQFY5Dxl
4ibwk755CrW52M8s8Ib5d8WYL7AfRqlmzVMREKZ/93ZpJ2B+R/BCVu/kFS6Y
Pxz8PnGLYQKe36RfB4ucd2NrqApEzwNwGeBTd+JmSH/F5/dh/389V+nloi14
P8sG+3QGu9OrcP5QD/Y/njcq04r3M9uZMJ6q8zVSp+H97AD4Q116xSo8n8S4
DO5qLtzN6MH5WQ34Mys3OlMMn98PgnuMrAKe/Xc+Yp+agBhSCNbuVcT7bybY
LX0fzfkVztdfgO2lt0XfaMP5+gBY5DwATVVdQKTMN7eNscf77zNwutmVpPvv
Ma8QLHK+Um36LAHxqXdnvnsz5rUAyzraeboKcD7wBPx2Z0nhnCN4/+0FX1rq
Ppg2CfMqzobrO2edJuc0zidXg0Xm+2w/sMh5KF0B+PPY2FbfBJzPKMwRiK5X
Ek3AousjH/A9faeDHrk4Hz5LNWvyXAGRmT0SLlOC85mV4Gr7ad/WDeF6wwt8
LdOUVoCv00+DF3/ffHpKEs7HSsDvLS71XfqN9VyuISCkzYxnNeB6iLYTLLIe
0U0Ai5xnci/SoOZvB4/sr5Ff/RvXb9s1BURR4xnFLU9xvh4Lbpm4ZktFPOa/
D456MDHCSB7zt4FF5v/MGC1KfnY+uLyMFnxREvv3A9jUWldxqTV+/tLzBERf
x2v5HTmYVw/8bpUS98MirOcdsMh6SdgMPnPG6Z6eHq4vJOYLRNd/jIXgD5sO
KI4rxrzOYPlN7T3XP2E934L1DeNs3ThYTzFtAbHg2MHoET7m1waLzs83alPm
c9xI8Hr/WzL7zuL19Q/MePCxsuy/84laCwSU878O4KMf8zyPeGI/HwIXHp3k
xLyC/XwNLLLeyJurI6Ccr16vQ5k/0kPBz/enu1ZmYT9ngWesfeeT14PXXx14
694GnQE8j0qzXSgQPR+kux98K9awM3U5jm+XwFacLY0/Z+H49hIsNkdpaxae
P+b8BKtyXy1fh+ePGcGL4OddKBbQp4fj28VFlPliXhX4zlgXje/4/rx+MHuL
eGv7DhzfVHQFRIx91KUleP9lp4M1bj7uXYLnbbmVYJHztDQhWPR8lbKegDi+
R6FVHs+bu5uDbd0a28c3Yn0fgyeVLQwITsL6fgOLnB9lTFsMn2fL/FLNAzhf
J8Ai6788X7DI+VbmFH0BcX94anQjnndmG4Nfy+Y3BqVgP+wCi5x/op3Vp/RH
4qQlAtHzZJwVYJH1mdATfL1rb+kfPC+qlggOEdulG7sW8z4ENzp2JJY+xvFt
2VKB6Hlu+g7wu5xvQXtuYz/Eg7n51/se52D+QvD9vUa6Y/F8LPsTmJkSrbH3
AtbT3UBArHYoWj6M53fdT4JFzpsnFhhQPl9OKzi+ZOctW2Wcv401hPd36PRY
o4/9EA1eGhIgMWYQ63kX3BOYJXENz5/xWsAi5+PoUssERMkc20GfYsyvCy56
aSZfjOfXuLngwWUORxylsB+awVYZZiH2E/B+PWY5jG9jPP6uwX501wE7Seic
/TUD8zuBy7QmRa/D9YtaE9ighREyPBn7mWZEub+y5oN7kso8bPB6yNsANvmd
u8lqHuaPMKKu3/6CeaqbMm3wvDRbcwWlf7n24KT7N3SGsF60Q+A9xhFmFfh9
Ed2r4PP81HyJ/84DzlkpEP1+gNAOPNDjulQLz+erHVxJGY8YV8D0fX/ytXE/
g1ULXlNAn2X3A8e7datgfjSNfSTvOY53IWCrCcqSo6043rHBzX/9l26uw/G6
ehXl73N/gGVsnpklq+P1FmQsIPJ35080U8b+vgBmGDKCz2li/udgzpoRM6Nl
mL8P3F4oo8Lag/lnmMB4XCeZ/GED9keaCeV13lPw+7KnaW/8sD++m1B+XqaZ
qYAY86lzefh+vN4em1KuR90eU8rn6T6VoPRjoilBmf9wdoNDL1+pj3LDenaD
RfZ7WPKrYf0wwmz2u4N5V4FPPFOteHoV83qDt1j/MPa7i3nPgOu7x0RfUcR+
oJvBeJhoEF7yDPvZCKx+tyjoRTLm9wSLnE/XPQVeVn+g6x4P8xeD/y1OkfiH
/S80NKf0n5oHOFT5+YEiLuaPM6eMP6wH4Jvfhz9W5OH1tc1CQAS2Fbc/xPkh
8wRY5Lwm+x5Y5Hwm96MFpT6Jx9dQ6s3JA4t8f0T4Hiz6fQHJtQLK91sWgUW+
H8K7DRb9/tA7sFYKq3AI62cqbgnz+WR+bAp+P4G5AHx6WXTPZbye2JvAsTfj
ozpxPu0+Cl4T67e+G/cjEudZCYjsv6vCPxzE8csRbB+ir22E3x8RhltR9i9Y
f6wo96s8DWsBMSFMe0O7J+ZlgHNe+1xqx/0Sehj44qnUdh5+P9A0G2wemqR1
GOf73Nk2MP9kTV8Zjf8+zQ4siLlZU4nrO90D4LS6sSFzszD/ZXCHstTi6iLM
XwOu3lZ3p6oMP2+bdZT1IGMfeO2z2H05qrgfkQn2fKvxxMYC9yNegOcPH6pZ
vRPX+wPrKOs/doatgOi9YBFF78G8z8BunuUpe3A/htYHbjghMXOrFK43p9sJ
iD8HE4qlx+H6LRX8KTxh9j1pXL89AecvGcl2VsL1Zi/40uj1+Dw65lVcD/1Q
tebEJjXMu3o9ZX1JrwCnv6qRGiuD+ycCsHiH/xM1XN8zFRiw/jTS9H5WiZ+/
CYOyXuT6gEW+T+n+Fby0bhUv+L96TraH+829EO9SXA9yVoKbnxfW+NdiP3iB
x06ysX5RgvU+DZZ6oZjASsR+kHOA68tzi8SrC9gPy8GvxXfUcy9h/p3gKdnb
n+zH9aFpArjTtc5ChYP5i8DZH7/eUcb1Ic3QEeabsq4ec65jP2wHlz21TZhz
DfPHgoeFZ7t932L+++AJA3Z/FZrx/rV1A2W/hhWzgbIflpcPtnrrkTEFX+d9
2EBZH9OlN8L1fUPYPQ7X8+xjYPP+ooYC3A/i3gEfnPPwpr0erpffgx1dLve6
TMJ+kNgkICIqf1rZrMX1/kLwh/Mdzo7a2A854N7Nb51vzsV+eAterPeswQ37
hSHmRNnfY2k7Uf79vI3gUdvtbqMa2A+NYJUru5skpuB+2j8nSn+ytZwFRKrV
KwM/3M/gOoB9isb/rSrFeoeDv3T569TcxXqOgBX0xG9psLEf5m6G9c67hIGm
OOyH9eCwg6N/ZhZiP4SC1+n6RVZWYf2zwPW0cesfv8b6znKB+WdBm09DJtbX
1oXSn6b7wQwLaUP6N+yHSy6U64n9Elw93T3K4xf2g7WrgJi29NkKGUmsbzCY
2b7abys68SLYpGbNgBhe/5wqV8r7CfvBGcqjjxlLsL6BWwSE7k63Jlfcb8lL
B0ebB8rewf0iXuUWSr/RheAF6x+rTsLvC5squ8H9qv+otyfm554HB/p/dpyA
eWlPwAZTmRllnzH/N/DMAuKvH9bHfdpWAREuPlxT0o31J8Afdw347sI/z+CD
nU3WFT/E92dN2QafX/DFBg8cH/KMt1Hz7gLLn7fT6XfEfugCt1dy2kYWYz0n
ucP81CrZ7coq7OcV4Nlx7/TWbsR+9gLvl/98tDsQ+zkRXOO9qSEe9285E7cL
CLmHE2Vj0rGey8Ar94td0j+P/bwDXMDq6z96A/s5HlysrnMm/BHWuxD8aG0m
U/cK7k8ZeMB8/WGWQfde7Gd3cLz/tVDzrZj/JLjDruROiifmLwDrHxyKv4o/
D7cVnHM8h9l8HfvBbQfcD8W5R4uU+sl6RoM3Ryxius8mzbkLHvs0Xokzivlb
wA2s+0oldPJ1NamdcL+Il7u50ZI0Lxf8TOih9/0IaXozOCRiIDnlJGnTMZ5w
/TWEeK1GM3XAXqdfGy27TZqWA555sW27+VHSuk3go+2Ks12XknaneUF9NrbL
2fhh3vlgwxf5vgWamHeDFyUv4zW4sbn8j+8I1vMv2E1RzHunAvnn8zS9Kfvj
PHvwT/F0JR9JzH8IvOHjANdrAmn2MPhI2hevyeNIc+fsgvE/dDjdcxLmX/9/
G8QxR60x/0FwlZiRs9NqzH8FnLztwi8bH9JCdR8Y/zfElOXrYD3XgdfsG1fA
+Yv5Q8D08lfpu2nk6yw2+Kaet6osfj551eAnWX4dT/qxH6x2U35eZhD4PDNY
tUAL818AKwbf6M81wvzPwazacF/6f/n7wXban8ZJLsP6Mn1hPO32qZk0Huub
5kvth6fg4StNRR7TMf93sH0U/9v9WaQZSn4CQq8rt8gb68VLAY+aT3beoof1
fQzuOPH+jYsB9kcP2KN4pdRWbeyPqXso/ck2BV+bUePF+YfX2yPwYYU8zc0r
sb7dYLHJYY5b52N+eX8YL4espKTx3+Os8qfUW+gN9r74hVsmjfWkB8D8bXcx
e+s8zGsErtXMMRingXk9wZWBb9oqBVjvU+B0exdnPTZeXxOYAqLQ1qX32GUc
H5aBc6qVM0wCMK8HeCSv2+7rPrz+4sAVziEp5z1wPH4A9uWcU004juPD0kC4
n4/6FXTtx37YFkgZX1gnAinPe/LugUM75Oh19djPH8EXUuOmhL7EftiyF+7n
dfIpgV9xfDi+l9rPeeDtgeOsFbDfaC1gwYpv6aWy2M+SQfDzrDa2CGrH8e0o
+Nu6p4/n4PsLb4PVw8Rk25Iw/ztw+OFo1U58vsQQDxYQG/lS3j3emH8B+CDP
JlKwG8e3W+CUH3EdFxhY3zfgfS/znrPxeRtzFHzjfmTHD2vMP2+fgFCqnF+Q
5or1dwQbvBILdFLB+r4CH9n23HT9cqzvH/DbvXtD2Tjf4GiEwPxwx58p1jaY
nwE+NbzWY2A95g8Df+RNVcjA5195v8FXYq64rTPD+s7eLyB0HI/fGbDD/Hbg
6rd9zn/w912YHgCfSXnEHIfzEebl/ZT7M039gIBw3dDFlJyM/WFzgHL/dd8H
/jjnmKk4/jyJmeAs53zm9hGcb7wA732gQN80C+treVBAFLnsiZL9i/e/veAv
V2jiXgK8/2WAi+uls9Jxv4X37CBl/4/ed5CyH8kOCIX1wgdlI/UEXM+lgk0O
x95WeIDrz6dg0e//9YZSnpe7K4YJRH+fgDA5jLK/qVYBFvl9DQwBeNTkZtrR
7bheNjlEWd+bloNtFC5rPL2O68+v4CULV1k+rMa8k8MFhL/07FzeGsy7Mpxy
voDmHU7Zn03sBO+I+uyaJo/rUbkIyvkA4fIIyvMFtZ3g2G2vjH/jeR9GAviq
00Rz30Tcfx8fCfNbRYPcSXh+iG4YSdmvN90Obuc4z5q9A/dPYsHbfKPk95zE
/ZP74Dbv9SZ7D+B+9hKWQPT75O5bwWkSnFa5bNx/j2FR9mc4+dTXhR/AzsWB
trL3cb/92GEYL99omZelY947YK2OVV/F3mDe9+CgwDFFv4WYV+KIgHDq9jAa
xO+P026DTcT/ufao4uf99gjl/IS72FEB5fuq2mDR3/dw8yhlP4HReJS6X/Lv
KGW/I08rSkAsihe7wcHv1/Icoij9yB4BD6v8WXcP97e5c48JKL9vhQHu9pnx
+dNqzBsKFjkfwxkCt22lGdXj8x7hrOPwfhf9R07YYF7b45T9Vcb+45TnWaxL
YMOxxc0E1oOuFg3za8XhRksp7FfraOr5kmDwubS2xsFh/LwvRlOeH3Groin7
Z+5rYwSi53sSA8FLfn3Kb96K+dPBvUfCtOXw9x0IK8H8u3aZ8/0xvxC8VXmM
w2EfrKf/CZj/Gjy01MfvM/POgxfW3jIzx/My9CcnKOd9TL+BD90LHezB64U5
7STlPIsu5yRlP9mdf5JSv8QpsQLR80sc41jKfg2jDEyL+bCpJg7r2QUW+f0i
eZPiKNcnbwWY/vedzNAg9qsXWOLmyawMWeyHDvD5ga+F1zqxnhPjYb46Zv69
3Frs3+Xgd/dXHqRfwetrB1jk+/7u8eClljuCK/H750LZBKiv/LXoCDvcXzcA
O3DH9Ffh94MZ7mCvpIdHxPH7+ayTYMPEJN2J+H3yvAKwyPf7TfVPwXzjY4+x
DZ6XYrqBRb8PHg22EPgWLsTnAdy7pyj7nbQP///7G+lfIwKxvi6JcP8rDOpT
xf1ATlQi5e8Lc8GHtC9mqiViPzSDaz+Febbi81PGmNMwnr392bXAC+t7GHy4
ptlYGfcn6TmnKdeTaRN4bbBXdPUZ7AfaGcp4z55/hvJ+ujfAwrMODvtjsT9e
gxuG39+WfYf5/4JFvr/O0TwrIPJXWd8amYj3L+5Zyut5w+DVfN2874Z4/5pz
jrJ/Tl9/jvK8wfQg1dxf4GL5kHqx/76/PiuJuv+7Dty51j9p0lPMGwJWHs2+
7V2Bedlgkd9HozYzWUC4VPz25+J5PoYV2Gy6W5YS3p9YQcmU5yt5F5Ip+7W8
58mU/meuSaE8D2IzU6j9kAZeUNo448MmzF9Jte73FMr+LWfPeQFhXRuwOywc
+yEFLHLeUO0xuFRiSOv6WFw/95ynPB9hTU0ViP4+JHoS+GR1u/21/34/zyOw
7ht9Txncb2Z2p1L2m9nyaTAfiX7T5YDvz10FfvDQr4chJzT5HwjhcG8=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Hy2BvNmXJCtvYj0XSMjzIWkSPa4olJDnpdoaelweHwv3+4+O6Za+xrynYsn9
MPc5+Mcwx5+2OzCvThzsl1qbr/WMw/qdABvfCSmyDcb3XU/BJzPP/DowA/O1
2QT7qf1WD7424/7MZhN5f807Bk6vELjN1cH6PQKrb+vHH2iD989/weLsz11s
P+N+zXoz7KeLR66Rf8d+9d5M3lfLfoOLF94psXqI+8mB8dCPQ/J/v7HCvMJ4
0j/8KGrFD/De9iOr5P2wXv0TSP/ypiWQ96XCdQmkfyQHE8j7Uy4vkRwXuINn
7PxQNHcW9usa8Jjf137O3Yj59yeS963KW9SiKUmkvtJVSaSeiuwkcv7aG+AT
rembo3tifm0SOT95yBYN4zL/x9gOdjj+WVtIPbilW8h4CxrB72Qlle6LMH/P
ZLIe8BXg0cv2bLJ1xLzqZPL90u4psL4Me1V8YDDmnQQen/YG/of79WsppB8k
71PIeiQ33ErOX2W3lfQfd/lWkk/2diud/wap5H0uxzaVvA/mL0klz59Fqank
70G0ndLI81ne2DQyf4SiNLJ+SJLTyPti+dk0Ws9R6bSe89NJfWSJ6WQ9U55O
J8+fODXp5HmQdI6U1FOxWUrWZ+1JcFymZ0n7D3j/WS0lfz8ibJehYUyaL6xO
64z1jQUvWcxJePMYrwcFGWR9FzwBb085seaBCu8/OduIZYPBf0oCxgf/xOtB
Pj0ueriNPJ+Qtm4j97sKq0yoX0JtoUKM929K8GnpudJT67EffoGHN/TUBg3B
9WDAdg1jM+h4WbMn5vXcTp5vCCLBmQuXJ6UG4PrQsp1c/zj9d5Dz5XvsIM9j
ROHUUtkOkp/XbyfMN/9gg7kvsJ/ddpL7f8lqcID5ytNzCjH/Pvp5VflOMn/F
LrvIeicT7yLrqXIP2Ln8keLNX8x/g5rfBFb6Wq/9egfruTKL/D2QdlcWOc67
nkXqI/wIPuxbZjdHhPmNd5PnIdwdu8lxQfFuUk/xh93keZqs2x7oz8V7PdxW
YP6Je/7/+cf/AQJfNtM=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2WlcTG0DBvARJftElpJMiyWFKCFhDmVNjewJQ6gQQ9lCsu81kaUkY0mW
kC3Jg5GQfZCQbRTKTCnJUrb30tWX9/nwPs//d5/lmuvc5z7n9FpNmeMzzUAk
EulqiUT//v3vn0fBOoH/VdoX/+P4C7Y8qVkyqUaV5W1n64RDy+9mSWpWWSmD
W/YVtg6hJQ/gEyXSRcKfkn+WVcBmUy+eLK+ocoTNHJ1wZIliQnlZlVOGwX6y
G2M0X6qsXQgPO9p6XafyKiu+werh+t9DPldZJVHoBNflR6cWlFRZMwR+v3OZ
VU+Oi+bD34xtmu37VGXHvXB83KUjJqVVVreaqxMKHX88W8z9SwfCWXN+Z9sU
VVkyDx500dDjUDHzx8M5AeOyHnH/iBvw6dk7pa31VRZ7zNMJoUXiJcN5Pukc
uNPSGKfGtCIWdu0QcHQdj6+6BrcJbJE7iMfXFMPpMaPaD9JVWT4rRCdMfm6l
3f2uysodsBAfO6HmW+bVwUsa1VsSqmXepqE6wTcufastx1O2weYbHvze9559
XoI/Z143u8DjiQth7QhJm+EFzNt4PvIdLDeoPr/CDfbqtNTbjuOii/DUt4Y1
LnHc8T28sYZfgAWPJ2+0QCcc3r3ZrQnPp+wJ+09ZcnhwHvv2h7/ajLk7/yP7
zIN9tjQw+MD+Iuov1Ak72rqPzWBfKS5wzp6nxX2q54Mc7mcR2CCc4+JN8O3l
wm/LF+yzziKdkCcO7KJ+wz6d4KNSr6ulPL9oInylTkn0uWzmXw+r57/Y9PY5
85+Gew80zm30gP06LtYJIwu+OPjRkvHwjlbGBeW3mH8NPH7eA4+2Wcx/En7U
V3JayvGU57Cxy5xIP45Lx4ah/6C6OdEcV6yEzW/UyHO/wfzJsCaq2/GJmcyf
A69qOfFn4TXmr7EEfRVn5Z+8yn6XwxbBv8If0Ooj8OM5brUPq5n/8b/t6yfc
8s5g/j/wl0MXVvbk8WTtl+qEQLf+M79xf+0hWDF/76npPL/4ITzapZPqES39
Ce9f1cvmI4+naLNMJ6xeYDhg5nXm94bXPNLIat1mnz/glbey5txlHqV1uE5o
9uHd/R6XmNcTXnG1lZBzjnkXwGm7TZOMzrPPr/D3Dp0yTVPZZ+vlmA/WSa1S
zzLvYPjT7dreHqeYNxQ2WtNhcQotTYCd45sNb3WafVpEYPu1ddyjOC4aCF99
siP42EnOh7lwga901CSOy3fD2YV9lI04rrwOZy6uGZKfzD7dV+iEXg7C/pAT
7HM2vHnw2cr/jjP/Lth4yoFeSdw/JQM+G5yvSuP22iK4fY/Z005yXDFzpU5I
iLCb553EPrfDhzyCW6gTmf8KnB7o0uE8LdLBGsPEBt4HmN90lU64kWe/pg7H
1VvhjDE+DhP2st//4GMRP9vs3sf8BbDqXkWDjbTMZLVOKHqlzLGhI3rBbY85
fH1Hi9Ph0Stq5NdJYL/v4Nll3+Q2e5i/4RqdsPuSqmFbnk/VA34ZcC/wMsc1
U2DPkx3ej6Xlb+Fniev94uPYb721eH44fum3iePqbnCHlWFm7+KZfxL8s/uW
TVdoyUY4fePugJs7mW/COp1wbkjbJr+4v3Qd3O9tc9kLJfOdgjOLjX/tpLEA
6ITWDiMfv9rI/nzhXtYtDsRHMt9qONMy6LDRFuY7AUddnz5vTRTzPYNXxFr0
asrjycZswHr4fd+h3dHsbwVsHL22IpLjKcdgofJtp1Ba+wR+tHDRg108vli0
USdEt5JHZnJcFQ5vfT3o9h/m0Rz+583bkj5vYP7H8NRR7otMub+83SadkKu7
J3+4iX0lwp7KzqLTHJdoYNeVs237bGbeSvjd3evDmnI8wnazThjypYnZIR4/
xQveL35aqWI/0ntweEnb1QuXs8/vsN2rJ76lK5nXaotOCIj0+VoawbxD4eij
o762WMW8C2D1roWLDoazz/J/Ptb0qX4F+7SM1Aljd3yr0W8p8w+CB1ln72lD
S0JgybtgSb0lzL8Hbr+irmwMj6dtGYX73+/BlDZh7HPAPxunBL5czPwK2Mbw
+uibC5g/DrbtGre5I7dXZf7bvqe46VCOO/ZX6oQ+nw/8Xr+IeXfC32Met3w/
l3mvwovCDcNuBjOvHg6RVv7qPod9zojG+4G5UGQ2j/kuwyOLbetdnM18H+H9
USdc/WYyX5OtOmHW3LSCljy+JhreeiIjxovHF/0Hp6+6sO4zt3f8ANvHpY5p
xfPJxdt0Qo8p6sRT3F7pCut/vbdOm8H+LsCHrmVHfgpgf/nwr8GXMz5z+4gG
MbhfnSJquXE8pTucFzPkQWIQ80+G4/f/alQ2i33V3a4Trm+LOVUynXmd4SmK
+pEreT7RJHjHwN6eUdV5N8APVuxPFjiurr1DJ+ydlVo5mscr7QI3Lu5+XElL
/OAT8bkjLtGytXCox9Xk7jxeRApsVZh7RTqNfXbeqRMSW4nm7ZrCPsfBBovv
a6xpxSp4wYUX9UfRquP/xtO9Z9lOYv6ncITff90eT2afo3fpBPn21A4LJrDP
CHjB6lzHlnLmPwp/f1KcdJDHK82GK8rr3TjDcclfOLlRbH7ZRPaXFIs+fBN9
bTgufgRvu9g6/gUt/QW7etvWXs/zKdrG/d/5RYnw3asRf+uMZZ8P4KUnbKI8
aXkF7OAZOdNlNPPa7NYJup1D7RpzXD0MvrzaQIiUsc+7cMyFfXcqh7LPb7D0
2fKoEV68/pJ4ndDtikVJrDfzD4Gt384/PMeH+ef/8/VWXVePZJ9f4DrWs7qb
0ppWe7Ce3NiyMXE48w+CTSZ0HaWmHefBaX+Kn14bwfzx8Myo37P6cLzUPAHv
46FhTSx4fokHPHravVVjmVc2B175tP2OBdX5Y+Ef6oeLlg5h/mvw4/Ldn67Q
0n57dUKlYUeX0EHsdxYcFdvuVc3BzL8Dblv4N+3GAOZXwz6x86KOcntlkAr3
z9c/M5+6sc9tcODym4f69WbeS7CFebHNYFfmLYQXbH9f0KIX8zbepxMuvfpy
dCKtVcKqZ12Tbbi9+CLcYl1C0bgezPse7tdywtIZ3Zm30X6dkGoy+dAbF+bt
CVu+u7nuhzP7TINvr+xzrAXH5Xmwy+ozue7dmL/+AZ0wrevb4R4cV7vACeUb
rRvxfKVyOCfz4NbXPF7EG/jwhftZy7l9Sp2DOqGrSdKKJRzXOsFZln+uuvH4
4olwi6zW68fT0vXwppUbJlyhNUaJOmHi6R+Bd2lRF7hj2LCg2tX5x8PLuulO
pnRk/jVwRI+UMdm08iSc8v2FYcf27LfTIbyvBmYUWtqx37HwpyC8ctgy/0rY
Q7gX97cd8yfDvjUtZvahtTnw1oSf9Y+0Zb+jkjCf+r593agN+10OT/E1W7uJ
22uOwPp7g8/Ns2H+bFga+MbLhHb882/77r49TtHqpYdxvx6YFG1Flx6Co46r
7UdaM/9DeN2WBkO7Mq/sJ5xQ11V2UML8bY7g+VP36Cw37i+9D2v/NinYzN+v
+AH/PhffdQ7zqayP6oR2V2pke/P3aDxhv/sVTdPZj/wOvDDwpVUrC/b5Fba8
E6H1pdWtj+F5etXWybU58w6GjX6cle2jJaFwiurp0W2t2WcZfKau35Z93F9r
kawTSnvNXRdkxvkwEG71M25+9e+RzoWj1O1dC5sx/274xJHojO7m7NP8uE5Y
P+5j6iXa0R0WHRDFePD88tnw0qYt0543Yf5dsK3mRotl7E+dAdu3er9sKOeL
TDiB9cVPsU9rzz5nwrYDJg1e4sj82+HV7pcHPuL22ivw2CXhc+uxT7EOXt8/
fuDzVuw38CTW01pe4w6Zst+tsLHB0St5LZn/EpxTszBzH/PJTVJ0Qt1lfUu3
dWWfUf88Z/0zN55Pkg4bukxb/Z3zTfYOPnp06+APnZi34Sms58Prn+3O65/S
A5Z9Mujiw98rPQ9nbL+fNNuKfb6Fl+ut8sdV5613Gu9frlN9HzCfphv87oB8
VHb1/JXDPVrtW5TNvpWv4d7NNnbYyeujNj6jE/74fk+qy+tZ2hU+m7Q+fiiv
t2QC/KHwYuO7PL9sHXy76XllAa01PIvnY3T7TdG02BF2UYSN/8H5L/WFDSav
NIvkfFKsht8G/bjZ0ZL5T8DtR00yn1M9Hzqew/Xw7PahK3+ffAz87IYsOpf5
lCvgswMiS5tV5z8GD1sT2TRVzPxPYJXIKNqjMfsdmYr7fULLg0e5fUo4nLM6
fU8/5tMehlvtPfFZzfkrfgyrnCpvjOH8kf6Guy5aleXvxH6XnMfztXHMm1l9
2O8h+MSvSe8fc9xRA1t+NO22leutvBJueztl+Ceuf0rbNJxftr1dKPuQHID7
3Bi5az1/n+wenN+tz/t5DZj/O3xX/KhOU94fKVYXcP/HH3Rv25D5h8Jrb+5d
m8b5qCqHI4oG+kfSGst0PE/aXai7sCnzDoZDnVrUa8j55RgCZ0Xu0H7g9VN/
hvuM37TUjNentOVF5GmS1qkF+5EMgCcGVg7NYJ8yBTw5aLTFUc6/iDhY199j
7RLeP2Kz//B+3/mek5x5pP3hjaLM/8ZwXBEM5/Zvd+vCn09V+XfCJRNcrtWv
xfxX4Tnzh048UlE1LpdewvtVX1nNUbRyBrxm444hoSVVVsfAPQJDL9Yrr3Lp
ZdjWKOa9V1mVJR/hkfts/tQurXJKwGWdUDM0KtWe1kbD7lFKJ1d9lcX//fPF
OrFpH6ss/QBLG88ue6erskJ8Bd9nDweOmc39RVFw0dx7w/ty3PECnLx+g9Nb
7i/Ph8tf1Xli8Zn5G6jx/fAl6EMOz6fuDn/zev19a3GVZamw1nnqDIdvVY7Q
wlNmd/D05u9PqXsV7xv3zmXcLmR+Z9jns7XU/zXzT4JN0w36xmjZ7ytYYWTY
qQutqZ2hEx5+EtV6+5j5u8LbW1oVFecwvx9sXj5r89jnzL8Wdp80+eY6bl9a
6xq+D+OaTKh8xn47w9k744+efcT84+Dwhr12Wb1g/lXwMIM6f3KfMv9x+J02
KCiIljpk6oQb6u0dD/L8itFwpFWZtVE+80fAxhdH11v2kvmPwi0sXoh9mE/0
BL6aK9+mZ//KEdex3m44/uV7EftdBr/TJB7Tsd/SJHjivU/Jo3h8ySO4rHcH
o3rsR/YLVg80tTDn+bRhNzB+p6vhM55PnAg3fvBo6oBXzP8Afr2/15m51fOj
Ar7zdtAZc84Plc1NnTA7da3/mffsdz88fU6IYRH3l9+Fc6acWtebVn6DFfd+
KOa9Yd4hWXhffNnY6C37ibgFh332EpbRKV/gDwEzVi5+wrytbukEZUfBpi9/
j3gQbGDeeVp7WjoPLq03e8NZzhdNKRyWnr+ldnWfLW/rhC12kg3fs5nXA24Q
n97cmNdLPgfu03PldFNur4yFnc1Nr4ygJS3uYH1v8iW5gvND1g9Of6Ayecf9
I2b9c/ktl8rq/Dvg8ObZLktymV8NG8sfVUy5xT773tUJzy2D8yruss8g2GGN
jWoMtxddhrefae02+j7zFsKfrnm9S+V8VU+/h+N1njesnPuXKuHgB/lXNnF7
2ft7/953JtlHczyi0X2sn0ujLEvusb9IONb8zcha19lfGlzffOZX5yzmy4Pj
Jrk2/pXBfPUf6ARx33v1F9AaFzhn6PGcsPPs7xz89aLoSvNk9vcGLmn0oXAu
x9V1NDohs7WfV9YZ5nWC7x+ds9D/BPudCE93+f73XiL7MnqI+W1pamSexLxd
YPEKL7vEQ8w7HpZ16hCTm8C8a+DDvV0mhsexv1qPsN5or4p7ctyxEzxjcctp
LrHMOxa26mjjmrqdeVfCPSxPNd+5jXmTYbdcncVpjsvsH+uEm+a9HwyOYJ+j
4FX7jBTT1/B6L4f7jhy8oMYG5j8CV94ZkOQYyfzZ8KMtWrtmW9inT7ZOCBg2
0sV2M/tcCufmTJhkpmT+JPjhTXGSnnZ8CPs0XfXpCPeX/4TVTslTj0Sxv4NP
MD/2TR/4i+eX3YfP+H8zvM7jR/yA309X2cnoFOscnTDQZkbjx5vY5z7YtF5a
WiaPr7gDH7FxKpy2mnm/wi3v/Jm4cgXztn6K9SPo+bYtS5l3CHzpbL0RIWHs
Mwu+/Mwk7u4c9lkG5x8uHDFyPq+/xTN8/87Ld85fxPwDYdfYVotclzH/XNht
zdzGe1exz5J/rtFjVf3l7NP8Ob5n23d8aM/rIXWHP4T2H2TA4ylm/xuXXY7c
Mpv5d8GZYRNEPZjHsXmuTtisieg8fB77FOBEWcjLD9xeORM+uM1es3AB82+H
y4tN83uHMv8V+JlrvwrXEPbb5wX6c3g3cVQQ+w2Ev5xK7tx0FvNvhd1kTQyH
z2D+S/DIX+HNp01j/gI4a816qS/310x7qRMO1P0q7RrAfpWwqGi60abpzJ8O
P9q3eNF0Wv4ONs3t5DZoKvM3fKUTJFub7x48hf1uga30lpdfjmO/5+GSgtC4
4b7M/xbWjRpis3g889d7jfXPO2jmk9HM3w2OD1+019OH/Z59/e//H4hP/DyS
/b6Gj56eXVCf22uM32D+n+5YsZLbi5zgAx/H+vTj9uoX8N12Vx74jWKfhlrM
//COxYncXuIIi+cvvXV1OPP6wmaPa3QbNIJ5V8PX7kuO3eC4uOZbrL+3r0uV
tLQjLEk/PPaYjHnHwCIjIXm7N/OugJ8tdiwuG8i8x+CiryLrZX3ZZ4c8nbDt
84dETT/2ORJu++dt06N9mD8cTv17ymOylPkPw5aDr0y8S0sewxYzrV9e5vFS
hufjfSs++ZadwD6XwJk3L277yuOJD8EZ+U3qvnVjfg18a8SLmjdpRSXsEGc9
v2Fv9rn4nU7wnDdmgU8PzocD8OXpn7M2cXv5PThUUiuxsSvzf4cX2dz2dKHV
Vu//b/+I27Dr6zIncXfmLYd7dPZc243WWn7QCbMeLgk0dmHewfC3q9s/mHFc
dRP+6CGa+qwj+/wM9wt55zy9M/NaFOiEJxP6d7PuwrwDYNWeVYfEjsyrgMsS
EtbP5njpJ/jX7OylOZ3Yp1kh1o/SoUlLeXxZf7jHwY2Hgrh9RDC89MMon6fc
PmUnbLo9vr1FB/bZ7KNOSLDfnPjKjn1KYd3Nhy88Oa6a8c8rT4oj2jF/DBxy
IN/mhQPzX4GbO1sX+HN/ZW8d3n9qGmw/1p59BsCqJJ9mQ9swfzS8dIj3tcm0
5D94rdfRjrto2Qf46ZPABZlt2e9UvU74L8i6820b9hsFzxPvTK5jyfwX4NVv
pJnnWzF/Puyv+Jk3uzX73FyE99FNxZmjLNhnKlz/1pcZuS2YVwv3q1xnMaUZ
89YtxvVyXjN1SUvmdYa/FQVfW2rGPs/A59uPuO3M/VNewe5dvVVXaG3tT3ie
rvx+rCct7gqvKshp6dGUef3gZZubj81rwj5zYZebllNbcFxkWKITjOpofq/m
uGNn+ErFve+/afk42Mwt/U9DU+ZfBft86qetPr7EoFQnXOwYUlNmwj4dYIdx
i+r8bcz8o0v/b/+UCDhslINrqZj5j8J1mxQmdjJin3afdcL8EaGxktqcDyPg
8FfzZrShNcvgvYfyPC9ze9Fh2CtjySknY+Z/BHcVOjqnclwtK9MJ67Zut6pp
yH7DYDMnfSMDjksS/39c9gBWmTu/KaQjKmCDZk03d+H5xYu+YH1cU6GvU4P9
7oefJfkF/fpbXJX/LnzN+N6HnbWY/xvcMEC6dT+310jK8bwddaFhPRH73Qu3
Dis8a8Rx5S048IDV1mSOq7/AB8o7d7XneGmrr1ivNL1D6vH4kkHw99Un83tz
XFsKj1J2/f7tW1UecctvOiHmpKH/pK9VlnrALud1E1zLmXcOPN/t09b/vlRZ
9AnOq+/8xJjjji2+64Rz5lJ/G+4v7wefeJtvcaasyspZ8L7cjLrjaPUOeHTQ
KVFtWtb0h04wzCs7n1ta5Yi+cNiNsyNKP1c5JQjWrfJf353n126D9/vFrLz3
ifkvw0Y1THI+0iq3Cp0g7BSEbjy+Zjp8WDCIXMVxUTTc6t78yLPFzH8RTv7d
a1sCzy9/D9fymdG+UUmVS/0r8T31rLjmTu4viYQ3zuw+dQktS4ONrTesKX3P
/Hlwxrgm1vPeMX/9n3j+ZoWuG5HPfjfBYTHmnQ5ze8U5eOX6kUeG0qo38NZO
PxcXc39NnV/4Xtr2Rl2TFjnDbfbc/Tn9A/s9DTsaBnovLmC/L+GKzQN/FuqZ
3+i3TrC+uHmDooj5u8AnTulEZz8y/3h4ZvNJ9l15PO1zuHufzO0fOS6u9QfP
59+6Wd3zmL8TfLi56eJN3F4xFh5V4S7z5bhqJaz1vxiwh7/XscZfbH+s3fJJ
b9mvPdxvkMNN99fMPwpWTxty5DbH1cvhhMceYUlvmP8IbLjzpIO7lv22F+mF
HR9zZ/d5wn594E8e50z/PmX+pbCo9mHT0Y+YPwl+deLxFONs5n8IN1Ds7SF7
xn69a+iF38nuVi94PFEY3HlyanSDx8x/EJal3MoN5fHk9+EOZtsdyng85Q+4
aG6nsGU57HehgV5oeNzr/feH7HcffKRZeuBVbh9xBx5Ys/5/2+8z/1c4Y8XB
N495fG3rmnohs/frd5+4vSIB/ppcvtOOVmXB2aKev/z5ezVlcNAt5+Udc5l3
YC298O5HTEnjl+zzOpy9drtOe5d9lsCVYfP0V28yr7mhXlg85Kwu5x7zusN1
zUUnjDXMOxvOWlA0+U4W+yyGww4t/zqHeaXNjfSCQcLHMx9phQD/NTEY+ZF9
qGbC640n1mvE66vZDp/7fb/oMOeL3LS2Xij91W6GefV86ANLmj6rWY/zTx0I
pyS3MXnE61+6FVYVKj5u5e+RXIIrrs4Ub+LvTellrBc8Kz8nTnzBPqfBJ4ft
sHR6wPxKWDu1KGkcf4/iHTxl9ZLTE+7w+vvX0eN9NabxX14fxy1w+qrjhmr2
IT8Pbynfk3yffanr1dUL4rySjASeT7YRbvwptMkm3o8RZ2HVmFHjfSuZ7zUc
lhYav+4H8xnX0wsT19TK2MXtxU5wv15tN5zj+qo6BfdxWpQ28Df7ewEXdZmQ
8/En8xrV1wvNNjW4tpvrvaMjvNrb534/vj/IfeHGSQ4D/fh8ktRsoBd2l/S2
iuK4rCP84KDRw9UcjxgDD7bzX7XIgM/jFfCni2Panal+XxA1RH89w4/15fNZ
0QF2f3a5xw0+31Uj4debt7xuVv1+Fg5XnOpXlm/O5/ERWBl7OL4r30eV7Rrh
eJX5J8O5vXo4PFpjUbS1Dp9nS+DZt0bnXqvH/IfgO1Pyigbz98s0cLdTzz9Z
VK9fXmK9sNQkfHkPrj/ixfDQ7IPqLs85Xw/A8mXRB0I43xT34HdOlePncP6o
vsNhTYLuD6++31UmemFs3fXN7a5wft6Gk+e3sVh4m9e/HHYc+Pj0+8ucn5aN
9YLDoXyLKZm8/nvgBZM9TmVw/qXchLe87Zbgyjzaz/CXRo5hLXn/ii2a6IVU
i2dO3pxf0gFwoqek6bDq+z0T7u3e/MHrdF7/EjigvOOT3POcr2amWJ88WjZu
do75+/+z2f7knanMHwynX//xsNch3j9F8MajNcyGJLHPZk31glPdSWlrzzC/
FHZL+lnwiPunzIAvnSnaFkVrY2DjjiFLbbm9okkzzM9JKU4j/2OfveHO25bd
12cwfwDcMDY/amf1ersV7rDYvftJ9uP4Hzy77GrDd1zv1K7N9UL7WveNjnI9
Lp0Kq2/d2f+WzwdJFBw4QK4u4vFkF+D/HhmXRVxl/nz4m8X16MXV9/+UFnrh
bkDE3V68ftLNcHz0sdfNeL8rUuE/Rh9to7m9SgubeU9Y24PrpXyDmV6I8DJv
up2/T3kGNu9YaTyA64n6FexgtbrB7lvMW9tcL4Q+MBI8eH0kXWGb+a06Lb/A
PlPgW7/2Pfe/yD5z4dmq6yFrrjOvYUu9sP3U6Is9rzFvZ7jFz29NEnh+xThY
Uf908Cn+HtEzeLRt0vwAzldHAwu98P1CzJxGaczvAI9c8ObBnGPMPxo++2Ph
hHHHmT8CbitKaZh7ln3+hbP/xDgsrZ4Pdq1wfXvtfHKS8ydlBPyfTUGvK7uZ
fxncYU+W7Zs45j8M+8wKV9/cwD7bWuqFnNyBffqt5HyQwRGO0efEtGgJ/PNM
7oNN85k/ES4vWNZSvZz5H8ClLW3aNV7Gfoe11guz7HS3hs9lv4vgWtMjmp9T
MP9+uEc3w+tzg5n/Lrzo85fmH+Yw/zfY/ViUNJnnk86X6IW1Lbf8zQpiv3th
x+OKO4cDmf8WHH0/snkuxzVf4MrhtS7reTyRpRXW27IScQ+eX30Djn93dNfW
UOYthe8s0zxvtJB5W1rrhb7p9doVhjCvB9z8yRf309xeew0e2Onwqb3+7PMT
rNgeXW/IJOZtYYP793HJ6mljmLcfPMnEKy1uIvPOgk+arTw8guOOevhOjSj5
xVHss6mtXjD5qHu4cATnQ1/4aeyAOt28mD8ITg779bHeWObfBhsvutFGxv0j
GrfRC1fNNs9ScP8UN9girX+4ObfXTodb7LoVZcPtxdGw8ZvVclcf5r8Ir7Ja
1TmA+TQ92+qFo/fjx3f1ZJ9T4bPHmz+/OoT5I2FllP2QBI7L0+Cs/PDBIuZV
5sGpl4dJ9B7sd3I7veDfcrrcfTj73QRLC0PGXxzI/OfgD4fvhxzrxfxv4GHH
L1wd3JN9rm+P9xt/uxMFvdnnabjZgUNGp6XM+xIenZDcqsideWvbYX7WnaRO
5fEcu8B307z2WDqzz5PwnFcFr+92Y5/PYbv84oa3OC6p1QHrWZOvNXpzf1kn
+EevRt9ymCdiLHyznrj2FDf2+RR2jFv0KtOVfdaw1wsnVG2U3n2Y3x6esTqr
3zhaNQrO1jzq9nUA8y+HTeVFPjVp+R/4m0/q/DWD2Gd7B5z/Y5TNsv7M7wOH
DbTxvc/fX7oUdpjaIsqefUqS4I0D7SfeG8w+23TE+q0c9J8rj6f1hk9nr2xW
0o/5w/7Zabt0A3+v9CD8W5404Q7HFffh8gEB8z2Hst9hnfSC/a5vmw/3Zb8L
4fRr2YGDOC7fB7ePm3jwBvMo78CKHRlDjXh91F/hBNfc3DDOD1loZ73gNVva
9zH3j0iAl4tLU+04npIFz+r78mZfzj9tGZx23S1iOue7uJUj1n/LG8sbcD6r
dsNpC2rda8D5prkOp/9t52HMvkSlsPsNp+ZdujO/eRe8/28O7taQ11/uDtdX
LJBu4/UszYBrPelfuLIr+y2GN+59ptjRmfmbd8X3wfw8YVdb5hfgyV7ZMc72
zD8TNo9edyrdkX2aOuH+XBeywdOWefvAq/P67d7WnnkD4XFn9rnZ2jDvNvhc
G22htx37NHHG8+lmYmdFO/bZC7Ydoendwpx5p8H7V9gG3GzBvEq4ZpLpfp9W
zJsOT/F/efs8j6ft0Q3vR41ujTzC7cX+8PrGO0V3rTgftsCrt4deWUArzsNT
pK2WvWrD/G9hywayPI/W7FPuohcGRR7yz+Dx5RvhuNJe656xD+VZ+OGAigkL
+HvVr+HTE5RP2vJ4pcbdcX9f3bRF4HjEOnjU1pqRzZg/5RTsdcxvxhmeT/sC
zrO/cPqnBfMb9dALfnsWGh02ZX5HWKlfW/+ZGfs9AR8NaXP7EvsSPYf/5DS7
fJG/z7FmT6w3c4s93vH6yDvCRQ1O7e1ryfxj4ESnlPllEvabA49ftlT1uLpf
kSvWn+DWcVdbMn8H+FV8vWNPuX3KSHjAjE0eIp5PGw6P/FpwqC7zKX7DD9sc
LHjK36dq10svXHBuVvc7t9cMh5epB1kk8HyipXBe+6+3vzZi/kOw853fKy/w
eqpt3TA/1izMNzRmv16wexen5XdqMf9iuIdz+1G/azL/ATg+bM4Nd45H3INr
11as2VBZVNWvZ2+9ML9Q3/Dv1ypLF8Azhp3/puG4QgXHjx8ROKKiyqrb8OGd
80cX/Kyyphwe0PlOwPFfVZaH9NELwVK/k5O5v3IP3Nz26x6vP1VW34SlTWwC
xb+rXPoZvtisbshCEfNb9MXzJb3zvVSOp8T1/b9xbSZcd7eBaUQNzo8SOKZL
mVKgFf2lesFol9ssP1qUAReKj35NZh+ORbCDa1xcviHnQzMB89m3Y6Elx5VS
eNEqzZ4lJcw7A56zUDTK4EuVZR/hXbUtvtqxj4gm/fB8HBG0I/gH8/aGbXtH
OzrR2gA4s6JRQCNavBX2vlxw6qQB54O4P75XV28obMPjaVzh1Otmrb3Lqyya
BruMPdEll+d3jIItap8et5DHk1+Aax0M+XKW/ZZ2d8fzxaG+4zn2J5kCH864
/dPrO/Nvhiutf9Qe+Jn5U+FO54x+ruXvlU7y0AublMEXnhXz+m+A25woODwk
j9f/DBzXf2507bfM+8rj3/fqw7u7Oa5cO0AvdHz+2PvcR/aXAse9mxgQXMh8
uf+c6V8jlueXGA7E+0gDfWVaKfN1ho2sD/aayPmoPQ5HP4u0LNezv2ew9YOZ
lr7V89VgEPYXRX6x5+9VOMAxs6yO68qYdzQ8O+/G/QrOB/lfuP6EwNiiv8xr
N1gv3P+tsqow4v01AlYeczm1lduXLoNr+ds078ftI37BOzbHvrjG65fSdohe
aGS2P6E2rZXB5bUsVlhxfomXwEfsrqwt4rg0EX79VnayfmPe/zZD8f368fNB
Ba+fyAsWr7hQe0pzztdFcLvfj0LH12f+/XCiWfzTXlwflHfhD+M7RYeb8P4Z
6qkXCjbnDvDnei2bD3donV5ve/X6uxcuDlic99qJ+W/B6/Qq/zl8P9B+geO7
W535xeefKn4Y5tvNz69WVK+3N2DjzmfHHxDz/voMr169s0YQn2+OLb3wvFZo
vv6wZp+xcEKoZtJBrpel1+At0WF5vnzeST7BNybH+HTg+ixr4Y3zK+d4va3O
2w8+Mabtq2KeX3wV/nXHvfY5bi/Vw85DJgytUX3/N5Xhe8uwRwNfXk9VXzgh
s0XubPanCYJzrTobPOH1lBfCGV2+HYjl9VE2Ho7n/xCDhvN4fdRu8JYtfrqN
1evtdLgieOmBFtxfEg1v+563ObX6/m/koxc8f4a/X8D1UNsTzo1xrutHi6fC
r/ceynjA9UwaCYdd7ObfnnkVabAs6XWIjOcTdR+B+Vj7Yv9crreOk2GHjKzh
ParX202wpWX0x2/cXnkOXm0V8OZPPfY5cSS2r+ix41Fd9rkeLsl8ubQOn5cp
p2HH4MfyWbV5/V/Ct/Y3PzGYz1tx7VF4Xhsp2jZowD7XwGGeBkN+Vvd5EvY7
nWNoV/38yoXFax+VuHLcsdZorF9n8y3+43yQd4LVbWuc7cD5XZoML9DZLerN
80mewqEVn3YUcn7LaozB+3OL8H1FvB4R9vDa9Lc7+vL3pIyC780tMUnm/JBm
w7n3456+a8g+/8C3Pa+On1uH+duPxffxm34/r/H6aXzgVuGnzN9zfRQtg5+6
q9a25Pqi/Am72pl8yKh+HrQZh/MH7yhrpeN65g0vchcfOMP9JWGwYkLQchmf
f7KDcJ1d278u5P2ttfbF+4iJyTVJPufDMHhD1KIfXavXs4Ww9aGnZg7Mp9gH
Tz944NkGPp9Ud+D0vOCAKB7Pcch4vWBW3uWRAZ/v8lB43r4TBmNpZQJs7evv
9Zy/X50Fmx5Y/82e8720DO5nEpVXzusRMdcP82+DUfD06vVtN3z2acWn35yf
2uuwn66ergWfR+JSeNxxv95z+fySmk/A94JPz0Ab5tPsghs554x8yfkqugYb
L5Quf87f61gMPzqR/WYh139584m4vyefvLe4+v1BgOve3LIxi+u5TAdHxm7v
UqP6+Ws6SS9cdm4zJP0b778+cOh9N/UsPg+0gbDlJY+kk5w/igI4zbzo9LLq
Pk3kemGfseypN+e/phe8/kRswSCup6Lp8KyarhYzOb8clfCbS7ogCdcfdcPJ
eD68GRH4gy7tAS/ovHLbJb7/Svzh9D0xNa924HzeAm86UKYO5vdJxHl4RsAi
Dzuuh2KXKbi/jmiL6lfPZzls8j3RcQzvB8VGuFlOwirPpsx/Fs50LbzTsHo+
v4ZrJc7wD+X7uXyCP/LrJDtmVX/Pr4Mj/YdcHsu/H6hPwRcHlz1cyu/R0hdw
4d+tAfuHMb/RVDwvDjvtjZvA638CHt3b1qPOAuZ9Dm/oMFNaPJN5a07D/F97
rI8d//6j6AjvPLD+XcIq9pkMzxth6mo/m33mwAe2botqLmNe0XS98Mx1qPCN
fx9SdoBV4bHyQn5/qkfC4aen7Rhc/T3/GO7je97hVPX3/G949PSoxXb8nk1p
F4D305G/Tozn9592OBxabFX6rPp7fyn88ppdjUv8nlRVwnVXWOwM5N8nNLaB
eP7dL3fZX/296Q1fH2r3c/Y45l8MjzVrkLSS36/yA/DU/voBsVPZp1UQ5vuc
aE2swD494RaTk2dFujD/AnjAgeKPU/g9GqGCTQuGNenL65FyG3bd5j55WCf2
O3iGXqhxrcPnZV3Ybwh80lbaZSP7Ue2Ba20YsMySfy/Q3ITbmn/evZD9iMrg
Lu4PekXy+1upmKkXono0uerM72d1HFyUtGWNL79vSzNhY78vc3349w5JCRzY
I1W0mb9HZjYL70/dQ6IK+Xu0O+Hwqeu+pPP44gzY/GB+oUBLi2C3nCWvRNV/
j2gWrBe2ejYo9ef1UknhlzUKzqbx/I5X4LuxA9/O4O+Rf4Q7OT6pP4n7K5vM
1gtOJj26K6v/ntIbnjprfP3XzFsaAF/82Kf1TfaXIp6jF1atSnpYwPmjdYVH
9dfYe9PiaXCZr5D9tPp7OQreleSWvaB6fWigwPtp4hhPOz5fRT1gVcmkipN8
/jtOgeW910Xe5Pom3wx7NW48K4Lvu8pUOM9daeLK9VHSbS76bD1gg5bPd9kk
+PfYZp0ldMQGuI+rQ8Fmrt8pZ+COM0KzNjZh/lfwltRlxjO4fiv85umFrLS4
4LfV35tr4Zz3fc615HzRpMC+V3b55fL9UPQCTir7NM+rI/s2DNELz+2P9lxT
/b25Ci573H9CX77vlR6HLR/mr7Wt/r54Bp+f/e3JhOr3d4NQvSCqq+31nu/r
EQ7w61kfL9/m81J8DLY90f7Cmjd8XjyBEzY9Npr4ks+7v/D12tdygvl8VNnN
1wsjlh07ZMvvCc0I+NTE4fdWPWK/j+DNF5KX/3zOfn/BHjc0Xgv5faJuuwDv
vzatR1Z/r5TK4MZpzq/K+b0iWQJf37m0TRadUgFfyf3gff0Fnx82C/VCzcaR
9UdUP6+94Fk3OjaSPGX+RfCHq9Yhfa8z/354/CvvjNvX+LyzWoT3nQWH29a+
z/kxFL4Ua3ZsGMfl8+GW5oMm/7zF/HvhHyubhuy4wvy3YNPE4TcWZ7HfQYux
voYPtpiZzn7nwbZTn0xQpDJ/PLzPceOBWkuY/wZcXnLr+Y5g5v8MG+e8/1Mz
gP3OCcP3UL0gw2eT2W8sbHu5LHXmNObPhNNbDdi6aT7zf4Izzu6b0SqI+Vss
0QuS4Z+nHuH2pTvgH6GTKzrNYL9X4bIrC52X8nwyPdz8y8wK66nM23cprsex
ITG1p7PPy7DBoejYO8yrKIQro5tKDWhV42XI++ns5VqTmNcNnvJqkO+DIcwb
ACe8mXZlwAj2+R5Ovzlv4Ynh7LNROO6nmgccG8iYtyfsX5jm08aPeafCC6YU
LpvOcVkk3NqxdVsjd/ZZfznGxU7jxw1ln93h/j0N9njy/NLJcC/DyOVt+zL/
JnjToxX2uziuOgebjn48uPFA9ukcgeuZ6HPYfzD7nAjXmGf1SzuI+dfDR54n
12jE7dWn4Wkz46Lr9WP+l7DyaNOA/3qzzzUr9IL9k6C26j7MexJu1vbC2Sxu
L86FXWQHnpn1Z95aK7G+hdj/Wsu8ouNwh+kuDbZ5MN9TuEZq69o7mUdeYxXy
jl/+YdwY5rOHG8WGZGZ4sb+jsMXrPdsifdlfNiyKSb+1djTn6x9Y3CzGo3I8
87Zfjf7axkWmjWJeHzhqRuvdTdi/6if8so//umIeT9NmDebD0WORhryeIhnc
tNbIhWnc3jEMnlyh0qQzr/oH3KdrrKGU25dar9ULDdc+mbaE108yDN5f/5vb
Yv5+2UJ4dH/rwV/5+yP2wZbFU+eN4fURS9bh9zXKKhnM40uHwCPPu34s57gi
FH532yvAjtdDlQCvDSyca+XK/Fn/9r/51m1hD/Y5cD3WhyZWTUp7sc+5sE/M
kt3mA5h/Nzz68/4Fu72Z/zp8d0yJSTavp6QU/h0VZxLL+ZkyewPWo8HPr8Qz
v3YXnHZud1IQzy++Bh91tvz1qifzF8NdOljmt6yer8034nswqFvSWyn7VMNZ
u8/Vv0DLdbAk3MlsEOeP0nQTvt8nGslNqudnHzi/MsGzbfX9cwkedLShZhv7
iiiAg8NLZ6g8mddkM9ajzUPt9zgxby94W77Nu11dmHc6PL9N2/QQF/b5Dpa8
29k/sBP7bLgF18fop9q3I+dDT7hHzME1Azszvz/sWDG3Y/d2zL8FHrSw0iC6
PfusF4n3XaXV5jtt2KcLHOMz5vf1Dswvh91krzdOYZ6IjXCHGZltmtgz/1nY
4e3+YBeeT+oUhfetvmNq36EVE+BvSbGvZnZj/nXwytLkhf91Z/5TcNeCaSUb
adFLWLXt9cvDnD9KX6VeOLzffnuOG/tdDbf7ktdrEa9n6Ql4+ZsFjts4LnkO
1/46d1ki55esZjTm0/uc4xN4vbUr4HnNg/P+8PjiZLjyTeyI8q7MnwN/+lsn
/D63V4i24nusf66bhtdH1QHO9OysvFvd7xE4o1FEvi2vj/wx/DQsMM5MYP7f
8Pn2T/8e4HxUt9umF66KLtTy43yJ0MCWMRHrHTi/Uiph39du7dtwPdHaxmC9
PXNshUf1/ecNl3Q3du7J+S5dDPfradNsJ4+v+Q5nzuhdEMRxkfV2PF+7jzt+
jPkcPeGKc+sNY9iXfAEcE33QpG/1/aeCTU5mfMnk+ilpvUMvrDY9c7kp55ds
MDzM2uXhiOr5EAJLAo43fsc+UvbAx9aZt5jhyPw3YW3IiPqV1fNhwE68bxl4
3sjk/FEp4OOZtzJNON80cXDa1exPb2jR9f+3Ywkszg+64szjqYN34f275QbL
W8xXuhPuK2u224nXS5IBr3W2L/7E3ysrgltmtYkJ5/WPaBaL99PXwc2Gs3/x
dtjvW+acbPYhvQJHDLU4Hcz5qfgIp5frlojYj6pJnF7ITrOJ/M7jaXrDuQVB
RS9wvP8BiKMMng==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0.652846703124614}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0.6773440007392646, 
        1.1672899530322751`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0.652846703124614}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0.6773440007392646, 
        1.1672899530322751`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"TBF\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.8829173676924669`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.034341192225225504`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "25.71015478734356`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 
   3.705041423871324*^9},ExpressionUUID->"49736b8c-31d0-4a9f-93ca-\
df6437b1a0fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IWM\>\"", ",", "\"\<RWM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6877208799567623`*^9, 
  3.6877208858208823`*^9}},ExpressionUUID->"4277d921-c313-41ad-9dbe-\
20988045f588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
W7zVkXGDnSif9XbI0xMjfGi+I/45Km+yUQDN9wk4b8yf5i0bGLs9grUNiwrj
6PW0XnhfrPQL6SDGGlsG8Vlmf8TZkqGM2XlwcdrpJ1MOUf77sFPz3Evyeyl/
F2w4PUVlVDblHyvGZw1Vsh32oJJx4DG4Pqm1Ke0hzfdd2MQjMLr3LuX/AR9I
PDPBqJHyLhLns25bqtlX3GfMqYWX/m6pPJLDWNAOO1zuOexMP6+hKsFnDSx5
9vwtl/IugCMMNaWe0OfF+MPBb3qS53ygPr/B696qji24Sn0qD+azfM8pjncp
o7wsuDtR41QX9Z27abBQXw0ZsK3kxH0bh1KfIyTR99/SXVpcmod5sEHmselj
i2geNsBaYaMG+ul4C9JhbrGEW9N1yn8NftkbYPvxMvVpOoTPUim7/mHgKfXp
BUuOevh6fxPlT4O/1yy8rv+W8n6AzcbsXHulg46/pxSfNTX2gKP1L+pzDxzc
sTrq90vKewX2fp1t35xF/UoP5bN+Lt5yJCaD+kuGo+Z+lnulRf2Vwr9rFrfm
f6H94B3MPfXZgm9E+YZI81kLp3y5/Ok45ZsBT90SNns1zVPuRfil7bUaR3Pq
7w3snGYU1jyV8g6W4bPqvOZbR0tRXn2Yre93WuMxrbfVsGDlHDOlcdSX2DA+
K/RDVboF/Tx7CiyZzZ25w5byroAFHqvXSJ6lPmNh/mhFMZ9ddLxFhvNZr7va
o8dkUn+6sGzn0DLl+ZR3Ofx/55+G7XD9ueQTY/Qo7xn4WeW33zbv6HhPlEVf
JWUHe3WoT3t4Hzdso18cHe9t8IMehRGJmyj/KVhvqf64E5SP3SArtL64S+X4
rM7QubF/I6nPrfC6ZV9O3qmm/Mfh0FdbroXcovwP4WndHk2bRPqY/D3w+4eD
82tUGbvlyvNZc6ODbnDHM067B2tN5p2ImsCY8xN+b/F80kcNxgJ1BT7LorZc
NXoR45ij8HWt58/2WzIuvvPPO8x9ulYy5nbAJ6/yaoMcGMuNVsT67qkeWWfN
2NwSjrLXsq4wYtxQA8fJGE/e6spYpB3euX3Xh8fzGeuPGoH1LiHSuGcS5Z8P
RzUtrzk0jfL7wUec8nX5z6jPrzB7qqVgfjv1qTSSz0pS2O51hY53jDl8yDiv
bdBWmoeN8BFfiTFnaf/gHoBzfl6+eyOP+lRU4rNm2e1ZLdpN8zAXZi840zro
Pc2vt5JQHpF0uNOn95y+AuWvghX29mbLT6V+TZQx399tZXaMo37XweKjbU87
/6H8e5WF9jf2VfiGXnbToTTK/x5WkJPpGThG8+Chgv3mqKbpRz7NQwqc46Dp
olVK+S/DC8tV9W8fpfxcuE1K/10Qve6WNAr7m+SwJZLNtP9fgi8bOXOmPKL5
fQvvnhZdkEPfVyCpymdZLeH1PhqgvNNhfsKR0kpNmodi+Gyd7Zg8CZqH17BT
yJ7FrfI0DxJq+H4Rj9ZeoD7Mp8ELZ0k+e6nHOHAVLJl62L20ldbXK9jwzpsL
X0ZTn4NGoz/xi3/NR9I86MF9RWYS9YY0D06ww4vwc9ILqe8YmHuCkzx8OWP2
ACxosRQZZUzzrDMG822yKy/HlvI7wALf8K290yl/FKxd99di+Q/q+zS88wDv
RdosWl/a6tjfS3uTfiymeWarC/Ujsg0+EGw5I+wj7Wcn4ZrTgy+9/0v918Nr
xN4u0KL1IrAdi+MrfmfcdPo+GuFjhdYjOx8uzr7drk59xzyAfabEZMz0ovzd
8Pf50z0sfKnfUA0+K/+UZF5EDPWbA7PPTz/guJ3y18GVCZyZ17ZS/s5/7087
caEyheZZfRz2b6UPfLUo6vM2nNMW1Nk5k/IK4O7fd0KMQyivmib2w/azC5vp
97MXwr66Inf9F1Cft+AjYVomh+1pHr7DDtaLpuv9tz+oaKFPxXXqy9dQXgst
of0p1xde+OqwWRjtZ/p82L30mWQHHR+3keOxHhQ6bkiQ08zgoeeOHD8yj/L7
jBfanwT7Ye8P5f4NtB5jFCZgvw69LTJvMPU5Bza8GF6lq0P518N6K5fOy5hB
+ffBH3mSHwrDKH8lrLg14/QyE+rTWBvXa0ExrzY4U5/r4PmHfhiJulH+VDhn
83Hfp/o0z+XwkypL+dljaJ5b4eIJvRv+qlG/7hOxnpbLmEz/7/y8G07InVbo
mk/7Q9lEof2wuBk2eTlv8Kh62g8SJ+H86zfvmcQ12g9K4FW7Av0b6XqooQlW
fxM/9TvtjyKSOnxWtta87vkJNL8G8OWzOouW0udzinSEjoegEb46p092Bc2H
hriu0Dyzp8Ld8pO9e72p75Ww3JuYoZF+1OdLOG7TierXgdSn6GT8PrOtb9VX
0DxMhjvMSw5E0LzkOsLvrxwvkphIfUdPFrq+c/sLR50KvKlL58u0SXp8Vnjm
sE2/ZWgelukJ7QeCSNh52nGdPDp+GgV6QseneMIUPivmVpC4Ih0Prh3c+t7n
QNxwyh8Bq7VpjirQovwn4JLZb/Z0faf+H00R3t9spwrtN/pb4JoZs/Vu9VL+
vKlC5/O0+7D2vId1IfQ6pwsW31Y+55os9RsyTWg+Y45NE9o/iu/CUw/2LBpK
ebg/YDPFDRa36X5Abow+9sMC11vnCun+5zC8+/ThY1vP0/OIWrho+372JHre
LSKAb7FOXPWj52n6qgbYT34cXFn3iq7XFsCr2gZVKjfS/c9NeF3duw81BXT/
+Q021M24JN5J92/K0/F9/v5gJ3rQ/ScL/j3tl/WT9XS9uQlWO7uoREuG7tdG
zOCzDvarH9yYS3nnwcHTfSuS7Oh6bQP82Cx2ghg9LxPZD0tdHWKwaDddr8kb
4ve5uH78EkLX56Zw8AZ2VW815fWCp63omnT2J+VNg2vG9ndwP9H9cgWsncHq
u0HP17izjfgsVcdfJpd20PMTT3hHwI9pBwzpfnMPLLtR5OeIyZT/Cvx/zy9z
W+BHmjHvVUdQn24z+awC2cHcp9H0fDUZVsvVyZgeR/fLpfCc3j3lFd/pfvkd
rBD1XkXmL90vD5mF4+FidbPXkfrcBcu6Vqov4lCfF+FQO7/+IHqexX0Dl4zP
cVB8S/kHz8b+eUt76ewRdH2hD6stLvP6qEz7xQU46q5K8pUxNM+N8P89v9EX
M8Z6f+s3Zj0df7cp8Pm/r6QmzKL1uAL2GbXAebkDXU+8gA90rtq7zon2NxET
zJ9pTaTfUtrfdOGXW+POPJ1I+9tyODwsxdmaro+422ETm2F7jJ/TevsD335s
c+9QLe13E03hz0VVK+l+r8EevnTQUnOFKO3PkXC+fPnQs3Q9pn8KHtequV2Z
1itn/Bysr/fRV0Km0H6xFA7t7X0w3pz2i61wAetIUBJdz7CPw2uVOD6q2rQe
H84Rul6Ss5mL89e9Wb+KPlG/YTD7+Igt67oofy7so+URvpDu93LvzRW6n2j4
Ca+7dki2Zw7tF5vn4fxQ95qz7DD1exS+kbfBs4Lubzh34AdhA1cO0f2goAO+
dP7MCCX6fRqjzfD5vAO7XGl/LM6GA95tWSn+3/VcDexqsXNp1jDK3w6/zs0f
cp7eHzjfnM/qL6yeJTmC+rwJn20ulnXroz6/mgudH9yUWMgjamCw9SflNYfL
nwa4ilN+zkZYQrDz1lu63mN/YQntpzGKFrh+ihfkytfQPMyFvb0e3LueTvPg
Dd/YLRH0m86Pcumws5p3+/VJ1KfcfOx3cm0hfxdRnyZw59rXqWZJNM9ecHfk
m4aJ/12/7YXDU9pth8ZT31fhfmMVn1vttF/MWoD1J0j+bEfPdzQ84O/Tuie6
raZ5ToFFQ1S/7S+g/JfhtTL5Njp0fW6+diG+/5cn7FupdPyT4DuVX16+fkx5
L8F1jx70Pz5Bed/CG8OL2su8qL+dlpi/+bd01g+n/orhHF7WuQYVOt6vYXbl
sXEi92k/k1jEZ0Xk9em+m0372TS4zl5S/mgPPT87D09+vNEo4A89P3sFq5y/
E83Xo/1skBWfZcx2/vMji/5epAd7LwrezKefz3WCC7Jnrbq0lfavAfj//t6V
prMY++0Z976ds2j/coB5Q//GeK6g/SsKHuNabXH1Af29qB+efMdGZXsI/b1I
ewnWT351Av8m5WXDnk6zlGJpf5TbBk8q9encmUd/3zoJawhSpW9OpfODljXu
57uv/j1C30dkKWwmHfT24g16vh4Ot1pqHTr2gfLnw+VOZ4Prv1H+B3DOg3nL
/0TR80hrGz7rW3qR3jb6eyw7FP6/v8/G5MArN82tb51M+evg8itzqofR/z+C
2wm33pnZleJI/R2xxfGROXtgGP39ruE27FDjqTOYzhciHfDCCT/sn9DfB/TV
luLzzBfFyNHfDziH4GdzRFea0vlQcAsO6bec+06Mjv93eF01585T+vsYW8UO
+8HWr/fi6HwbYwFbWXTur1hJ54MbsIWC7JQ39Pcucz78f887A0eysV/F/6yJ
a6DzmRk81W+lmk8b9e0DZ4/SaFzWT+eDNvj/nr+nKdjzWdfXfZLXpOepnDnw
/z8/XQ+752Y9HE7PuzX2wdbvuFtL6XlNsewy5NO29r5mSuvfGG4L4S7KM6D1
v26Z0PNS89RlQs9XAsvhxEsKjx3peafILAc+a+SwFJ3Z22n9u8P5kRtCGiNo
/e+G3V9E1kfZU/4yWMdgWnMlna/Yrstxf7DFbaTPMlrviXDMggQ30RTKW7Jc
aD/gNsGT22tSLOh5nJykI853rTLO2vR8JzcB3pn84GrOBVr/RY5CzyNFXsOD
XK/8enaJ8oo74frLu91V57/nvVOdhJ5/CArhs241m5ZupP3qJazX6J4dR/sL
W3SF0PV0zGRY7rHHt2RysSO8u6JYI5qeP5o/g/kXPQ4ZD6XzwV/4p0PG1SB1
ul6ftBLrJWnw2nR6/tSwDD40v1ri53/n3yhhp/2GKwWBuV/p+Qtnwiqh62GB
3Sqh85FGBGwgZSnqSc9L2Sfg0K0yOooXqV/N1diPjUcstKfnGXK2cN/JcW1v
z1H+LfCwUvdz+Yk0D3mrhZ4X5t6H9dbtV/Sk5y/6S5yxv83avjyLnne6hTgL
338egztsenys6Hku5y7ct/d6l3o59f8Dzu+Y+bsvhvoNWiP0PLj4MPw6M55f
Sed7bi3c2mi9JZ3ux+QEcI2OquwTOv7mqi7IY9tiueIgzUeWi9D5ROQWrJLj
/MOcno/rf4OHLb7I2ixN52NlV8x7SvjDxdRnGgvOrBy2uomev7F5MF/u0ZTD
9DwmZsRaXA+6dOTcofvj4nlwm+LS3x5z6XphA1y+bM0gJV2ah89wmWNT/dsl
NA/ybth/LE809NHzmQZT+MgSF8cxG2ke1sNyHe/7Tdzp/ijNTej+ijPcXahv
wWx3oectGp7uQs/L2Xvg71oXl6XT88GYK+5Cz9vlZnrg8y4lTDlBz8PM3TyE
nqcHJsNWYcVvbT7TPJR6CN/vv/MQWu9uLp7o88Sg8I+tdL+xC1bRCFg6jfYL
zkW4XneL1TT6+4jgDTzsevTd/fS8TGPwOhz/gWFHh4+lPi/AldvyRz0QUN5G
+Mmi8GRlZbrfFPPCfird1KGmSH1PgVMubLK+GEx9FsIPuvjO55Kozxfw1cdW
pyZepeMvsh73Y/pebnPK6fjrwtwL7woGmqjv5bCDo5fdmGc0D09hlbpf6q0f
aR7+wAanL5WOb6Z5mOiN/pVPaV75RfntYY2DnVpZLXT9GAlbDVQcsxugefgF
mzxXXjrnG/U5fgOOf2BDro2A8tvBu1epPzP/Qvm3wt1qi+O/0Otux+GU8qQN
+b9pfxjng/2rfUatejf1aQOv63BalXSf8ofBXzpOznjxjvLn+gh9n+J7sLlE
f6na6F9Mv4s34vo4aZCphgrjwM0bhV7PPQpbfVlRmCbNuOHOv/e3+dXH6jIW
+QG/1jlfVzSecVrgJlz/6fYf75/FmJMNi59c4eM6krGgBs6PX9v4bRxjjXb4
teKSlwJ9xuxRvnyW+solqloTGXMPwjEezVeeaTOWuwkvPeGXYmdI+b/C+0YY
lg7IU34lPz7LXm/sbO9hlN8cHpIScualCGP9alh878+wHPr9bl9g7Tmn5LOU
KL+iP9aHwc1Dh8Qo/1z4rfaU/s9kgbe/UP5iuQDcn3w2VNGeSXlN4EDTKsMk
I8rrBWdfXv9sFuU33wtXBrgs+JtA8zAsENfD9RMUrr2neZgN22uKqoXF0zx4
wO4zbpwbtIPmIQVWjLtUO/8WzfNl2Gr5ECVOIs2DURDWZ2FfUx+tB/Za+FLe
OjOrZJqHJLhs7a+vj57SPFyCD/xm/wz/Q/P8FjaY8XGKeCOttzXBuB5rvbrG
+zjN8054ydH6OdoPKH8xfKS5kP/tK+V/A3t7nlRoLab8Epv5rJOzX/rEtdJ6
i4PbJKW0M57QPJ/fLPR+jVewAzfzbv9Dyj8oROj9MXrwwsudW75U0no7B58f
3OBvTPNu/hy2P1ifl0nfN3AA5lfGXNbdT/l1QnF/IVpRXE7Pfxsc4Lf73nop
x1K/T+CPIptebKL9Oq0/VOjnOdphyLt1iETeCcrP/ue9m3rWZlH+bfA+n9jJ
gYep3z64ODVW1f4K9au1BdcPbR/sLPIo/1I4wGVd/8gDlD8ctmo23ptDxzsw
H1ZRt8pcFkD9jgvHPDxzVM4j61vDit89p22m+3W3UPjGzPK+5FGUPweeVePc
Mq6f9ue6cKH7Y7bVVqH5igmG+SfH1GzKofxH4AMTlRu7P1D+23DK/MqW2C7K
3wFfvu4Vq/+J+g2I4LOmp7NvevGp30PwyNxSSb2xtF/UwA8GpLYeUaD1+B02
ZH8K+Err2U1lG+4/Ob+Dvkyg9ZYJK27xF4SupP3iBmxxa59HvhftF3zYYbFG
hJ0PrUezSBy/pNCD/jtovV2H/SY1yqZ70P7QBh8J6Y+9HkD7g0IUPm/prTex
a2l/mwP33dpmdtGS8nrDN/b3P5ddQvvDR1hnVYFDTDDtD7Lb+ayBZfdNfuyi
vMbwy4zLVve4lHcd7FdQe+l4B+VNhXvEqhtt1X4zfcpE4/xtrXPHSZGx3Cx4
WMOBJYdYjM3d4WCxwAGRIYwDd8MPFS0vbR/POLcM/qWU/3fBd+rTMAb9n0rp
X/SH+nSF4zYfHt+uzLw/LREeCLZZki/OmFMCH9mumlPUS/mb4O5pCdfvD2Je
L06I5bOe9+Sd7aR83CJYz23h8TOvaX97Dfs+3Z01rpH6Ft+B/Tx95rZBHOrv
PHzSRvGE10/K9xK2+rP/U/AY5vPcROOE802Gw68nNFfrM9Y4C8/aIlFfO4ox
+5mwY/7C4lM9dN2nUN5J8VjPRbOu8f7rdxmczZUQbZxMff2OF+q7YUICrjcb
tk88rclYhA13n3BY+JX61o+Atd8o1q6i1zm98KiLgSGWcowFmjvxfUuuJJfM
oby28PnxurdltlLeLTB3xcbwkiDKmwcPkhiteG49HW+NXVj/Xs7uuqZ0vJfA
SVdbo/aY0PEOgZWO7bGzm0v5j8FOO/Pvf6b5aLgLb7d9/lokmPpclMhnGZ3X
tQnyoj6D4O2esx9WkzmHYYfN1acE/pS/Fn5bX/4gO4vyC2B7Q6Wj20qpT/8k
7F+X+1JHvqE+s2DpO/UW+3so/y34aMcNv87R/Uz+b/8c2fnpiRLjQOVk9FVb
eGGSJmN9Dhy49eBhGVvGbjx44tLK/UctGaeN2M1nSeiZBsdbM+bMg1+b3rQu
W86YfQ12it+mKO3GOOYznPRQvTzAhnGxfArmu11+5suLjLmmMHfTqZIDcYzl
1sNh+1XkpiQyzv0ADzqRdNs3mHHD8D181vvOFa6FaxiLGMNKJXVJBnaU3xP+
eoPt6bGS8u+B1Xrl3tcHMRZIp2J9bM/5FRnKWGMmPHxVjvSRVZTfDW64an/Z
J4vyJ8PbXzQfFkum/KWwd4bpiYMu1OeMvbieentyX64j9ekC791wKXF7L83D
LrjexEthpRTlvwh7hZt4FIlS/ib4ywm7cRH9NA+r0/is0a/2Ph3bRfMQD1sd
Ec021KH8F+D4/pMfO6ZR/ka4Zr52N5+OD1tsH+5XpyvvVphJ/cbCn/b59u+g
n5crhLddfbdKbSrlfwGfrK4IPqNC+UXScf+umXaxRY/614VTHBs8d02gfs/A
8bteuj6mz3N7Ch/QqtswdxzNx590oe/Hmbifz/oz94aL+lNaXw2wpGNskokC
9fkL3pldEXeXvj93/AEcb1kT/SPtNL92B4R+n/lWeL75iqUv6ecbeuC1dyxy
WtypT80M9F1fenpSCuW1gfd+ztFL20V5w2CTMfJPivdQ3lx4+1eL1JtR1OfY
TNj6gub4NOpzMXxZ8FvhUzrNw+ZM4Xk4CvuZfN93kF7n3oHlRJ/c9iyiPi0P
Yj/ziVPXvUB9BsJDFs8p9S2g/NlwyrMqyUOllL8WHpAInZR5kvK3w8udjfqX
H6I+/bL4rCoN7tbaGzQPB+HnA1myQyop/01YfdyKXwmzKf/XLKH5jFE6hH7F
ulY/iqd5yIB7ZkVqcc9Qv9WwvWtZ3egKyv8Fnqb9pGzBfcqvmI39YUX70+jv
lH8uXHzPqK7na7/Z/wD+0ojx
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3Hk8lOv7B/CJpOWUISktDNKCNLK0KOaJSAsjpUVHY0k5SiPSJqYSaR1R
UqqhVZER0lEyihYpk7QpmURqJplEu/pdv/v6/nHu88c53/frmXnm81z3dd/P
/fi+Xo9J4Jp5yzVYLJayJ4v1///9/39qVysZ/F9qZ/gX9xd47uzmXB1HYsGo
cCXz6WvigfEzicV88N9VCz7+vkjMqaHN/w72agkcfDaFWGS2Rsm8n9ma6zWB
WDoXbJCacnWiDbFiPXhaW1azlw6x8At4b9euA2uciSUcoZKZbtb15LY+sXwW
eFbtwatnLYhZ68CPCn06BvfA/CfA7MrNqxU57f9v2YgIJTMu3OaU4Cix2h3c
nDH/i3AWMWcteDOH/0W8kJifAV7VNa/DXRPz3wJ7TBo8j11LjrNnrFUyMzJc
7o43J8d5a9ZS+YTpYBOzUgfJM/J5yU1wV4rfMHYXsbwNPIlhj4sYTSxYFalk
0ryFMwN0iMWHwNonXhe9rv9I8irBWzeOjtv6nZgzKErJ/HXpou5rF/J5aQr4
pP153R7exIpScKZv/U5uOuZ9R5unt07JPL+7brXgOrFwKriHW99xnyYRs66C
Lw3z/cJ2I+a2gD+13gmy6Y95daKhXom7juQ/I3nEk8EheczDhzeIZUHgId2m
cZm9sJ5N0VR9RX+tVzJ1T5/tFB/D/A60FQLwAmVl0KdBmH83mLex2GnCVnJ+
SZ8NlOW24GPn3R965xOz/MF21i4PI64Tc3eCR6y3iCtXEwsugVNHRK6b4I/1
5W5UMulpm9bNm4n19QO71e67bWpGzN8BdgxRNk0YQizKA/dpUTXVDiSWPgfz
FJ+a5mkQ8xZtUjLVX2f+3taTWLiNtiQHPGDZ56aO7jaS/wl4jmUIf2AlMavH
ZuinsvIwsxJicRz48tl/+J+LiWXZ4IVpfe015cTqR+D8cUH8R/eJOb/Bvze4
/27qjfnHxCgZ7japYcoTclxxBnwtXdv+5jNi9kNwanyuoU8jMe8nOFAzz/Bz
PbHQfAt1vRIv8P6+Zwxtu8hxwTewfdTc34FfMa9prJIp333KMOU75p0D3pSe
1hkpwLzR4Omjfum4OhKLusDf25pLbUOJpcZxSmbNuM868Qswrwf4wTQfy6hp
mDcKbHt2V8382x9I3uPghNluvRacIpYPF8HnT+2tSb1OzHIXUZ/nRtDHBUfB
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
sXwaGN/H9NL5/wDjMSil
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
h6ErQudyvGlrjjQJS8ROVhv5/sTQE44qf+TzSY4H8XT4XYOGv632MX8oHCl+
EhHD8alMgr832+u5nPODqPso3J/GxKxx4/sU6VS4ZHKDVk35/lGxGW459at7
RT4vqc/B8d4Znh15frm3l0m4PjX/wydatREuM7Rp5Mf3kdoEuFmjob5DuF9v
yIbbpUkuunM8iyuNxv32jsOJs9xf0qyHS4etHOvG+6M+Dn75X5/+Ffh+SfQc
brKs8Fsc26UVx6A+jiF1flqex5zg5g7dXzvy+5lj4Li7hftVfJ6RPIGTMgpk
N7jfLS831iR8PqS714zvz1Tt4Mv1v5Z50NrR8K3YA/YvLe+HsuAEn6hp1tyf
U5bB3yKvLJppuf+2Hof1ld+yFCPXE/qRcP2xpWG/+D5RtAr+sqE0bAGt/gXP
6euV05nv63QtxmP9IPVc1Z3t5uFwxOZulw9a9gMDYL1eXH4x33fIo+DQ6Q41
u/P5wdB0gknI6ZDRdhfnX/EwuP/cY34y1l+2DK55yO9OgyPMfxiOajqwpAqt
SYN77Nz4O4Hvz6QeE03CluZZUdeiWV9/+HBjO+VQy/330MS/80tYnOV66W7D
+gVLSi7xecdcBJ8PCfZdyv6kWjjJJMw6tyDexPeZ2v2w1cWT066y3ZACPzT4
xFnTYjPssmOx/wZeP1mDycgTZ+V4mP1Lvwe+MruVQwSfl0Q3YE/x4nLBfH6Q
foL1fdO7/eHzv6Ket0kI0MYFLmU91QIc8fHBnVG8XnIj7FEvoXNn3m9VdlNM
Qp1GN+fFP2LevvCKyYOb3LC835oN5+3+cfAp25XvYc38sM03eb/X1FKYhH6m
tHAn7m/pe8EjL7UZ/ZH3e9FMeKHZ1PoGny+kavhSwqQ2Hbg+1dWYahKS+9ZR
VuT7Z3MP+N3J/MNqXl+JD+x+L3pJtKU/bIXV7/2Tci39ORF26vPbKcsy3rpN
w/P5gPMxkbz/yhSwfHaiWyHvt8pN8MUlaRUr8nias3BLu5Sybvx++ldwfMDu
b4c3sp6TfUxCBdsSscd01jMEtvMqaTCVvyfSxcOtksd27sPzm1/A9a/nhnRn
/5FYTzcJzud2lgSxvxtiYd0c52NWfP4QP4MDVnjM25/KvBVmmIRhE0sjDvL9
t7IDHLzl/HR31lcUA1fOnabsyv1v6WM4ZoVrpA/3pxSimXj+fTpMNM2yH9gW
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
75ag5zWKXP8HqgW+PA==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.8082273749073146`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.8082273749073146`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"SH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.128626341180853`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.034236415413073304`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "32.96566908549319`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 
  3.7050414278141985`*^9},ExpressionUUID->"c52f8641-c66d-4ab8-8acd-\
c7cfaec73d09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3HlcTV/bBvAUkqkypAmpNGiQMWncSEXpSCpKJRWleTakAVHCaZDMKVOm
UohMkURCipBokOScIgkp6r1++/Z83s77x/M+30/H6Tr3vtfaa6+zeia5+dt4
CAsJCfEGCgn99///+79KXx5D/63dGP+h8wdeIuPu2eL29T+7qvjxmKtTV65d
5cCay4GDDwv5tHl++c8Kz2CVE1y5ActZc37/5/0xDerXWUcr+fOYRb8qF6pt
Yv99rhXspcuTClzIuj4cHpHsoiyWzzrgJ2xrXbP6SR/77zMUAniMYVCs0881
7M8rFsFDnE3ytUVZC4XCLkWmATWrWescg/9+W3bT/QnrovGBPOZUrHFJQzXr
djM4VNI2csx09vMqBMGFxbmidzVYcw7D281X71bcw74++gHcWPVkWO1n1hKm
QTxGRK2swMKbtYl/kMDvDzgADw0/cSqtiXVGcZDA769og4cHrh85wo39fa4+
wTxGfF/b5cRk1tw02FFk/f7mR6zbefBg/R+j1Eoo79gQHrNpfuzaqftY56bA
GXOa2l5tY11/CxY+uHdO23LWEi2wvGR42CUz1iajQnmMukLh01A91gEGsNyO
bUMm+rIWugE/sn6VYuJE/fARVh3UxxFZT3nFwwR+H1cPvp7zWONwGOuiNfB7
bQWFVyZUz0Z4/GQnm+o/VM/h4TxmndIgfcsk6ofZ8BW50F1zsqgfXOHas56L
nrZQvXfBu3yjDT3p82SIRfCYA5uL902hz1MxA5Y/5NU0X5HyO8NXFRdrxd2k
ftgJf/iU90noGPVzHpz4K+hc11Sqr84GHnMnoueWAofq6wjPlpNePJY+D2c7
vOlJyMu7/qyjc+BLdSW/Hm2l+r+Bze79thUNpfo6bMT1r8/s1fSj+sbCPxIs
69XcKf95ONDnVJJ4POWvhi/eH7rR/grlH7CJx/zWyCtcU0X1jdok0A9F2fBX
2+qm+aWUvwpeskX2wuU8yt8Li4wL9jmTSvnVNvOYhBWHVjMZ1B+n4L7OBsuW
89Qfz+FbNUohXkWUvwe+MnSCyf4nlH9yJI/hHdul3ZRJ+a3hyyLmRy0uUz90
weP3T6ra0EJ5FbfwmHEOTRd3fKa8lrDLiYrASXrf2Lxh8FCbdVEVK1hH/4Dr
T9+Y99CUde7EKB4TWSHsaWrNut4CHq2+YHm7B2uJEFh36N2+4AzWJkfhqPpj
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
GwYq+iZh/kHHqeNdOvP4/8f/ByU5WPA=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
yd899RI3Yr9QXkruLRMdkGL/iK3RRvMF1o2A8rnIb062v55izxuH/MvJo9yK
ncTYTxPvJ1fWsE0v4/rK7fBPwfi9sGMtxXH+SPL0/MEZo7CeFS0hO/z7ljMH
129pIPnburl9fmL8UF0mHyrwHp2M649wOEvJxC6uOnUW/UniRP42/VhCX/X6
zZ88aNgltwtoj+xL5IdtWr3i8Xrbl2SDTamL4jHfki3ooGTuav0aZ4X1F8uX
nPazLDNK3b4vkLXzLjxfjvUY/zlZ6BQ28hLmg6Lf5KT3Mt0V6vnQro5KxtDU
14yL/s07R97wa9HGWrRXYQGZse8T9RHrHckPcoj944F/Mb7LjTopmdZf+4eP
wfpIEE8+U5EZt+c26vuYvL/tVJQ+8sgayBo+zp83Yn3JnaWhZHbn7zMfhNdL
88g+wYnyVoxXqjpyR/0zPVqw/ufoayoZ+4ZJEyqwHuTZk13ODy2fhfoIt5Jf
G8/5GoXrE7uWvOrFZM0M9fjWX0vJLNjQFN0ZeQQMeYm8+7gN6v0HD/Lboi1j
5+HvZdFkycjPtVoYL/l9OyuZgI3H4pajv4qmkkd92l6+EvtL0o3k5kmCadtw
/lQR5LZr61Y04vrNuUc2iH+jX4H1kWRyFyVjubDLBHvMD+TryZeu/hoyDfNt
tohs2PB1VMIL5K0mBx/MCtmH6ztrXVcl4x9/Uc+uGvUMJd+sZS1oxvqEn0Vu
LQke6IX1r1S7m5IJtLng7i1F/Y6SR9nl5W9Ut9cM8u6XPnEN2N+RvCdXDp2j
DML1VN5FW8mscVk5RIz1PHsc+WHil8GtqL/4GvnUmSN+dWg/sjJy4H0PbxHa
C0tLR8kcehUfZoT2zuWSd++dkHYY+1d8Z7L1pMwhLLRHTqfuSiZ0/JHkYxhf
eaPJ3Z47mf1Tj7/LyK5Xh2dvQn+Q7CNvXb3zr6ME55vVQ8ksLp06R4J6C0aQ
NfYemv1e3T4Xk+/v66pvi/m/bC+56Cyn/jj6E+sy+XZcwhiRej0/rKeS4Vus
vleMfNKFZKlv0fJVd3C+/chdUx6n3EcezkVyc/YVPZ8C5JeRO+ef6d8Rls9n
K5lnf7p9d8f8ib2HfCmw7q/1Y+RPIMfeSCx/gP4iKCSf6XnT48c75P9FTjia
lSisQf3EvZRMRHx2yLFa5H1K9px3cou1CnmbyOk3jeMeYH6nGtSb+uf1Y9Lb
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
Ud3eBKj3p+aTvVK0imKw/2C7m8y965lnhP0hwXmyyCr3bxP2H1iDd9P6UO/O
VBPsZ3DnkjeuLHYMwPMA/J1kD+6SaZuwHhSdJY/tmzVCff2TPiEfyh7Gnoff
g/Bm76HxziAlvQfW38LtZD/LuCcC9fozjuxb+0c8Du1H/oicKQk4aIv9PnY9
2WlFUvVb3I8Te/nS/GrY9KFvumC/OJbc/fUs6Q/1/Y9c8snYezlR2A/lfidn
xSZ1ejwI+8V6fkqma+NZXiP2o1UnyFtnjW9cY4X914fk228L3PrPx/6rkrxh
ko9z4yrsD0/zp/XQ842rNTZgv/U+WSw/NPmqPfZbv5AbE/07jJ+O/dbeAUom
SjT0QBbu18hsyNudL8ZV4P4KawNZOt7gaI4Z9q8/kVtdez9athj77z330nxk
QXOfai/knUTuIM749D4Yed3I/pZLX+ZfR94w8us/f17+uoX9d51AJTP3sHa3
jXHYL7Yie1b7PjSEbdeQB9ayuop8kf8YuerE6Bt1och/g9z/RGBWJD6PO16o
ZDjz+/lnnUI9V5HXuroF+V9D/iDyIkGw3+GzyJ9O/rdsvvPsPchfTq6/WePe
4wjqeWifknGw2rV8ciTyppEdx+bMMt+NvO/I/ULa+m5GPluN/dS+dxxePkWA
+l0l3zm3NfmjP/KVkI3aJhhGX0a+Dgdo/nWu5lbfo8g3khyVbjVUHoj6JZOP
Np/j392K+r0ma638+W0b8gnbyC83GX27FIK8ww8qGeWlnKJuyCd3Iv8rucz5
h/cXt5APrhrpPRXtQzb0kJJJPDLugRTvz+KRk4c8NpKuQF5fsvHrkW36+Hvp
b/KrwZc+9nRBvYwPU33u6S88chB5Hcm7lYIjf3D+eLvIHp1mlo2JQN5z5G27
FJuX4nyxOUeoPyyZkZC/FvVzINc8mlQc7IPzvYOc3hb4sccO5I8nZ5r3e5K+
Bfkfk9eNmpqz5QTqOStIybC2/FgSuw/13EYu4+nXpe1E/tPkMallSV22IX8e
2fRP8oc9eD1HRS5QpQS9SkY9twbT+qNjYk6/dNQzhmwYM2GtzR3kzyG/qFrD
vVWA/LXkBNXea9q5yN//qJKZ/3SJZvlD1FNKNlvbMLimBHkV5NABXaQ78XpR
32OUt7Cs/vdt5J1KFlz77N0X/YV3jxzjLJ088DXq+ZnskXz3DjcJeXuFKJkf
0kWzrpci72Syak/VIn+8nu1O9juiNFl6E/WsJrMTuvYRXkA9e4RSf58Qo7kb
7Z01iex+qvqNMerJXUfO8Cib8Rznhx9KLuoWdXb5ftRTO0zJnN42s/O3INTT
ktxwVdedjfbP45NzU1WJlxOR/yi544IPtS7q/BlkzTVaXysxXtiOO/7f/spC
21OXUE9Xcra5pHq4M/IfIZ/zP/TReCXyXyO/0v7gOH8z8peTKweec3NA+xI5
i2j82Xmn8Y076nuQnHf2TsN2P+RPJY8M0Q++fgD5S8luXXeGZMUgf6dwWs8v
SQoagPYt30f2smueqC9EfVPIYY7p2qwA5C8m91K8l/bG+CxgRSiZS0bL9nTe
hfwjyCuD68edR/vkXiYHaBw0C0Qe/itya2WbmW448v8l61j8DGzyQP5hkUqm
pGRi0A4n1FNGLrI3TkzD+CNpJif3exPlgPYuN4mi+fPOBwkZGK/YC8hxB59a
bFKPt3vIi6Qzky1Pop6/yK99XpY2oL2wjKNp/mG/xmYk2h93Hjk8cHrhw4/I
60OubPsz+yUsEpMHvTJa9AvtmWN0gtbjJl7ZP9HeeXPIs7Oco5feQ35v8v0u
ZeeFV5D/DNlld/lWZ7QPeT55jJ5QzxPvJ5h5UsmccneZPjcV9RSQByUcvrPj
KvKfIruFpa0LuY/8eeRdl24n1qJ/c+vIHt1PBjw6jXpuiVEykVU9d73F9UJ1
ktw47rfRafR/TjbZd1xtfzuMh7xvZK0t0nURqK9QN1bJOKf0GVO4F/WNJhvP
jJrkIkJ9H5BzexVsmBaL/F/JOYN3abPx+eI+p5RMYWx+lBznQzaF3JYSuWwN
+X8N9aXe
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.8145432565085022`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.8145432565085022`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"IWM\"", "\"RWM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1006787701579124`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03509231096540615`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "31.365240415285182`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 
  3.7050414322273893`*^9},ExpressionUUID->"0383eb9a-36f5-49d1-abd1-\
f6ae37dc45bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EEM\>\"", ",", "\"\<EUM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EFA\>\"", ",", "\"\<EFZ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68772110106639*^9, 3.68772110604591*^9}, {
  3.6877212572034655`*^9, 3.687721262025201*^9}, {3.6877215083368464`*^9, 
  3.6877215085778017`*^9}},ExpressionUUID->"b1d487e7-f623-4847-a8d2-\
c923553c7741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3Hk4VO0bB3AVES2TZE1RUkqZFto1B4mUJUtZihAtlC2pqEGWihqUosWE
CFnaRLJEUZQm2qxNOzMVlS2U3/0+t67rd94/3vf9XGea+c597vM8z1kaVee9
G7ePFBEREYiKiPz33//+qfMUUPh/navhX8xB8PUIU8nvdzv+s5P6HgGVsSdF
p+QsMcccrPS0ySO/7Pt/VnkG7vHbOiZjkNj8N9gryypxlTJ5PXvGXgEVKqte
n1dPnLcBLMHX0ptyk5i/H+wmE/koDT/fqwc8f2n2FY39ZDtXxUtAXWo6tfnL
G2LeOvDU1XWnWrjEIvvAUnGTWl+VEDOTwBPupXECJMj7lSl7C6ixT07uFcwn
7lwLrhqoEAhtiVV8wDorTEbP30JsfuG/7eVGtm/aMX8lOLFhRsG3aWQ7Y40P
7fNZe31o388rAXzy/S298yPJ67kV4LgJI9oHMzD/N3By1few21Zku5OHr4Di
GDIaZbcRc+LB5xyLsg2PYl4BWF3Pq/NdOOad7CegZD4t01fcSJwXB969SumQ
0TpifjH43brDtitUMW8b+B51rN9DkpglvU9AsV30lvRUYd6V4PJ084Xv8fUi
ReDSLo/4WbLYD5/AF6PEra7OxbwT/OH7azyccsMF8y4DG50Lvtkdg/V28afV
1/w92FnNK11+FjF77H4B1fbtgOzR0ZhfBzzxd+Pk9a+wH5z20/OfAD/VyZry
OwTrOSZAQG3tnTHizhFi3iJwbO0kr52HMf9WcE7JlgFxH8wfCV715Ke+FOZ1
ugGuqN1vcPwG1pd5QEDpiu15ObUe62sPnnVIGNzdg/nDwAe7JeRHdGP+XLDx
80GDMSN/kPwN4Nc3r0ekihKzNh8UUPLZnd4TJxB7hYCLKtwHxSYSc6+BWxQO
lCpMIea9Ao9TbIlbbk4sMuKQgLrr97a30oWYcwR82dl2vMku4rIM8LmptYtv
biburAeHlM798gO3q/wF5wR5hfgZEpvPDoT37xiMrttGzE8Dv1xmHPRnBzHj
Od2sAbq9ZgYJKP9fF/aLr8T8ZuADh7jj7GyJnfrARiF+rGorzDv9MO37lK0H
OyrGTku6gXn9wQGa8mOUrhGzu8HrJANeTfHBek47Qvs+fGOwxflpMv37Ma8f
eCzX71jcLcx7Ccw8fOz972as5xQ21HeUx/rvrVjPtWCdCQtUXr8nZnqD70+a
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
PlI=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
8XKMNdazCnxmT+SouQPw+HcmUtcPkdFJav/SRSep6wm/Anyn7E5Wyjm8XrWB
167Z8IhljNcrTpKCeWxs66eywfzzk6jt7G1J1PVS/A28UHZ29BBNrKdeMnW9
ZM0FT133M7eTi9erLeDGmI/yvoOw3klg81l9TH+ZYD11UqjrNccOfFCPo/Zh
Lub3TaFeLzyRQtVXUpJC5ePNOEXtz28j+M+phEna/TH/MbC33DlQpwfml4J/
DRPWjv2qJPVcJ6Y+jzQezLWpD5nwiWxX3RJT+TkfxdT6gt8vVcEcTrVYUbkO
6ykC5w0R6X+2xXreTKXy8N6BRxzK+LT7ANm/n9ZpBaMZ/CNxVySx2Io2Nw+s
uFq9rvdQrOdbcH230y+W52D+3meo95NOOUMdf5UAnNLzTYVyBtbzNfhtr0cR
xq3k9RKNs9T+5Gbgr59XpwouE7M9wKr1C+YFHSbmRYB5Bn7HfM4Sy7qfUzBT
vjq5J68kZk0EP8jw8b43BvMvB1eY7Cm8PJ9YsB/ssWqXb8s3BcmfBT69ZuM4
0/PEHPgvc0B2bq9dBDHfDewomVPPiyYW7gN7Dm6xX+lDLLkEHtb78dvFAcTy
arBJQLDz1oXEfovTFMzRHIvEEB6xeA84SnNS/gldYlkGuHX+57+n2cSsp+Ci
saIVKYOIuX/Ayc0ljx49bSL13ZUO1/vHrf3vNhCrzqdT2zmP0qn98X+CA37s
80kwwPwjMxTMSq3ilLiRxLyH4Nvnd6rltZLX+3VkUO8vNrwA8y939JIbX8l2
2UJw+0N1t8iJZLugHLxU8WTgUUOsZyt4VXxN287ZxFKDiwqmm3Bqk1UCsWoe
OKd8YNLCPVjvrRep10u+XqTyynUvKZgEC4evnquI2XPAm2b1jRhzCfP7g9/5
rPiw3g3rfRJ84qb3/Pn7sJ46l6n6c2eBNaZk3U/TxPybwa9nbPbYtBjzHweP
ZfQrPnVi/mKw3bPGbc8Gk/7hM5kKZn2/K6zTS4mFG8CSE3kDSsdjPx8FH1rx
KbJDgflvgxfnbY/uI8P8CnDki6cT+z3A+q7NUjBNvocSLBKxH+Jos26BPygD
bB0DMa+2hKqvKgacVfJeuWca1vMG+OVU20xxfzz+jeAnsVaVBV/I8RP2vaJg
Slc0N4xcRyyxBGfcHzV12gJi3nVwyxO787NtsR/egEtePDtkO5dY3Csb1tuN
39vn2mA/TAa/+hj2irEjhhteBfNGlRPVN5xYVA92152YrLsN+7dnjoIZfHRM
ZGcq9u8kcE7rzIAeIuxfd3CsTQxvuC8xPzyHen+5+lVYDx8fajfFhZjNBUeZ
C0QuJph/GTjVYPjSpaMxfxg4efDX9MPvPpL8meCGlM6CrDxirsk1ygJXsKRr
jn/sa2LRXvC69nj1CCWx9CJ4b+i4v2fuEaue0T8vdMmF9dpM37zEJ8SS3eCJ
Vd2zc7OI5em51OvZT3Lp/L/BtmrOJxdNwfoGX6eOB+s8+Jntnl/uw4m5MvDI
72fmLbAiFvwAN5cPagv8jflH5CmYRZ6Vy09VEnPOgM2c9TWTZcT8yjyqvsJ2
8NIBXZsdzLA/hufD+v2kRpeA7lj/BeBwrS09XMdiP3wHbwi+6L65N+bVv6Fg
jmz+dC+9iOyfNQ9cFj1/w+WbWO+AG1Q9pC1gl+Sl8d9WYT2H3YT1pEZ8k+Ys
zDsbXN18Z9xfJ8zrBz5d6R3xww3rnQhu+R0Q0oWP9RxaAP1RPEe3ZQ0xbyb4
gJW4Xtua2G8T+IGNKNG++QPJnwAe7+bhtqyeWFYE3tU79NycNmIB7xZcf7us
sZreFeu5Hmxat03C+0u2S4+Aj4vnOXAHYP5CcIcF69riRrKd03SLej+JTyH1
enkseOzT2aytt4jZBbR578GsN+rHrHpifvZtBZOZXqbyqiLbWTG3qXzcfHDh
KpNJDduxnxvAxqO6PHp8CPP3kVL7k1qAgyI2LFr1jOyPnws+/7dEa99FYqEc
zL6TkOkvxfyaRXA/kRC0LS0Y85uD1fp76hUtw/wrwfWOe6b27XhP6vsK3G/L
q1f9vhLLehQrmK1RF0/qNxCzJoG3a5d8U1Mjr+euAPM2LeoY2kS2Cw6A3Tob
WyaXEqvUSmC9M3Tm0am3iTkTwGI1NQ/bfGL+Unq7MBQ8ouaA/cRyYsllsGbZ
81+mD4l54+8omC0aR2ZaFhP7LQHfGJCTxeRifuEdav+yC+DjD3aMUo7A+j8D
V6cHLh37lGwXOZcqmOjkZc0cObE0pJTarkoDPxbPz3CPw/yPwWvrtmtuDsH8
v8AyXTPHHf7E8qC7CmbJtsoTDmeJ2efuUnl4VeDpTZPFZvcxfye4e1H6wtWH
Mb/RPZhvPb4P3bWBmHsaPMmyi1boaqxvBXhMzE+TU9Mxfxt4+bgZgbcGY975
9xXMsrSxw5+3vSP1LAO3eG+ureyK9fwGvjWbbVHWE/PqlVHb2XPBZ6asene3
F+bdAn72OI37rpHsT6YC79cPbWivIGYNewDzpO/T2NYqYq7dA2r/Al/wN8X+
SVeNMO8J8N0vA4dcHo/1HFJOvR9/Bni7dcuD2wOwHzaC9ervJn1+QfYvOVZO
5ZFLwaGJGw5pXyL2s61QMNomcb2mBxCL14HHTWPceX6YtxBctHNTIX855v0I
Dtxk7zTHh1jqXUn9vEoE1soIynF1Iua/A7frNuRbb8f6aj1UMOXnDrbriInZ
0WCHoD4fe2cT8/LAZcMDTpnvwXxvH1KvF/euUjDBLV4XTCKwvlOqqPyCa+D8
6W8O/LpLLHoNfhmhy3Z2w7waMgXTZ6Tncv+JmNcMPHpyv8sBpsQcD7B7TXi6
xzysV/dHCsaXN3FoiCHmnQh+tPxvdUR/zLscbM15sm2nMebdD57zqEePMdFY
P7XHVB6uKfiU6aTJP8owrxv4+ZLbEeXqeLz3gd9ds5qnl4x5Lz2mjhd/3BMF
I/97Z13WGDzei8G9duiNl/3F470HLFog1i3Wxn7NeEK9H/spOD7k95l5a7Ce
Tk9hPfe0vdiLh/XcBbZKuqkX1wPzp4FPXo98mdzRSPI/An/w3LOz8CGx4Cf4
pz2PKblPzDn7DNZfFx7YvbhMzH8IrnSWjSp4RCzsAF+5rRHyJIdYYlitYCb4
pjTeKybmpYLn/Jxc35BC7FcO7nxg3FSXRixurab2LzN4Dtf3UTnNLYeJWfNp
i+6DE7KWjXuUSyz9Ck6L+zRTw5dYpfsC1suZN7oMFGD+OeCX2fM/9FmH+f3B
2q7Stx2hxPIv4HE+vuY/hcRsnRoFE9N98fzmOMw/Czxyxt6Lv0Mw/2Zwl62m
D6TlmP84uOnDMdnZL1jPwbVwvxXzK7yiAOvJgG2duL//BmH+DeBVvd5NeH8S
8x+tpT6f6nYttX/h9JfU8ZKsBVsMOVt68T3mjwMPZ48YsX0c9sMt8MyyF0tW
LMR+/vCS7gevOphPftP7hg3FfhDVUfXk3gC/vhGYUHsB8zeCT5htCb3+HPP3
fUXNC04U2Oz97OkjjmA/XwdfjrrUumAVzoc3r6j+k/Sqh/XpwQIrrSw8HyeD
N8Upm16q8Hy7Wk+dX+L6eup8kfV8Tb0/ywyctrZwo70Hnl8vwTVq6nkbLXAe
qMsVjMHh3hUxmpiXCz7XeH7A2mmYdxm9XRgmp/Kzu72h62kCjuTL1+8xwLyu
b6j5Id4Ldr603veIGua9+Ibav2DsW7i/7LAzTPuE9XQBfxtwVcPXHPPvfksd
L1X6W2p+cZ7QPy9xbFAwC7p5RUvk2A/B4JyZw5/lP8V+Pg++ds/SRNyK/Sxr
oPP/aKD6ixXYSL2ee6aR6jdBZSN1voraG+l+Hv4O7oe3RIvVtmH/PgDbTy4e
aGmG/fsd3Dz0u+v4GZhX/z3Ub79J5swRmHceWP38Ice5+nh+3aO3y1pos3Q/
wP3ClQu3HPth3tngncbdhFs+NpC8fuAZYVFh4ZXEqs+0OUM/wvX2rHL04XvE
/Jm0hZvAE/Ua+6/7TixJ+EjtnzeoCeb32tt3g+uI/Xi0xevBpU87dOMLiWVH
mqj9s27T20XTFJSlPmDR1cTA6DuYPxacwZsUcEGM+Qto89+Dp+/yeHrjELF8
jVLBbNzx8HPRPmJ2DNh+perT15mYPx+81vfU9FYe5m8ATyofM1NzFDH38CcF
05ioa99tAtYzF6xbkpH6dD3mlYPNHZiTqtmYV7NZwVT03e/ywQnzmoMlQYUX
/phjPXPAmW3nnYYMwHq+Ag+5GdTSYwzm7fFZwdzvvuSsjjbmnfSZ2h9vBbit
y93C4T2xnrXgt4PU23T7Yj3VvyiY2k1/B1gp3pL8E8BnyyKH2lcRC5aCD+bX
3lvwmFgUCu4b7Z43rZGY01WlYL6HZHpbfyDmj1dR+xMuAftljNs+7xmxRAg+
tl5r6S8LzH8B/F7f/HyTA9ZzTAtVT7EzmDWhoV25EPOHtFCfj5UO5jf0sKtZ
g/V/DE6K+f2mcyrWl/9VwSx8+eJIbyOsb9BXav+cc2CpO79kSjPmrwJvfzj0
7+wXmL8TzGntPmbFLWL2zm8Kxil20dagY8S80+Cur4xHR+0m9qugLW4D1+47
Jjy2hVjG+a5gdvc8P+XkRqzvKfDBh/5mGcuwvmXgs/Wc/RddiaXfwIWfq6ov
uxCr9FqhnoXFb867Y/3ngneFRddfXUAsV4E3//fnCxvMO6yNej3Pro16Pz9f
sMvYXxaFtsSsz+COrF6fi62wH4a0U+8nmNFObRdtpC091k69H39gh4J5WPAg
NCIM62nbQX0+yTrw3DVca4kj5o8HyxYHzqkwwfyF4NnyIQ1lXKynTSeVR+bd
SdWTFQvuJ71hWzoF898EW+5NMdx5AvO/A1dY5ow77Yn19PyhYLKN1WpPeWM9
o2nz88Cn7bYU+WRi/rfgiMklvl5XMH/vn3B+Nz/fGROM9T0EHmtxszL0INb3
GriwxnIDvwLzvwYfH7I4Inkd5tf4pWCmqucGedzA/Oa/qPNflA0WJ4yPu7sL
+7kOfCA8hHdnD/Zz998KpmDcN+usROznieDO70ukCXk435aDb6S9bLgfiOdb
DfjPhfJT6uNxXqj9oT4PzxT8oulDgVMZ5nf7Q30+8b4/1PHjdvlLHT/BOPDV
ouzkBi3sj8XgumF2s2qHYX/sASde6bbwTT+sfwb48efRvdjP35D6GrOUTMed
00s5xcQSJ/CnP9Ur+j0llu8C/7+fZ6eBH43XfZ10l5j3CHxdd1NUYhmxzKGL
ksldtmrV6HxiVhC4Tvutnf8lYu5ZcNqEnds7U4kFD8FejdyPd0XEog5wz8ip
PeP2EXN2dFUyWzb21J4bQ8xPBZuuvLbk9CbMXw52TVwU/3gv5m8Ff3oW+P3t
Rsxv0A38PcAjYw2xXwp47+Yj8bNticX3wUtbe4RGWmP+r+Bfz9V3vNHFvHPU
lP9+X0csLQXj7weJVV/AX7jmjSdGYV4ddSXz9t6Ska8NMO8ssJFjXHgKB/Nu
ps1uBm99X7C+lIf1HNxdyYzon5KjPRHzMmC5afqqk9sx7wZwd3UjycVVmPdo
d6p+ggE9lIxswaB5noVYz+ngLa7+5xTdsR/W/rd9PTtnTC7mjwNHP/d36jIb
898CRw30HhU9Getp3RPyTDqu98IY6+kFFkZF/+5tgflF4MGH7h4UTcK8jeCf
bX/laQPw+HtqUOZGgb2TagY+ws8nuA5+1O329k0rsb69NJVM3tOBN8+ux/od
BEezqm5wL2P9roJ7ZCf4FTVhvnpwgMpgnakE8/XsBfszzJebuWI+M7DN/biB
7luxfld6Uf0newmuSlcLzz2Hebv3VjKvnjT7NxZgXi743LGy7GsdmHcZONfa
p11QhPXq1gfqkav0sknBvCZgw6AvXyrDMa8rGH//i3n39qHqyWP1VTK/T2if
cTHB+o3tS+1P7AIueWt5MP065t0N5jZUZEZEY94McFWkpp4K6yMaraVk/A91
De6L7y91BF84OMlbshyPd7AWVW/OeS2qn/kyMP49AOtpz6b6jR0I1hC8OrV6
GOY/A76k9uG2SR/MXwk2Mx8hrn4hJ/nbwfcvz3oWkEMsEGsrmVTzvDu5WcSi
B+BnLoPW3swgln4H56cudul9hFil30/JzNh6tm3VTmJhMti81z2LNH9iyT0w
S9Pzz1pfYnkLePKnikp5IDFbt7+SGWrV+8bENcS82WCWcu2R0zuIZXfApz8J
vkr5xKwv4N5XzGMlXsTcoQOUzOjQL31HBWD+mWAdnX78DRsx/ybw5R+hRXeS
iTmfwHHGZTMdRMT8QQNhf0nJI51fYX4e2OG+Yt7tNsy/HrzPzmLcYKyX/Ag4
uaN9+t1mYr/+g6A/MtP7Zl/Dek4Df7Erd2jPxPw+4B1L+t6t2Yf548D4fV7M
XwD+O8f1casH1nfqYKjf2KLUTeuwvmvA31bHbhiO9eLEDKaOHz8fLIrREfb6
gPkbwItmPWl58Qzru3qIkrmntMxgncH6HgbzXrZO0q/C/Lng7Xs2mGooML8c
PDrKqU/MW6xn5FDoPw3ra+lFWM8ccMvHOu2z9zDvK7DYOds0JA3z9tBR/vv9
O+adpEMdb4kEPOyWUb8h+7GetTrU8WCrD1MyfQJ4t4y2Y94JYOM1rWdXBmPe
pWDNIQcqNxZgPV+Ah9Xp7arfhfXsqkvVTzAe/Jz8PQXzLwGXnXlTrTkL8wvB
72VLZln0wnr+BQ/LkfbPGoj1HKOnZNz1uvZO18f8zuDMR6OWHp2C+UP0qH5l
p4NXpg5dE22L9Rylr2ScLG3OPbHEfuCD1zVzexhgXlYweGbHTfu5JzD/OTCr
YvPYuj2YvwpcFvZh46yFWN9FBnC+uHUf0bEc67sTXN7z752xmzD/afBfY/e1
E3wwfwXY40+P029GYf422rxtHCVTO2b/lS8DsL6nwN91pp4Yp4P5y8D8qyMW
NQ/G/N/AZ70HLpzeFfPrD4f6feFn/kZL74IDZcUGruaYVwUumZIUPPjta5J3
mCHk1TvGjWgl5tuBuxT3Gh/AxnqWgCtep674qY71/AyesWBO9CRtzDvEiNru
NwM8ZX9w7AgjzLsRbOG9d7THOKynEvzH29GmYAnWc+AIqn4iW/CGA68frB6J
+deBdY/czfioh/njwZnZ4788nI717DdSyUTUXREXOmM9bUZS2+Xe4Hi5v//S
iZg/FozfXyefl3cTjN/Xx3pajVIy/Xwy/PRryHbWGnBQmtf10ZXE3Giw6U9f
nR7txII8cI1P4P5dapj/LXjDuRrzMZiXs2o0nD8us53dd2M/HALj8wKY/xo4
a6vlsBkOmP81uOCX1qySRVjPCGPYvnj6lWBXrGc2GP/eiHnrwHEaVTURx/H4
9xijZByF8TvKErDeE8EFrwbW/lqM9cwC37aUleVoYT1rwPg8AvaD2lglczSQ
Mzm5FvvBFKxoyF/V4UUsdANn8Id1kbXWk3o+B4+4cbhx/RNiXpdxSqY6cs8X
zzpiv3HgNzvTXVInkteLF4OFBu+LezoSy/aAbXTbulekYD3/gFctLY49LicW
GY9X/vv+PLHUCYzPNxCrdoGbhmdO3r8Y86eBDdSGqP9eSSwZaaJkIu8rz3za
Six3AD92NVxbF0nMDgJftZ3l3WcB9sNZ8LhrC49dLiX2ewgu3ipyOPsI+2GR
qZLxzbNxUuzAftgBDl7n35D4CvOngu1Kf37IKsb85abU66Wt/5k8L4H13ToB
7gf2+yi8d2F9U8CGvedcK0vF/PfBWZFVB049x/xfJ1DnC1uPq2SehgTIFGxc
/5wEtzcklbzH+wlZKbi71oHMAY9w/aMCm7dNqJjXhP2hM5Gaf4JZtFXFE6nr
J6cZHDDiynQnLq5/Bk+C9azYva35BvYzA8a/92M/bwA3X9I9nKOO650BZkpm
/cMpyW5h2M/TzajrtWwteErmi07ng9jP8WbUekKkbU6dT1JrcPjPi5r7F2Be
L/DY21lHBk3GvCKwo+sUrUQunn83zKn5LLecTF3v2Z7gG/uWK+yScL5F0fa7
Dn5b1yyyScf8b8C9amM7X1dgPQVTlP++z4Dr34Pg5K7Lp01wx/XmVXCp08F3
BZ2Yv/6/7eT7IZi/pwV1PgvDLajjLbkCZuJTBMZ+mP8luKU+sL+1G+bvbgnz
L37S/p5zMD8XbDEn/FaCGdY3Ezzrsxv/9Risb40ldf3ldrNSMkdCQ826z8d+
MLGi5rvIFWxiteZz/Hs836rBafKyczdzsJ9ZU6nzVzgWfNv1gVlQD8zvAs4t
WV74bQP2826w/eVK+3MROC9+g99dUK8zDiMWj7ZWMo0fO7OuBRDLHMH4fWti
1i4wfl+ZmHsefMT82er7y4mlI2xgPelmVKzRk1hlDy4482erruoVyR8Idk6d
0lWsJOafAeP3scnPCyvBLp4zTPv/ItvZC6fB+nXfzgjXuTjvtoODRozSvuuB
+cXgo23yaOuNmP8BeEM38Ygu1zH/d/BgPX3+4YU4LwKmU/NSlAzWvPAqbm01
5r8H/pm9P8TDFvO3gOMktzTfTiXm6NrCfLO79Ptgd2JJIhi/f04svwO+3TS8
c9twnNdfwN80hElBwzDvTJ6SeWFRqq/eF+tZDJ7x6/it74ZYz09gsZZludlj
8vkFgxhYr+7c69W3K+blgfdVjvuasQ/zrgffMPigO6UK69nEUPUW9p8Bn+9p
r/VGH4gl08DeVl5zi9ZgXp8Z1PFkx4FLBA+cHn/FerJn0vWcCl57a5c4bT/m
9wKfHewTzBqA+WNmUvkE+eDVPXoWWfXD64fFLOW/5w+wnqvBOlG+F8XRxPzD
4JVOG+L5jtgPueC3a966Vjnh8V9pp2QW+Fx4sMAV6xkJxu/Hk88nzgHXdMrm
79THvK/A+H16rN+B2UrGs6x/8yVDvD5IwDkhllMTp2K+WvDZxPPDV+/D8019
DrW+4U+YQ80v+WVw47YkF6EjzoMX4K5hg93ec3AedJ0L/XfbVXA1G+fZ+LnU
+kC8BPx3ktT7eDWe/3/nUvNcNGYedb8jdQYvq7igs+wpzq8QMH4/CufXr3nU
ekQyaj49v/jgUZcW7lhci3mDwRv8565Ux/tD3jnwJs12w3mzcX4ZLVAylsZR
zo+scX7Zg/eLW3QexuL82gmOL69V/4XzWXCatqgCvHATd1nPaXg/v2Ah9fsw
/raF1O/PhKfAPdLNt7gF4e8jysADtftN7I8/L/+2kNqfOGkRfL7kLitjX2Pe
u4uo+yVWyyIqD3eYPdwPapr1v5eI9TxhT81zVYk9df3hfAa/68y55L0Fj/8Q
B2peC2c4UPfn7CLwC/+60Hd4/eQpHaj1hN9APrXeFduCJQteZvf7iOuzdeA5
8/rzjjXgvPoI/uZmuilPA+vZzxGut/UZf+rGY34bR+r+QOXtSN2vcGId6fWN
lpOSObcie9GzOLweWIGbx7x655iA67M1YP0ZvWsiHXB9Fg321rLw7+6C+fPA
XovG2cXPxPWZhTN1PnFXgV9/F/26wcb8h5yp/YmuOVPrP76HC7V/YQQ4qsDF
9cNznK/ZYMMp2w6HZeO8qgPj86s4r3oshn4Yk9tW6IPzav9iaj7JssA3r9/x
//wQ51UtOHC1zjsne5xXakvgeLfm2QUX4rwyBWt8fOTdWorz/xK4LnPTzlWv
cV49B+f5pzYfScZ51cVV+e/5MpxX42hLFoO5R78srJ6H8+upK3V98PvjSuUR
G7spmUH7eT+fLMT8Tm7U9Y8V4kbNT9FPsOuQ18t/FeD1YORSWO+mFI5a+Rbz
O4DluUnGpsNxngWBCy8sDlizB+t/FvySZTxPehn7wXCZktn7puVz8Crsh0Vg
18+SMOYS9sOOZVR/+qXSFpeDD8t0XPJzsR/mL1cyUtNN5fPF2A9bwccvhhSM
MMF+SAE/OjrIZl0gzuP7YHyeGOfxVzC7IXaIZR72h/8Kql8kJ8H4PBzmLwX7
27hckB3H/Cpw2ulnj0zvYH4ddyUje6LJbluL59txd+r9WSXu1P0Vtxns4FsT
NOQE9sdgD+r6JmI8qPUPXwHG58mwHwaspI6/ZPpKaj0hXwsePGfh6Dnu2A8f
wB6ilT6veNgP2gI433Ys1bV3wX6wFtD94C2grodcEdhm9oj6A1nYD31XwfrB
3jnauQX7wRK8zKOrfPFn7GdP8B3D6t123bAfosDtQuO26k+Y/zr4ocO361pz
sZ5TViv/PV+O9RSAO2aYG87/jfkPgjvVePa3+mA/XAXj84+Yv341ff/m7kld
X0XhntT9v/QK+MSmyI8J07AfXnpS6zdO9zXUPJBngvH5cZwPNWD+xHfnD2Xg
+dfNC9b/p977GogwrwmYmRoVu7cf1vMSWFWyYshwBVlPcKvB+DwjrsdY3nD/
W7faU1JNLBoL1rmevG/5KWKpCzh7+xtrp4u4HnsCHq8/51vgTlyP/QaX3wlb
9SYB12OjfZT/nqcmljuC8XloXP/uAi/WjnC/aoLrmx9gfD6NWDZiLaxXmKNO
N0cQsxzAek0/NBpa6kj+QDA+/0UsOAOu2PJAtK+MWDV8HRyPXycGG6YScxaC
K82rC1priPnbwSHCK749i4mFYvCF/IEeSenEkgdgfF6KmDdvvfLf88TEfgHg
zwXqOjXLiMXJ9HbZPfATxfwkz0XErK/g5h+dzV7ziUV+G5T/nn8iliaC82tP
zl/Fx/x3wPi8Eeb/Qps/dCOsJ3pl2K6dQyxPAC+2zjX3nU7MLgZzli70ajfD
/J/A0qKjfx95Yv5Bm5SM296avPu+mJ8HNjrl28T3wvreBp/7Urt3xRKsbxP9
86L+m2H97VhRUrQT808D30hK2/5UgPl9NlOfX8L2hfXevi5dI/Uw71TwojiJ
8yEdzOsFxuevMG8MuOl+knd9O9azjx/Mu4CvNTN2YD0twaWHZC+1czHvavAy
9RZ2lgjzHgYP3eIkOcDBvLm0OZP94fwd16NhI4P1XAlOnv1MvHMS9kMkOH5o
nk9m80uSPweMz3cRy1+B38wrXXGtkdhvxRbq84kPgOcd3Hum8AXZLpOA+4aO
WTCvnJj1EjzxT1PG6V/EXPUAJRN7VKx1v4JYGgqWh+dzZzwlVl0Gx7lesrZ+
Rcx5AV6RM4XHLybmd90K66Uz4Z8XlRILx4Pdt83YWPKYmH0RPEqraJZXGjHv
GXiIZHZYfzb2w18wPi+I+cdsU/57Xg/r7wxWD4/9sHcU1vcx2GHQ/Yv+1ljf
X+AFfU/8PNuJ+Udth/mn3PLO6Cfm54MTWdm6Bl2w/sHgy2N88iUKrG8nOCCk
uE9nFNbXaAeVl22/g6oHbyd4j2l7SsY3rP/pHVQ+1vCd1PnFXQCelqVv7bwa
828Db3t+MXpECuY/Bd6jVnbv81vs5zIwPg+M/TE3UMmEdUwMbrLD/tgCJo9z
6mJ/JwVSx1N+F/wynh8yxx/7uwWsESNNsF+L9fUNgvXkyT0mA3KwvieCqPnA
ugM2SOBZhRlh/s9BVD8KhgQrmbJbJp4neuL5dgwsenKkwaUA+6MInDHcUqMx
HftDCX5delmtqgTrbbsL1vP1OQ4eEqxn4S7q9X4fwfh8IrG4Xwhczz9PdRP/
xX62AReFpo6z24p5fcD4/CbW810I1T9Srd3U+aGy2k3l4awB3/n29cDSXMwb
Dbbcvv5aqBDr2XuPknmum26kPIX9YAFm2b9alT0L868ChxkKnM4uwfyHwOv4
556azsP818BPBgQG6Hvg+WYuVDKhApdRE2djPT3A+LwlsSgCHBy4zF86Cfs5
m/55VR342IKBXybzsJ779yr/PV+HebPAwzjHX492wry1e6n356ntg3k1weDj
ulScB5fBp77ryIauwXzPwfa7FUvyrTFfl1AlI3gXf+/5AMw3Dnz2QkxW+PNa
Ur8LYE5179tHS4n5T8GnR+10Tc0lFv75z+T5UGKJcZjy3/OHxHInsJ6oaarN
EWLxT3q7bOR+5b/n+YhZfPA1B5Pvk8TE3CDw1ajh92/HEEs7wA+TZUOLDxOr
DA/A+sD18tG1yzHvIvBYE7cqnWGYdwd4+pChxw0GYt5UsNFsD50LPYjZnHAl
U5KZdjXMgpg3Hxx8JmJu8Exiv63gNJ03mklDMX8KGJ9Pxfz3wefdntUbaxAL
5kQomdqdZvtMuhGL/MHNqR/1b3+qIflPgn2/Ol9/8IpYVQpOGpd3zuMOMUcF
vha4vLxZQizZHAnzTLZYoRFFLD8OxucFidkl4K9HHR/nOxDzmsHb0u8fs3Qk
9ht8UMkUtLysfmhOzJWCb2y6s/tjf2KBAuwqUhxZ149YNOCQ8t/zdph3OviL
g6m9QJ+Yfwssdh9o8n4QsfADGJ93w7zah5XM9dGpP6LfviB5rcH5F/OctnXD
vN7gsDL70N8dZLu4ETwsMs7muxrZLusbReVjWYH3H1qW5aeB+T3BU04w0W1d
MH8UmNVaHtfrA9mfqlc03M9OjqgZ8JKYMwX8SaPXg+7NxHwBeMhez8OjS4iF
B8H4vCGx5Gr0/36fRMwzi1Eyf/yuTh15l9jPHYzPT5L3F4fHUJ9HdiWGysuq
Az+56XN2Bwvru0ykZCY/n7w6tIX8vDQM/IC/JIFTgfkzwUcuyU9OvoL5a8Ae
D7ZX3DqP+bvFKpn7FdNtp17E+u4F4/OCxOxL4MDakfrSM5i/GozPF2J+Vhxl
8Vja3AwwPu9JLHgS97/ftxGLfoMfdy7fqabC/KPjlYxhprC0pQf2gwyctPj9
rqHPsJ4/wA/6rS6Jr8O8I44omaPcjm/DHmNeB7DWC/eLM09h3kBwvOKpb7EY
69kO5qkOpwS7ErMMj0J9dxzJThmLeRce/d/fTzDvdvD6hsqeub0xrxicUD/N
6FY3rKfBMbjfOXCmtlH2nNRzHji+um+AqohYGAB+5WVnIa8mliTTPy+/B04r
qrJuvUnsNzsB1uevvTaGXCEW+4ENxzEGohPEskTw7UU+k7WPE7NKwYdMNOJ6
pxBzv4Cb5z53GBJDLN10XMlEZrRYjQohViWAc98uNr7hScwpBs/9NKLrzF+Y
/xN4Za6kSnkP8w86ofz3fCIx+yj4TL74kHEQMe82+NFV9vkJ/pi/CWxpViQt
dcH8/ROVzMA81uqNRph/Gvhu6Qfe12HPbf8PaOQ4Ag==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
wNeNv3i/f8w+y+H1Kw8dOMj8UuMWasGjay+/K6eYXwI/69v+xoB45veAJy8f
fbVuMvPvgk8l3b3ly/vHu7mxWriZub00/Sb7HAobuCWbxWYz/0L4zenkybnP
mX8HfMna7M2ZEuZPgz/0et36DPtQDG6pFtptKdq68i37nQcvT1iVlPyM+bfB
85t0y+rE+1V6BR78dbjsG69vyFu41TTfjMnMJ3ZvpRZGzfLJN0xnvxHw3Nc+
rnaHmf8iXPVk+oNm/H1CCRziJGsXRMvCWqsFhe0VjzE8f/l52LL489fS48z7
ArY9dnb00DTmrddGLZibOjztdpd5LWHhhJG1qIB9psB+1+a11X3IPp/BkVfn
Oly8xbx126qFAJfs7f8KmbcvvF2oWe+Zx7zTYKnd9SOVSeyzCN424XjYcyX7
1G2H8XWv3+8a9iXrDVuUjZsUW8r8k+FyE+8im0rmD4FDT1zUszWq1Pb5D46f
6H7gaiOtQ3q2VwsL5nSruF9f6xQXeJzn3mETfjL/Grija1LWZv598XF45uAD
s3M07LNbB7UQe+Xpn28cr0opbBPktfM2+xEFwhuy/r37cZX5j8Cqmr9Kv9vM
/xAeIPo8ahDza8Z3VAsv+h9tv+ol+/WHh654XHaP41t6CG42ukpndRHHwz04
pe/mpFfV7L/q/y1ZaaIW1DZNEvTrac/P+wBctNg6x0tP64TbsGPWGoOu+lor
v8K2CtGicc21FnXohPl1TVnu+yZaK3Jgl/zhe4rZr0YD56c+6yFrq/3cpK2p
WjCeZ9v2RAv2PQoW/dpuuquu1iWZsEfrq930eDxxBXzx8/FMD/59SavOeP7X
tZzl1ph5R8CbUrdvc/jNvr3gflcu+r76yj7V8Ea3CV8iasdDiy5qwUHhsP8v
x6N8OHxBdGDMdl5PxWLYNixjZBn70eyEpz9ylyo/sM9mXdHHtgpnXx4vxRZu
5tNtlg+vT8kCeMHBpSbPOP+It8PznGZkLef4klyDK57eDhzG+Uw5qJtaeBhf
4JfblH3Og59Z351gw34touCqc/PbvWE/sstwekZPz+8ireVv4KShjyqnfOZ4
mNNdLTQZE+sWzfldGg7bi3Y8bMD7M+QC7G310/MN77+UV/DYGR3VQRy/3lt6
qIXSueZvsjn/J5yD/S+PdT7/iHmfw1mtBxfv4npMVK+nWrh1NjfGm/OJRT/4
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
foGqz5gC5h8K9xxVt8ma59+G/w+HjKO+
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 2.246579698528471}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 2.246579698528471}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3038302027455961`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.07388807178314527`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "17.646017432586664`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9},ExpressionUUID->"a43e2b8a-46d8-4b1e-9ed9-\
8d55d2f33405"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
3zaNbVyP68vky8R+QVMxuGt2nPzQAMwvB/8z8G/Q5eF8zOOKnMoxvFA5QA/X
Z0lXiP0Jzp0rxHrWUSUH1kd7B6YkLWOsSADb8Og9K6wY8wrAy8u2CxxvY94P
4DEdESHTvXE9PPSqnCrya090CsX1z1xwfE3ABbvVWM88cNPgYxLjYKxnM3jV
m1CxaxzmHXwNrk/Tr87/rmJeA3DFq/39UiKw3o7XiPWapOEaUf+SAdehvzFz
WVhQie1hNrh8aPeH+ydxPekA/sudYul1C9eT+8BvGuzayy5je1C6IaeuKduM
1w3CevLByn65mVE+mH892Lp/oeabdZh/zw1iPSi9DM4KtPrYkoHtQe8mjFfK
sjC1fdgebMGe8ysvhq3B/JHggj685gAtzH/hJvH6FM9vEvUU2+TKqaj6s5+G
ZGJ9w8GeZp/qK+5g/rO5xOvn1uQS62PB31xyvyEkD653zx3vUrSxvtl5xP4J
XwY+azfUc2YYto/fecR+jETrlpwyUVLdIOBjfU+DlbekBhj1wfpWgev3JEbk
mWP7+HGLbM8a+TA/1Jm2zOA4tucV+UT7ln7LJ/bXZBMKiPbEMQcHC44fviDG
vP7go0unCeuLsJ4d4OrcyR5+M3G8GHdbTkXYXKi9IsT+wQwcV7DU/JM19mci
MLX6aJAPD/uzVPCciaL3zgtxvBhbKKdOTnp49aY39m9LCon1ncirkJiPS4+C
NdxXzP/ZD/vju+ADkvbUAVLs3wR3iPmAxBN8Pd5CbU8M9m+HwS+/iOfru2P+
IvD3ybtueQdh/lbwH6u89R9MsX9zL4L1zkfLf+HDcbxLBN9c93KB/VbMXwie
NLlwWmQw5v9IPi7iFsuplK79wwSncbxLAPeKH66XHYrjdT74kvWXZffWYP73
4A0dATd6/DD/kBJiPCgxAldUBtb6K7C+ueC3+j+NFw/G8a6phFhv5Qy6C+v/
lHSjy71xvNO/S9STu/kuMR+UvgWv6PN2uqc61rf/PTn1e97+n37mON7Nvkfk
4W8E6xyOrfd6hvn3gtfw1Z82fsL69r1PPD9vJvgbR0/7qgqO1/b3yflnFDjy
V5tL+UPMfwm82XGJW9sjrO/0Uqj3rFcbqj5ifdeVEvMfqRi85NurAfuO4fh3
Hvw6f8jGgcuw/s9LifYnsX4A41FUaliDNtY37AGxX6c4Az5+4xenYhS2j2fg
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
8Px+RCpNHbqjtzB8G+ZfCP7/z0f8H//NXpo=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Ey3nm1hzFvbdXSatEF1fUxhB13sG/LVQVHZ2GV3vtbD7iC/Tp4ZT/CdgQWa9
52WXKf6ncPa3Z+5LN1E+p+1BvbKoU458HeVTCdt1Xj1geCDFfwxOrx/h92Yy
xf8ILljRyDpoBsVfA3tM9HJLWUr5S96L6311YeDvWRRvHhzXfEd+NzXF+xtO
GNZuTsQPitdyH9NeBYlw+22jLx+z5dqj+ME+pn3Kf8IWvVW7w25QvF3icL29
rvSbVELxOsEO400yY+9TPnPgzP1ic20z7u+V3+CCt/2dv2vp+ovicT3vDdp8
cD/FPz6eyYcwEC7q571DNp7y+QWO9H4eem0F5bPDfoxndT27+l+h+B3hRp8F
HvtqU/zL4MindQ46vKJ8x8Ppbx6eeSui+7/dAeSn4k3rHn50/4+Go5aeGd/p
IN3/fnCm6Qw7aTDFvxdO1t1p4H6Bs+YGnH9WuDMxgbPE4SDaQ9d9siFHOSuW
wHZ/c1fYjaLxKvYg0//otLBffIDP3I50/3urcb+snjlr10Lqr3bA/W3+NGu6
gOLNhM0cmgZNPkPxfoATzBYnrM2ieJsn4O/L14SZPaD+SpXA9JfCy/CugZEa
p9UU79sE5normh5i+j/1ULj976Uvex2hfF6A/d591BVPpfGgGA7/WbXKJ5Pi
/+8wUy9oBx9mxl+j/J8fNJ7+5ybl8xXsOfKeZVoS5bPhESY+/QDY7NE7F90E
it/9CNMeJRvh8Kj7M0pdKZ/1EnE9lZerkurTeNAPDvxw7NSFZOofZiUy/a88
MpG5P1WnYLMfu5rmhtL91SeJuR9l0+HYMtPxd8dS/7Dm3/Gzrs0uNab2nMoe
1z9JYu5PhWsy+qv3FX/dzlJ7DodnRO78FLyN2vNR1oJHcGbfBj/tj1H8f+Hw
U6Gt3q+n+y00hYnPmJTC9E+ih3B+wdVJh/Mo/l8pTH6U3Y6ivZ7375MupXzm
HmXuV8UP2DrswLGBAdQeOh9jrJsIOzq/3Pz1K/UP92DBXrdOHzdTe6iCM4Mj
5l7XU3vudJypP43jYPfvO19P70D1Q8Bxph7VfD7O1If69qm4f3x97zcaQPXM
WDgh9z+rjQto/uMPq/yj2oTdpvohDq6O3SdpPYTmN+1OlEmVxpkTAr5RPTYK
ru6xrGOsjtqzL2w34sSJu2do/rMHDpl9e1snU5rPXz/BzC9k0pOYv18Rxf8R
0/xy8UnmuGYX7HDJMfdgQ5ofX4VNB7za030ZxV8G5y9Ja39sBNVji04x9Zku
Bk7VfG535STFnwlnHpzQyPEdZ3kzDcaTiH6/wvpy32/cDkd+7d82rwPN1y/B
90WhT2XnaT5WAqd2NLcbYcYdVzY5jfntlxWx7zZRvoecZuYXknT4/pPa/vfD
KZ+v/x1fXp62zYvqMdM0pp7TDUpj5w9y2Gb441dLtlB9W5TG1IvaBmeYetjY
/wwzfxLNgW0LO2WMaEH15IYzTH2oNzmL446ORdoQqs/FcMLny28jYyn+mbBl
44tHX16k+NedZeYT6pNn2flN73NM/S53O8fU36oI+M3H4tK0pjQfPn6Onf88
PsfMH5RTzzPfr1kNe1/xGrvhN/VvKbBzA9vPuW+pf8s/z8wXJH/OM/M53ap0
zJ/yegZW/6D8JsHXw2b0FjXg4hHr4FaLnomeXqD2UZ3O1P+qrhcQ76OEJ5df
UX4PX2Dmu7L7sGlC/cspz2h+/B0uXRuza/sDmh9bXMT9Wy+8xc8Yml9MuMjM
N9RfYd/r9q3edqH22/ESM78QjLvEXH/xctjkWlGK4xvqHz5dYupxo/lltL+O
8z5kv6b+bAxsp0pyzXhB/ZkCrlbodkX3p/5s32Vm/Be2zcB4H3g02vMi1T8j
M5h6WrEUzn89U7l3L1cPq3fDCUb1tz/XqD6+lsHUk3JJZpm0xJBVbTWcxguf
TKb+0+7MZOpz4xVYaG+T8iWK4i/NZM5Hs/BKmTT6Yun2lT2oPURfYeo1YcYV
pr+XvIMbrSuQtI2j+IVXmfFGsP0qU3+KL15l6i35Gzgh59MwQTTF31iL/Oyd
7jS/jDtfrQ1smrLht1kOZ9l5+OvfB4lphzkr9XDRDYn/g2LOmkbX0H+M8rcv
SOOsHwh7WwWEKLfT/GMu7FeShwxTfl/Cjo1rpi6MpPzWv46/f+LY3m0CZ0F/
2KSixy7b55zFs+GChsUNqz5xlq+HXSpLRu/P5WysewPtYUzvyiFJnEV9bzDX
UzYDFs5/5/Epg+JfC1dbuvVt8pviP8FaYn0T+R/ssL3LQ86KaTeZ+lutvMnM
X3THbrL15+ObTL5VLrfQ/z0ZW/HaQO0jDLZuGrTxzH/UvpNvMfWIKO8Wc31k
v28x9YU+5Db+/tZvC/ETym/ibTb+B7BgUtEF76nUPn7eZuYz6i5ZqC9aL3nw
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
j6paUzLify3QYGI=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2HlcTOsDBvCQ7AyypMVQQrZBSLaORIVMZC0ZayEZlaSisqSIioQshZSI
RlJRlMi+ZMsWkoSZMCiS7ffcefrnd/+4934/Z3vO877nnHfqMm/55IX1tbS0
lNpaWv/9979/7i9TCvw/9Sj8S/IbTjXumZ789/N/lpl6KgXRtEztqdweJYX7
Xzk/8+g/zXbxXdilUaKbCS39CUefv7XMvb5m/2Dj5UphfMjnTS9/aLYrJsJ9
Rz452eaXxqWr4LkrlxSH1Ggs/w6vMPtrM4/bE8RypbDEZVgX4yqNi+zhR5YO
N21orZXw5KOed4990VgSDzuM+Lu1PY/PN1yhFJJCh+YI3zRWj4PH/u4wPJ15
xF6wxeB880Raug+W3Ru08G6OxsFX4E5G3RLGZGsssvFSCvpP77X/Slsth79u
6PE3KZP598DaD06sPXaW+S/BSq/era0ymP8jLGpu9NJfwX49vJVCRtqt+hdO
aRwVCw9r226EURbzKuFIeZ/B1jy/uJ2PUpjV8Xtc9XH2uQM+PfJyhcNR9nke
Ht25OM/sGPO+h8sqmm1awv2t2qzE+DTR93t3hHmHwwe+TSjMSGGfObB0hmPV
7CT2+RYeH2t+K5Lnk7XyVQo+8YdTFycz71BY9iZ+izuPz58PW2X79NnC46Vl
cG1r925rEthn81VK4Vb0iGvn45l/MBzx1WDbkwPML4MbS8MqHu9n/i2wtH3i
huhD7LOJn1KYfdD334697HMg/PBumslgWssVrplju8rnIPOHwRm5lbMn7WP+
dDi6ft7YtTy/WrIa47vr7fpOiezXGQ4MWPDkFvuRboTvuanvbaaD0+DGyyzt
irm/4ikc5tyxnYj9WM3w/7/95evgwU7tu31lnoRUOK5g/sd2h5m/GB5rmpWt
ruu/XoBSCDU++G5ZXb9B8NFc+wpbni8/BR59TrGnJ61+AEdtn9B4NPsR/4V7
+04L/cj7k/YIVArXKl4t+raH/SbBLjMkC+fGst97sPArd5psJ/P/gr2LV3f3
5XZ5tzVKocAo7OGNbcw/CQ6yFP/15PlkNXBRx+W3/0Qxb9e1SuFDk5LcIVuZ
dwJsUm2jP2078/rC1Y88+yZwPIKr4aSIG4c78nqKzkFK4eVxuXRPXV47uPz7
n163eX8iH3j0+/6Ls08y7wH4cIrH1Jfn2KdBsFJo2Gh5zOI09jkOjjN1n9CY
lqz4f8v2wrOeHpjxleMXVQi/D7vfdzufF/GYEFx/6uy/u06wT09YWjDxprhu
Pu+GU3WGtHoXx/wF8J3QTpl5zFtaCW8b6liQwvktX7pOKfxY4hh1h+OdsBP2
VIeGuXG8i/LgbY5nZybweC0lHKhcFhLH/SW665WCeJtB0gvmzd8O56wwNQnn
86bOhSdqqxdu5vXE7+DmWaZePswnbb1BKXQZ1m/dcz5/wcPgozJBGFf3vJ2D
e2w7bRvC8bEqh+WmTTve5PXlLTcqhU3X+ojj2UeCBezbstp4F7cXzYOti28Z
VfN8stfwx9V3Kmp5P1HNQjH/Klfo1kYy/yC4cf1n2f6cP+o5cKemf5+XMK94
M9wm/KPchvuLZm9SCnsbZPulRjPfJlhnWT8fb96P/BQcPvLw8ZbMjxcA7kfn
qZcD80hmwaOO/vbvyudRtgHu2LZV2GrOz6iTsOuZh5eWhjPfE/i3f/uPHpvZ
3/RwpVCRfLk6PoL9hcDZzw+1KtzI8T8ON7Z60t42kOP/CG7q65x0fC3za21G
XxFv18hD2N9aWLT9r0FZKPs7Cucc8TI22cT8D+CHux8o9q1n3u5b8P0MStNS
7mBfR/7f4iJY3ffJiSVbmLcWHj1bZ/R23k+wSYRS+PRq2xVt7q9wgLv0X2Oc
EsM+b8PWN0y7bmAf8h9wTfeW1nd3MW+XrUrB/ebVqP4cz6LxsHfKpn6DOf+0
fOFxpVfGb6p7f1XBnVs8rxVxvuQbbUMf0j+/f6Uzvy18Y4Xtpvb8noq94X8p
GVv28Hso3Q+vM1ONiDrDPvUjlUK+0P/QaH4fRWNh107LtaL5PrWSw1FLZ88e
VPf+jYOvu8X2KE9l/suw+vbcPe58PiTWUUqhcvWl1rs5P6J2wasWHymfx/mT
fxFe++3Kr1jOL7UKrmc+6dS8uu/BkmiMj9jooiHXC6UXYJM794Jq7zPfBzhf
vXxo0jXma7tdKUx7cG3K+jvsLxou+fdDPPES+8uFRaNCBvblekFSAUf1mfPP
jesJmWgHxvtz9Gqfq8xrCfvP0FviwuuLz8JTD9u2npLH/t7AW5e1+L2dfQW3
iMH6SK97rVEux38I/Ms/tHtOAfPPhe+v6DDudSH7aroTz9utzfM8mK/IfOf/
XU9rDlzdITqjbnwk4fCvAQcmxvD9mt8oViksrukbv5PzQd0f1t3ROecv70/s
Au+Qp/+pe59IQ2HtpxUXvnN9FKyA/83VvruH73dRv11Y76SntRM436xmwl1t
jJ415fdYvh5WCde0/tIJJ+COkovKVfyeFD2Gnyz2aR7O+SubtlspmJtElryo
G/9g+H2I758enE/5x+DekdFVbfl+Uz+ES20dPLL5/hX/g7MXdNiewv1Lk/co
hdzsM3r+vL7oPuzUs3La+br36W/YxfG6684w5jWNw/dncf/vW/g+0ToCrzS7
k/kkmH3ehbVFGw1K6p7/n7Dvu9vO8+u+t8Z7lcJVtymDZ/F5z58Im5ck1c+q
e1/dguUOU2c+4vmCv8Na1vOPDeDxCvE+pbD7bGO7Zvz+l9rDuWGDHtvRopVw
w1HJB7Tq1i/f4K/qLkZ/2FeR4X704/FanM3ra9nCEcevuRXz/SbxgmOnNFy1
qi7/PrhpuPOxVf7ss9MBpTDAOLN5F0/2aQOnph67+mUh8y+HzdYs23vBg/n3
wCMF9+T+rsx/CS4IUbv8mc9+R8crhQ4eYdmBtNwDtjzx2HjqCuaPhTvZn8p4
sZL58+FFb1M3mq9mn4sT0M/9q2mBvF7+Dthy5/II12XMex7ecM37YxmvL34P
x9rp/zJ0Yd42B5XCyTibNX2nss8o+L7Zy7sezuwzB9YxW1khyJj3LWwYWSN1
WsK8rQ7h906Tmzce0glD4RVf2+5K5fkl2bBHifeylHHsswwuzjGo/svrRTU/
jOuV1pvRyJb5B8N9RkwZeHks88vgnl7d5sycwj5fwTOvtTt7ZCb7bJKoFAxm
b5C/ncX8A2H1ziyzlby+yBVuY5Wa/n4R84fB50zODenG7UU6R5AnN/1+/wWc
D/1h+ZjDtYfYt8QZTr82cWQPjrdsIzzlis7OmxyfqDR45Z3LrR/7sd++SXif
dsxNDgxgvzPggP7nNtTj9zJ4Hdy4U5CdJ9ebilR45m5RqCmfr9JiOLRw//EE
X/Y7NRnvm2cj43SXs98guNjGOHQXr1+UAoedGKR7zIv5H8J+px30V8mZ/y/8
sHvjbWbe7DfwqFLILPvdXszzq5PgxePqjb3O48X34DbZ90rOuDH/L7jT54ZF
7+Ywf7cUpRCSkBRrzfGzugMbtB/g84WW18CfFw55P2Yi83Y99n8umgC3jdnS
q/tw9nkT1t96MX8Lxz+qGj5knVfvKrfndz6uFJyjm/8Z14t57eCEAT5+fSXM
6wPH2Yd7zKMVX+HvUz4aG5qwT4NUPJ+i3z+bdeR8GAfXyr1GTtdl/hXwYcnl
p0WGzL8Xdvxinytqyz47ncD8E09p8pTHS8bAG74+kpvQMk9Y/HhE2vOGzL8b
bvMx0kan5pMmfwHsLLuQd/6LxlLhJJ5//dZvx3/VOHgpPPSq7sWybxordsKP
un+oXsf9S/PgwFu1mckXNRYpYXePW5X/8jROcE9TCpJXyfEh3F60HV4QlnB4
6TmNtc7D2n/ej01RaCxrrcD83GBoH5ajsToS9mja6m7LbI3F5+DN3lVbntDS
crhs08SSQQXM2/IU5o+H2QsnXk9hAS8Y82+nLFNjqyx47Co9O2NeX/4aNtX9
9vT4BeZtlq4ULBZ41HysyzsIjkhwjhvO7fjBi++VT9DvBjw+6iV8ba9/Yj73
z298Wim0jg5OXnWV+QfAs3O8XeZwu3g2rP93iFkL5pVugkdmti8LoksbZuD3
n8QvYjPziiSwy9KYXVd4PatZcMXW3T+unWb+DbC99YvafPaVcBL+PsTAdulZ
jSV9zuD53VZv9W6eTzYdPrRgWlJaGvOHwKn+rac5pDL/cXjv5nsVSm5XP4Jf
fbto3i+d/Tpl4nk94GUXxesp1sIHjsQFt8hl/qOw3D4k8yD7Ej3I/O/5LB15
+gzz/4EjdAz8x55kvwFZeF6mNDPscJj9JsGnqp+H9KAlRbBrqbdNg73MXwsX
bj/2IfoA85tkK4WYzwvGGiWw38Ow389Dmau5v/Q2XLV9gqEimvl/wM/iVZFD
djJ/l7N433WY2qfDLuYfDzeK9J9eTidUwZP6PPSeu5t5jc4phW66indd9jOv
HTzDXD71diLzesOdkuISgzmf87/A+efrP9RnP2r9HIzfm+e2MXXzYSx8rL6e
j03dfJDDFzYFjcnm+AXHwRa71bqKuj71crFefLmv1u0m+7SG+1of7Nn6GufD
MtjqWeJcz0rm3wV7vdo76Mc75r8IL8r6Z7S1iH1anVcKIz6a+J++zT6XwH1q
Z0W+ZJ78GLirwV71U15ffQH+c3lHhDufb/EHeF7ZuzvXOL4Ktwv4/XtJGJuT
xD6j4fqlCd08eD+iXLgs0D+z6jzzV8DndluXvOX8lIvylEK5apt5Nz4/WpGw
olfETCn7k5yF91xp/HkE56PsDZz6+OO9IM7HqBb5uH7AwwCbe8w/BL4Tf3Zy
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
s3BpeV416n9yjW5e
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0.6130223128170342}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0.6409860939299528, 
        1.2002617161883267`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0.6130223128170342}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0.6409860939299528, 
        1.2002617161883267`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EEM\"", "\"EUM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.8668281365569346`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04893655084309334`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "17.71330675380597`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.705041440076087*^9},ExpressionUUID->"7f56c6c9-2671-4272-926d-\
8057535624b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23k8VO37B/BRadE22qioKSpt0qakxWjTQkSbtkmlFJpoo7JFQmrUk6WQ
0qbNpGhBoYU2VCS0TKuaoSZaUPH7ONfv9fqe+/njeZ7368yMz1znOvc5555z
93HaMHd1M4FAoGwhEDT9t+mfp25KMf2fehL+ZfIXvr374fDoid+aLOnvrhR7
/zUvGifhLLOFz3XvlJH+39cmiwrgfonyy3Ofc7atg4d3vNzMvyP3ej+DDfh8
L/f2flWc5dbw0euX8qfWcVZshYd3DRy59DVn6S+43SaH5nP3c04QSZVi3Xmx
QV+1uHyFM+GrosOdpxVx2wWb4fqSY5lrW1P+o/DeYbOs3C05Z+lvVIq/fm0V
fMaUs3o6HH3EOip2O2eRB1yR47eu8SBn21j484A/KxLDKf89+GCRhUfUU87C
qR5K8Y8jc1b/1ONssQE+F21Xr2NH+WPgq2Efze/FUv7bTdvNB16NusC5sAqO
7pJxQs+F+3sSV098v+WRspeBnGWRsOGUVlWh5yivEn6r6W77eRXl7boJ+8fb
NtFpAmf5QbhgY/tbfUdxVmTCcwaMfOaky1n4GRZ0MPjYaMjZotNmpfjAu5UL
on5T3vFwudVi0yejue2CdHje0iv1dfR5Jh/hH3G/029ZUN6OW5TiS+/ujQlb
QXnN4BkBE5LM9lC9V25h/p7tO/jzxb0OBglUz3ZbleIJ21Ptkq2oH0xh712P
793woH6QbGW+jzAM/qp8fT4yjHNCm234++ovemG7qR9GwvfHrMz0cqX8y+A5
Blp1tm6Ufw88RnF9xKYRlD8FzlxSuf76LaqviRf+nku6VuMrqu9iOPPJ8KMD
mn3n8gfB8Q5jSo41ctv9ktnt8lL4RPMB7a634Wyx0Fsp3t142O7yD+710gBY
10V25EED5T8PrwlICBlaTfmfw5Mf/rnVMIB7v0BjO/bP+riEt0M5y3zheRvP
CJ8bcc5KggcFBvQWWnJWP4NXFAR7t5jAWdQA7824sP6BAeU32oHXb1k+TqjP
WXEKLr6wXCeyN2fhE7jXUe3bK3pS/j/w4k6bJVXtOUv77cT+N951fehjyj8H
/uo2/W6LGqpnLTzDp0vBAKqfrK+PUnx2wpP2Tk+oH2bD5e8VE4eOp7xbmryw
v8cRH85+P2FB1BLjmYupnr198f4M4eyb4ZR3BpwTPfHOkHOUdxPsNjWwSKSm
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
OH6F6vsKHp1oM65tJtW3VY5SrHf7d0XoD86CEfD0GX9C39F2kyWwvbFrhewD
1X837GFYnBFZRPVtcRvnU8ne2/MfUn2HwbJjBYF6JZR/ERw4Wd3jaw7l3wU/
K3bv9iSR8l+AnYeLt3/eQ/UdcofZLp0PTx+amvXOk/L7sdsLz8IDj0d1Xjqb
8hfDlal319q5Un/Y31WKQ3+1HqSzjeq7s8kbto6JWk35T8PbbJeUTtpK+Z/C
pfrj/3nJKP/fu0y9FN73GAtPwts+Ci/dukj5C2BXQYKDNn0faV3T6/Uyp4ed
pfwGuUpxt/4OHkE3qL7HYYMtwt+Xk6i+j1jLfsGfml1YZHSV8s7MQ/3jJj/o
9v/1vA9PN39x8l001bMGNp+/ZsYoD8qrfx/XK6MmfbrrQHmt4IZ7mW/PjKa8
HnBsbKr3V6pPoRq2/tv5cFuqt6DnA6X48diHCQ9dKO9UWOi2boSfKeXdAFe/
nR1UT/0ri4Gzb550jWtL9dR9iPcndrs/awTV0/Ihc/z6ucKhKxzmRllQ/kjW
iizYvKB4/pXlVM9Jj1DPQ4PntaXvm+ACl554/K3uOOW9CW9zPZ44KZvyfoar
K/TTnr+i/e/8GMeLy4mxTj+pnjLY2s2kZo3WLy7fR1grb1PrBacoX8d8pXjR
2m5fzM5T/fbBtX3yrvqepPpdg2U9Jh6IvUP53uUz/Z7QrkApFnvHXrp+k+pr
CjdM/ddbs5rql1rA5JW9gZ99v6IorKK8bQpRb0/zlUs0uXzqkXD1T4sjz5tx
Fi0rZD5P0fIJ+k85KL2qHbddOJy1xWLY45xzcrcKyhsEm1tNWTXKmurX4ik+
/9uGdfUjqX7GsGv1jg3aKynvQlg/s//Vi/0obwAc10oj0V1Mec/DqaWjhN8+
0Plh8DMc32mDdOK30vlhHqwTlu8y8Aqdj33hYYp133Ru0fibBCcfDe0wTZ/q
XQT7RA/M+kx/P2FuEawd/XitHdVzB9ztaI6v5hnKfxqOdGrrNfUS5X9SxBwv
kj9FzPgkOlGM8W9mSJlWK9r/+XDftnfzR76l/V9bzIyP8r7P0d9PYwK8Gmn/
H4OX9xEMnGTCvV/6EI79b+W9B305J/yEj780ueDZkXNh7xJmu2AmbNywUPhu
CGdZXgkzXmdVs69X673A3zvsbnpLn/b/dHjbq5t/jyyk/BvhNx+s+vqacVZ8
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
tK9TUAvKfxzmzWf4PYJ59+vyX/Dovvu2rfGi69/NIrx+3eLlQme6/j0K8+5/
Eu7DkY7X7/Sh+5/CGhHzfkGvPiqxdciWzDUOVM97fZh6q9VwtiJjjZch5e3Z
F/m35uo79aC8U2HefI3iNsz7/UP4FX7cd36rM1+pH3QNcPzIStrebU95LWGx
hvEJsyfUv65w6pN3ix/uo3qqDJjjRdLVkDkeZJPgj8LCiUZ0/5LlAqduuqE7
S0X5D8L8+59O/XB8tRjSUSeO+nk87HztqdvaI5TfGc7duv/88f2UPwJefe/n
3LVZlD8dPtP62n29FBrfzPqr+PcjglWwVkqj+8jBdP+5D+bdD0muwfad+utH
HKb872DefL1oxQA4bmebYV9pfAuDkwdNLS8po/EtFW6hsfa93T8a397AZXvl
jW3p+km6x0jFf54jIQVO+pSQbxFD49lLmP/7bKuBzPWPyXD4mep98o9eVM/k
gcz4rC6FrTcHnA6TUN4Wg1T835dsjeH07nLLTdup3gth3vymsATWumFnsMCf
6qkxGOd7rQ5ngqSUfzDMu59JmAfrT7mWZDyW6u0LVzumH/D+S+e7BrioIO7j
jyI6PxsNUfF/38yaC7suzYuKGEz5d8DiNn4Llw6g/KfhytPHd9lNp37oNxT9
rVxVr2lG/TAH5v2+KPQeypwPLE7A2faOU/Tp91hpPvt+gbUxUw+TrfCwlc9a
7e5P/XAMTnJpU3FRQP3w0JjZv1k/YY9eLfbe0KT6bhqG77Ohy4LEP9QP8XDq
3ET9DU+pH/LgbPMJDsNO0PmuGvaIOLZ2mSFdX+ibYH9F/rx04iJdrx2BK4pq
/h4U0PXaXZj3vKJADYfNS1G/Pk7Xaz2G4/qnsNl/YgVdr02BnePbD5C/oOvd
nOHM9bGoCl4TPf7XszZ0vakzQiW2XDuwd7+5dL0phhVnXBXKpXS9uR4u29Ll
4OpKev6vy0hcH72uahXgTXknwmV+HeLtnSnvWpj3/KPgIBzUe/j96bvp+lx7
lIr/fFuWOcx7Xk69Gubdj4pkcNsBvQp6PaG8N0YxeRVjR6vEZ58XH9hiS9e/
K+GybwEJH0vp+dVw2LDpccfblP8qvCZ2deHHK/T8zFt4kMzQP+8NPb8oMcXr
Py7tf9uPnpcJhXPiO/5s7U3P216Bw+a8vdWsiJ7veQ07Xn4Y0+89PU/Tegxz
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
5kz6+VNuH5z+D4hRGlc=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcjPv7BvBRsiZjzRLGFrINkiU0jwgpRkISDbKnBinaJEQJo8WSgyG7
MJLsGXtZhyK7hDBDTZayld+lqz9+3/PHOef9mqVr7uf+bM9M62n+bjNMRCKR
vqpI9O+///55MF8v8P+MDviX9A980LNZfF9aYe2nF3SBHWysy4v+WSWHc+vX
eBtbpeJxyT0478aSWo3+VDwu/wnLN7eaMoPPj2jrrxea9aijX1taYY0rHHaj
h3RISYXzguCqw0OWX/pWYWUJbPnszWl/Pl8tUeqFud6nCnbzcZ0z7HLifs0w
WrQYnllr9OgxxRWW7oSX6MMe3vlSYW2LBXqhZ7Fy07WvFTYOg92MjpYOfL1k
IezZdcDsmO/M/x+sevHf4BQV81+HX76wuvo5tsLioQv1QsLlskSnDRWW+cPj
L1ntf72W+bfCksxJXSNo9RXYKaP+8i+07jPc98vDgou0wneRXlDXrO+yi1Zt
gl+YLT4gxDOvHk6q3ezKxSjmbRSgF1aN3/nfwlWsZzzs1u/q+bF8fd4F+Ljt
V92wlcz7AR5/6qpLB1pWf7FesBl41uVKJPMOgL888HDxX816noOj6g4RbvP9
pe/gpNNdWvny7yvqBuqFC2Vbp16KZt5+sO3OZ81N+fe10+Hq9u1/l0awnvlw
4K4VJoGhrKd5kF44Vvem29gw5reDq5e8HPiEj+cp4I2uXqd70uK1cNKHx3ce
8f3UNZfoBe/V85J/hbOeveCOk8cM96FFU+BDx5Qtzfl66Rq47sgGpWsCmT8V
jlKOuD+P72eULtUL5WHpdvbLWd9J8J2IZUutVzD/KljUNGX2X37+iGOwXfvj
v6Mr6/8E7lWg6SVhPWQewXpBeTlfUZ31VkbCCeM2T/bi89UpcN8W42e7sv66
R3DLqI1h52KYv0qIXjD5uDSwdmU/LIMzV5u7dOf7aw/CDq131XFl/xmz4UDf
fbMFvl5SDs8V31qfzufLO4bqhQV+R1958+/n7YN3LFzoH8bHxffhj38ORyxZ
w/y/4V9jfq3+Vdkf7cNQ76yk+1eCmX803D/5+NrJrLfiB7x2TZyi31LmbROu
F65cvuS3dQnzusB+afbBD9hfxkC43bZU/9Hs74jvcIht0zdifl5Nq2UYrw16
Dx3Dx/NGwNV2HFPn/se8AbDzb/MXgQeYdwfc5LvnzFqprKdVBOpxxbzn12Os
5zD41dfHpiX72A8L4Fg3y7LSw8y/De6foHCvuYf5r8E+f/8LL6UlQ5ZjfPjc
rVakZj394LwuUceEbcy/Ba7fq6/10Y3MfxlWyPZeWMa8eZ/g8dZfhm9hfZXz
IvVC50k3x+dzflEnwhmTisU74pj/Ilz21VS5fx3z6+Ef2xbZWyUxf8MVeuHq
oyzTvvz72jjYSt6g771E1vc8bPLWdUQ31lvyHr7sa62PZP/K663EeMorv2jH
ekfYw6dNF+pL+Lj4LOzfV5q0iPlkb2FrF1PnuJ3Mb7EK8+/+x5PuHWT+vrCt
MDPaJZn5p8GPbrvMqZPA+r6Gl3i0sdezHqraUXphSu7lgYkcH9resO/yd/db
cbwZveEjf4oj3Nmfkhg4/atXn66sn3jyaozHxL53fzG/bDV8tnvvaZP595TH
4W3jh0rD+HxMAHrh97XOnmf496SesNp94JkprK9iJTy8UPrwJse/6iic4Rj3
OKSyfx/DHg/f+diw/+UTovWCdl9C961BrN9yeMnmVq0PLuD1PwzXjtnSudZs
Xv+H8OM999N+z2N+UYxeGLSujdlAP9YvHFZ/qu47KIT1OwAfyAz4qOD8JMqG
o7pnt6+c3xQd1uqFGq1ebapVeb33wp7V//w4yvlAooOXt9zhsozzgfwXvNZ+
6RT1euZtF6sXSnbs3hWylXlHwQEleWGb2V+yO/CgHn2cTrC/lKWwcVaZ7yj2
v7r1Or0wY89d05fsB91IuF5Ul/gOu5g3ED5kGdHq0W7W8xtcpl4WXMD+0LZc
rxfMb8/KTOX4Mw6HP8W67g7RMP8iuHeVVm/Xc3zLt8PdJFZl2/l4XvMNeuFp
uGfJzpOspxN8cGDI0KX8fDIlfNoQ2Wkdx5MyCd7vqXw/h59HfRX2uzrS/xgf
lzqqsP9wO3s4h69XbYYt5ncoVrD/tZfgWxbit1abmdcA3z6X2KtZ5Xowd6Ne
aPu93b3dm5gvA+73oMHrZ8wr/gh/fBi6aQfrI2sQh/7/eNI2hZ9ftxEu61Or
6RbWS3Qe9pVNaWLL6yMtgP0vtX2wmI8rxPHoL3PpV/M05u0POyvKV107xfqd
gTUbDvU4cob1ewMn7WuSlZ/OvHUSUB8zebchnB81feBU/3VfIs8z/1S4RPBq
VJevV9dKxPr1Jc6mjNbZws3O9smVnGZeb7hNLa+5a7XMGw2Pbtj6+Ksc1q/6
Jsyn5z53eHCT9esB//4eLuv0iHm94AMfvUfff8y8UfAWs2yvwzrm1cCfnhTn
LH/FenbfjPVMHnjkwEXWcyI8+9fnIvsbvN4rYL/Q7HtbrjH/EVjh+/FsJOuj
y4WfXa6+YMUV1nP8Fqwv84dMf8b8qoh/Hhd56vN15j8EX61ff5/kDvPnwKmj
dn9pd5n5/8LnW9du5pzB+u3fiv1ecr2Wlg+Y9wEsf/ZoiTffX/YHdrMO3uy5
l3mtk/TC1ttr2nVm/UV74Xf58+MPst+k9+AJmaHprzn+FD/hddVfnR1ygnnb
bsPfd06uf5vWusKJLWdphvH6ym/DX+3WzuzC8RJRAj+7unhgE34+jeQ/5MnQ
ZcbcYn5nuGoT47km/LzixbCme/bEAH4e9Vc45fiDLPUT1rPFdr0QY7q5tIjP
Fw2HtZ0do4r5ftKFsGrjti4HXzD/f/CVKerSLF5PY7MdWC/W6WoYbrOeQ+GX
ezzKP2cyvz9s1zw4cWQ282+FEx2E3ZcuMf8V2LkwuVu3e6zv4J3Yz/nXCbjK
/lT6wnNjn036yeut3gRf6RjuteIc82vhwRPayVqwf1Rz1P/mv9O3RnN908bD
xY927vDh9TVegMs22JwoZD0lH+DtvV9unsn3l9ffhf2oh02NeRdYTxXsrt8z
6iGvv/gcPFdu2dqDf0/2Dv5wv8/Jb2+Yt+5u7B9Lgtf34nlG3Q+OK15cEPuJ
9TwNN3SLK7rF/lbkw29C77VIzmN+82RcvzttqvZnv2vt4BjL9057jzO/Avad
GPf0GMdPxCtYM6KdQlHZDzX36IWIgKnr+7xm/l7wroLH7YcZmX8KfMpRN2gh
z3eyNXDg/scbXpWxntX26oVLHRp9qVqn4nwo6gEHmGx9IjLn+XISvOSCYcLt
ajxfroKv2g+J19WosOoY3NdvfuSqxjxfdtunF8TP/ESxjSos94CvynsXqfh4
RCTc7lDctt9tK6xJgV8u+OXwyrLCeY/gHdubdpvfpMLKcfuxPxqZ3UPFx9XL
4Hsr/DweNK2w7iDs0t4vpVcr5s+Bu/ju7TGUr5eW/+/j2tADOE+13RfwrX2F
jfvgYEOq96MOzH8fvtPzc6aFFfP/ht1tW0Seqs387Q+i//JaHrM2qbDsLvz0
zY4LTasy7w/4+cHgAnOeV9VtDmG9Xfc+olFlvV1gizWnF6y7z364BUu+qFdf
ech++A6Plt5bHMr+0rY6jPq4pEosuH4YR8BWrxTjGrEfJAFwxrJwXQbHt+YL
vHJbcd1tz9gPVim4/vLNu7ey38XD4HkjwjoUVM5vC2CTxtGnD/L1ym1wt/kj
f5WzX0XNjqA+sy+3bM1+lQ6B3e8dLM0qZH4/2O/twomH2I+qLfDVw2ulxTwv
ai/DU4Sr5p14npELR/XCURfrkT3ms5/nwW/XrhmdsIz5E2G7O1PW3+T+Mu8i
nH8htEnnXsyvh33iz61s1pX1nX0M+7HpzpOUDqxvHBx8W2MR15f5L8CHzjxo
8qIP89bT6AUz/29BewaxnhvgJXUOONgNZz3PwmvvW37tMZZ538JPTzfsfs6D
eS2OY30d0+r7WO7XNX3hrndtHvfm/lJ2Cg6anxJXxseVr2EnZ7NgNfez6tqp
2J/XNoydw/2yrjfc/XGRPJb7Qxx4sV/UnQw7x/OU6iVsdfOQQxb3E9oaJ7C/
CW7k6F65H+sJB7SpGWDC/ZpkMlw3weFS1H7mXw3/d7GaIZ/7kzyzNL2Qc3S2
4MP6iqVw5yOfFxor7zd4wp6WxoKvlflXwgkjphaO5PlKfRSubWuSkMv5Wtr1
pF4oGLh9rwv3T4oJ8PLH8wxuh5h/ORzT7duBi5X5D8N30z/PX8n5zvgQDu+R
Pa2M83uEe7pe2L1BVy+A+x9NOBxn6/hyGvs37wDsvC8+Oo39Js6Gm0wdknGQ
66msDO675r++XzledCGnsP+w8anuwPOkaN+p//k8Uh0cUWd//5k8fyh+wdEh
66Xfub9WtTuN8VSYfbY/52NJMuzlN/r9sh2s7x1Y8qrZya08D0SUwpkfM3LD
eP7QtD6jF4YMbOIj5v2MvJHw+uWZlxp4sp7fYNdaLab2qry/0PIs1suQAHV7
7ndFI+BuH69tl/C8Kl0EzwsJeNCB5zNtMZzs/CZyGvd7xubnMH5aPH96h+u/
xAl2TjL2bPuSeZWwb8aKFeV3mTcJ/hY0Z+Ebjn9x0/N6YeHbotJbXL9kjnDL
3SN/TDWwH+bDOR5281tyflVvhld5HUw6IOZ8fAm+U29dfG2uDwrZBfS/dcEE
2+pcL+bCbjcvbJhuxvk4ATbLj58xgeuLMQN+K91T64MF5+OPsNX+tg5+fFwz
KwOP/13RqfEv1nMj/Cf0/PeNnH/F5+Era7WHJbSsAA4O8S94Xnm/UnxRL/Sc
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
GqfkhhzPecVw9MPZMe+mcXxZNTAI2uR1Ia15f13mBD9fLXoZxPGsu9rgf14v
KoLvj9L1vuHK8d+0oUFY0qrWr7pcXxSOsP2f0AWRnM9U8+HZt49oJ7Th+P8E
+w5t8t6rI+vZuJFBMBl5eIEp6xMhg10bXGvn+oX9MBfuWDU4bFAD5k+Af8TG
fD1UheO/QWOD8Gn5vc9WrVjPgfCeMyf7Z3M90M2Claafkga5M38cvF1eNvY2
10fpedhn2unyBv6sb39L1P9RqmU+f49k9IGPFA/MOc35TrIBztno3KwLf/8k
PwPbXcsdMI71jngDZ3bOOPWE10M8rYlBEL/032ZPy2LhnkXCi1WdmD8dLogN
PRXI+qnzYPUpj34hnP8U0U3RL8MT85ctZj1PwO29+hW04P5A+wJeO8116wp+
f2is3swglM0edr5p5e89e8JTfv61rMPvazQauFq087wAvl/eUzhl664fRfy9
mNisOZ5/9cUmNb//knWHTe4rp/3h92XKifCHd9eX/uXfEz2GnUMNF09V/h7V
xAr9U9r0bQ3ufxVd4Jw36gtbKn8fNx7e0S98kpi/f9JGwINbLO2m5+9D5H/h
A/NLa0dnsZ6dWhiEL4P6N3Dk72U0Y+GXJcMGeHL/nBcG74tsavqZ3/eID8Ch
+8PHDOf3WWrrlujfbHXbMu6vdXJ44NYG2pb8/kgUAv8aP2bEXP4eSroXXmr6
J9mNn0dxD046carqwqusr2sr9INjQlB7/r5FsgQu/6Spp2B95LvhvIa1d4bz
9xERt+H/eueNnMjvpzUl8ICsGsXH3rO+iyX4fHeWlBdwf67cCT80xNrd5udV
Z8G3iusfV/D7b91Xyf+8XtSytUHoNsQw14yPa6/DHbWr/vTj77WMxn/Odqp9
q/L3HM3bYLxrD9wL5v1I+VD46cOlxS34+fOuwK36P/e8UPn72UK4TbF123r8
vY6sSVvMtz3Et/fw+ikHw8o3P76V8vtPtS+c0zE0Rsf1XmqAz0sDF/TnfkrR
qJ1B+P6mwbpmI9gPDnDGkE8LPSp//zsHVpwufbySeYzx8LdLqc0c+P1gRP32
BiExfsmvidyPaAbAHq3WdQzyYf6Z8EXxxJ5i/n3xRnj8pILuMfz9ruwcfPXb
3zQzjmddP2vspwKerbrJ+7UiH9gx7dCO9ewf6XrY/0yc/WB+36w4DeeU175n
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
1l2fnTdXWNkVnjsut0dwWoVFKfDK/SObdef6In0EL4mpkziY661CNBN5g4cs
TPrAvDZwm1068xVc37TucMq6zX6Li7leZM/8dz9vcqK4hOtbGVwvJLzjqgKu
bx1mYT3O0+V8KmX+MXDAh1qB54qYPxSO9ktaPfsr17tf/57vUPgsgu+vazcb
+/82kwKjfzH/aNhDYd/kMdcn6VL4v5617H3KmT8Ztth5SF65PhtbzzEIJ76Y
Hk6pzX5wgc/Xr+5ZXcR+CITFua27/mC+CDX8YbL10Fum7OebsEl6+YRIC/bD
iLnoj/z+Z6s1YD8sgmvuiLGp0p79sB02ubDaUdyV/XADftpANGToQPbzF3h3
cdzrB304vpTzDMLS/R0/bhPYz0lwzjerc2aDmP8q/Cd01ri1nM8lRfCvhvcS
dnL9lDf1xfmli2mN83y/vM2+/66vxcTbfdnPl+FRZYYSxyHM/wlu9mtqi3p8
f2Xj+QbhXePvkTW4nqplcMfmq75EdWB9L8LVn8+9PboL54ePcPrJ+ZleNszf
wA/z/fErm8z5+bUDYc+aXkVTuJ8yzoLTXOfm5HP+0Yj9MR+cKLHrzfUlrz/8
n/OG9kVcj8UzYNnzzNZ3OZ/KNsBrFh5UPuR+QldHif36uwRNAesh6gvHhfkE
Tjdn3mn/Ht/k+ty8BvPGwv9FFC7fwvVRlQ47HZ+xSMXrL+m9AP0omnv0Bcez
3BuObTr4p00Tzg/RsM2BOVXac73UnIDb7Ot0srByPn4Bd1njcvkX66v0Wojz
Qa8Nzju6sZ5RcFOLYf36cv+i08ALeqz4VNWF+Z/BQSUjatdhfaVmi3A9pxyO
qs7ro10ByzZtzL7A62s8Ah89f6B3OK+v5DFsXDehZ5ED85sEGIRJZW1vT+J8
FtEFftkjwuGVNet7GC66tbv6beaTPYTjrl68X5P1U/6FF8zKH36U+0t1p8U4
X8+cP3gNx5duLDzCfl9BJxPW9wGs8B57I4fzg+oPfD7l+QyNmPmtAw3Czjku
f65x/22UwyZ2JXIVx6ckBH6sfzTjdmPW9yfs9re7zfdGrG/bIIPQdrE46AYt
HgX7dcyPGFKL+ZfAn/tYOfzkeUK5G360MHZGPi1qvQTrf1FU19nsB+lI+FX6
xmQj98eKxbCPTeHLF9z/qnbCvhnjB22ltVnw4ClFB2vkcr4bvhTrwUcPfU/O
VxEL4bfHF24P5f5Y8x+c8ShhpSvrkXcdrmt6P+3ed853xXB6/dpC5HvOd/7B
BsFK9OXXxues71a4PGxq1kA+LroKv+yTcWoJzwvSQjj6fY3ED3nM3yTEILzY
9CzD/AbXj02w+8jScVHMK7kER41a3v3MC+Y3wAHVv7xb/Ih5HULRr/ejZvV6
xvUjA/Z9sG/dKB3Xjw9wu7+nhuzneUZdPwzzS5y6bBPfTzcAHnRt1pAn2cw7
C44xrhgle8J6voOdbHIixIWsZ91wrHf6E3FrWX9jP3jsTW8LJfenEh+45ZqH
vtkcr/L1cOy9DNHIjuwH82UGwSUz5vsNPi7uAxeWOUdZcv6STYUbv2sx6WLl
/LwWnml7YoIt53/1SXjLBE/lRs7nUtsI7M8yPs3uzn5STIE/Xxk5qRZfr1oD
W59qZH6E9damwoog9cAWvF7G5/DF4XO2TOL5VbNqOfrZ5We/56xX3jG4a0Bj
H/1DXv+ncPDOnn5jKutdNRLz456Nii5vWb8jcOnaA11WfeH1zoXru07Y4FmH
+aqsMAjDxmya1Iz7GVVneH2T381zm7J+h2D5gq21FnO8yHPg5LL9tk0qz8/l
8Nsqd5Q1uP/RdFyJ8+IG1SQ7zvd5bnDAohajvHj+V//+38d17VdhfH6fHz+C
10skh2/PeLhhEd9fGgwHu0t6u/L52h+wtmy89wTON8Y2UQahbzXrbYlcHySu
cCPTGaELuJ+TB8EPtnRrdp/nkYhd8IYHH5d15/lQLFmNfusRn3KR86XMGW5z
U5TWmvs/ZQC8Nf5ehxLOt+od8OXy2m5vuV7oMuEzCTuWyIexnsPW4Lx33HLU
EvaPagGcs6JAWbUn82+DQ8c97PC0cj27Bt8IClzykeu1xAj3zXx67TTvn2j8
orEfq7WstN0Y1nMLnDFhUdb6yvPnFTixTs37E7h+yD7DmeL4QzGTmd8yxiCE
D19aKuPjUi0cNCtQLPdmXj1st7xhn5U8f6garkV/zzi3Ooj7Ve0guNPz1eaZ
PI/KL8BbXGpuvTSW9XwPf9taNrdz5XpcLxbz5clWD514vs2zh6cdnmpUVZ4/
Z8LW3gP8l89iPd/Cf/9G3wljHp3FOoPQY83Z3F7u7Id+cI6VafJefl7pdNim
2sPSRzyvKNbBl3ULz5v5sp611xuEsFaBt6TBrKcdLFXXk8fzfC1XwLEtY+JT
Y5k/Bq6l7yrpzvODJg1+GF47SryL9ey1AfvviOsWH5NYz8mwybBAi+Y8D6pX
ww0/t/H+QuuOw/5HQ1+f38L8z+HxxcO25W9jfT1VBqF1VPsqV5NZ35XwmssZ
l+15PjUehRVVi5ru4f03yRN4cEG9iak8z8hNNxqEya57xsj3sr7L4ZcX82a2
UbO+KXBUw6ITDjuZ/xE8pd5I54HMpxTFGQTlqdKkhjz/qG3i/ufzSA/Ctou2
5N3jeU2RDY+tN+OpOeujKoOnnBxQf0Dl/cAO8Qbh0FUr97MrWU8dHDVwdcql
BNbzF5wz7d6FDtHM2y4B62Pzgk6aMOYdDSeKBs+X8n6ibCk8ZEL77O/xrGcp
bG8X/ybwGevZJhH9HNTDNdHIvC5w8zGiSWbvmTcQ9hj5XS/+xLzqxH/nA/Mv
WgPr2WqTQagSNM8hhd8HyUfAh5yyJzlV4/3fRfBqud/8c2XMvx1etvnVgnR+
35B3A95+ZE+1Et7PVzptxnw5NNGYb8P76Ur4Xp/lblt5P1uXBMffjN75gPez
Rdfgn7/Pv/vegvevi+CIaReMI6S8Pz1/C84LI6/0aiLj/fTN8IEGPeYMd+f9
9Mvwo9xOic268v71Jzjn7tFnl22Zv/FWg3BWM02U6cX76Ymw5kzpiKLJ/D7g
InxIv0V5nb+3Un6Erb7tmlY0jfkbJGG/LYQ+Wqtg/oFw4su/auP4Qof/AyNs
XoQ=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.4508314411254604`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 1.4508314411254604`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EFA\"", "\"EFZ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.948112787677888`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.0370113447455515`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "25.61681544391452`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.705041444085997*^9},ExpressionUUID->"45b2c9e4-f0f5-46ff-8029-\
62ac60001573"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<DUST\>\"", ",", "\"\<NUGT\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<JDST\>\"", ",", "\"\<JNUG\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6984978302715607`*^9, 3.6984978560185995`*^9}, {
  3.70201941324889*^9, 
  3.7020194137295437`*^9}},ExpressionUUID->"9d865506-bd6c-4380-8300-\
cddcfd93fe89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3HlcTF8fB/Cxln3skWWQLFnGrihzyRLRkOzLWLOEScpSNGTJEmNJthiU
NRnZ95F9H7KLxhKZQWP5KSG/z/1+zevV9MfzPO/n3OXMueee8z3LVWf0tH7j
CkskEnNRiUT8b/Hv/hSzwP/L2gn/If8Nr9htPvv8arZoletUs2Bce7rX+rGU
rlXCftOKbm8/zyxadhfecUd/qXTLD6KVP+E16fvCNj7OEq2pN80sNPxx4W3d
BLK+N3zErK7q72YRbZoJe1RY0G5iPF1P/QNudnFkTseTlK6Tqc1CiYvdvDcf
o+sbe8KDbqXdiThMloTCjUrVDlwRQpZvg7uNSpgZO59sqBlsFupll1feq0/3
t3aHy65Z9a5QV7JsOqxqtPO3IYus3AL3Ouo0v8P5j5T/K/A7c8fimqefREu7
TjcLUb5Xar8tRemKaXDkj12Lv/SndPVGuP/FWftenibrLsJpx2dsj4qj8jR+
gkOn1ez/TEPnq4JC8HuqbehybzpZuz7ErjytZrhvVtN9SQFc3pVnmIXEvb8u
eW2g4/Vr4cyHGVFVStL9TGfhs6+uNVNk0P2kWXBE7ZTEQa/o+SkqhJqFq20/
1uzX/AvltyOcpW+8sIea0iWn4YU9nbVxa7g+ZML5dUuq58voeFW5MLPwe+ac
eo6XyVp3eNOZvHBjZ7JhDNzl1KSeR53IytewQWY6GtH7K5Vn6Zlm4fLgHzFp
fmR9W9jr8KmjYzbR/UwqeNST6AlpbTn/y+GM4nGvDoZ/pvIsMcssvH6zIrjZ
UPq9xlbwAtmo5Ze+UbpkBLy2waWh22ty/qPhjx8Uw7ZNJ6tS4Pg/Z9YMbkzX
t8pnm4Wx1XpFDqtF15MNhYuWGOqyNYfqn3IR3Gf35LX1pnJ9OAj/WDUvY+sM
Stc/hU+kX2zU4Rk9H8WgOWYh3F+sAJSuXgC/7j44t/0YOl+XBP+sWWxyhDPZ
+AguSxWe63OhcLv6rY2E/S/X83Brw/V5L6xf/7vMgU/vKf9p8O/Qu3hD31H+
8+GEvMqDm/QkKxtGmIWDmZMr9HElm3bBTzskjHidQZbeg11vOZj8itH1FL/g
mtPap5QyktX155qFumFZ3Yb3ofdD5wfXd5751uqZSeWZCxdL23rhr4asrTvP
LCQby2rfDiAbfOHx5b7rX5x/Q/kNg7uvOrK5UMXXVJ7/wYXWLfG4WIHS9bUj
zcKxiN6p1y9RuskHNu+Z17XKcrJ0Blz3QqEm49ZlUH63woWh2k4vqDxraMzC
yjS/fr8y0qk8u2ts5U+WB8OWhIauczc8p/xvho3pjbb3bUHp2suw641hyiIr
KF3mPR/1a2HTCnd/0fWVU+ENaxQz/+yk+2s2wPpXlb8daUXWp8LNn5yZvSua
rmf6CHe6kXq12huyevICs3Db/GjlxAVkXSzc5N3EwHNPycbz8PcxYoV8Sfk3
w/WelPByfkH5kVeKMgs3gw8s+m8fHW9YAx/amyy50YXyZz0Dj6Q/yo/sPew/
Mqneg8N0PWX5hWZhUptB66sGkTUd4K5xqmetcul46Sl7K97CmlLiG0HHq8su
wvsb4zCqfm+6n6493PKww5wnn+l442h4xLs2AyxLyKpX8LrsYROPNaXztaUW
m4X5y5pdOBJoovy3gbf9J+3foOsryv/Ixfb5XwaX2985uqgDHS8dvsQs9Et2
bhj6kX6/Yglc4sLmI308OX+H4LLdwwrl5dPxaADwvuboFnWeRteXD4H9Hrt2
T59F6aqFcF6k62iPfXQ/bTJ8JG1CsfjXdD3DE5geTw06XjlwqVmY4Xowv9YR
smY+/Dk//qVjZ7q+fj+8Snl3juM+qs+mh3DzmJ3rtnam90EqWYbfszcu93jM
Wyq/efB11a669e9Q/TbugSNHXG8S60fnS9Lgk1N1Dw6FULqqwXKzkHpzWuEf
e7i8EuGQ1NczKyWRZUZ4RWqP7MZF6HxlHvzoUv3MU/P5fXNZgeunxh7eNpCs
7wP3q+J1x+k9WXEb3t3hybSjLSh/6hxY9nfi7TZWup6uTgzer+i2U75tpN9j
7AVv/ni0+dLeZEkYvCLkqXnpDTpf+x1+FljiW6FcOt9Qa6VZuLR6uOZcJ0q3
9oB914+V+6+m+8tC4FZvUpuu/sn5j4d7KMQayeXpvMoszPnmW979OlnaDS4j
n5rd5RhdT6GGV89ZGvm8B+VHvQnu8eXhmvPbybpLcFrtuO4N1pDlXbRoL9Ea
tu3H7VccfCh11I5bxbj9ugCv/Fj4+5/tnF8LfPL0WJ/irShdM2k1+pe2xe59
a8H5Owe3pD9urz7A2nFN/gTP5vxVXGMWHoceM1XzIRtXww6+126EDOLyOwPr
fdpvHNSM8/cODjQsTOq4hNtb6VqzEGvc43TnL91P6wFPWXW7z87KdD3ZSXhy
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
muOxGu/Rv7UWJ+Q4Xu8G10vInXQ9g+MxNTydloM4HvsMH+m39uyP+nS8rFoW
3o8NDUOEMjyf1iXLbj1VMwWuM9LUencxXk+Og9u3EUfgPP6p8gHPQ2xOnLg+
KGBVWGBw5T1cfyfB29KHp7hE8fr8Ori6vI7b3VE8n30epunk7zy/7mk2C1MT
GmOIQu2JIRCu7dus87KD1J5YV8OSCXV37cyj42VnzLb4lax8Z2/TWItZcI3s
MvlXV7qedJXFfj3gJKw/UFQ2pi2vZ7yBl2X2G5lUj9uzFR8RH9KEHc+vH/to
m3/j9QsTnCw2/3E0n28o+Qnld39R2RHzeD2zNdyXAn5eXzn8ydbf8nrmC/hb
4LRJTn6cX4fPiP/E7qIq57clXIEGpLz+Mgxe3Hla33EHeD3oGTx9RJUvJRLI
kmLZqN/i6l1Hur68Oeyce7L922CyajBcnhZIOf9RcFZzcUaC11cKW83CE0+/
z80Gk5VN4OG0AMv5H2C1W3/Sa6y2+U5eH9gHj1t/Y/fELEpXN/qC65sy2xUK
5/7C/4td+RrnwmVzi/8ZdIXzvwdu5/76SpSeLL8PXwjcGW7Rcfkqv+J9owUZ
snUOLM5WHOvG61uJ8OAR+tnffMnKu/BxUzWfB7fImp8wTccP4/WXWd9s83Vc
vju+2d1PfeubbTxC1v2Aq8R41oy28HqH7Dvep20DW/bK5PLdBq8LSl99MYfL
9zpcjSbYeX3rG+xUPND1dyrXj5r/IR4ZvPf6iF9c/j1g95RSxpwlvL5t/c82
H8H1wfmHWaDmdCjX367wcPPy0IVzuH+eBl/q/Dm8pgNZ8vmHbb6S+nO5U45Z
mGj2OlTOlfpjVWdY9uec54cwStcGwRUWvs798I3SDevh4m0MJ86W4/07lXMx
fhCn3yXcP3fKtVuf0U+Ep9KGDervTGth2k0yjfuTc/DWywG6qR48nu/4E+Wf
XS5ReMrx2ni43ZRvGx8eoHTJavt0+Wn41PGyjacoyKpM+L5Xrw3lDNzfjclD
f1Bn1easkTzeXAnvCfQs+tCHx5sn4LOXzk9JaEzWvIZ7UwfF8yelf5mFtPvi
H7XPiuVwhT6u63vN5Xj4KPz46YJAl7483syAp4nLr1+5vyvxG/3tQZqAo/y3
/m1bX+Z4OAVuOX9727RJPJ+SDiedHRZ/lfdXWYv/QXsyQdyRQr9H1uKP3X4d
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
6X8Tj9/q
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Vtj3zDsnxsh2gPrssTXkj/ZT/nlgX6ycSHl2U/6jqr9KUI7tofz+rXr8MeMg
9dt1m/in8ok4vnf2ttB64HiGw+C9u8uMbeLk/WxJ3Ig3BxhL13iyl/qMAJ/6
1n5J3l4c33QAXDVV6wFXqrDd+gyssoUzpciORNtD+j9EeUtu1/O/pRzfsnd7
6P2S7Y/Bg1QCseQI5Y2/A/avedSYZo8pv7cYWIWHmReRkfD6NUvBwSf3/WJ/
50OwA+FiolbUryfuTr92uf6aWF0zUf/BwuD4KoEpc4zytwYr7z3/KNk6aWfI
H/F6X6xdyHczjK+74ynbjeZdoXiWbGkBvnZUvXCyffyukD84Svm3guP4JpUf
1IT6NuffjXwY4V+cU9SHrSm4kLn/fEeefZR/zO4wfXs2gbPktxT89pfXB2+A
G6u/Mxzf0WhPmLzuUeCm0wPz/373UP4N4NmN59aIs5Lr2XgNXHDP/u4HcnL+
Wv6AA6mx4s9xfXqH7/VrCeruOnZmGfVlWAe+lf9P/ITnZT5790q9p/0Njmf7
CY6rAri57O/Mts+vXchY7nfiGuxvWg0+tNLazfOGbL0INh7yVV5yn9c7voGb
nX9U/VwVkT/zfsQLKqDdIvqvtV/3R4+oX9dncOuvrx6P7s52b8YDfm1Fhugl
UkaSDTXA1RpkeXd+D5/f3P+A7q9G8HrPhwMhf8r2YLqD0AemT++r1K+pKrhz
7V/JAgM4n6x2cP7RWXMn6cX14VgMLtZ2U5dJNTlfjWkO6e9/NdstlQ5JfSRt
fM5Pey/w5PKDznapIPIvAB+fgBmh8f15jx3S/d9rXm+zHMb6VgHvO75/Z3cw
VtPmdkdlPswFd4s2bP+mV5wvwSOHJT/tc4Xtptdg14KD7e/fIbu7HPFrFV9l
W11zJdk3C5zy6YG1oy/TXhgPgTP+jdPG/pdseQHODOuyqAfZbjyKeKVf0+k9
CpINEWClzk5FuP7N+8GqWlEy2y7K/xRcNNuLt9PrkZ0JPfAvKsAdtZPylwAf
uf1i4+u8O6jfPeB5sZ/tGdSG7PCBv6n09gr7u/87hvlSGhn6Zrb7ih6T+GfE
ZJG/7TGJr+rWJrsegB+o9GMd5fPGOe7XVDref6PYt8LgPBGP4t2sRX2YW4ET
nun1duYl0f9E8O7Diz5+b8b3G4wZpc//H2RTQXC8Flr3Q0Oof2tzcKmZT0sm
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
48Lqye5c48Pmm6/B+ND+BvNH1y/w+Xa2F5vdvJ83+4SAZlIB+TW2G6wTQvvt
ZPMwMJbXwwtJ2N/zHRxLlbfXcf4Hs0xEvKMe4Irkn3XAM9SBXB/7WweDPxy+
/WJjW47nWDkxtP8j+adpUtj4lppg/n7KTY5nHzApVG+V/HP5pDB76D0DVulI
/VZiv6pNDu2Xcf06+04OW8+eJZP1elxz2d84CbZgQbztJvY3CFY/v1K1o6z/
3lMC8n3xSLb7FoJ7HMi54HBvsjEKzO+pbWTL2ymheqHYr1RTA/L7Kwa2mz3g
p8O3X7wxVuT1gzu02vu54Ebaa2fyaWH5saf8tNB+s+Tzh8H8Hu6kvP+X08Lf
f5Lp8F/KwGenvn1lwPJ9hNR/O4OPq1/XySD102fT9Xz+gaz/RDNC8Yms/1Jg
+f5Q9jM6gK+o4zGvWC+xzQBv2og/E9drMP7MMHtgKg5O6Vpw8Mk82c+wzZTz
RnOGiPxTwfK9hsi/C8yfWzgl66lIRIC/r+RrIvXf1mA5Ly7zeVJE6DwI2bsd
zO+lpom9vR8R8v+y39LCGaqXSj1lvDO0/8/24FYwv5etJOvvjlOvp/UR+xVj
VkA/Hy716THgNupA7EH2N26eFdrP5PiWm7PC1pPdMDuMXXnA/D2IMbLeIsHq
8+LOl8i2a7P1fGEY57/zD/jy5endRseW+ZFzTkCr1xcZ73epR3jnhK1H9885
of0DqZ9kmxuq58r+UL25Yfe3DJ0bindEn99U+85KvqqLRZ9Z5oX2G/m+zbXB
dVWC4SfbBs0L8z9OF1i+z2K7KdP8AH9vrHEHmQ81wOp1t3aTHf3BWx8k2RX9
G+eXe9l8Xb+pZD/mNHj5ijTXRnnZbq+6QD+/cJ/ssoMvOxfuLbKd7F0MlvPe
Mp9PLhB7njAn56f5/QK9PlaF79PTa2FAP89PDi4A83vn8+LPjoP5/etSscdv
Fur75Ylkfy7looB8Hz6SbJwHVr+WUyUp+1uOLtLPG+zg/e2vF+nxxwRZj8kW
6/X5GBI/lFss8c609o4K/wMJtwTA
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LxfQgXHhSbAow+31km6Ms8b2wP7zjGjN+x9o7lxw9yqTkKVlpP8JAWf7ncrP
/g/XO3EKWJgx9LR7GllPboOb/Xq/L39D1gv7Xvg+HwXnYy1Iv7YBnGP0s6do
Hs7XtCTwMrE05DqJM271/ptfhp/qekzW56/guJrha96cIeud/18JtTZzwNlj
HNlvJoKX5Uv8O7rQrDLwgtlPdoS8Ie9PmsESOZdFkz3QApU+6BfTa21ubMb5
mXkU/N4yc8JyI5wvOdf/eT63eNo3jPM/gjf9ineqWEPWu5H9MJ8HfOLp0/B6
tBngcVe97pxXIv1wMfjHzA9ln5QxLnwPDt/r/V9QHsl/xACsr0rhv2O8yHpt
CT5nwy6Ye5LMz6vBufeiNYrGk/c7b8Fne6f9uSXFuLr8IKyPI+Jm31HF6zMt
wHNHaBn0kvWD4w2eqXp6VYUDWV/2goPM3tk5hpP1Q25IQo1ey1Wcs4n082bg
zU2TbexdSf6eYL68r+/Vrdj/C3eDLaPHNJ+7Q36vKQD7Dw83ryD/vwrXhCal
/K44Le5ZQt5HuIOtpweoFvWT98U7wVbC773nOsjv93ngqdeiLcekYZxZD3af
XaesNJq8j3CTk1Jhtd1mg2fJ+5QY8NgDWcq1qRhnnAc/MFvDWkfeX7CfgX04
Dc8VNpL9Uw9484dLjL2JZP3bPgw+r3PYovlHSX2cAx+WSJ4vWIn1yX0MtqDc
jLcEk/roAo/2j8xzMcDxFusPl1L8mO4frsF4/zmZ4PVdlSsOLMc4/yE4OvDY
XZN2fB5EHWDdMv26pz/weWAskJdSl2mFJqbl5P1aDXhaRuy3HfYYl/0Cz7ov
c105g/Q/OgpSymuy4NyOLaR/cwIv9tv5VP0byTcMvOR9W7frAVIPreCDJzdv
e7yA9MPjR0ipW8dO3B9uhvlwKPDxjQvjH3mQ53EjeJ+Go+Ey0m+LUsH+s9b0
M1JI/zNGUUr5ujxbv7wB64PnCDY/EbQm/RKph2Bw0fQyi7ZC0m8kg7+GbWvZ
9B6vT68EX9fJvbumkvRvc5SklJCZ5jlpOqnnQPDnu7aXRhSQfogH3tuapHKR
gdfjfAGf3qHrfO0hmR/8R0op1zeVNkVNZH5IAMu3Rpy5s5f0m6XghvA41rIS
0l8qj5JSta4zNkRZ4fdnHQG/Pz7sxfgWnO+418ALGTVyteZkfW4Cxzw7bRQ3
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
bwk4l+4ptgnF64k+gF9ySzaMdUbzDrjA/Zn2pODHGdL/CsAjzq19H9FA+rVG
cKP+yImDzfh80RUWwP0SjnsotMHni/Uf2EK7yHPiZfI8XQanrGBU2Jwj+7k3
4I0aLRFRIsyHOWwhfB8P0cI/zSRfc/DdnZYb28n+hO8FVsvyqdc3Iu9/h8A7
Q7wXzVPAeuJNWwT9avbu73eekPe/K8Cm3zvfXbxL3v/uAsvcFwT91CX9TT/Y
MtmqJGYDud9TF8P8w1q3a+x90l+ywFH9v8/teUb69VjwSMeGxv2fSH95AVz+
eY8X6zp5/o2WQD/MPPvoSyDOF7RlYIfLf0/YTcI4Ywf4jLJwyeL9jzD/bLDy
j4VunYdqMP8n4K4eRv5C7WoczyVLpVSZmnNj92chjmck+MjdRwsHTmOcmwVu
Dp2WezX+Dub/CJxyhznT/ustzP83OJ9T26o6VI7jd8YV1icXfpX4dRXmex+c
v9zn6/CaCsy3HfysbdMXpQllmK/uMlgPJcXClmN4vvAU+GPylku5o9Cyu2CX
nLaS5VWlmG8bODHmqk2IKpo1wU1KXagdtaxs8g3Mdx5YPnB3XCoDr69+B1zM
js00e3kdx1MKntExJjZ7BsY5Y1n/9hehBfcO4/n8ueD2J8X3VGdew/xDwJt0
LQwMvNDs72A/JZXP8SeKcTw1l8PzJPfH6XExxoX2YP/uPWcztqNlG8BJabdD
RaZ4PD0JnDeVMmsfRAvU3GG9TF9PfZPD/MSzwL/2uGaMairB/APA98cE8vz8
BZh/Iljt1ep52+WLMP8y8KqprBUJ7zFOs10B66e6xfnr79CM9WD2zzdj5UVo
9lHwjJSY2FIpXp93HXxdxA3Y/QDzYfl6SKmne8vN1r1Acw+BtxcmWIun4fmC
YvBdlRnZGalo8Xtw2Kk7kuF6mI+6oif0m4eUZvx5inH+fjBd6+Objt8YF10F
n28/EcfOIPk2gldFPFc6tI/kK+8lpULTN2spCa9gvhZgq5MVvT6ul3A8L4Et
niQIV8bn43i+Bqtsv1r1l45mya2UUktTDd8LfQowfzNwDEc+wrm5EPP3BM/f
c+bC6ZkYZzaAtUse/phmg+YMgtcwvh86cSMX8zfxhu+fevUnc20e5u8OHqUt
645IxzhtF9gq+46G0w2M8/rAnqVjtqoqYj7CKauk1OREl/LGVjxe5gZOXnty
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
ztfKkFLxRiPGriOfJ3IA2zSUiKzTE+f+D/mzksM=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5472384*^9, 0}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 3.154387968779745}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5472384*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5472384*^9, 3.7047456*^9}, {0, 3.154387968779745}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"DUST\"", "\"NUGT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.014938740545838861`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.34380826741977283`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.043450789179538256`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 
   3.7050414559741106`*^9},ExpressionUUID->"d9dbabda-209b-490b-8d02-\
e4a5f9d8c287"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
r26Q9UatZf5+fZ2ewf8HeNmF5g==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTN3/APBBJFGTtaiMRCgZikg0N7KnkSTZJhHRw0SrLEPaaBmFsmWU
ULahhUoZa6uMrSTVIC1zlaEsSfp9fM53Xr/XPH88z/N+fc4993PPnHvuWRq1
YYfTpp4MBiOhF4Px77/wD6ehQE6R/1XYwr/4zHtyKs/eaZv6+c//zIgFX7oV
fls7DM3OARtHhiQ/mNH8z7yPYLMBHjF7RjT9s3CARE417Oa0ebk0/rPECmza
cadxKOvTP3OzwT0MJo7IdUALZOCW+NvWfuKGfxb3uy+n+l1xfzv2GsZlluDa
bYb7dXbj/Zjrwd1Vjvyv6/F+ohrwxctT6tf0pf9Zqv5ATi29cvKDwUh8HsYU
8O/xnh758S2Y/xrw6+h+QW2RGOeFgcMC+n4b+xGtUHsop+70SHGXhaNZk8A9
59SkF7Xg83NX/YuXK6Y2z8X6BCHgpZu0d4zsj/mJr4HHXQ3zOp2Jz8MxewT5
uxdfWfcH24PvAp7eVFy6sQHjIgG4T9uT239yMC5NB/v2nHVnPoXPz3gNXuJj
ezUtBC1c/lhOcYuedFV6oyV7wUcPOf659Pgj5n8J/IfbtGzC+nrM/wX4hFtz
onwy3o/7B7x85FLHPi6kfXc/kVPJ4lTvjllYnpkKtqvK0jt8EevjPANf6MXX
sP4kw/w7nijbDy0aXSinIrDB67B9k8H7Tev2Gc+rxfYtA/e8bu8Y4PcO8/8B
1unncZw9HK1YVCSnPtYyok+H4vWCYvCuc6HjY2VvsD3bwHnH1i9361OB+RoU
y6ngO3/4p6wxzlwAzlyW43w17zXmuxNsmHZsylNHtFQBXhjr9+LdObyeMaJE
Tp1N5VyLSanCfO3BlOaJBqOCSsx3R4my/6KFJ8EVGbl9e07A+7F0S+WU29ZU
j/RCNNcOPH2vu0n2Oiwv8AZrBVxMyT6N9xOfAPN27FTjjsV8ZBJwH+e3Eb8e
ovm2ZXLKZ6ihZlHdK2xPL/DfZ7/PzP5A8i0A/xj1ueO9NtbPbgIHOxwro2/h
/SWeT+XUsFM7C3x3YVwhBJdPqtZfsACfj/vpqbL/12B+2uVy6rKJ/SSfI2hm
DHjf4pwNg3PQnDvgsI3s9JGD0PwPYG+hR9Y0tWrMr/8zOTV5u23G2oNYv3Ta
M5XyvCzwrF76e+dbv8f2qwMLplo6VT7E31eiIZVTI79p/HELwv6jsAD/XmJ6
1sYAy7PWgc9L4tb5/MT+J+vzHNqHtat291rsv8zJ4LP1vBQvR9I/V4Ojb+0c
vPw09l9+KPjj1zevkldgnKH2AvrHv5/PFe/HNgezM34Wdnnh/Xiu4NkHzYtW
52N54UFww2zN5Yb3MS65CjZbw/d/JkBzTV/KqTPyX/fNj6AFK8ArK5t82Avx
evF+cN9LF8bM2PYB808DC7svxJX3wTjzFVgyzW/TfDXy/ju9klOPz19cW92E
45l0D/hHUeTsd2Zk/L0ENm6n5/ncxzj7Odgsk/HSfzqOP7xOcPXjSHuhKRmv
LryWU9v1Sl92qX3BfMvBTndPSBy+4/WCX+AURcL9KUPwerFRBbwfnC3ySGs0
5zw45429xpkHrdiepeDmwE2RcWswH9F3cGpSDTP9MI530pGVcup+XfbmvwFo
xiLwS8+Iw2EFaGEROPTxnOARBjg+S76BC4+Mckhqk+Pvr/9GTg1PTHA+G4T1
s+aDa/cab8k1xPtzfcBXfAOuff6B18u+gDujDL75tZPvwfAqOfXg3rsQrd5Y
H2dulcrz8beDA8zS/8wZje0jSgT35xpnLZRi+7CHvZVTGUZh3IXFWD+PAqda
+Hl39sT6hNvA3s2P+TaNZLw9Dn5/vXP82834+ynugUcaOqWbr0ALZlfLKdHk
+FGfcrF/iLeA0+buXGRaRfpDHLgkct7HJx34PjDzwfqsiYP7OGJ5TiNY3eh3
3vqraOmmd3LKUmHj3EMf+y9DCH7QqWPsdoqMt7ngt7UdV9ZYYf28+ncq47VQ
q0ZOzaDMwrcWk/crGmyvH//I6RjGubfBLk6z+648jNcL3oNzBVlX2/uR/qxZ
C/llPdqxshCvl00F33WdkKHlQ74HmeANs+KsbmthXFQLtqwsa7Fk4vgv7Vsn
p9ZuKel48RTHB4YF2M8w0TfFA8cTSTX4nrqde70O+R70lsmp5xMZGfyleD2L
DY4VxM3PDSH5uoH7z3v2/oQTxgWHZCrjB7PXe+gfFnnT+DrYPpyJYM/uAxOP
7Sf5rnyv8r0RHQDbKOZM5WzF/KRXwC6PmBPGB2GcN+GDnPo2fv3BffakPZ3B
geFjbuz+SsazfeCi4/6sZT4k/8tgU9s5q4dYoFkvwXOOdanJC/B5xcs+Qv8p
cWmYehjjsmDwzIZW9+jPGGdeBMtbjHq0u5PxWAr+evSd9Gw2xvm/waFu1RXe
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
+D5f/qzX1EHWn7NO/f/8/P8AxwKGfQ==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5897472*^9, 0}, 
       PlotRange -> {{3.5897472*^9, 3.7047456*^9}, {0, 2.024975751697381}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5897472*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5897472*^9, 3.7047456*^9}, {0, 2.024975751697381}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JDST\"", "\"JNUG\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.044933352243342654`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.28618148869593324`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.1570099884800172`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 
   3.705041459908967*^9},ExpressionUUID->"a74262bd-808e-447b-840b-\
38c5331bd973"]
}, Open  ]]
},
WindowSize->{1218, 741},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.35 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4635, 117, 380, "Input", "ExpressionUUID" -> \
"8c08837f-8e1b-421e-be78-0bc82eda6287"],
Cell[CellGroupData[{
Cell[5218, 141, 1304, 34, 156, "Input", "ExpressionUUID" -> \
"ca58564d-e2c2-4c41-a41b-4195dc58339b"],
Cell[6525, 177, 490, 7, 43, "Output", "ExpressionUUID" -> \
"985ea7ad-648c-4ad1-a444-c37cec9340d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7052, 189, 1400, 37, 212, "Input", "ExpressionUUID" -> \
"9ec59700-6cdc-4997-9164-7d1dbcdd846e"],
Cell[8455, 228, 21411, 433, 605, "Output", "ExpressionUUID" -> \
"366528c8-5bb0-4fba-9145-bf2e10c6e2d7"],
Cell[29869, 663, 21214, 429, 608, "Output", "ExpressionUUID" -> \
"22bf5682-e9b5-4098-b8df-8a77bfdd9234"],
Cell[51086, 1094, 21782, 439, 605, "Output", "ExpressionUUID" -> \
"ab8b24ee-5b82-490d-b8bd-b2cf957a1ba9"],
Cell[72871, 1535, 28757, 567, 605, "Output", "ExpressionUUID" -> \
"c7b36476-a149-4729-bf72-77eb85f06e2f"],
Cell[101631, 2104, 29028, 571, 605, "Output", "ExpressionUUID" -> \
"eb7b1536-ca59-40a5-919a-df3b7b221dc3"],
Cell[130662, 2677, 28944, 570, 605, "Output", "ExpressionUUID" -> \
"a260ac7d-4a8f-4aaf-8a66-71fcd7e4a9d4"],
Cell[159609, 3249, 36125, 701, 605, "Output", "ExpressionUUID" -> \
"dbf67e15-fcc3-4daa-8978-85e69b59e5a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195771, 3955, 489, 13, 72, "Input", "ExpressionUUID" -> \
"450dc594-3d9b-4fdc-9103-d430ebee1359"],
Cell[196263, 3970, 70822, 1253, 615, "Output", "ExpressionUUID" -> \
"e084323d-0c74-4ee0-a3e0-6d19ea06fd0f"],
Cell[267088, 5225, 67888, 1206, 615, "Output", "ExpressionUUID" -> \
"49736b8c-31d0-4a9f-93ca-df6437b1a0fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335013, 6436, 490, 13, 72, "Input", "ExpressionUUID" -> \
"4277d921-c313-41ad-9dbe-20988045f588"],
Cell[335506, 6451, 69003, 1224, 615, "Output", "ExpressionUUID" -> \
"c52f8641-c66d-4ab8-8acd-c7cfaec73d09"],
Cell[404512, 7677, 69456, 1231, 615, "Output", "ExpressionUUID" -> \
"0383eb9a-36f5-49d1-abd1-f6ae37dc45bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474005, 8913, 766, 19, 100, "Input", "ExpressionUUID" -> \
"b1d487e7-f623-4847-a8d2-c923553c7741"],
Cell[474774, 8934, 69305, 1228, 615, "Output", "ExpressionUUID" -> \
"a43e2b8a-46d8-4b1e-9ed9-8d55d2f33405"],
Cell[544082, 10164, 66399, 1182, 615, "Output", "ExpressionUUID" -> \
"7f56c6c9-2671-4272-926d-8057535624b3"],
Cell[610484, 11348, 67527, 1199, 615, "Output", "ExpressionUUID" -> \
"45b2c9e4-f0f5-46ff-8029-62ac60001573"]
}, Open  ]],
Cell[CellGroupData[{
Cell[678048, 12552, 545, 14, 72, "Input", "ExpressionUUID" -> \
"9d865506-bd6c-4380-8300-cddcfd93fe89"],
Cell[678596, 12568, 69965, 1240, 615, "Output", "ExpressionUUID" -> \
"d9dbabda-209b-490b-8d02-e4a5f9d8c287"],
Cell[748564, 13810, 56882, 1025, 615, "Output", "ExpressionUUID" -> \
"a74262bd-808e-447b-840b-38c5331bd973"]
}, Open  ]]
}
]
*)

