(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    998362,      18677]
NotebookOptionsPosition[    994446,      18586]
NotebookOutlinePosition[    994821,      18602]
CellTagsIndexPosition[    994778,      18599]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stocks_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s", ",", "portfolio", ",", "data", ",", "symbols", ",", "std", ",", 
      "return"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeData", "[", 
         RowBox[{"#", ",", "start", ",", "end"}], "]"}], "&"}], "/@", 
       "stocks"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "&"}], "/@", "s"}], 
            ")"}]}]}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"s", "~", "Join", "~", 
       RowBox[{"{", "portfolio", "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"symbols", "=", 
      RowBox[{"stocks", "~", "Join", "~", 
       RowBox[{"{", "\"\<portfolio\>\"", "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"std", "=", 
      RowBox[{"StandardDeviation", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Last", "@", 
       RowBox[{"portfolio", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DateListPlot", "[", 
        RowBox[{"data", ",", 
         RowBox[{"PlotLegends", "\[Rule]", "symbols"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"return", ",", "std", ",", 
          RowBox[{"return", "/", "std"}]}], "}"}], "//", 
        RowBox[{
         RowBox[{"TableForm", "[", 
          RowBox[{"#", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<return\>\"", ",", "\"\<std\>\"", ",", "\"\<r/s\>\""}], 
               "}"}], ",", "Automatic"}], "}"}]}]}], "]"}], "&"}]}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}, 
   3.6695420344838495`*^9, {3.6701716503770185`*^9, 3.6701716506582756`*^9}, {
   3.685305952518339*^9, 3.6853059537176065`*^9}, {3.6967608776432834`*^9, 
   3.69676088094309*^9}, {3.6967609151895046`*^9, 3.6967609377087526`*^9}, {
   3.696760993933354*^9, 3.696761073622054*^9}, {3.6967611222038827`*^9, 
   3.6967611349350204`*^9}, 
   3.6967613481293807`*^9},ExpressionUUID->"8c08837f-8e1b-421e-be78-\
0bc82eda6287"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"5", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start1", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"1", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start2", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", " ", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "//", "DateString"}]}], "Input",
 CellChangeTimes->{{3.687000687380389*^9, 3.687000691123763*^9}, {
  3.687614865311994*^9, 3.6876148655927954`*^9}, {3.687615693446018*^9, 
  3.6876157159117823`*^9}, {3.6876157613395433`*^9, 3.6876158485145035`*^9}, {
  3.6876161174929743`*^9, 3.687616121566601*^9}, {3.6957146336464562`*^9, 
  3.6957146442638135`*^9}, {3.695714683683401*^9, 
  3.6957146874316454`*^9}},ExpressionUUID->"ca58564d-e2c2-4c41-a41b-\
4195dc58339b"],

Cell[BoxData["\<\"Thu 1 Jun 2017\"\>"], "Output",
 CellChangeTimes->{3.695714691871008*^9, 3.6957281132851152`*^9, 
  3.6962338966179028`*^9, 3.6967607209181795`*^9, 3.6967614646181746`*^9, 
  3.69676153070809*^9, 3.6967617322874737`*^9, 3.6967619060619135`*^9, 
  3.696762055027141*^9, 3.69849774408033*^9, 3.6984978125269766`*^9, 
  3.7020194263341355`*^9, 3.7020197015737047`*^9, 3.7046909729002047`*^9, 
  3.705041397935094*^9, 3.705251975042736*^9, 3.705314779789386*^9, 
  3.705314925688922*^9},ExpressionUUID->"f23e9290-700e-4fe7-ab20-\
b5a47db629c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<PUTW\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OUSA\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SCIU\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<PUTW\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCIU\>\"", ",", "\"\<OUSA\>\"", ",", "\"\<PUTW\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7046912590027647`*^9, {3.704691320868693*^9, 3.7046913619411926`*^9}, {
   3.7050416338567667`*^9, 
   3.705041640480579*^9}},ExpressionUUID->"9ec59700-6cdc-4997-9164-\
7d1dbcdd846e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nlYTPsfB/CRIimmXeHXRG5KupOIiDpyWxSNpIUwLYrbNm3aaJF2NZMQ
ojsVUoqyxU8xlbjZGiqZq7qhkIMi1xru557PX1/PE72e7/ec8z7v8znnoe8b
5rpFjsVijcLPf//Cn2SNzTSFvw5bw181y8DRskI7HrpvK3hz7rY/u0eH/rPg
BTi+Y26cvzyzLlbl05STykldliJj6RJweXB2tNNExqwAsNbUkl8/qjDmisDH
wkTuC8czlkzyoanuTfn8dQqMhxeBbV6INtiNY8zxA88reG/6TYkxLxd8XrTU
QQHPl1wHVn+j0+SvwZht4UtTN3d6KP2uz9iGDz5vOvOU0gzGgmxwb2taZo8B
5j8PXh/UdOO6OebvBVvy4s6avGHul7/Rj6aaW47/aItgLMoAm24Yoob7GEtq
wb8lK7/brIf5H4MnzPtkbD4P84/zp6mG/HKDK47Y52nwuPanoQa2mFcGXtIy
6GW6FPOO3UJTmX+ILWtdMO9c8BPpt1+CvLDPKrBc1L2zmm7Y50Pw15W1agJ3
xnxWAE2lhevc0UOLjAOI4yVuYJPJZqKXuM5rB0sTG5/rbcI+v4NbPCsNA7xx
HgwDaSqjW+VDeTTmXwO2lPPQmOWH+XeAk/p3liaFYJ9fA4nzSQ220pSa/9t1
Af6Y3wX8oUFzsA33c+PAFmXLPbWiMH8ZeHt2+znveOxTfxtNdWnKhJYx2Kcz
uMl45v87fDH/dvCKT327fcIwvxhsda+5/0o45r8FfiU3sqY4B/t1/J2mDrUa
XlTOxn4jwd/XGNZ+R4uPgidU3L46fxfmvwnOic7KaszD/O/B3afdZq0VYb+C
IOjzpV5jfz72exg87cBA8qEDmP86OC8i9WTnXsw/BG5Q3HGp/hDm1wmmKZXl
9m6ri7DfwmBind0E9nIZCl1dhvlfBxPXF2iFENcX24QQebnXwNGf79ZL92O/
gyHE9UTqoTQV3FYzbc5BzL8UnOocPDgVzzccCP4+pKwxVox9ssNoKmC55kj2
Gcy7GBy+1eTsilrMuwVs5Jl40bMa8wrBu2z3bsrDeZKqCIh+WIsExDrXFywq
5ObIPDDvHvCsNYpTbsdi3ovgNz7jJ1XjfHAWhMP73lzs8jYB+9wM3mqxIEM1
CechK5zoo+ZcONl3D7hEZHy57gj26R1B7BengzPt5aZxsT9pDTjpjcdclVLM
/ziCuB+uQiS8PyxlpYES7DMVvMro0Zl96OHqSOL6nEfgoaLQF3XHML9cFLwf
B+R175zE/CZg607LVMcT2O+pKKJvm05wu1ulBfco5v8ZRVxPbBRNU4b1o9Zr
8flK10YT5+M/iCbnYRTM+dVH6xw+X8kv22nqlIFVysBlzM8Dy2cYNExDcxLA
51Z56efUYb9fwOlrn2ZUtGC/M2Pg/dbVfq19HfOvBq8IvTDF7xrmjwX7aeSl
fbmA+UvBZilF7j8qsV/9WOi7/lavsAr7dYol+uZHgx1F3roJmZj/j1jieyVp
jSW+HzyHOPg+/bM/Xv809hsBtj9ilf7hEuY/ArbpVZ/U9RfmvwGOPzyzJ+YZ
5n8HrhJyK0Jk2G9YPE3VJ/Gcrw5iv4fAxbKYvw1HMP918Fs124TLHzD/W9L8
KQnE/uEDYGGa7Gz3J+y3EVwaMRJFKb9j8tNgwd8sO7sxjGusd9DUgAenP0ON
sc1V8Mipq+x2FcaCl+B9/1vn8JHNWKy2k9gvtQL75vjqfFNgzAoEC92c/TfL
MRYNgI0//DTZ1IR9Tk6kKZmn7of7nZjXElyyTefVuS7M6w9W5IhdLR5g33ng
gT4nXjoe36ecRFOB1ROmqrdhnwvBn+9uUaMf4jz4gB3Gm53e8QjnIQesHbUs
KeUu9n0BfGNx5LOh29jn/GTifPxN4Dflq9eaYT5RJljS6694F88nOQu+9Lzj
4jEp5u8G3+dnl1bg+WvSUsjnfyaFuB77L7DHHm+j31oxr/wuYp5Z1WDHbU5O
Mc2Yrwu8+NzeFLMezDcmFb53zTY7pz/BfHNSiefPqQSPBjwplx/G/jrAs1l9
B7ve47z+AFfN1VKOfIt5Z++mqXc2t16uRPe5gq2dJ2k7fcS+vpGWzkoj5ofF
A3NOLKg8/xPzxoPLOlTUrHD+JJ/BH5Xa7zwZxb5mpNPUgnw6SUeDOZ6zCqxF
q6mnTsf5jCGdXAK+UWsf824qYzYng6ZsB7Kq/CfjvK7MIOc1KoOc12JyXfon
uG5jxcoTHMZ8+0yaOjN/TyVrJs5rONj9QVloK1pSBHZIVFieOJvxcAt4cLgo
rmQO5h8Gl08MU9owC9+n0Cz4/0GdtGeyMeO+g+AmV/MrT00wfzN4sXGgpvlc
zP8GbPTIpPOFGebXzibWuRLw1N15J49YYN5X4KM850gjW8yrkQPfgyztyVdW
YN5lpHkN4J6FPffCHLHPF+ANQXryz6wwr+oeeJ7unTL7NZh3CWl2AFi1NUg1
yA377Ac3CsXRMlfsc1IuYZZlLnE8149c5+eCOdOVll10wT4n5tHUcYfu62uc
sE8LcHrpWM8reD0eH1w6eFPR1hvzZ4MniFeHt7hj/vN5RD4bcyFN1SwNWJDn
gX1uFBJ9ijPA8aqfBXHmmL9WSPTL6hYSz0+0XkQcL9kNFo5W2/XaY/7TIuJ+
ODIRcb+8sfk09X5GwbGOjdhvSj6xn10FTqyMHFfgjPkfkhaw9hJ9io33Euvc
CnDb2dq15Z7Ybzu4S9l7+S3sU/QdvKz5aaWzHeY3LIDvb7GPpTsX+5QWEPNR
87WAmJ8+g300FdTgtcJ0EeZ12Ufcj00ceEyM2X09L+zzE9jhH1lnUiz2OWM/
TT3StLjrkYx5ncHXipKfuKZi3u2kRWKwkcuYbYMp2KfeAXjfAgUqZQnYpyP4
oOnxcNV4zB8J7mHf+Rm0G/MfBet+87UqTsf8N8H1IV8iG7OwT7tCYl0sANsX
XFuUlov5DxcS+1kt4PVPRwr792D+IfCtxkKxchr2GXKQppQqZo+65uA8FIJH
3bLbxoswfxM4LvOOfALeH+81uT9Z6xCxn70fXDNwU1vlKPZ7DSwZFz3hcSnm
HwSz3ips0a/A/OqH4XvYPq8j8AzmXwqeqDHd4HEl9vmcXJewi2iqQPlH2Jea
d9b/AoCtmFc=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nlYTPsfB/CRIimmXeHXRG5KupOIiDpyWxSNpIUwLYrbNm3aaJF2NZMQ
ojsVUoqyxU8xlbjZGiqZq7qhkIMi1xru557PX1/PE72e7/ec8z7v8znnoe8b
5rpFjsVijcLPf//Cn2SNzTSFvw5bw181y8DRskI7HrpvK3hz7rY/u0eH/rPg
BTi+Y26cvzyzLlbl05STykldliJj6RJweXB2tNNExqwAsNbUkl8/qjDmisDH
wkTuC8czlkzyoanuTfn8dQqMhxeBbV6INtiNY8zxA88reG/6TYkxLxd8XrTU
QQHPl1wHVn+j0+SvwZht4UtTN3d6KP2uz9iGDz5vOvOU0gzGgmxwb2taZo8B
5j8PXh/UdOO6OebvBVvy4s6avGHul7/Rj6aaW47/aItgLMoAm24Yoob7GEtq
wb8lK7/brIf5H4MnzPtkbD4P84/zp6mG/HKDK47Y52nwuPanoQa2mFcGXtIy
6GW6FPOO3UJTmX+ILWtdMO9c8BPpt1+CvLDPKrBc1L2zmm7Y50Pw15W1agJ3
xnxWAE2lhevc0UOLjAOI4yVuYJPJZqKXuM5rB0sTG5/rbcI+v4NbPCsNA7xx
HgwDaSqjW+VDeTTmXwO2lPPQmOWH+XeAk/p3liaFYJ9fA4nzSQ220pSa/9t1
Af6Y3wX8oUFzsA33c+PAFmXLPbWiMH8ZeHt2+znveOxTfxtNdWnKhJYx2Kcz
uMl45v87fDH/dvCKT327fcIwvxhsda+5/0o45r8FfiU3sqY4B/t1/J2mDrUa
XlTOxn4jwd/XGNZ+R4uPgidU3L46fxfmvwnOic7KaszD/O/B3afdZq0VYb+C
IOjzpV5jfz72exg87cBA8qEDmP86OC8i9WTnXsw/BG5Q3HGp/hDm1wmmKZXl
9m6ri7DfwmBind0E9nIZCl1dhvlfBxPXF2iFENcX24QQebnXwNGf79ZL92O/
gyHE9UTqoTQV3FYzbc5BzL8UnOocPDgVzzccCP4+pKwxVox9ssNoKmC55kj2
Gcy7GBy+1eTsilrMuwVs5Jl40bMa8wrBu2z3bsrDeZKqCIh+WIsExDrXFywq
5ObIPDDvHvCsNYpTbsdi3ovgNz7jJ1XjfHAWhMP73lzs8jYB+9wM3mqxIEM1
CechK5zoo+ZcONl3D7hEZHy57gj26R1B7BengzPt5aZxsT9pDTjpjcdclVLM
/ziCuB+uQiS8PyxlpYES7DMVvMro0Zl96OHqSOL6nEfgoaLQF3XHML9cFLwf
B+R175zE/CZg607LVMcT2O+pKKJvm05wu1ulBfco5v8ZRVxPbBRNU4b1o9Zr
8flK10YT5+M/iCbnYRTM+dVH6xw+X8kv22nqlIFVysBlzM8Dy2cYNExDcxLA
51Z56efUYb9fwOlrn2ZUtGC/M2Pg/dbVfq19HfOvBq8IvTDF7xrmjwX7aeSl
fbmA+UvBZilF7j8qsV/9WOi7/lavsAr7dYol+uZHgx1F3roJmZj/j1jieyVp
jSW+HzyHOPg+/bM/Xv809hsBtj9ilf7hEuY/ArbpVZ/U9RfmvwGOPzyzJ+YZ
5n8HrhJyK0Jk2G9YPE3VJ/Gcrw5iv4fAxbKYvw1HMP918Fs124TLHzD/W9L8
KQnE/uEDYGGa7Gz3J+y3EVwaMRJFKb9j8tNgwd8sO7sxjGusd9DUgAenP0ON
sc1V8Mipq+x2FcaCl+B9/1vn8JHNWKy2k9gvtQL75vjqfFNgzAoEC92c/TfL
MRYNgI0//DTZ1IR9Tk6kKZmn7of7nZjXElyyTefVuS7M6w9W5IhdLR5g33ng
gT4nXjoe36ecRFOB1ROmqrdhnwvBn+9uUaMf4jz4gB3Gm53e8QjnIQesHbUs
KeUu9n0BfGNx5LOh29jn/GTifPxN4Dflq9eaYT5RJljS6694F88nOQu+9Lzj
4jEp5u8G3+dnl1bg+WvSUsjnfyaFuB77L7DHHm+j31oxr/wuYp5Z1WDHbU5O
Mc2Yrwu8+NzeFLMezDcmFb53zTY7pz/BfHNSiefPqQSPBjwplx/G/jrAs1l9
B7ve47z+AFfN1VKOfIt5Z++mqXc2t16uRPe5gq2dJ2k7fcS+vpGWzkoj5ofF
A3NOLKg8/xPzxoPLOlTUrHD+JJ/BH5Xa7zwZxb5mpNPUgnw6SUeDOZ6zCqxF
q6mnTsf5jCGdXAK+UWsf824qYzYng6ZsB7Kq/CfjvK7MIOc1KoOc12JyXfon
uG5jxcoTHMZ8+0yaOjN/TyVrJs5rONj9QVloK1pSBHZIVFieOJvxcAt4cLgo
rmQO5h8Gl08MU9owC9+n0Cz4/0GdtGeyMeO+g+AmV/MrT00wfzN4sXGgpvlc
zP8GbPTIpPOFGebXzibWuRLw1N15J49YYN5X4KM850gjW8yrkQPfgyztyVdW
YN5lpHkN4J6FPffCHLHPF+ANQXryz6wwr+oeeJ7unTL7NZh3CWl2AFi1NUg1
yA377Ac3CsXRMlfsc1IuYZZlLnE8149c5+eCOdOVll10wT4n5tHUcYfu62uc
sE8LcHrpWM8reD0eH1w6eFPR1hvzZ4MniFeHt7hj/vN5RD4bcyFN1SwNWJDn
gX1uFBJ9ijPA8aqfBXHmmL9WSPTL6hYSz0+0XkQcL9kNFo5W2/XaY/7TIuJ+
ODIRcb+8sfk09X5GwbGOjdhvSj6xn10FTqyMHFfgjPkfkhaw9hJ9io33Euvc
CnDb2dq15Z7Ybzu4S9l7+S3sU/QdvKz5aaWzHeY3LIDvb7GPpTsX+5QWEPNR
87WAmJ8+g300FdTgtcJ0EeZ12Ufcj00ceEyM2X09L+zzE9jhH1lnUiz2OWM/
TT3StLjrkYx5ncHXipKfuKZi3u2kRWKwkcuYbYMp2KfeAXjfAgUqZQnYpyP4
oOnxcNV4zB8J7mHf+Rm0G/MfBet+87UqTsf8N8H1IV8iG7OwT7tCYl0sANsX
XFuUlov5DxcS+1kt4PVPRwr792D+IfCtxkKxchr2GXKQppQqZo+65uA8FIJH
3bLbxoswfxM4LvOOfALeH+81uT9Z6xCxn70fXDNwU1vlKPZ7DSwZFz3hcSnm
HwSz3ips0a/A/OqH4XvYPq8j8AzmXwqeqDHd4HEl9vmcXJewi2iqQPlH2Jea
d9b/AoCtmFc=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9766181233910628}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9827651952347697, 
        1.1057066321089095`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9766181233910628}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9827651952347697, 
        1.1057066321089095`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1057066321089095`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02761314649489904`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "40.04276123741154`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.7053149266562424`*^9},ExpressionUUID->"0bf1a93c-db37-4f77-aa3c-\
51703611785c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Kd9czMveAf+fa9JxjhEPOP0HHTGMvg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Kd9czMveAf+fa9JxjhEPOP0HHTGMvg==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9665747775801471}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9728219868578996, 
        1.0977661724129508`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9665747775801471}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9728219868578996, 
        1.0977661724129508`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0977661724129508`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.02996065462641735`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "36.640259904234945`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.7053149278149433`*^9},ExpressionUUID->"e51f5e01-42fc-466b-8feb-\
d0e3198b374c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LzCriw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LzCriw==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1253955692322644`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03837728253176765`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "29.324524692458176`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.7053149287706165`*^9},ExpressionUUID->"221cb984-c019-481b-8626-\
2c4333640d8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Kd9czMveAf+fa9JxjhEPOP0HHTGMvg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nlYTPsfB/CRIimmXeHXRG5KupOIiDpyWxSNpIUwLYrbNm3aaJF2NZMQ
ojsVUoqyxU8xlbjZGiqZq7qhkIMi1xru557PX1/PE72e7/ec8z7v8znnoe8b
5rpFjsVijcLPf//Cn2SNzTSFvw5bw181y8DRskI7HrpvK3hz7rY/u0eH/rPg
BTi+Y26cvzyzLlbl05STykldliJj6RJweXB2tNNExqwAsNbUkl8/qjDmisDH
wkTuC8czlkzyoanuTfn8dQqMhxeBbV6INtiNY8zxA88reG/6TYkxLxd8XrTU
QQHPl1wHVn+j0+SvwZht4UtTN3d6KP2uz9iGDz5vOvOU0gzGgmxwb2taZo8B
5j8PXh/UdOO6OebvBVvy4s6avGHul7/Rj6aaW47/aItgLMoAm24Yoob7GEtq
wb8lK7/brIf5H4MnzPtkbD4P84/zp6mG/HKDK47Y52nwuPanoQa2mFcGXtIy
6GW6FPOO3UJTmX+ILWtdMO9c8BPpt1+CvLDPKrBc1L2zmm7Y50Pw15W1agJ3
xnxWAE2lhevc0UOLjAOI4yVuYJPJZqKXuM5rB0sTG5/rbcI+v4NbPCsNA7xx
HgwDaSqjW+VDeTTmXwO2lPPQmOWH+XeAk/p3liaFYJ9fA4nzSQ220pSa/9t1
Af6Y3wX8oUFzsA33c+PAFmXLPbWiMH8ZeHt2+znveOxTfxtNdWnKhJYx2Kcz
uMl45v87fDH/dvCKT327fcIwvxhsda+5/0o45r8FfiU3sqY4B/t1/J2mDrUa
XlTOxn4jwd/XGNZ+R4uPgidU3L46fxfmvwnOic7KaszD/O/B3afdZq0VYb+C
IOjzpV5jfz72exg87cBA8qEDmP86OC8i9WTnXsw/BG5Q3HGp/hDm1wmmKZXl
9m6ri7DfwmBind0E9nIZCl1dhvlfBxPXF2iFENcX24QQebnXwNGf79ZL92O/
gyHE9UTqoTQV3FYzbc5BzL8UnOocPDgVzzccCP4+pKwxVox9ssNoKmC55kj2
Gcy7GBy+1eTsilrMuwVs5Jl40bMa8wrBu2z3bsrDeZKqCIh+WIsExDrXFywq
5ObIPDDvHvCsNYpTbsdi3ovgNz7jJ1XjfHAWhMP73lzs8jYB+9wM3mqxIEM1
CechK5zoo+ZcONl3D7hEZHy57gj26R1B7BengzPt5aZxsT9pDTjpjcdclVLM
/ziCuB+uQiS8PyxlpYES7DMVvMro0Zl96OHqSOL6nEfgoaLQF3XHML9cFLwf
B+R175zE/CZg607LVMcT2O+pKKJvm05wu1ulBfco5v8ZRVxPbBRNU4b1o9Zr
8flK10YT5+M/iCbnYRTM+dVH6xw+X8kv22nqlIFVysBlzM8Dy2cYNExDcxLA
51Z56efUYb9fwOlrn2ZUtGC/M2Pg/dbVfq19HfOvBq8IvTDF7xrmjwX7aeSl
fbmA+UvBZilF7j8qsV/9WOi7/lavsAr7dYol+uZHgx1F3roJmZj/j1jieyVp
jSW+HzyHOPg+/bM/Xv809hsBtj9ilf7hEuY/ArbpVZ/U9RfmvwGOPzyzJ+YZ
5n8HrhJyK0Jk2G9YPE3VJ/Gcrw5iv4fAxbKYvw1HMP918Fs124TLHzD/W9L8
KQnE/uEDYGGa7Gz3J+y3EVwaMRJFKb9j8tNgwd8sO7sxjGusd9DUgAenP0ON
sc1V8Mipq+x2FcaCl+B9/1vn8JHNWKy2k9gvtQL75vjqfFNgzAoEC92c/TfL
MRYNgI0//DTZ1IR9Tk6kKZmn7of7nZjXElyyTefVuS7M6w9W5IhdLR5g33ng
gT4nXjoe36ecRFOB1ROmqrdhnwvBn+9uUaMf4jz4gB3Gm53e8QjnIQesHbUs
KeUu9n0BfGNx5LOh29jn/GTifPxN4Dflq9eaYT5RJljS6694F88nOQu+9Lzj
4jEp5u8G3+dnl1bg+WvSUsjnfyaFuB77L7DHHm+j31oxr/wuYp5Z1WDHbU5O
Mc2Yrwu8+NzeFLMezDcmFb53zTY7pz/BfHNSiefPqQSPBjwplx/G/jrAs1l9
B7ve47z+AFfN1VKOfIt5Z++mqXc2t16uRPe5gq2dJ2k7fcS+vpGWzkoj5ofF
A3NOLKg8/xPzxoPLOlTUrHD+JJ/BH5Xa7zwZxb5mpNPUgnw6SUeDOZ6zCqxF
q6mnTsf5jCGdXAK+UWsf824qYzYng6ZsB7Kq/CfjvK7MIOc1KoOc12JyXfon
uG5jxcoTHMZ8+0yaOjN/TyVrJs5rONj9QVloK1pSBHZIVFieOJvxcAt4cLgo
rmQO5h8Gl08MU9owC9+n0Cz4/0GdtGeyMeO+g+AmV/MrT00wfzN4sXGgpvlc
zP8GbPTIpPOFGebXzibWuRLw1N15J49YYN5X4KM850gjW8yrkQPfgyztyVdW
YN5lpHkN4J6FPffCHLHPF+ANQXryz6wwr+oeeJ7unTL7NZh3CWl2AFi1NUg1
yA377Ac3CsXRMlfsc1IuYZZlLnE8149c5+eCOdOVll10wT4n5tHUcYfu62uc
sE8LcHrpWM8reD0eH1w6eFPR1hvzZ4MniFeHt7hj/vN5RD4bcyFN1SwNWJDn
gX1uFBJ9ijPA8aqfBXHmmL9WSPTL6hYSz0+0XkQcL9kNFo5W2/XaY/7TIuJ+
ODIRcb+8sfk09X5GwbGOjdhvSj6xn10FTqyMHFfgjPkfkhaw9hJ9io33Euvc
CnDb2dq15Z7Ybzu4S9l7+S3sU/QdvKz5aaWzHeY3LIDvb7GPpTsX+5QWEPNR
87WAmJ8+g300FdTgtcJ0EeZ12Ufcj00ceEyM2X09L+zzE9jhH1lnUiz2OWM/
TT3StLjrkYx5ncHXipKfuKZi3u2kRWKwkcuYbYMp2KfeAXjfAgUqZQnYpyP4
oOnxcNV4zB8J7mHf+Rm0G/MfBet+87UqTsf8N8H1IV8iG7OwT7tCYl0sANsX
XFuUlov5DxcS+1kt4PVPRwr792D+IfCtxkKxchr2GXKQppQqZo+65uA8FIJH
3bLbxoswfxM4LvOOfALeH+81uT9Z6xCxn70fXDNwU1vlKPZ7DSwZFz3hcSnm
HwSz3ips0a/A/OqH4XvYPq8j8AzmXwqeqDHd4HEl9vmcXJewi2iqQPlH2Jea
d9b/AoCtmFc=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
v7Za
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9661777545953492}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9728219868578996, 
        1.1057066321089095`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9661777545953492}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9728219868578996, 
        1.1057066321089095`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1017364022609302`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.026305388618792187`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "41.882536624981306`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.7053149308607855`*^9},ExpressionUUID->"d31f3904-8848-4abd-b2a8-\
fb7587909f02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LzCriw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nlYTPsfB/CRIimmXeHXRG5KupOIiDpyWxSNpIUwLYrbNm3aaJF2NZMQ
ojsVUoqyxU8xlbjZGiqZq7qhkIMi1xru557PX1/PE72e7/ec8z7v8znnoe8b
5rpFjsVijcLPf//Cn2SNzTSFvw5bw181y8DRskI7HrpvK3hz7rY/u0eH/rPg
BTi+Y26cvzyzLlbl05STykldliJj6RJweXB2tNNExqwAsNbUkl8/qjDmisDH
wkTuC8czlkzyoanuTfn8dQqMhxeBbV6INtiNY8zxA88reG/6TYkxLxd8XrTU
QQHPl1wHVn+j0+SvwZht4UtTN3d6KP2uz9iGDz5vOvOU0gzGgmxwb2taZo8B
5j8PXh/UdOO6OebvBVvy4s6avGHul7/Rj6aaW47/aItgLMoAm24Yoob7GEtq
wb8lK7/brIf5H4MnzPtkbD4P84/zp6mG/HKDK47Y52nwuPanoQa2mFcGXtIy
6GW6FPOO3UJTmX+ILWtdMO9c8BPpt1+CvLDPKrBc1L2zmm7Y50Pw15W1agJ3
xnxWAE2lhevc0UOLjAOI4yVuYJPJZqKXuM5rB0sTG5/rbcI+v4NbPCsNA7xx
HgwDaSqjW+VDeTTmXwO2lPPQmOWH+XeAk/p3liaFYJ9fA4nzSQ220pSa/9t1
Af6Y3wX8oUFzsA33c+PAFmXLPbWiMH8ZeHt2+znveOxTfxtNdWnKhJYx2Kcz
uMl45v87fDH/dvCKT327fcIwvxhsda+5/0o45r8FfiU3sqY4B/t1/J2mDrUa
XlTOxn4jwd/XGNZ+R4uPgidU3L46fxfmvwnOic7KaszD/O/B3afdZq0VYb+C
IOjzpV5jfz72exg87cBA8qEDmP86OC8i9WTnXsw/BG5Q3HGp/hDm1wmmKZXl
9m6ri7DfwmBind0E9nIZCl1dhvlfBxPXF2iFENcX24QQebnXwNGf79ZL92O/
gyHE9UTqoTQV3FYzbc5BzL8UnOocPDgVzzccCP4+pKwxVox9ssNoKmC55kj2
Gcy7GBy+1eTsilrMuwVs5Jl40bMa8wrBu2z3bsrDeZKqCIh+WIsExDrXFywq
5ObIPDDvHvCsNYpTbsdi3ovgNz7jJ1XjfHAWhMP73lzs8jYB+9wM3mqxIEM1
CechK5zoo+ZcONl3D7hEZHy57gj26R1B7BengzPt5aZxsT9pDTjpjcdclVLM
/ziCuB+uQiS8PyxlpYES7DMVvMro0Zl96OHqSOL6nEfgoaLQF3XHML9cFLwf
B+R175zE/CZg607LVMcT2O+pKKJvm05wu1ulBfco5v8ZRVxPbBRNU4b1o9Zr
8flK10YT5+M/iCbnYRTM+dVH6xw+X8kv22nqlIFVysBlzM8Dy2cYNExDcxLA
51Z56efUYb9fwOlrn2ZUtGC/M2Pg/dbVfq19HfOvBq8IvTDF7xrmjwX7aeSl
fbmA+UvBZilF7j8qsV/9WOi7/lavsAr7dYol+uZHgx1F3roJmZj/j1jieyVp
jSW+HzyHOPg+/bM/Xv809hsBtj9ilf7hEuY/ArbpVZ/U9RfmvwGOPzyzJ+YZ
5n8HrhJyK0Jk2G9YPE3VJ/Gcrw5iv4fAxbKYvw1HMP918Fs124TLHzD/W9L8
KQnE/uEDYGGa7Gz3J+y3EVwaMRJFKb9j8tNgwd8sO7sxjGusd9DUgAenP0ON
sc1V8Mipq+x2FcaCl+B9/1vn8JHNWKy2k9gvtQL75vjqfFNgzAoEC92c/TfL
MRYNgI0//DTZ1IR9Tk6kKZmn7of7nZjXElyyTefVuS7M6w9W5IhdLR5g33ng
gT4nXjoe36ecRFOB1ROmqrdhnwvBn+9uUaMf4jz4gB3Gm53e8QjnIQesHbUs
KeUu9n0BfGNx5LOh29jn/GTifPxN4Dflq9eaYT5RJljS6694F88nOQu+9Lzj
4jEp5u8G3+dnl1bg+WvSUsjnfyaFuB77L7DHHm+j31oxr/wuYp5Z1WDHbU5O
Mc2Yrwu8+NzeFLMezDcmFb53zTY7pz/BfHNSiefPqQSPBjwplx/G/jrAs1l9
B7ve47z+AFfN1VKOfIt5Z++mqXc2t16uRPe5gq2dJ2k7fcS+vpGWzkoj5ofF
A3NOLKg8/xPzxoPLOlTUrHD+JJ/BH5Xa7zwZxb5mpNPUgnw6SUeDOZ6zCqxF
q6mnTsf5jCGdXAK+UWsf824qYzYng6ZsB7Kq/CfjvK7MIOc1KoOc12JyXfon
uG5jxcoTHMZ8+0yaOjN/TyVrJs5rONj9QVloK1pSBHZIVFieOJvxcAt4cLgo
rmQO5h8Gl08MU9owC9+n0Cz4/0GdtGeyMeO+g+AmV/MrT00wfzN4sXGgpvlc
zP8GbPTIpPOFGebXzibWuRLw1N15J49YYN5X4KM850gjW8yrkQPfgyztyVdW
YN5lpHkN4J6FPffCHLHPF+ANQXryz6wwr+oeeJ7unTL7NZh3CWl2AFi1NUg1
yA377Ac3CsXRMlfsc1IuYZZlLnE8149c5+eCOdOVll10wT4n5tHUcYfu62uc
sE8LcHrpWM8reD0eH1w6eFPR1hvzZ4MniFeHt7hj/vN5RD4bcyFN1SwNWJDn
gX1uFBJ9ijPA8aqfBXHmmL9WSPTL6hYSz0+0XkQcL9kNFo5W2/XaY/7TIuJ+
ODIRcb+8sfk09X5GwbGOjdhvSj6xn10FTqyMHFfgjPkfkhaw9hJ9io33Euvc
CnDb2dq15Z7Ybzu4S9l7+S3sU/QdvKz5aaWzHeY3LIDvb7GPpTsX+5QWEPNR
87WAmJ8+g300FdTgtcJ0EeZ12Ufcj00ceEyM2X09L+zzE9jhH1lnUiz2OWM/
TT3StLjrkYx5ncHXipKfuKZi3u2kRWKwkcuYbYMp2KfeAXjfAgUqZQnYpyP4
oOnxcNV4zB8J7mHf+Rm0G/MfBet+87UqTsf8N8H1IV8iG7OwT7tCYl0sANsX
XFuUlov5DxcS+1kt4PVPRwr792D+IfCtxkKxchr2GXKQppQqZo+65uA8FIJH
3bLbxoswfxM4LvOOfALeH+81uT9Z6xCxn70fXDNwU1vlKPZ7DSwZFz3hcSnm
HwSz3ips0a/A/OqH4XvYPq8j8AzmXwqeqDHd4HEl9vmcXJewi2iqQPlH2Jea
d9b/AoCtmFc=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
77+y/D+p5rzl
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"PUTW\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.115551100670587`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.032339261735384386`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "34.49525563689642`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.7053149328966656`*^9},ExpressionUUID->"ff2ddc8d-da33-464a-9bd4-\
c69b46518c3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LzCriw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13lcTOsfB/BpwaVoqptkyVTSlWhSqKtljrKXRrr2Mu2lbdp3TXvRMqmm
ZCvCTWKIqGsZSrb8GmTLNn7cxEFT3GuN+3W+fz1eL8v7NTNPn+cz3/Ocw8g3
0iNAlcVifYPfP/+GX6JfN9IU/lPpBH9IHcEV7FEZBsMZK4LBh1Ntvt7SZSx8
CY73CejRMWFcoy2gKWqhpMVjFmP5PLBS1hTyw54xKxC8+rjMWpPHmCsGF90o
8ezkMpaN8aGpy72LzAPHMVbagjd8XNGQbsiY4+dD5OEXgZM3Li95Y8BYdMqH
yMee40tTGtGR6y2mMeYJwBHjrMJsZ2P+LeAez4L+BZaY/wSY3/zu6hoPzP8E
XLH6uHPT2/6fFnj50VRCgorJwUbG4jzw/yvVJpapY/5j4Dq71v/lOGL+h+Bp
GoktuzMw/3B/mnKJ29pnlYt9HgE/ztpsaJqFeR+Ax6w7czmqAvOqBRCfF84A
35w/weF7M/Z5GJxx1vbtoQvY511wyKhA6epOxgJWIE2Vuqzcr3efsdgcrJdX
3WCuwLyeYFG82Fy7B/u8DQ5c+/RH3R3scwh8vCxe8vE2zoNZEE35jilfWPcE
868AL9sb0vlajvlTwZdUTq+/9xr7/AI+UlH0bNJj7HNKMKyvmfY1DddnuYP3
mM6+qX8W8yeBbW1+G6HRivn3gZtLNy67eQ37NAqhqTeHZ4aV/oV9uoILT73X
sD2A+ePBq593Nmrvwvw14Cg3xaO6Wsx/DXyHpz54rxH7XbKJpkZ4v/Y6dxD7
jQFHuH80u34I8+8iX5df3kTkYw2C95kY5g40Yb/CUMKyavD6Zyd96TLM3w42
7eilpu/D/P1goytDhSsOY36DMJoKuBY8obYa+60ET2vv+lcdzb4YRuyP9wb8
of/PqidizD82nHAND6zZ6pAmScV+z4cT8yV4FU7Ml1g3gqaeZQTd/p6E+R3A
X+lk1W2bMX9QBLEfKTuS6FfxeySZNwB8MPjokP82zFsCNu8Jddo+BfscLaSp
IGMDFx0B9mkLbuvzjis0wry+YP4F+3d79TFvITgyoEy4Ea9fcfPPz88ICt5g
in3OjoLrySO6bvJU7HMjONov1dTOAuehIIq4vqVN4LRi53PXwzH/Y/APrmby
MC/sc0M0cT3X5IJ3OvT53+Jjfil4/I7J9VU+mP9hNHHecYfF0JSa5T8zn67E
PrPAdkvb3fe4YJ+NMcR+OfdjiPOUrxoL1+/1xJEHzDC/RSzxOrshltgf7w74
ROLwgFwVzP8D/EltpsRVB/NPi4P1dIw6nbQw/0rwgq1mVh1s7PcW+Pr0B7UP
/sXz7Ru4zuWX911qmH9qPHEeKvngmFnCBusuxpwU8H73VfrjrzKWfgYPLT4/
WqZkrDBJoKnfDU7f2f6SMXs5ODjdy513izEvEVxbpWfa08JYuBc8f19Pu6iO
McsokaaeBI952yRlzF0GHtzvbFu8Cc/nOHD3cvfWT66Yfw/YUr0oZweXsewq
2MLNtWy9EWP+4iSaStLumP4PnueiaHDonN2U6Bnm35lE9KnoAHcJNxm43cH8
A0nEfmsik4n7g3w7ODLFsuX9eczfDnb0XuI2ugPzv0sm+hOMS6GpX7YY9/ee
wX4l4IBusWL8B+z3AtjvvYmetSbOB51C5JM6pRL3Q9450sK+VPJ+rZNGU7Mm
9Yb2fsa89uB7YfZZrDbMGwRWX1CaEPME+/wbXDvq0p4Dr7FPrc3E84LSDlzQ
dWDPoB3Os/9m4nrlF4M3cVQ/06uwT810mqr6tOqtdzTO89x04vzi+YD70uwc
jgdh/q3gZPG6kYPxmP8kuPxLuG1OCl5vNiKa4iXstV5TgvPsLSLOK3E+eISx
+HxEDs7zcbD4W3ZWQzbmfwQuaF+T8mcs9pmTQVMzRvpEJCZi3qPgpnqdp1u9
MW8P+Jqew9oFYZhXPZN4ndUIthqx1MQjEvPdyyTOV4FKFk0tjondpZGG+aZn
Ec8DnEPgF+n8/PtC7K8bPHuY9f3pgXgefM8izi/pb9kwH1O4JbYhmNcjm+iv
5ms2kUdumkOsz+KDXU8P00tfj3mTc4jvR/YJbHrTJjAuGPsyziX2z3EDH/XP
CBonwrwJ4A59z7rQOMxbm0v0yebkEfl4S0kLY/OI+0PNbrBXYeZNNuaRX8kj
nqcEi/KJny+OyifmSbYjn7g/KS/lE88PHCXYfpb2mRdS7DOigKZs5jh5WLVh
n1UFxPMIuw38dWJeauVDzP8WbDxKJ3zmS8yvv4WmZM1he+++xz5l4P6HJjuE
WgNM3tfgVTe4AWk6jMW/bqWpFplnstSQscwRLDq4s27sXMb8s+C5hoXn4i0Z
i16C5RbpH0IsGEu1C2nK59PHIS1Pxop54O/q3X2PFjFmB4IrdS8byl0Y17wA
V2tLb9fPYywfU0T8PJZdEbE+1w+cvT9nrXIG5i8Ct+pGyfzx/UqNYliv3a0r
E9fjzAHTkm0mQ1zMLwCPi3ypL3TF/FvASwtvZK1aiPlPFBN5edYlxOtCLzD9
/IPZFCvMnwfunClxEs/G/MdKiH5Yj8Dd5sH1zibY7zoxTQ1fvFzPfBL2mw12
9qxNWTkH8x8RE5/nPAAbNJf0jLTB/GqlxP4VGeB5E+Ni+FOx38OlRF+8u6SF
rG00NfFEYslzc8xvTppbv414v+A2+OTF0Et3zTD/EPl+mVkZPH/NdSln62Of
8jJiv9IvZcQ8KaaUE/PHdi8n+uAllRPryT+WE/tnGVcQ88N1BVsat3q2UZg3
Hvy8WtayxBnz1lQQn+dMltDUbq3t+VmzsM8lEuL7E8VIiP6luyTE/CguS4j5
EC6spKljaT1ufkuwTyG4Ikl1bCbmk1eDU+ub+u15mP9SJTHv3P5KIp8svIpY
T1lZRcwf5yJ4RebfDakTMP+bKuL7EY3dTlMqamd3NTtivxXgxvSBqgIP7Pc8
+Mor9SsTV2P+V+Cnf1jOv+uP+XWraSqvOzm/KwPzO4AH24QjmlOwz15wrWPx
Kd9czMveAf+fa9JxjhEPOP0HHTGMvg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
2CerUNNv/Q96Eahh
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1115808708226076`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03301499343421309`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "33.668971433769485`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.7053149350448503`*^9},ExpressionUUID->"1ebee599-41e1-425d-9cc4-\
c0addd733fb3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
LzCriw==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
Kd9czMveAf+fa9JxjhEPOP0HHTGMvg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1nlYTPsfB/CRIimmXeHXRG5KupOIiDpyWxSNpIUwLYrbNm3aaJF2NZMQ
ojsVUoqyxU8xlbjZGiqZq7qhkIMi1xru557PX1/PE72e7/ec8z7v8znnoe8b
5rpFjsVijcLPf//Cn2SNzTSFvw5bw181y8DRskI7HrpvK3hz7rY/u0eH/rPg
BTi+Y26cvzyzLlbl05STykldliJj6RJweXB2tNNExqwAsNbUkl8/qjDmisDH
wkTuC8czlkzyoanuTfn8dQqMhxeBbV6INtiNY8zxA88reG/6TYkxLxd8XrTU
QQHPl1wHVn+j0+SvwZht4UtTN3d6KP2uz9iGDz5vOvOU0gzGgmxwb2taZo8B
5j8PXh/UdOO6OebvBVvy4s6avGHul7/Rj6aaW47/aItgLMoAm24Yoob7GEtq
wb8lK7/brIf5H4MnzPtkbD4P84/zp6mG/HKDK47Y52nwuPanoQa2mFcGXtIy
6GW6FPOO3UJTmX+ILWtdMO9c8BPpt1+CvLDPKrBc1L2zmm7Y50Pw15W1agJ3
xnxWAE2lhevc0UOLjAOI4yVuYJPJZqKXuM5rB0sTG5/rbcI+v4NbPCsNA7xx
HgwDaSqjW+VDeTTmXwO2lPPQmOWH+XeAk/p3liaFYJ9fA4nzSQ220pSa/9t1
Af6Y3wX8oUFzsA33c+PAFmXLPbWiMH8ZeHt2+znveOxTfxtNdWnKhJYx2Kcz
uMl45v87fDH/dvCKT327fcIwvxhsda+5/0o45r8FfiU3sqY4B/t1/J2mDrUa
XlTOxn4jwd/XGNZ+R4uPgidU3L46fxfmvwnOic7KaszD/O/B3afdZq0VYb+C
IOjzpV5jfz72exg87cBA8qEDmP86OC8i9WTnXsw/BG5Q3HGp/hDm1wmmKZXl
9m6ri7DfwmBind0E9nIZCl1dhvlfBxPXF2iFENcX24QQebnXwNGf79ZL92O/
gyHE9UTqoTQV3FYzbc5BzL8UnOocPDgVzzccCP4+pKwxVox9ssNoKmC55kj2
Gcy7GBy+1eTsilrMuwVs5Jl40bMa8wrBu2z3bsrDeZKqCIh+WIsExDrXFywq
5ObIPDDvHvCsNYpTbsdi3ovgNz7jJ1XjfHAWhMP73lzs8jYB+9wM3mqxIEM1
CechK5zoo+ZcONl3D7hEZHy57gj26R1B7BengzPt5aZxsT9pDTjpjcdclVLM
/ziCuB+uQiS8PyxlpYES7DMVvMro0Zl96OHqSOL6nEfgoaLQF3XHML9cFLwf
B+R175zE/CZg607LVMcT2O+pKKJvm05wu1ulBfco5v8ZRVxPbBRNU4b1o9Zr
8flK10YT5+M/iCbnYRTM+dVH6xw+X8kv22nqlIFVysBlzM8Dy2cYNExDcxLA
51Z56efUYb9fwOlrn2ZUtGC/M2Pg/dbVfq19HfOvBq8IvTDF7xrmjwX7aeSl
fbmA+UvBZilF7j8qsV/9WOi7/lavsAr7dYol+uZHgx1F3roJmZj/j1jieyVp
jSW+HzyHOPg+/bM/Xv809hsBtj9ilf7hEuY/ArbpVZ/U9RfmvwGOPzyzJ+YZ
5n8HrhJyK0Jk2G9YPE3VJ/Gcrw5iv4fAxbKYvw1HMP918Fs124TLHzD/W9L8
KQnE/uEDYGGa7Gz3J+y3EVwaMRJFKb9j8tNgwd8sO7sxjGusd9DUgAenP0ON
sc1V8Mipq+x2FcaCl+B9/1vn8JHNWKy2k9gvtQL75vjqfFNgzAoEC92c/TfL
MRYNgI0//DTZ1IR9Tk6kKZmn7of7nZjXElyyTefVuS7M6w9W5IhdLR5g33ng
gT4nXjoe36ecRFOB1ROmqrdhnwvBn+9uUaMf4jz4gB3Gm53e8QjnIQesHbUs
KeUu9n0BfGNx5LOh29jn/GTifPxN4Dflq9eaYT5RJljS6694F88nOQu+9Lzj
4jEp5u8G3+dnl1bg+WvSUsjnfyaFuB77L7DHHm+j31oxr/wuYp5Z1WDHbU5O
Mc2Yrwu8+NzeFLMezDcmFb53zTY7pz/BfHNSiefPqQSPBjwplx/G/jrAs1l9
B7ve47z+AFfN1VKOfIt5Z++mqXc2t16uRPe5gq2dJ2k7fcS+vpGWzkoj5ofF
A3NOLKg8/xPzxoPLOlTUrHD+JJ/BH5Xa7zwZxb5mpNPUgnw6SUeDOZ6zCqxF
q6mnTsf5jCGdXAK+UWsf824qYzYng6ZsB7Kq/CfjvK7MIOc1KoOc12JyXfon
uG5jxcoTHMZ8+0yaOjN/TyVrJs5rONj9QVloK1pSBHZIVFieOJvxcAt4cLgo
rmQO5h8Gl08MU9owC9+n0Cz4/0GdtGeyMeO+g+AmV/MrT00wfzN4sXGgpvlc
zP8GbPTIpPOFGebXzibWuRLw1N15J49YYN5X4KM850gjW8yrkQPfgyztyVdW
YN5lpHkN4J6FPffCHLHPF+ANQXryz6wwr+oeeJ7unTL7NZh3CWl2AFi1NUg1
yA377Ac3CsXRMlfsc1IuYZZlLnE8149c5+eCOdOVll10wT4n5tHUcYfu62uc
sE8LcHrpWM8reD0eH1w6eFPR1hvzZ4MniFeHt7hj/vN5RD4bcyFN1SwNWJDn
gX1uFBJ9ijPA8aqfBXHmmL9WSPTL6hYSz0+0XkQcL9kNFo5W2/XaY/7TIuJ+
ODIRcb+8sfk09X5GwbGOjdhvSj6xn10FTqyMHFfgjPkfkhaw9hJ9io33Euvc
CnDb2dq15Z7Ybzu4S9l7+S3sU/QdvKz5aaWzHeY3LIDvb7GPpTsX+5QWEPNR
87WAmJ8+g300FdTgtcJ0EeZ12Ufcj00ceEyM2X09L+zzE9jhH1lnUiz2OWM/
TT3StLjrkYx5ncHXipKfuKZi3u2kRWKwkcuYbYMp2KfeAXjfAgUqZQnYpyP4
oOnxcNV4zB8J7mHf+Rm0G/MfBet+87UqTsf8N8H1IV8iG7OwT7tCYl0sANsX
XFuUlov5DxcS+1kt4PVPRwr792D+IfCtxkKxchr2GXKQppQqZo+65uA8FIJH
3bLbxoswfxM4LvOOfALeH+81uT9Z6xCxn70fXDNwU1vlKPZ7DSwZFz3hcSnm
HwSz3ips0a/A/OqH4XvYPq8j8AzmXwqeqDHd4HEl9vmcXJewi2iqQPlH2Jea
d9b/AoCtmFc=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
xR6z37bKVQ+u+D+ui6ym
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9529845365184445}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.961194585695293, 
        1.1253955692322644`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCIU\"", "\"OUSA\"", "\"PUTW\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1096227912513748`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.030144507416094358`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "36.81011522049087`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.704691260794302*^9, 3.7046913763890657`*^9, 
  3.7050414043441253`*^9, 3.7050416502476645`*^9, 3.7052519916019287`*^9, 
  3.7053147880793805`*^9, 
  3.705314938161072*^9},ExpressionUUID->"1b3f1c1d-a346-4618-99b9-\
4695f302e75c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OEUR\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<OEUH\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", "\"\<SCID\>\"", "}"}], ",", "start1", ",", "end"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OEUR\>\"", ",", "\"\<SCID\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OEUR\>\"", ",", "\"\<OEUH\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SCID\>\"", ",", "\"\<OEUH\>\""}], "}"}], ",", "start1", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<OEUR\>\"", ",", "\"\<OEUH\>\"", ",", "\"\<SCID\>\""}], "}"}],
    ",", "start1", ",", "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.70531496953419*^9, 
  3.705315104771555*^9}},ExpressionUUID->"24ead3c4-5f8f-4f88-bee0-\
28c49916db91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tYTHsXB/ApmTqhBpUQho5LuZQQqTS7IpFMJUohpStlRqXSxaRSSTXS
Ha8S8pIat7yO26SIE8e4dFPGuCTsrufwphtn+a2/ds/T0/N5fnvv+bb26vdb
Tffe7eyrzGKxhuD710/4Emlto6mf5KvbCixZAd7xJKg/rotYEQDmuJ0bjJ/W
88uCdrDWgcBj1WbERWO9aKolKOXKgyBimTlYa8nJsZNCiFl+4HnypS62tsTG
YnB+VuvPiDjyfKnGdppyu3lo2GIEcc8y8NSGu3K/4K5f5vqAP0t7N3w+SsxP
B1fmaHnbHCMWXQf/JrR26HxOzDH1pqn26AT2bRl5Hs8L/HaB3M9DD/MfAm95
ZGspGoH5r/66Pn+3pqoA88vBJuaWQoUqeZ7XFh+aWsnfKqp36/xlcTJY53nB
jIADZF16CXyEdUJbnY35W8DdpZtU4hTEXPYORn0V5eD2ww/n2/gSc5rBke/S
1MKsMO8IX5q6WigvaZtJLJgPHjV20Pn/eD2rDNx3IVYaU0ds3ACuFO/Vix9L
8nux/GhKRedLnEKVWGwI1k2M6bc2IpZuAC88lc5u/kbu579gWjQMznf/nGt0
H/thtj9NaRoP3Lg7gPmdwOeXv42La8f8MeAI/ZYyMyWs5wBYVWXWrR9fyLrs
9wB4nwJRV8FI7If14O5Vle6hytgPUWD32oVvWBqYvwQ82vpOTPEE4p7pgTSV
JR9XO9yK9XQIZPy+/L1g1daIfRYPMH8ROLBvboFUjaxL/mSaZx/E6G9BaBBj
vegEOHh65zJlfeyHWnD4uirTahPM/zdYr9yyINEe6yvYSVN14xTXbddifQvB
7KAj5y64YP6anYzrud3gPaGek9jemH/iLppS3lBqUIf3K/LAH97PMl+4iphz
D9zIqx2fxMf8HeC7H757qOC6QCeYpoT6rLx4XczPAxdXWfeNH431vQtOi81l
m+tgfT+DWVqN3O3jMP/4EJrSKD3/5O8+/Hu0DGH0a48/eIJ+i+MyJ6wnZzd8
3o/3joVCzLsc/NSieNNBX8zrC44rttm7yh/zZoLPe2dKeZhHNkZAU9zjUQ2n
5mE9l4EbBuc9ijyM/ewNnqymfDq4lNjrMDiy/+sMyVNicSVYZKqxui8U+2GJ
kKa6Ng2K+nOxn7eBP7rU1wxcwH5IBbt07Blr/Bj7+QpYxbDqJDUJ878WMvpZ
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
DbHMspBxv/gj01LOMZp63SizynHptfoXBCOsdQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tYTHsXB/ApmTqhBpUQho5LuZQQqTS7IpFMJUohpStlRqXSxaRSSTXS
Ha8S8pIat7yO26SIE8e4dFPGuCTsrufwphtn+a2/ds/T0/N5fnvv+bb26vdb
Tffe7eyrzGKxhuD710/4Emlto6mf5KvbCixZAd7xJKg/rotYEQDmuJ0bjJ/W
88uCdrDWgcBj1WbERWO9aKolKOXKgyBimTlYa8nJsZNCiFl+4HnypS62tsTG
YnB+VuvPiDjyfKnGdppyu3lo2GIEcc8y8NSGu3K/4K5f5vqAP0t7N3w+SsxP
B1fmaHnbHCMWXQf/JrR26HxOzDH1pqn26AT2bRl5Hs8L/HaB3M9DD/MfAm95
ZGspGoH5r/66Pn+3pqoA88vBJuaWQoUqeZ7XFh+aWsnfKqp36/xlcTJY53nB
jIADZF16CXyEdUJbnY35W8DdpZtU4hTEXPYORn0V5eD2ww/n2/gSc5rBke/S
1MKsMO8IX5q6WigvaZtJLJgPHjV20Pn/eD2rDNx3IVYaU0ds3ACuFO/Vix9L
8nux/GhKRedLnEKVWGwI1k2M6bc2IpZuAC88lc5u/kbu579gWjQMznf/nGt0
H/thtj9NaRoP3Lg7gPmdwOeXv42La8f8MeAI/ZYyMyWs5wBYVWXWrR9fyLrs
9wB4nwJRV8FI7If14O5Vle6hytgPUWD32oVvWBqYvwQ82vpOTPEE4p7pgTSV
JR9XO9yK9XQIZPy+/L1g1daIfRYPMH8ROLBvboFUjaxL/mSaZx/E6G9BaBBj
vegEOHh65zJlfeyHWnD4uirTahPM/zdYr9yyINEe6yvYSVN14xTXbddifQvB
7KAj5y64YP6anYzrud3gPaGek9jemH/iLppS3lBqUIf3K/LAH97PMl+4iphz
D9zIqx2fxMf8HeC7H757qOC6QCeYpoT6rLx4XczPAxdXWfeNH431vQtOi81l
m+tgfT+DWVqN3O3jMP/4EJrSKD3/5O8+/Hu0DGH0a48/eIJ+i+MyJ6wnZzd8
3o/3joVCzLsc/NSieNNBX8zrC44rttm7yh/zZoLPe2dKeZhHNkZAU9zjUQ2n
5mE9l4EbBuc9ijyM/ewNnqymfDq4lNjrMDiy/+sMyVNicSVYZKqxui8U+2GJ
kKa6Ng2K+nOxn7eBP7rU1wxcwH5IBbt07Blr/Bj7+QpYxbDqJDUJ878WMvpZ
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
DbHMspBxv/gj01LOMZp63SizynHptfoXBCOsdQ==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.8643803248345192}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8747863097033755, 
        1.082906007080502}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.8643803248345192}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8747863097033755, 
        1.082906007080502}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.082906007080502`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04775302486940365`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "22.677223276265003`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151157093773`*^9},ExpressionUUID->"cf07595d-1227-4b93-8fff-\
1174cc645cd7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.9451048941721606}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9514374510056298, 
        1.0780885876750153`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.9451048941721606}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.9514374510056298, 
        1.0780885876750153`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0718725873317814`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03399813576997282`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "31.52739298954327`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.705315116818784*^9},ExpressionUUID->"54d8fc21-3a2a-4117-9118-\
9e436e89e74f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1wtUzGkfB/ARWmtdRilkaXLLljJyqSTNH5VeqVHbexalyWVCW02666Io
JV1G3ii5jMu7SLUTadm1TKiIZVYRZZldLfIvTetW2Oyv5/ee855f53T5nPP/
P/Pt93+e5/f8LVaH+6wzEAgEH+G77zd8pYwM5Dn8U+8CP9TzqXXrwUJvB4Mz
ImbFM3D6DVXI+/HMqhEyniswexBa5sKsdaIWyKnFSmrNsCCeG/Ai0Xxh9ss+
6x3AqtcRzX9YM4vWUEtzqFN+oBbOWc1zo3TNp7qzOvsskVErsqhVleDwqxHz
d4zF/I/A2bUvrXu+7+izLGANz3lzteGHG/k+KzPA5sZeudZF7Sx/BTjZq66r
IJddr28Bu9tPv15vjPkN1/JcT0Ul/34hs64cbFRfed7Sk10vfLCWjCfpv47n
JD6una2tzAobcJzdk6aIjex6QSm4dODT7NMfmMX3wFvGPzyzOJSNLxPIiZVW
4Jv1JUa7zjJrvgYXpKWlyeVYzwawuLs5fvJurOff4PfJ+tHTApnVlsHEumXU
wkRq1XvwobG1K1ceY9ZOWs9zf/z6wMXgPLPAG5zkKp5d/SezOJ5adhRsOuDf
hZ0u7PnoLTYQizzBBiN+Vf00gFkaA56U2THx5C+YXwW+F9Telv4K89eDV9rk
+KUY4Xzw2EisiAQ3ZkpCekNwPhyg1taBd+37bN3EZmbBX9RKRQixZh+1/ip4
/+A3Px46hPk7Q8j6ko75lq63vdTCy9SSdmqFaSixSgJe8SZ4pmcB+zzxJWpZ
G7XSOIxY40ytDw4j60MtDCfWzaUWrqOW5FFrhyrgecpPaMf1YD0dqMWrwbz4
7evL8Zg3m1pZRS2aHcFzNm7bEk3TcD4EUqfsADdIx3rUv2RWn6HW/Uat8N/E
cw7JS9SrbuJ82A62rXQ1LD6J80ENbnWS+4+6hflbqMUDI4k12yLJ+PoyatH9
SDJfpAZRPHfmdMmitWWYfxq18BS15G4UWQ+KT+CPlhXL5TW4Hr+KhvW3Sbbf
7wquR19q2Z1osl6VH8Eeny3amfQX7hdTYmC93DI+3fAl5peCI2Zd2NplgvkT
qNU94GX2d5ofPcL9YmIssdALnHLOd9ipo8ySOGrFEWqBRRzku+B5rrwc94sl
1LJocNPcwvVDEzD/IXDB5C9+P6/A/NeppYvjeW7QjdVbK8Jxv9gENus65VmZ
h/vFfnCC81tp8w7MX0st7KJWhW/mucBRg6OvHGT7sbYI7Kzq6Lp7F/frq9Ti
l9Sy0QnE+j1gD2GLu08xs6gaPCI/b++rW8xSHqx/NX53Tg6z2iWRWHKxzz6F
c+ZuY1Y8B8dcutSbUcqsMkoi1s5LIvkFwdTKP6k1w5NJHr0jtWgteEpQ0RGx
H9Y7Fzzh8bQnYcFYzyFbeG5eHRfp5YX1tKeWBIFPTZs7zDoK58NO8JwtJzI9
x2C9z4KzOhaURUzF+TArhfRX2Srwk5L0izskOB8ywetjplilYX/SnKbWPwR3
cHUFycn4/NNTiXXfg0OmJlvuDsN+3Qw+1+i5vaUK6z1gK8+Z/G6f9rQJ61cG
flmqzkrV4fNuAucVr3UeYYn5+m2j89UabGHUddbZE88LJeCs3Ouf19hh/RrB
j6ZP7Xd+Cs7X3r7rXc9mDpmBeaem8ZxGbjMsxB/z+qSR8VUf0sj5Sjs5neeq
Z25w2h+L60sKLrL7bqThOqzn5nRyv6YbrIxtk5ptwnpN2M5zAQ1R/RzxPCFa
Cnby/yZ5STvmjQXbtIoXPa/HvIfBScdO3g9twectyuA5y/17lz8twOf9L3D3
/UGhkRfweUeBQ9onFHbqMP9BcNcPV/q/+IT5r2WQ/Ujmnslzx+xLordcw3pG
gKMWy8/Z4n6jKc4k4+lrwL8MPHnd7S3m14PH1VqsummI+1fYDjK+rhDcunlf
yjxz3H+vgJtul0cOHoP7bwf4RmD1uFxf3H9HZfHccd3GqvO22A801LIX4MyH
EUOqJmI/G7mT59revHMe6oj9Yj64xDc37+j/6vkz2HXKqqnDh2M/eAa+YLaq
qscU847I5jldUeW4W06Y1wn887OiJ1Z2mFcODnvtn3hvHvazVrBjleJOvgf2
s2E5cH+3TfXmGdjPHHPI/y9eAx56wihOvQDz54DvflVXtywG+8EXuTz3zFuY
//Ue7AdzwBWxpTnl32I/k4FbH7af23gf82dRqyvBY9tnGDSMxPPCzDye64y0
VQaa4vkmgFqVAV5gkpPhOxjPExVgLjpgQO04fN94CLazWhBlaM2sXKHkuUVj
SnrcHPB9Iw3sH5RnWGTHrC8HH9RV/zdpFrPoAdglJHPDcUc8n/XfRaxLBUe5
3P6wfDaed0rBG4YkGN/A8SX3wK/zjEq2zcX8gnye8y3+7tY1Z8xvBTYOsBpe
g58vPglOffHjoGwnZlkDtfJv8KfL8nwje8xvuZvnDNvM3f3w/SlFCy6f/v64
2A/PZ+/By64WGMbPx7yT/sNzR/MFJ4RBmNcb7GW26/nNUMwbD37sZ16y0Afr
+Q7c6pBxLbQF6zmhAM4XG7O/NDHpYnk9wUGPa77hhzPLYsDPklaYLRAwK1Xg
6XEvYt6NZRaZ7yGWeoAvjZJbNnLMKZHU6gPgwp/cbqcFM+vqwIkfRbF+qcwK
t73QX5ZqN3knMKsU4AMqj2NP45i1+8BDbJsPlOH1ghpw45LDvc8jMX8n+G1A
9tleJbMmtJDntvunfp5ZyqzfC45d7H4x6ybmvwxe5P46ddYRzN9eSO5PMS2C
9+PY+qDoRmZhAXiCtqnX7QGz5BLYdfRSi+U85m8D+15xsN3ZhfmN90G/PvRb
kEk35ncGt84+Mevqc6znU/B2TVh3RwfmFRb/3/8A9AGhMA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1wtUzGkfB/ARWmtdRilkaXLLljJyqSTNH5VeqVHbexalyWVCW02666Io
JV1G3ii5jMu7SLUTadm1TKiIZVYRZZldLfIvTetW2Oyv5/ee855f53T5nPP/
P/Pt93+e5/f8LVaH+6wzEAgEH+G77zd8pYwM5Dn8U+8CP9TzqXXrwUJvB4Mz
ImbFM3D6DVXI+/HMqhEyniswexBa5sKsdaIWyKnFSmrNsCCeG/Ai0Xxh9ss+
6x3AqtcRzX9YM4vWUEtzqFN+oBbOWc1zo3TNp7qzOvsskVErsqhVleDwqxHz
d4zF/I/A2bUvrXu+7+izLGANz3lzteGHG/k+KzPA5sZeudZF7Sx/BTjZq66r
IJddr28Bu9tPv15vjPkN1/JcT0Ul/34hs64cbFRfed7Sk10vfLCWjCfpv47n
JD6una2tzAobcJzdk6aIjex6QSm4dODT7NMfmMX3wFvGPzyzOJSNLxPIiZVW
4Jv1JUa7zjJrvgYXpKWlyeVYzwawuLs5fvJurOff4PfJ+tHTApnVlsHEumXU
wkRq1XvwobG1K1ceY9ZOWs9zf/z6wMXgPLPAG5zkKp5d/SezOJ5adhRsOuDf
hZ0u7PnoLTYQizzBBiN+Vf00gFkaA56U2THx5C+YXwW+F9Telv4K89eDV9rk
+KUY4Xzw2EisiAQ3ZkpCekNwPhyg1taBd+37bN3EZmbBX9RKRQixZh+1/ip4
/+A3Px46hPk7Q8j6ko75lq63vdTCy9SSdmqFaSixSgJe8SZ4pmcB+zzxJWpZ
G7XSOIxY40ytDw4j60MtDCfWzaUWrqOW5FFrhyrgecpPaMf1YD0dqMWrwbz4
7evL8Zg3m1pZRS2aHcFzNm7bEk3TcD4EUqfsADdIx3rUv2RWn6HW/Uat8N/E
cw7JS9SrbuJ82A62rXQ1LD6J80ENbnWS+4+6hflbqMUDI4k12yLJ+PoyatH9
SDJfpAZRPHfmdMmitWWYfxq18BS15G4UWQ+KT+CPlhXL5TW4Hr+KhvW3Sbbf
7wquR19q2Z1osl6VH8Eeny3amfQX7hdTYmC93DI+3fAl5peCI2Zd2NplgvkT
qNU94GX2d5ofPcL9YmIssdALnHLOd9ipo8ySOGrFEWqBRRzku+B5rrwc94sl
1LJocNPcwvVDEzD/IXDB5C9+P6/A/NeppYvjeW7QjdVbK8Jxv9gENus65VmZ
h/vFfnCC81tp8w7MX0st7KJWhW/mucBRg6OvHGT7sbYI7Kzq6Lp7F/frq9Ti
l9Sy0QnE+j1gD2GLu08xs6gaPCI/b++rW8xSHqx/NX53Tg6z2iWRWHKxzz6F
c+ZuY1Y8B8dcutSbUcqsMkoi1s5LIvkFwdTKP6k1w5NJHr0jtWgteEpQ0RGx
H9Y7Fzzh8bQnYcFYzyFbeG5eHRfp5YX1tKeWBIFPTZs7zDoK58NO8JwtJzI9
x2C9z4KzOhaURUzF+TArhfRX2Srwk5L0izskOB8ywetjplilYX/SnKbWPwR3
cHUFycn4/NNTiXXfg0OmJlvuDsN+3Qw+1+i5vaUK6z1gK8+Z/G6f9rQJ61cG
flmqzkrV4fNuAucVr3UeYYn5+m2j89UabGHUddbZE88LJeCs3Ouf19hh/RrB
j6ZP7Xd+Cs7X3r7rXc9mDpmBeaem8ZxGbjMsxB/z+qSR8VUf0sj5Sjs5neeq
Z25w2h+L60sKLrL7bqThOqzn5nRyv6YbrIxtk5ptwnpN2M5zAQ1R/RzxPCFa
Cnby/yZ5STvmjQXbtIoXPa/HvIfBScdO3g9twectyuA5y/17lz8twOf9L3D3
/UGhkRfweUeBQ9onFHbqMP9BcNcPV/q/+IT5r2WQ/Ujmnslzx+xLordcw3pG
gKMWy8/Z4n6jKc4k4+lrwL8MPHnd7S3m14PH1VqsummI+1fYDjK+rhDcunlf
yjxz3H+vgJtul0cOHoP7bwf4RmD1uFxf3H9HZfHccd3GqvO22A801LIX4MyH
EUOqJmI/G7mT59revHMe6oj9Yj64xDc37+j/6vkz2HXKqqnDh2M/eAa+YLaq
qscU847I5jldUeW4W06Y1wn887OiJ1Z2mFcODnvtn3hvHvazVrBjleJOvgf2
s2E5cH+3TfXmGdjPHHPI/y9eAx56wihOvQDz54DvflVXtywG+8EXuTz3zFuY
//Ue7AdzwBWxpTnl32I/k4FbH7af23gf82dRqyvBY9tnGDSMxPPCzDye64y0
VQaa4vkmgFqVAV5gkpPhOxjPExVgLjpgQO04fN94CLazWhBlaM2sXKHkuUVj
SnrcHPB9Iw3sH5RnWGTHrC8HH9RV/zdpFrPoAdglJHPDcUc8n/XfRaxLBUe5
3P6wfDaed0rBG4YkGN/A8SX3wK/zjEq2zcX8gnye8y3+7tY1Z8xvBTYOsBpe
g58vPglOffHjoGwnZlkDtfJv8KfL8nwje8xvuZvnDNvM3f3w/SlFCy6f/v64
2A/PZ+/By64WGMbPx7yT/sNzR/MFJ4RBmNcb7GW26/nNUMwbD37sZ16y0Afr
+Q7c6pBxLbQF6zmhAM4XG7O/NDHpYnk9wUGPa77hhzPLYsDPklaYLRAwK1Xg
6XEvYt6NZRaZ7yGWeoAvjZJbNnLMKZHU6gPgwp/cbqcFM+vqwIkfRbF+qcwK
t73QX5ZqN3knMKsU4AMqj2NP45i1+8BDbJsPlOH1ghpw45LDvc8jMX8n+G1A
9tleJbMmtJDntvunfp5ZyqzfC45d7H4x6ybmvwxe5P46ddYRzN9eSO5PMS2C
9+PY+qDoRmZhAXiCtqnX7QGz5BLYdfRSi+U85m8D+15xsN3ZhfmN90G/PvRb
kEk35ncGt84+Mevqc6znU/B2TVh3RwfmFRb/3/8A9AGhMA==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCID\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1205882744216367`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.048081384943238346`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "23.306073145449698`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151178813143`*^9},ExpressionUUID->"3726fd7d-8b7e-41c8-9714-\
53d1c481b75a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tYTHsXB/ApmTqhBpUQho5LuZQQqTS7IpFMJUohpStlRqXSxaRSSTXS
Ha8S8pIat7yO26SIE8e4dFPGuCTsrufwphtn+a2/ds/T0/N5fnvv+bb26vdb
Tffe7eyrzGKxhuD710/4Emlto6mf5KvbCixZAd7xJKg/rotYEQDmuJ0bjJ/W
88uCdrDWgcBj1WbERWO9aKolKOXKgyBimTlYa8nJsZNCiFl+4HnypS62tsTG
YnB+VuvPiDjyfKnGdppyu3lo2GIEcc8y8NSGu3K/4K5f5vqAP0t7N3w+SsxP
B1fmaHnbHCMWXQf/JrR26HxOzDH1pqn26AT2bRl5Hs8L/HaB3M9DD/MfAm95
ZGspGoH5r/66Pn+3pqoA88vBJuaWQoUqeZ7XFh+aWsnfKqp36/xlcTJY53nB
jIADZF16CXyEdUJbnY35W8DdpZtU4hTEXPYORn0V5eD2ww/n2/gSc5rBke/S
1MKsMO8IX5q6WigvaZtJLJgPHjV20Pn/eD2rDNx3IVYaU0ds3ACuFO/Vix9L
8nux/GhKRedLnEKVWGwI1k2M6bc2IpZuAC88lc5u/kbu579gWjQMznf/nGt0
H/thtj9NaRoP3Lg7gPmdwOeXv42La8f8MeAI/ZYyMyWs5wBYVWXWrR9fyLrs
9wB4nwJRV8FI7If14O5Vle6hytgPUWD32oVvWBqYvwQ82vpOTPEE4p7pgTSV
JR9XO9yK9XQIZPy+/L1g1daIfRYPMH8ROLBvboFUjaxL/mSaZx/E6G9BaBBj
vegEOHh65zJlfeyHWnD4uirTahPM/zdYr9yyINEe6yvYSVN14xTXbddifQvB
7KAj5y64YP6anYzrud3gPaGek9jemH/iLppS3lBqUIf3K/LAH97PMl+4iphz
D9zIqx2fxMf8HeC7H757qOC6QCeYpoT6rLx4XczPAxdXWfeNH431vQtOi81l
m+tgfT+DWVqN3O3jMP/4EJrSKD3/5O8+/Hu0DGH0a48/eIJ+i+MyJ6wnZzd8
3o/3joVCzLsc/NSieNNBX8zrC44rttm7yh/zZoLPe2dKeZhHNkZAU9zjUQ2n
5mE9l4EbBuc9ijyM/ewNnqymfDq4lNjrMDiy/+sMyVNicSVYZKqxui8U+2GJ
kKa6Ng2K+nOxn7eBP7rU1wxcwH5IBbt07Blr/Bj7+QpYxbDqJDUJ878WMvpZ
4LmHpt6sr1AbkhIXHdzD6D+ZBJytPrqCrYL5W8Dyn85JERGYf2QoTdlOmaQc
XYH1TAAfyai0iTqK9bwIls9WqjU7jvmbwJMDSxwjkzC/chj0o/nb5fF2mH8e
uMloY8/Um7i/XQDbvcrS7lIQ8+rBYUP71f/xIRb8BO+08+T6OhEXGYTT1Czz
5JUCU2KZC9hY110oxf3V6zl4pGFOyfaJxOIhsHR0dPHHQNzfZu2Fv8/5wqdP
wol7+GBTk4zc9gjcn6PBQzVPLNz4xJJ+sLGTwyu12cQK/Qia4rnnO7OHyf7J
cQTrLhCmyeqJeZHg3P+tbX9VRiw4BV5zjs9vP0vMmh4J/RcbuoUqJzZeC74Z
Lgxv8CP2Cge/eGY1f5MQ9+eT4HCFQ7mWPbH0ETj4aqTExYyYvzqKsZ+L9oB1
rSovbwwilhwHz8nbWt6USqx4AJbHF9Rb93eQ/L3ggvCagXVy4qLd+2iq/BWV
XhtJLCsAn22Y/OxhOjGrBny83/5M5EZi4y5wQHCd6sP9xF660TS1VGVh0FIb
4p5c8LH8cwPB+DxuFTiaw145bysxnwZXTvC4rDGFWGIVQ1PX5P72D3yIeXfA
2lknpkxdTSz4BL79Ln3kfUfMOy4W3s/2MjcbU8xrAf7Tpq3F6gdN8vqD0w17
c6rNyLq4LZaRV6oZB/vRBLX5eWcwrxlYzyHN3rEN8+4Ax/faKY2qwLwZ4P4J
10qnLcB6jt5PU5endy9xMcF+WAr2Y1VENOdhP2wHc21aQ1xdsR/SwCtZysN8
TeKia2AOvSj0xRLsh8Uixvv22gp2dTv//Tl+njgFrNY+5vrLNdgPl0WMz+9p
Ba/bkGjx0gbff1I8TTnULearUpi3Atwo16px7MD3/wpcHZW3sN4J86ocgPlj
adBy92zs14tgy+pPjb/txHyN4Bl6KfKzxZhPKQH6g/P1nedjzDc3gXE/9zzY
9+SYJ3/dwH59Cb51/8n3zRLs1x/M+yVzEmnK3q7iTOtDzOucyFgvGmSuy2Ym
0VTG1ZlzW6swLx/8TV3BmXMF8+4Dx3nGGm0+hfX6Dv4QZVu25RXWa8ZBxvO4
68DJkp8hrxswbwSYskn9/Po15i0GO4UmlJxowvfNTaap9waf5jSLsX5rwM3K
8l1/jML9KwycqXKg3Atd9B/wxMxxpi2YT/YQ/PVZR+mbfqynXQrML7Si0+MO
1lOYwsgnPZbCuL7nPnh2TcNCSzPcv3pSGPOmJCSVph5yire0bcD9Kx9c5Gl4
/p0h7r/V4CkHfTze6eP+2wlOKDFsavPA/BMOMfZHYym4KcDe3T8M99sv4GZx
X6FBAe63Wmkwn96qy/9yDvfbFeBz60dZecTjvHsbfEPNta09DufddnDoMfm2
T0mYd+xhmvJRtxmcchHzmoMT/znoEXQG8/qBp83S86YrsZ4fwLlLuF3VuC7T
SKep0yWNziEfiFlm6Yx6GPuAeQKlYOt0zJ8Ozl5rtKmjBs+DURk0ZdWwy737
G9bTFFxWOqwR/BTze4HXL9B2FWrjeXYogzHPSq5mMM5H3qJMmF/uSIaXZeB5
vAW8KFw7IWwVnsfJ4CiTT2nfU/A8vpTJOH9ZrWCle9au2rdwXtgsht/f62vo
fpxvpYlixnzaUw6OG2+4urEZz+Nm8JU5359tuILn8YgjNJXqdGKqSTfOv/Fg
zcDOGWpXcf4tO8KcLxuOMOYRASsL/v+pWrtm4DTmNwRbTPy6MqYG54X/ghft
kHl0XcJ55wV4aLijWKSO89kw+I+s1H0snOels4/SlGfUpxuDN7CeMrCD8Dj1
4z3WcwB8aYWqeexzzPt7Nk2tnc67E1WIedeD6xIfpNbfxnpHgf/qY4/ZV4z1
7MtmzKusGTk0ZaDywjQ5FOdJB/B89sdsdiDOk3tzGP8/iYuY69xpuTS176Sx
bi3Oi3x7cEDSylqjXGJRKDhr8MdTuxicL0+At2q8ST5ci/NZLXjiIx3b9f/g
vLsqj6au13P80+tx3hWAL5QajFonw/mykGnWfXBJtOuYw1LM3w32895eqzmE
9QzOh3592uig+Q3n9Tzw/o+vpc5ze0n+e+CgHWEzM3sxfwfzepFOAU3J4s1P
ZRmQ6zk54KmTD850MSHm3QU/3j/HdvxiYsFncKV5jMvyFcRF4wtp6uWFIeql
DbHMspBxv/gj01LOMZp63SizynHptfoXBCOsdQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1wtUzGkfB/ARWmtdRilkaXLLljJyqSTNH5VeqVHbexalyWVCW02666Io
JV1G3ii5jMu7SLUTadm1TKiIZVYRZZldLfIvTetW2Oyv5/ee855f53T5nPP/
P/Pt93+e5/f8LVaH+6wzEAgEH+G77zd8pYwM5Dn8U+8CP9TzqXXrwUJvB4Mz
ImbFM3D6DVXI+/HMqhEyniswexBa5sKsdaIWyKnFSmrNsCCeG/Ai0Xxh9ss+
6x3AqtcRzX9YM4vWUEtzqFN+oBbOWc1zo3TNp7qzOvsskVErsqhVleDwqxHz
d4zF/I/A2bUvrXu+7+izLGANz3lzteGHG/k+KzPA5sZeudZF7Sx/BTjZq66r
IJddr28Bu9tPv15vjPkN1/JcT0Ul/34hs64cbFRfed7Sk10vfLCWjCfpv47n
JD6una2tzAobcJzdk6aIjex6QSm4dODT7NMfmMX3wFvGPzyzOJSNLxPIiZVW
4Jv1JUa7zjJrvgYXpKWlyeVYzwawuLs5fvJurOff4PfJ+tHTApnVlsHEumXU
wkRq1XvwobG1K1ceY9ZOWs9zf/z6wMXgPLPAG5zkKp5d/SezOJ5adhRsOuDf
hZ0u7PnoLTYQizzBBiN+Vf00gFkaA56U2THx5C+YXwW+F9Telv4K89eDV9rk
+KUY4Xzw2EisiAQ3ZkpCekNwPhyg1taBd+37bN3EZmbBX9RKRQixZh+1/ip4
/+A3Px46hPk7Q8j6ko75lq63vdTCy9SSdmqFaSixSgJe8SZ4pmcB+zzxJWpZ
G7XSOIxY40ytDw4j60MtDCfWzaUWrqOW5FFrhyrgecpPaMf1YD0dqMWrwbz4
7evL8Zg3m1pZRS2aHcFzNm7bEk3TcD4EUqfsADdIx3rUv2RWn6HW/Uat8N/E
cw7JS9SrbuJ82A62rXQ1LD6J80ENbnWS+4+6hflbqMUDI4k12yLJ+PoyatH9
SDJfpAZRPHfmdMmitWWYfxq18BS15G4UWQ+KT+CPlhXL5TW4Hr+KhvW3Sbbf
7wquR19q2Z1osl6VH8Eeny3amfQX7hdTYmC93DI+3fAl5peCI2Zd2NplgvkT
qNU94GX2d5ofPcL9YmIssdALnHLOd9ipo8ySOGrFEWqBRRzku+B5rrwc94sl
1LJocNPcwvVDEzD/IXDB5C9+P6/A/NeppYvjeW7QjdVbK8Jxv9gENus65VmZ
h/vFfnCC81tp8w7MX0st7KJWhW/mucBRg6OvHGT7sbYI7Kzq6Lp7F/frq9Ti
l9Sy0QnE+j1gD2GLu08xs6gaPCI/b++rW8xSHqx/NX53Tg6z2iWRWHKxzz6F
c+ZuY1Y8B8dcutSbUcqsMkoi1s5LIvkFwdTKP6k1w5NJHr0jtWgteEpQ0RGx
H9Y7Fzzh8bQnYcFYzyFbeG5eHRfp5YX1tKeWBIFPTZs7zDoK58NO8JwtJzI9
x2C9z4KzOhaURUzF+TArhfRX2Srwk5L0izskOB8ywetjplilYX/SnKbWPwR3
cHUFycn4/NNTiXXfg0OmJlvuDsN+3Qw+1+i5vaUK6z1gK8+Z/G6f9rQJ61cG
flmqzkrV4fNuAucVr3UeYYn5+m2j89UabGHUddbZE88LJeCs3Ouf19hh/RrB
j6ZP7Xd+Cs7X3r7rXc9mDpmBeaem8ZxGbjMsxB/z+qSR8VUf0sj5Sjs5neeq
Z25w2h+L60sKLrL7bqThOqzn5nRyv6YbrIxtk5ptwnpN2M5zAQ1R/RzxPCFa
Cnby/yZ5STvmjQXbtIoXPa/HvIfBScdO3g9twectyuA5y/17lz8twOf9L3D3
/UGhkRfweUeBQ9onFHbqMP9BcNcPV/q/+IT5r2WQ/Ujmnslzx+xLordcw3pG
gKMWy8/Z4n6jKc4k4+lrwL8MPHnd7S3m14PH1VqsummI+1fYDjK+rhDcunlf
yjxz3H+vgJtul0cOHoP7bwf4RmD1uFxf3H9HZfHccd3GqvO22A801LIX4MyH
EUOqJmI/G7mT59revHMe6oj9Yj64xDc37+j/6vkz2HXKqqnDh2M/eAa+YLaq
qscU847I5jldUeW4W06Y1wn887OiJ1Z2mFcODnvtn3hvHvazVrBjleJOvgf2
s2E5cH+3TfXmGdjPHHPI/y9eAx56wihOvQDz54DvflVXtywG+8EXuTz3zFuY
//Ue7AdzwBWxpTnl32I/k4FbH7af23gf82dRqyvBY9tnGDSMxPPCzDye64y0
VQaa4vkmgFqVAV5gkpPhOxjPExVgLjpgQO04fN94CLazWhBlaM2sXKHkuUVj
SnrcHPB9Iw3sH5RnWGTHrC8HH9RV/zdpFrPoAdglJHPDcUc8n/XfRaxLBUe5
3P6wfDaed0rBG4YkGN/A8SX3wK/zjEq2zcX8gnye8y3+7tY1Z8xvBTYOsBpe
g58vPglOffHjoGwnZlkDtfJv8KfL8nwje8xvuZvnDNvM3f3w/SlFCy6f/v64
2A/PZ+/By64WGMbPx7yT/sNzR/MFJ4RBmNcb7GW26/nNUMwbD37sZ16y0Afr
+Q7c6pBxLbQF6zmhAM4XG7O/NDHpYnk9wUGPa77hhzPLYsDPklaYLRAwK1Xg
6XEvYt6NZRaZ7yGWeoAvjZJbNnLMKZHU6gPgwp/cbqcFM+vqwIkfRbF+qcwK
t73QX5ZqN3knMKsU4AMqj2NP45i1+8BDbJsPlOH1ghpw45LDvc8jMX8n+G1A
9tleJbMmtJDntvunfp5ZyqzfC45d7H4x6ybmvwxe5P46ddYRzN9eSO5PMS2C
9+PY+qDoRmZhAXiCtqnX7QGz5BLYdfRSi+U85m8D+15xsN3ZhfmN90G/PvRb
kEk35ncGt84+Mevqc6znU/B2TVh3RwfmFRb/3/8A9AGhMA==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"SCID\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1017471407510695`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04568455539846807`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "24.1164028223861`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.7053151199594984`*^9},ExpressionUUID->"e4038b7e-0674-4590-95ae-\
e8b1f16b7857"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tYTHsXB/ApmTqhBpUQho5LuZQQqTS7IpFMJUohpStlRqXSxaRSSTXS
Ha8S8pIat7yO26SIE8e4dFPGuCTsrufwphtn+a2/ds/T0/N5fnvv+bb26vdb
Tffe7eyrzGKxhuD710/4Emlto6mf5KvbCixZAd7xJKg/rotYEQDmuJ0bjJ/W
88uCdrDWgcBj1WbERWO9aKolKOXKgyBimTlYa8nJsZNCiFl+4HnypS62tsTG
YnB+VuvPiDjyfKnGdppyu3lo2GIEcc8y8NSGu3K/4K5f5vqAP0t7N3w+SsxP
B1fmaHnbHCMWXQf/JrR26HxOzDH1pqn26AT2bRl5Hs8L/HaB3M9DD/MfAm95
ZGspGoH5r/66Pn+3pqoA88vBJuaWQoUqeZ7XFh+aWsnfKqp36/xlcTJY53nB
jIADZF16CXyEdUJbnY35W8DdpZtU4hTEXPYORn0V5eD2ww/n2/gSc5rBke/S
1MKsMO8IX5q6WigvaZtJLJgPHjV20Pn/eD2rDNx3IVYaU0ds3ACuFO/Vix9L
8nux/GhKRedLnEKVWGwI1k2M6bc2IpZuAC88lc5u/kbu579gWjQMznf/nGt0
H/thtj9NaRoP3Lg7gPmdwOeXv42La8f8MeAI/ZYyMyWs5wBYVWXWrR9fyLrs
9wB4nwJRV8FI7If14O5Vle6hytgPUWD32oVvWBqYvwQ82vpOTPEE4p7pgTSV
JR9XO9yK9XQIZPy+/L1g1daIfRYPMH8ROLBvboFUjaxL/mSaZx/E6G9BaBBj
vegEOHh65zJlfeyHWnD4uirTahPM/zdYr9yyINEe6yvYSVN14xTXbddifQvB
7KAj5y64YP6anYzrud3gPaGek9jemH/iLppS3lBqUIf3K/LAH97PMl+4iphz
D9zIqx2fxMf8HeC7H757qOC6QCeYpoT6rLx4XczPAxdXWfeNH431vQtOi81l
m+tgfT+DWVqN3O3jMP/4EJrSKD3/5O8+/Hu0DGH0a48/eIJ+i+MyJ6wnZzd8
3o/3joVCzLsc/NSieNNBX8zrC44rttm7yh/zZoLPe2dKeZhHNkZAU9zjUQ2n
5mE9l4EbBuc9ijyM/ewNnqymfDq4lNjrMDiy/+sMyVNicSVYZKqxui8U+2GJ
kKa6Ng2K+nOxn7eBP7rU1wxcwH5IBbt07Blr/Bj7+QpYxbDqJDUJ878WMvpZ
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
DbHMspBxv/gj01LOMZp63SizynHptfoXBCOsdQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tUjOseB/Ch7E07THRK6WQoos06c5QupObdx9bOrSmXY+fShIp0mSld
XMpU6F4juqiTMyIppXHbHLtd0xWxGbuTLZeMKOVxGckiFefn+f1x1tNalvVZ
7zvvfOf7/uZ9npm6KczbfySPxxuCf1//hz+5sS/hvtC/N25glSvY+1NnX6SZ
7qu1W8E/Hcz4m7sJtfQ5+HKBzDLeiFppJCHch/qy1CPW1JoFEuZ8XgC4Qe/q
kypjaqECTOas3lk8QN9PPc6PcA6ChfkB1tQ6J7AoJXtdjg21YDO4ZHiq870P
r79anAE2sRsVdd+cHpdfAlfb3FjXvJya77CJcOWVlrKBXGqRBDzF2MIhfQzm
TwXfLQs3//EdPa68AE6syrK53U6t6QCvDz485uAT+n6SDZsJ1+c+un92OLUi
Cdx+P7247Qd6PfVZ8Jt7DtGDUmrdA3Ca4uRz+TVqwTdbCDddZ1odqcE+z4B3
BAw3ZodT89vBa8sf2+Zdphbp+RNu8pmThu6/Y9454LfCeRPT1dhnBTjL+MSd
dre3tM+7YK+mJK+62dQSXgDh8r0+LRZNplbYgvuT7aos+NTqVeC25Xb+im+o
xa3ghJXicPNX9PryYfBQ+Mn6Kw3UKptAwuVNH/wY/Q7ze4E3u9m7ZD7F/HvA
j39Jnlk7hl5P+QlsY2Fq4PoR58F6K+F8RnY024ymx3me4L719n6renAedoIt
7pf4jH9PLTkO5v/o5TGpBfucuo3tcxnYKt9M0CWnFkeBH8xNcw3IxvxK9nxV
yzbm84k8gghn3TgptPIU9hsRxJyvLApi818Ft3xXf9FPD/P3getubRcN2mC/
0u2Eu+RvEnvTGvstAE+QifO0bzF/I7jnXUfR9C7M/2Y7k0dsFsxYmweu0NRt
bxvAfuvBIadSvlR3Y/6X4J/vdsT4ajG/SQgzL0oR2Cm3od+gCvutDWE+n6Q3
hMmnmBhKuOuP6wOPPMB5XhjKzJsuMJS5fyp+GOH+vj/49+BBzDsf7BmSclH4
CPP6hzHzJsoC10aFnAi6h32OlRIu3sbL2rsJ59lJynwfhJvAWz+mXy10x7zp
Uia/4hdwWUzD7UXl2Oc8GeHGvfKuTNqFffrKmM8vT5Ex3y/VeXB0zaDEqh7z
PwJzrWZBslTsc3044f7xZdJl53PY5wFw8J7Us/01mF8FLjJY+cfyvZj/QThz
feGoCMJdO99gduc89pkYwcybrhJcsyR0TbEK899jLR65g3k/+Wzw1aTGG6PT
sd/T4PFm3oOexTgPbeDV3k8yv9mG+b+A4257J9dFYv5ZkYS70iwN9nDG/CvB
KU6nlupisN8/2OOKoUjmfqhnRBHOMajx5A9JmF8MPurgLTApxfy7o5g+VAOs
tVbR8DwvNbco24T5V0Qz91cUA46Y/zmqZQnmLwa77Z58Szsf+50aA88zu/AD
s7X0+SxcCu5pW/PIqJxaEgn2szjInZNTK/4NdopZYP8hAteX62D9/6xNG7uF
WvzTTsINl47YEqbC9SOctepf4MpRfx2b2k2tbQYLL1bY/6zG9eUteEnfc8tG
W1w/wnbB/drfrf8kEdePI7uY9+M1gnXdlfqqDZj/Nbi9Wr+z7lvMP2k34bbN
6dkqtsf1L3c383pBHbjoZYvR/EWYn4AbnaYlbhmBed32EO7WsejFh/RxvavZ
w6yf0h7wxw/6s1cYYd4JscxxjUss83peIGtFVyyz/qrHx7F5ncHNCsGU92LM
uyWOWY/FmXHM/dMa7iVc6KNnSlkr9ukI7jR9aupiifPgB7brbq7uHY/zkLaX
mR/lxb3M/Ajt5YRbNaNT5MrhPG+Us/OcDJ43odngnCPO8zlwkmHZsI0XzvND
OXN91f54wv3aF3bFyA/ntyqeuV/8++DAtt6btc9oHyL9BHj+nRaV38mk5lUm
MP0I/0xg+pSMSCRc6WpB21Z37Pd78CdPvWsdEuyvHPz9KNWQ41Ts779gzUBk
p9UqnNfP4O7YtVy8D97/mfsYa733MfOvHNzHzI9m+n4mH08MNkvTm7A9CPPu
2s+cr/4I9jHODeFl08+nm3aA2R8JloMNW6rOnTbFvNHgp9N9SnQGmPcYuPDw
zciyfno+X5AE+8OC3gS7B9jfEnBxiVWR+ylq6Q7w5JcbRvTEUSuPgonD2ZuZ
NdSaa+BL0besSs7g/sw9mXDfmp/flRqD+zMZOLM1xuTFMZzXwmTmfF0TOMVc
kPZwIfatS2buhyo0BZ6v086scAnEPvNTmD75DSnM+aJX4NXrFnb2zcHvm2kq
8zwSqsEzlv1TZvsb3v8Xqcz8K4zTmO+H2hXc6rUj7sJx7PM3sLj42Zqu69jn
c3Cfa4VSVIl5jdIJNytWNnDFEOd1QTqzv+UHpDP7ceWzdGb/rhmXweyPec4Z
zOuFm8ELNM6apAbMn8Ee132XSbj3ueUud4awT4dM5vpiSSbz+0Kemsn8vlBd
YM8X2WUxx6UbwLZlUvdEe8yfBA4f92XmSCvMfxZ8QFtW5TsL8z/MYvbnCh8F
4TZmOeqHLMLv/z6wYd1K31pv/P6fAZvalk17vRrXs3ZwduRn9ZpVmF/vIOFe
VTjOsvPAfuPBS3vTbvzpj+tZxUFmvRXdBWuKHOaEBWJ+XjZzvtIW7Purg/e8
YHx+lYGrLcNG30/G51creE2c9uEtBeYfBuv0HZoa8jG/zSHCHTo2PG7KHtwf
aA4x+2HVp0NMfq31YcLdljk+PumGeT3BscdXzh9Yjnl3gkv6m7rIXOzzA7i7
UDsiJwf7nJZDuMHFpTv6CjHvMtaSqBxmP6ZQgiOzhyasK8A+p+QSbtlf0syU
GdinB9gsobQmrgTzR+Qy+yNVUS6zH9JeBX9uObFx6US6n5QuziPciykd5JUh
/t6QgjOqS+Z56DB/QR6zf+c15TH7XeEbcPEVT4MwS9yvh+QTbmKRZ9cpM2pd
HtjFvK5j8wxqQX0+83tH/BI8fLSEn0gwv8kR5v34OeAFr+sUhZ+x31qwuji4
by4P8/eyVk4sYKxZyFrRXcC8v5pf+P98/wOiZ7N0
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
mJdZDPX4Z2PuxNoR2/8BnHGr1w==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.8643803248345192}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8747863097033755, 
        1.082906007080502}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.8643803248345192}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8747863097033755, 
        1.082906007080502}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"OEUH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0773892972061416`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.038709868009246876`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "27.832419809563255`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.705315121865803*^9},ExpressionUUID->"85200671-6a21-4508-b25e-\
4f99ff043141"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1wtUzGkfB/ARWmtdRilkaXLLljJyqSTNH5VeqVHbexalyWVCW02666Io
JV1G3ii5jMu7SLUTadm1TKiIZVYRZZldLfIvTetW2Oyv5/ee855f53T5nPP/
P/Pt93+e5/f8LVaH+6wzEAgEH+G77zd8pYwM5Dn8U+8CP9TzqXXrwUJvB4Mz
ImbFM3D6DVXI+/HMqhEyniswexBa5sKsdaIWyKnFSmrNsCCeG/Ai0Xxh9ss+
6x3AqtcRzX9YM4vWUEtzqFN+oBbOWc1zo3TNp7qzOvsskVErsqhVleDwqxHz
d4zF/I/A2bUvrXu+7+izLGANz3lzteGHG/k+KzPA5sZeudZF7Sx/BTjZq66r
IJddr28Bu9tPv15vjPkN1/JcT0Ul/34hs64cbFRfed7Sk10vfLCWjCfpv47n
JD6una2tzAobcJzdk6aIjex6QSm4dODT7NMfmMX3wFvGPzyzOJSNLxPIiZVW
4Jv1JUa7zjJrvgYXpKWlyeVYzwawuLs5fvJurOff4PfJ+tHTApnVlsHEumXU
wkRq1XvwobG1K1ceY9ZOWs9zf/z6wMXgPLPAG5zkKp5d/SezOJ5adhRsOuDf
hZ0u7PnoLTYQizzBBiN+Vf00gFkaA56U2THx5C+YXwW+F9Telv4K89eDV9rk
+KUY4Xzw2EisiAQ3ZkpCekNwPhyg1taBd+37bN3EZmbBX9RKRQixZh+1/ip4
/+A3Px46hPk7Q8j6ko75lq63vdTCy9SSdmqFaSixSgJe8SZ4pmcB+zzxJWpZ
G7XSOIxY40ytDw4j60MtDCfWzaUWrqOW5FFrhyrgecpPaMf1YD0dqMWrwbz4
7evL8Zg3m1pZRS2aHcFzNm7bEk3TcD4EUqfsADdIx3rUv2RWn6HW/Uat8N/E
cw7JS9SrbuJ82A62rXQ1LD6J80ENbnWS+4+6hflbqMUDI4k12yLJ+PoyatH9
SDJfpAZRPHfmdMmitWWYfxq18BS15G4UWQ+KT+CPlhXL5TW4Hr+KhvW3Sbbf
7wquR19q2Z1osl6VH8Eeny3amfQX7hdTYmC93DI+3fAl5peCI2Zd2NplgvkT
qNU94GX2d5ofPcL9YmIssdALnHLOd9ipo8ySOGrFEWqBRRzku+B5rrwc94sl
1LJocNPcwvVDEzD/IXDB5C9+P6/A/NeppYvjeW7QjdVbK8Jxv9gENus65VmZ
h/vFfnCC81tp8w7MX0st7KJWhW/mucBRg6OvHGT7sbYI7Kzq6Lp7F/frq9Ti
l9Sy0QnE+j1gD2GLu08xs6gaPCI/b++rW8xSHqx/NX53Tg6z2iWRWHKxzz6F
c+ZuY1Y8B8dcutSbUcqsMkoi1s5LIvkFwdTKP6k1w5NJHr0jtWgteEpQ0RGx
H9Y7Fzzh8bQnYcFYzyFbeG5eHRfp5YX1tKeWBIFPTZs7zDoK58NO8JwtJzI9
x2C9z4KzOhaURUzF+TArhfRX2Srwk5L0izskOB8ywetjplilYX/SnKbWPwR3
cHUFycn4/NNTiXXfg0OmJlvuDsN+3Qw+1+i5vaUK6z1gK8+Z/G6f9rQJ61cG
flmqzkrV4fNuAucVr3UeYYn5+m2j89UabGHUddbZE88LJeCs3Ouf19hh/RrB
j6ZP7Xd+Cs7X3r7rXc9mDpmBeaem8ZxGbjMsxB/z+qSR8VUf0sj5Sjs5neeq
Z25w2h+L60sKLrL7bqThOqzn5nRyv6YbrIxtk5ptwnpN2M5zAQ1R/RzxPCFa
Cnby/yZ5STvmjQXbtIoXPa/HvIfBScdO3g9twectyuA5y/17lz8twOf9L3D3
/UGhkRfweUeBQ9onFHbqMP9BcNcPV/q/+IT5r2WQ/Ujmnslzx+xLordcw3pG
gKMWy8/Z4n6jKc4k4+lrwL8MPHnd7S3m14PH1VqsummI+1fYDjK+rhDcunlf
yjxz3H+vgJtul0cOHoP7bwf4RmD1uFxf3H9HZfHccd3GqvO22A801LIX4MyH
EUOqJmI/G7mT59revHMe6oj9Yj64xDc37+j/6vkz2HXKqqnDh2M/eAa+YLaq
qscU847I5jldUeW4W06Y1wn887OiJ1Z2mFcODnvtn3hvHvazVrBjleJOvgf2
s2E5cH+3TfXmGdjPHHPI/y9eAx56wihOvQDz54DvflVXtywG+8EXuTz3zFuY
//Ue7AdzwBWxpTnl32I/k4FbH7af23gf82dRqyvBY9tnGDSMxPPCzDye64y0
VQaa4vkmgFqVAV5gkpPhOxjPExVgLjpgQO04fN94CLazWhBlaM2sXKHkuUVj
SnrcHPB9Iw3sH5RnWGTHrC8HH9RV/zdpFrPoAdglJHPDcUc8n/XfRaxLBUe5
3P6wfDaed0rBG4YkGN/A8SX3wK/zjEq2zcX8gnye8y3+7tY1Z8xvBTYOsBpe
g58vPglOffHjoGwnZlkDtfJv8KfL8nwje8xvuZvnDNvM3f3w/SlFCy6f/v64
2A/PZ+/By64WGMbPx7yT/sNzR/MFJ4RBmNcb7GW26/nNUMwbD37sZ16y0Afr
+Q7c6pBxLbQF6zmhAM4XG7O/NDHpYnk9wUGPa77hhzPLYsDPklaYLRAwK1Xg
6XEvYt6NZRaZ7yGWeoAvjZJbNnLMKZHU6gPgwp/cbqcFM+vqwIkfRbF+qcwK
t73QX5ZqN3knMKsU4AMqj2NP45i1+8BDbJsPlOH1ghpw45LDvc8jMX8n+G1A
9tleJbMmtJDntvunfp5ZyqzfC45d7H4x6ybmvwxe5P46ddYRzN9eSO5PMS2C
9+PY+qDoRmZhAXiCtqnX7QGz5BLYdfRSi+U85m8D+15xsN3ZhfmN90G/PvRb
kEk35ncGt84+Mevqc6znU/B2TVh3RwfmFRb/3/8A9AGhMA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.0055000000000000005`], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
0LoZY+x/AcIuoaw=
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SCID\"", "\"OEUH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.099], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}],
                     ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.096230430876709`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03614649301094779`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "30.327435376502237`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.705315123990863*^9},ExpressionUUID->"bbe0fd64-9044-43da-8924-\
2255e5e1b7e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV13tYTHsXB/ApmTqhBpUQho5LuZQQqTS7IpFMJUohpStlRqXSxaRSSTXS
Ha8S8pIat7yO26SIE8e4dFPGuCTsrufwphtn+a2/ds/T0/N5fnvv+bb26vdb
Tffe7eyrzGKxhuD710/4Emlto6mf5KvbCixZAd7xJKg/rotYEQDmuJ0bjJ/W
88uCdrDWgcBj1WbERWO9aKolKOXKgyBimTlYa8nJsZNCiFl+4HnypS62tsTG
YnB+VuvPiDjyfKnGdppyu3lo2GIEcc8y8NSGu3K/4K5f5vqAP0t7N3w+SsxP
B1fmaHnbHCMWXQf/JrR26HxOzDH1pqn26AT2bRl5Hs8L/HaB3M9DD/MfAm95
ZGspGoH5r/66Pn+3pqoA88vBJuaWQoUqeZ7XFh+aWsnfKqp36/xlcTJY53nB
jIADZF16CXyEdUJbnY35W8DdpZtU4hTEXPYORn0V5eD2ww/n2/gSc5rBke/S
1MKsMO8IX5q6WigvaZtJLJgPHjV20Pn/eD2rDNx3IVYaU0ds3ACuFO/Vix9L
8nux/GhKRedLnEKVWGwI1k2M6bc2IpZuAC88lc5u/kbu579gWjQMznf/nGt0
H/thtj9NaRoP3Lg7gPmdwOeXv42La8f8MeAI/ZYyMyWs5wBYVWXWrR9fyLrs
9wB4nwJRV8FI7If14O5Vle6hytgPUWD32oVvWBqYvwQ82vpOTPEE4p7pgTSV
JR9XO9yK9XQIZPy+/L1g1daIfRYPMH8ROLBvboFUjaxL/mSaZx/E6G9BaBBj
vegEOHh65zJlfeyHWnD4uirTahPM/zdYr9yyINEe6yvYSVN14xTXbddifQvB
7KAj5y64YP6anYzrud3gPaGek9jemH/iLppS3lBqUIf3K/LAH97PMl+4iphz
D9zIqx2fxMf8HeC7H757qOC6QCeYpoT6rLx4XczPAxdXWfeNH431vQtOi81l
m+tgfT+DWVqN3O3jMP/4EJrSKD3/5O8+/Hu0DGH0a48/eIJ+i+MyJ6wnZzd8
3o/3joVCzLsc/NSieNNBX8zrC44rttm7yh/zZoLPe2dKeZhHNkZAU9zjUQ2n
5mE9l4EbBuc9ijyM/ewNnqymfDq4lNjrMDiy/+sMyVNicSVYZKqxui8U+2GJ
kKa6Ng2K+nOxn7eBP7rU1wxcwH5IBbt07Blr/Bj7+QpYxbDqJDUJ878WMvpZ
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
DbHMspBxv/gj01LOMZp63SizynHptfoXBCOsdQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV1wtUzGkfB/ARWmtdRilkaXLLljJyqSTNH5VeqVHbexalyWVCW02666Io
JV1G3ii5jMu7SLUTadm1TKiIZVYRZZldLfIvTetW2Oyv5/ee855f53T5nPP/
P/Pt93+e5/f8LVaH+6wzEAgEH+G77zd8pYwM5Dn8U+8CP9TzqXXrwUJvB4Mz
ImbFM3D6DVXI+/HMqhEyniswexBa5sKsdaIWyKnFSmrNsCCeG/Ai0Xxh9ss+
6x3AqtcRzX9YM4vWUEtzqFN+oBbOWc1zo3TNp7qzOvsskVErsqhVleDwqxHz
d4zF/I/A2bUvrXu+7+izLGANz3lzteGHG/k+KzPA5sZeudZF7Sx/BTjZq66r
IJddr28Bu9tPv15vjPkN1/JcT0Ul/34hs64cbFRfed7Sk10vfLCWjCfpv47n
JD6una2tzAobcJzdk6aIjex6QSm4dODT7NMfmMX3wFvGPzyzOJSNLxPIiZVW
4Jv1JUa7zjJrvgYXpKWlyeVYzwawuLs5fvJurOff4PfJ+tHTApnVlsHEumXU
wkRq1XvwobG1K1ceY9ZOWs9zf/z6wMXgPLPAG5zkKp5d/SezOJ5adhRsOuDf
hZ0u7PnoLTYQizzBBiN+Vf00gFkaA56U2THx5C+YXwW+F9Telv4K89eDV9rk
+KUY4Xzw2EisiAQ3ZkpCekNwPhyg1taBd+37bN3EZmbBX9RKRQixZh+1/ip4
/+A3Px46hPk7Q8j6ko75lq63vdTCy9SSdmqFaSixSgJe8SZ4pmcB+zzxJWpZ
G7XSOIxY40ytDw4j60MtDCfWzaUWrqOW5FFrhyrgecpPaMf1YD0dqMWrwbz4
7evL8Zg3m1pZRS2aHcFzNm7bEk3TcD4EUqfsADdIx3rUv2RWn6HW/Uat8N/E
cw7JS9SrbuJ82A62rXQ1LD6J80ENbnWS+4+6hflbqMUDI4k12yLJ+PoyatH9
SDJfpAZRPHfmdMmitWWYfxq18BS15G4UWQ+KT+CPlhXL5TW4Hr+KhvW3Sbbf
7wquR19q2Z1osl6VH8Eeny3amfQX7hdTYmC93DI+3fAl5peCI2Zd2NplgvkT
qNU94GX2d5ofPcL9YmIssdALnHLOd9ipo8ySOGrFEWqBRRzku+B5rrwc94sl
1LJocNPcwvVDEzD/IXDB5C9+P6/A/NeppYvjeW7QjdVbK8Jxv9gENus65VmZ
h/vFfnCC81tp8w7MX0st7KJWhW/mucBRg6OvHGT7sbYI7Kzq6Lp7F/frq9Ti
l9Sy0QnE+j1gD2GLu08xs6gaPCI/b++rW8xSHqx/NX53Tg6z2iWRWHKxzz6F
c+ZuY1Y8B8dcutSbUcqsMkoi1s5LIvkFwdTKP6k1w5NJHr0jtWgteEpQ0RGx
H9Y7Fzzh8bQnYcFYzyFbeG5eHRfp5YX1tKeWBIFPTZs7zDoK58NO8JwtJzI9
x2C9z4KzOhaURUzF+TArhfRX2Srwk5L0izskOB8ywetjplilYX/SnKbWPwR3
cHUFycn4/NNTiXXfg0OmJlvuDsN+3Qw+1+i5vaUK6z1gK8+Z/G6f9rQJ61cG
flmqzkrV4fNuAucVr3UeYYn5+m2j89UabGHUddbZE88LJeCs3Ouf19hh/RrB
j6ZP7Xd+Cs7X3r7rXc9mDpmBeaem8ZxGbjMsxB/z+qSR8VUf0sj5Sjs5neeq
Z25w2h+L60sKLrL7bqThOqzn5nRyv6YbrIxtk5ptwnpN2M5zAQ1R/RzxPCFa
Cnby/yZ5STvmjQXbtIoXPa/HvIfBScdO3g9twectyuA5y/17lz8twOf9L3D3
/UGhkRfweUeBQ9onFHbqMP9BcNcPV/q/+IT5r2WQ/Ujmnslzx+xLordcw3pG
gKMWy8/Z4n6jKc4k4+lrwL8MPHnd7S3m14PH1VqsummI+1fYDjK+rhDcunlf
yjxz3H+vgJtul0cOHoP7bwf4RmD1uFxf3H9HZfHccd3GqvO22A801LIX4MyH
EUOqJmI/G7mT59revHMe6oj9Yj64xDc37+j/6vkz2HXKqqnDh2M/eAa+YLaq
qscU847I5jldUeW4W06Y1wn887OiJ1Z2mFcODnvtn3hvHvazVrBjleJOvgf2
s2E5cH+3TfXmGdjPHHPI/y9eAx56wihOvQDz54DvflVXtywG+8EXuTz3zFuY
//Ue7AdzwBWxpTnl32I/k4FbH7af23gf82dRqyvBY9tnGDSMxPPCzDye64y0
VQaa4vkmgFqVAV5gkpPhOxjPExVgLjpgQO04fN94CLazWhBlaM2sXKHkuUVj
SnrcHPB9Iw3sH5RnWGTHrC8HH9RV/zdpFrPoAdglJHPDcUc8n/XfRaxLBUe5
3P6wfDaed0rBG4YkGN/A8SX3wK/zjEq2zcX8gnye8y3+7tY1Z8xvBTYOsBpe
g58vPglOffHjoGwnZlkDtfJv8KfL8nwje8xvuZvnDNvM3f3w/SlFCy6f/v64
2A/PZ+/By64WGMbPx7yT/sNzR/MFJ4RBmNcb7GW26/nNUMwbD37sZ16y0Afr
+Q7c6pBxLbQF6zmhAM4XG7O/NDHpYnk9wUGPa77hhzPLYsDPklaYLRAwK1Xg
6XEvYt6NZRaZ7yGWeoAvjZJbNnLMKZHU6gPgwp/cbqcFM+vqwIkfRbF+qcwK
t73QX5ZqN3knMKsU4AMqj2NP45i1+8BDbJsPlOH1ghpw45LDvc8jMX8n+G1A
9tleJbMmtJDntvunfp5ZyqzfC45d7H4x6ybmvwxe5P46ddYRzN9eSO5PMS2C
9+PY+qDoRmZhAXiCtqnX7QGz5BLYdfRSi+U85m8D+15xsN3ZhfmN90G/PvRb
kEk35ncGt84+Mevqc6znU/B2TVh3RwfmFRb/3/8A9AGhMA==
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], FontSize -> 20, 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt1wk81PkbB/BJuTZqUJsjNSO5Sv8JiSR+HYRaardtU8ldEkbuLkMSORrL
GlQaHRTKEbZLZksp7BpylCS1dPiRoVwb9X98n3q9Su/XzOs3H8/v+T3Pd9ju
AVu9pBgMxgT8nfoJf3hz9tAU/ldiBf8UrwEXhrxsSJEm7toHDq/Unt08n5j7
Dqw+9tRt/yJioZIrvO53PXnGBmKxBfg/++2rnClihjd46S/nErqMiDl8MH/C
Yb7u5MCURbPcaKqdOrD6wtuPU5aYgfMfpZec/4OY5QG+bdGmlfg7sVMSOCJt
2dt8ITHvT3D988glRtXETFN3mnpzTd9tVS65vrUruLR+IGftEDH3FNiszFY0
p41YWDb1utK/w7p6mL8TvLuhN3GRMbme624Pmore6JljuqJ/yvyT4AvGBRNz
EsjrohKwE8Mm76QuuZ7kBdh/22CnKl6fJeNJU3Njc0JHR4i7roOFFU2LOUbE
zOdgVf+48UxVzDvdi6Zu+omTNVdiXkMwe6WqBo9LzCgE144HHhXPxHq2glXD
xgWjOsSuDG+asmuS7OnTJOYbgHV0tt9xNyYW/QJWrlszi69E7PQUbNHVyo9j
EvMmwYa9Cnsl/5LPK9bdS1MuzYccGn7AftgCViqTf+YgRcw8Aj4r93k4RgX7
4T/wlVlFu36ai/XU3kdTfwf5n/XFfmE4gl/18eabLcT8EWBmX4ONky7mvwi+
aXiPY7GEWML2oSn7giCjSew/1ibw456tM/pkMH8oWJhxzMXiPcnLE07ZMuPI
NDXs51pwnNB3r4sBsbXdfpqKsu4ouaWI/RwEXrhe5/e5hpj/HDif97qp6ns/
14AN3aVWKLth/iGw24Nby14EY325vjSVceDpqCtalAWufcPONfHG/NVgrrvR
rqe/YP4BcK7APKY8APOrHYDnI2lr/KZ9WF8B+ETK5jeF+7G+98EHxtRLRHsx
fx+4NHXIhu2O+X/0o6kYSaJpxibMbw1e+uj9NMFSrG8VOP3aZalQM6zvB3Bv
ZLZkdD3mV/GnqaueamPKppjfEtzpMTbLexnm3wsWjt18tPkI1pMZQFPOfvTj
9mjMuwr8XNtETYS/P9MLLHQcq/spFvOeBm98pf3aexvWU5FLU90TZQ5RjlhP
M/A/smPStdiPHHfwRo+diuE95H66JoLTFEwa92lj3gpwbfIBx5nY/6wVgTQl
N0emuwj70WkP2HekYXnJPOznePClfoXHMjh/im+AR9tV/8ywwfwvwfm7dw8s
x/7j7jpIU9X1HTKbcR4IY8EfKWU5X+xHcTG44g7HK+R7P78Aq6imdQYvwPzS
QTQVPFzgZ4zPo+g42DaFp7QB3y+5BpY1bA52w89jPQN3fPT1WszC/FLBNKXX
qH5YC58n3lKwXO6zj7EtOC8KwKVWDtwvEpwXLeByvsy6D/twXnwDhxZZLFP/
FeebfghN6ftkpGpqE4t/Bld8vfZ6whXr2wQuPeNzTp1JzJ8ImZrfqe8MfXE+
64RCv28oGlBIwPnmBB454xhUmI3z7TDYzNmLPRqK82Ic/CGeCmrFz+9aFEZT
0sOv2JUrMP9P4PChz+5vpTB/OPhrTqeDyyiZp9wL4Ps1n6486iVmsMPh+dH2
jpevIuY4gP+Skt1hhPvBNQS84+bftqURxPzz4LkGyymBJ87nJ+DCF9ny8s64
PzZGwLyk0sPyjuL+OAi+PVRXp5dMXHwWzP20eEbVFeKuR2DDIz4LmnxxvwyC
a193hY9ziIUBh+B+Hb2zPaKT7AdxJnhsdmiAeT8xoxrcbzBqnP+MmPMR3JyR
ll37hNhV9TBNfd4gJQiuJpakg8dC7AYym4hZf4EVT4Q4BomJnWiw1oH4/vxk
4mKrIzTVqJM/c3MesfU98F/aGascc4m578GKnVyvzuvEQuWjsL/M8i1YaPFq
8JWrYUZGCZh3LzhtRPxQ7jzuux6wdmveanYpsWj2MZp6aNty69MbzGsOzm1Q
YVROw33tCa7V6/62TQPrnQzmewQWpx7BeipEwvMh2PVgZyDWcyVYa3K1y4oK
Yms3sJfP6wmNi9gPCeDJTHury5ew3uVT71/H6TmG5pjwaGqXvcDleRH2gwu4
u12acxnPB/w48FBL78SaG9gPpeCbPWELFO/ieaMD/H7E4PrrNrz/J6JoqsfJ
bsG/LZi3CFyWbjSQUEd+X2Z71NT+Xr9UPI71nhEN9aFGtHZ+xfpdA8eaLMnM
NsB8bWCDIHao/3rMN+04PH8run8YjMF8S6b8MthSF/uLlQ8uvdN25uMOrF8z
+G/HCLtKD+zXr+DuM4zTFw9iXr0YOH/cUsrrj8S8W8FvaYFBXSrW6wv4Qlme
bVAcsXjxCZqylD2a1Y/PC8MJnNRvWPmSh3kPgbdEDSd1hWC9xsBZhemL9Oyx
XlqxNLUt2pK/El9nbQZLzkp12WRj3jAwt1pmcHUK5s0Ba3VPXk5JwvvNOklT
gSHhhV+24f22Bze2/NbUeAjvdzBY5nzBfWXMJ8wGb4mM3h54GPM/BkvJbYjU
FGA9beNoKtun6jMbr8cPBKux23Xy/DD/GXDp3c91Oscx/0Nw88irpawGzC8B
D19myJh8wHr6x8P5pqAueGII65kBTlNnhMjiPGI+AMcn3zGtacX8/eDEhR7n
wj5j/nmnaEo0e1m7hiKZbxwROLFj+hI1Fs7bXrBEVV1Vg4Pzdk4CTbEu3H1S
YY3zdg1YMW9GwFtpYqdKcPWGl6F2mni+eQcu3zK2ugLPi8VKibA/TLKvs77P
WwuwXNsLzex1OG+9weU+y6vUcd4Lu8Gicp1vB3fiPpiVBOeB9Dk8hgeeL83B
3IB55i36mN8DbDim9k5vOeZPAov2hO9r9cR9MDMZzodp7oqyx3EfmILXz//f
J/kQzO8Kvj3916LsS5j/FHj5iPkXfzHmLwNXdl6Nch3GfWB8GvIaDxaMjOM+
2w3W6tHwVvmM+U+C7Z/mjyfgeVpcAn43uKppGL+/MDrAO8IW05vw/Md35sP5
dqOdZSPuW1EMOMItL30I97vkOlhnV8s/Nd/38XOw5wQvNkkL9/H0FNiHvTNM
G/H9XVHgeeclQ0r4fmYhmGvz8101SzzvtILXfOo7eQjPK1zG7zR1l/3Yag++
X2gAdlZ40qqM5wnOVbCmz879wSZ4PnsKHqyPjs62xfyT4KSgPyVn0SLdVNiP
guI7YjzP8MRgXcbIhZK1eL75D3zvXCnbWR/zaqdBP8g+rs/FPExH8O38tZv5
+H3AOgL8T5+W0SU8X4tHwaO8xNDoVKyn1h80pfCucG17BebdBI6+pRGaU4J5
Q8F6J2KuxNzAvEJwlvRAmWY51nNhOjy/nivNavF1Jzvw/h8Cu3nNmD8I3Ggb
Wd9fj/nPgVNKYrsthjF/DbijPVvOyXCQ1NNGQFN9IivBuoXEQi747LQbOfoq
xOIssP0XuZRKVWLGQ/AzZT/TGgVizgD4m15Vm745scgvA87XGUn39q8hlgjA
Sg82LfTdQ8y6Dy6+GD/yUJfYqQ98KvM3mReLiXk/ZtLUtRJ553lbiZl/gI9t
LE+5+xuxdRU4S2Wk5hVej/sBvDbBtXGrF+ZXyYLvI473O1x8ML8lmP4Sp+bv
Qsx/C5aS9wjK+hXzMs/A9yf+ttLRsEGr/wONDKZR
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.673728*^9, 0.8570378161530636}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.673728*^9, 3.7051776*^9}, {0.8697058852285781, 
        1.1230672667388681`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"OEUR\"", "\"OEUH\"", "\"SCID\"", "\"portfolio\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.0917889562779732`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.039186677955775254`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "27.861227673091577`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7053149703466597`*^9, 3.705315054207879*^9}, 
   3.705315127740975*^9},ExpressionUUID->"f3cfce94-44bb-479e-ad31-\
ef6ee65023a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<VTI\>\"", ",", "\"\<EDV\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<TLT\>\"", ",", "\"\<TBF\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.687720875048324*^9, 
  3.6877208755336103`*^9}},ExpressionUUID->"450dc594-3d9b-4fdc-9103-\
d430ebee1359"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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

           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV3HlcTO8eB/BERZQRQpJkj0iyRNJJm5ImlaRdJYRCKUWbJRWaVhIpsiUJ
SRSGFqViUMpaJDITlZBkuZ97vr8/mvvHvff9msqn7/me5zznOc9p3BqfFZ6S
EhISn/pJSPz/f/EfHnezkKH/274Y/6X6CPbVMve5+Kjt/+Z2w0v32nyo4rAO
G+8jZIx2L/B9M+3L/51rASeVp/nIq7NuDIDXdUXnWQ5j7fsDPjQjMD7ZgXW6
qq+QmdU3el2PBGuBGTxgrX+PmTdrCX9478CYPn2cWWuegH9WfFjYN5U1f8wW
IXOm4bWAW8663QRuqbbteGXKWnUr/NddblTwetbcY/DxovbFhQ9Yh5XBHtu8
u+IXsuYYbRUyIX2XRUZms9b3gaeMVcoLiaL8KbDZxBUOXw5R/mLY+sUky4jz
lP8z/CjA3CRdhrXrxm1CZkeqbMTMHax5ybDuQ8+dZkMorxCuOScRErCU8g73
EzLXZjzPcLxM9UyAi4usLMNV2Xo33oIT68Ni9KxZc1rg839q/55awVpfwV/I
SE8tmbL4ImtfXXjq8WGbcpNYSxTCDnI/ekwErDWb4WVDPC+PC2HtOni7kOls
ONH2ahtrng7cb+eMSxMMWfPd4arcU2Nn3KV+eAenOt+8/YnD9kvYoAAho6Vj
y1dcyjp3LqzraGCVbcy60RXONBsd/leZNScG/mep6pOziv156QMChczrZVoN
/nGsBbPhL/kvy46XUX5n+IZX6IfKSMq/H+bcGrpZroryX4F7bLukV/Vn3a65
Q8gUyuxy+CzFWtUBziyZeVN7J/XDXvj4rm3uJw2pHy7BW++tLU+bQPV/Dnu+
r75Q6Uj9sCpIyEx/Ubq4yJr6IQKWe3cqy+fSZzZ/NlzXfJm7W4a14Bl8S8Xo
q9zpVjZ/n2Ah4/3nUsGLRta8UPiR5mvHtlbW/PNwsGb14/AJ7Pe3P4Uj8qWl
NN6xVv0Lh2p9NPEdQPmn7BQybbWJ3it/sZ83noEXTr3LKdelfn4Mb5Yp1HVb
Tfl7YO7ekytyNCj/xF1C5umClkb/tdTPlvCyJx9r+v+k/v0JS69y+TRZlvpB
LQTny5WWpxfu0vm3DF4k9dWsUpL6eTvcYrfMeMljNk/Yd7jTPm/K0Kesc8eG
YnzgX3TbnkR5l8J1ORMjJBVZc/zgQ1sk/phXsPXQT4OHFvV/6XlRxNZTOQz1
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
NrgqUei/YSXVe4k+xiN+AG+xA/XDPZg/YcOPI1uonq36Yv3hqsiImIHGl4uF
//WzPhx/hn/3Du0/5G9gxNYPuJ/gASmjzQSXqJ5DDTDe9tn0IukC5V1kIHZ8
Gr3gjRNWe0+j84sTD1vvfmaa4Un9wFkidnwFC2BZGe2Pj+Mpv+cSsfUFzdgl
Yuev6w241/sz7fMMxcYf1TXwtukpzZmrKf8BeL5M05odUpQ/H/6o/KKrTIvO
LxcjzIfsJkkEuVA9o+BfiSkdQ2i9LP2qkVj/CF7DJelHTt+6Rsd7nzHOr0lb
Kk7SfJOfC/daf2t/AdcozE7dFUr5pEwwHp4ZYjwyjPLNNBGrb+NFuNf+f049
3Gv9TV/SFP/epoar1vNp/WE6bLpj1yqdRzSerYSrMqvijobS+f8P1jUNuhbm
S8d76lJR7/eR+NZwmme6zot9NH7tWip2vMJ+w/HTs/dHJdD5P8lM7HrZyIW9
+kZy9/Bovh4MS6ZUv/4ST+s7p+HszpEf/36n83+8Oa5fMibR+ZV0/i83F7sf
1QyEe71f4XoSLvCO9lvnQ/cbVfCLLfdG1/vR+xfmy0SMMFtgMMKC7jf8YdeC
O962W+j+7QScmNL30sRqul+qgMc4zsy5L0frJ51wr/cZ049ZiN2/CMrgmvTB
vg30/pNEByxS+tQwUpPuj0YvFzHnQl8abTWm+7cUuEvZ6l7LLLp/K4Yva+fq
SLvR/dsXOC98yRQDep+TO9JSxKhuMOILN1NeA7gtrf/x2v50/3YXfjdj/5h+
9P6evgiOme6sfG473S8P54p6v3+VvhgOyEtTc2qk+cN6eMIYCT1eJtWzBc5q
lqx9mUj1VLDC+Tj3+iCOHOXXhY92rDliUUfrEWvhXu9/qcbBrxS9Ilcvpfu3
wStEjPmy33KL7eh+XgeWGSDR8WY1zW884Mxddx/tdqP3dQ6tEFv/8C2Ae71v
KDHPGte/2Eie9xzqBzf4jNrahdJzKX8MLMps0A4toPzX4OP+EbayubR+5myD
8Xv+7YZRN+h+cz9sPeDeYG9pOv5XbMS+vvEVLGh2f58hpLwytqLe7/+l74Xv
urwyHM6hfrgElz3wcssMp/vlF7Cmc/PvwOnUD/1WYryKdLjxrIjul2esFFuv
ac9eKXb/rVoHmwqqnZWGUj/0sRNb7wibBtcfnV8/R4ry28LfHt16mm1G/VAD
O0TKzgmZSffzf+Htg3/lvxhI+aeswnggWrDT/Cj1wwq4sGCMe+ZKqvcuuHxK
2jv/hVTPHthB/5hZ9TC6n59oL2JyA+ZnFj6k8cES9vjuq+c2k/ohCA7wH2ds
SMebmwlPtDkwaEgy1VdttYjxneHZdlmN6msBhxS9PvYsjvohAGb4x5/1r6Z+
yIDT+ySouoyh/JWwwlD7t8Yd1A9mDiJmSuOxOs++VF8/2Lnm+PibirSekgYv
67M7qcOG+rkcjiqbe1BvCtX/q4PY8Qvb4ijq/T5bbio8rt7JqdWK1lNK4eN6
P/ZF3ab87XBJts9sqy7Kr+SE8eSN9vekPtQfR+AvXjsf2oyg/iiGpy6/5uf1
gfJ/dhLrd9cRzhivdhjE6v73/hnjLL4eLIT/TuDprmmifh7mgvndqXo3/0GU
Vw/u9f554zo4yDS9Z+k76oeP8KyaL2cVMqmeQ1wxP9Bk9ky/SnkXwqrn7x3r
+53yroU5Iclx34xoPZgHqw/UkL0SSOtp8m4YH7vXLn2QSe8jz4d/TXI09rlA
62nu8MA4qRmHG2l99SBsoPH9d6Y0vU993U1svZgzd42I8ezwzC0xofe9XeHv
occ9/nZQ/mjY4NKvJdt+Uf68NWLr3YI38PaqLcsmptH70k7uov/2H9D6cCR8
M2RjzEE3Wh++DA9c7/9jsTatD7+EHz5MtQg3p/VhaQ/Rf8/D6f3uHHiZ5hKP
4FZ6v/s5fGOfU8rEH7Se3ddTxJTuLw3+3kXr2Rpwk+wbz3MTOth6ZsN3IuOi
5ehzzWfw2RMndj05QuvrEmsxPp2I/eohoLzqsMs5SeeyCMprs1Zs/Zv7FM4u
d8cMgur5B/6636/r2AZ6P32yl4i5VflvR4Up5beC33W28z9QPTg74UO2Jtb7
nWm9/df/Py/y+OppT+vtE9aJmP1jIhPGbqT1dkv4vLV+WMgVyr8DXjy2QRh+
mvKfgmUXvJhjV0f1HLcex2vOB9lFqVTPZfCyKStWNtlR/u1wN1/7upQT5U+H
L9a5LFoYQ/kfwLSfhOq7dAPGf96pD+esqb7b4PeSn+04PMp/HJ77u8O+9Szl
vw+PvOypd/O//F/hNY6nXLceo/r6emO8UhLd8VpP9T0Kr9dYOcjbkfKXwDc4
Nl9iQih/G2xz5mjwjzDKP2qjiPl9wW2/1jqq72HYyl7m4M0Uqu89+FNVYlDA
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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwt2nlcTOsDBvA2isjgyk4REpEtZZ0TsoUQEjKULNFil6UsbZSKUoo2yVqS
NllKRBKyk7RJaiZKC8p2H/O4f/zu/X5OM/PMc97zvu8589Ne6ThvlZKCgkKV
ioLC33/jH39zB6nA/6ydiP/RegwfTVx1uXN5zV+bN8EtNaThxafkduvrKBUK
+9xZ5h8gd8Is+PeU2KBzh+Qu2QbbVe2sjzwtt9NXuLd+30n1vnJHajlJhdBr
zxaOOSx3/gz4d/r0zwNj5FbYAge2iflmfF9ugwh4XrJ/27RW8nyZPZ2lQj+X
I9XTu8tdOxXOHbLGeHQH5t8IbxyQmDdHU27zE3DrukdDjX4w/134rPq4fT9e
yC2aslEq2Ki/2252RW6xIzy384Eht5OZ/zjcwjfjtqiU+W/D1oqhNSc+MP8n
ePLxDxqVivLPk6zfhONLGu3G6Mjtfww+0dwusU0P5pXCJXeURrbWZt5Om6XC
o/7ZF9b0lzvhKHx0ck2v9+PkLrkBF828Nnu0odyiSri1n1GrvSPlFnfYIhU+
G6t9vWoit9M42Fspsnq8tdwK1+BXzpkDglbLbfABblTX/bl6BfO22yoVokNS
yjc6MK8xbNa/oGCSHfu2gW3P1BgecmafZbD3sLTg87Rbm21SYfDdc1WrXJjf
EJYuOxDttoP5JXBLT9twbXfmPwSXuVhPOLpN7shW26XCYYXi2KD9cuePgHft
FOISDzC/Nbx/b7fV4vXM7wWb5t7zt2BeSSLsPypJf/1a9muwQyp8C3zS3YnH
tZbA5/s2hzgsZn53uLxz8KLFs5n/EmxfWF8/ehrzv4F/Bb/oGG3Ffi1dpELP
6CvJexay331wTOdTlx4MZv6Lf4+HfJU8VmX+l/DmwZ2Tl/F6UlDcKRVGvbr6
8FJH9usKvzT81WkVx2fmOXjT+IdvQ3sz/zO4KWSOhaEZ8/+GOxZ3tBo0hfl1
d+H7jZiTOoz5S2LhIyaGBnt4vkVP4Iq89aGBq5j/B2x1/JjO6GXM3283Pl9/
5Hhffr/IObB+/aUIax/2+R3e97H904V+zNtnj1ToOiEpb/Ru5jWDPdunr9zM
8127Fdby8To6h+fbrRGuizX52pLnK6G3K44rzPUJ53grmQ67v9XQcZzJvJvh
2NHjCyr/9R0Odza4MGq9Fvvs4SYV3j3cPWrHMPY5FVbtm6WtO5bjwRl+oSm6
+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
8M2K864POb7FFfCfoUquFyYyvygD43OB9MslPh9Q8IOnbrGN0Rc4nq/CWX8k
ee/5fELyHq7KU7rZkvONf9tMXH/Z7t+juJ/JHA2Pvd3UPZ3Xu3kK/DLiXPiM
f+O5BNbv+njdv/u/hNa3cD/Xq5cgcD4tGQkHaFzdHsD1Q7QcdlQzdzj9kP2+
g39tfnou/jr7Vc3CfnpFpuzHB+YfDhteVtX3L2H+pXBgqyNtP/K4xAO2Hjb4
TBzX51qV2xivgY8Df9ex36FwrMuMCc9+Mv9iuHrE/m4vKph/P/y+pP/9Ldw/
JMTBky8puqk/YL+D70gF8xCdmZYv2e9COLnHzbBB3E9FusHXX5Snq3A9zD8P
/8wt7Tf3DPO/gH3u51fuDGa/87OxnvUrbAjkepS5O/vv/sYq2ZfHa8/Al63f
Fs/i/kzrKZw/OUDd5hnz/4TtRrxP31TGfl3uYv9zXLM5rZz9nob905p997Bf
8WNYo2Gg6foTzN/01wEHoo//y9/3HvYzbQqaxFzvDaLhuNnKOfvesd88OFMt
aW/Xaub/ChvmCp56MuadkYP7sYwa00M87nYfbr1hnVSJ+4mEeting1nRD/ZX
0vM+xn/e8SWqN5h3GmxhO0PHL555N8K60vxRl56zz1p43YZXGv7cbyp0z8V4
679wd9VH5p0CW+u+SR7H/aXEERb9jlU8fZZ5j8Oabps7dUxgn10eYD++IlUv
9hb7NIEX3+viu+Ma86+Hw6w/ac/j+Eo4BrdZO0/vI8dHSSb8plPijWoed5qY
JxW2tKn54PSJfa6FiwPfPf1Pyrw34WXRU8sfsh+DSvi/vLGJrfn6TLuHuN8f
OuCQwhf26Q9PSF73oDP3e+Yf4H0GuQu/vWW+do8wH4zYdLQj+xUdhvskJJ1+
xePiNDilq7DkHMe/UxksdMx+9LqB+do8lgqjPt66Xs/9Yr4h/Dq8wbdtH+5/
k+Fu2W0c+qty/1sMi1fNvX61q9yZrfKlwpeSFgcDB8ldOwJubWPe334k95fW
8OQxuR4rhstd0vIJ1guHM10zxXKLhsEuOf0X59DiJfBuJx/zRhO5ndzhZndb
CxuR3AoqT3E/eTbK6Tb7MBgC979bHjKoJfNawrkrLPJVuL/33wef7Jx05nUn
5r0Ii6N1JyzpILf5oGdSIbj925HrK9nnArifRo+73TgfJLjCEwLyWvzi9V9y
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
sE7vPb82HJZbrLwK+6tuVmZ3feV20oernv5KMnnNPi/C4t1hD/c+Zp8v/3rU
S52H1+WWKNhhPhOGFKa8lNtfD/4asm39pkw+v7SAlwa87TT0lNzmz2CzPmqh
qmfldvsFH/OL/OZwRe6EAatlwo92w2Nrk5h/Lrz0Zu4VE/69aBdcfMt9UUSW
3JHNcH/vyDUKqXLn66zB/cbVtnN63GH+OfDc2XoZ494z/w54eGZP+56lzH/q
7/EB73/1U/oq71N7rUyIGPRLtK6YfZrBMRv35+3/l38rrHTk7K3SROaPhI37
/j6o/oj5c+HK+O5Wk/LY7/R1WB/TRqQ/oJ02wVm21Wd6fWb+k3D/Rg+jjBrm
vwdXJ+16GcW8CnVwv4C+WRrf2a+TPebPSTsNF8rYb6j93/XpXGFhPp8P34EX
fLg00qyC+Wvg17r78xzqmL/renzeRU11DX7/kmDYZVfTo1vN7DcLLtMNafjV
Ut6HuBq+G7/peDU/z0lzA9aDms45je+YXwyLUyb5vMllvxmwjvKjvnnK8tdL
quAZZivbGTYwf0cH3J8+dS0/WcX84+HBNXci9rGP2tVwmeHDFWd4PEHkiPn/
bk7xaOYpGQP3yVC4+7uV3KJV8PUF259lc7yK/eDRAb+uLp/DPts64f5S81aq
uhv7NIIdtHs/ELow70rY8NoKu8F8Hi/xgf3GXXx3dzjzpsDrgifcqRnDPkc5
y4SO1wzrigzZ53J4Ve7ko335927e8NfVRx+UOjH/FdjjYK6uJsdPyTt4tm5Z
9Dgf9rl0I+YvpRkJKa7s0wP+am8fFXiO+RPgP+3iT81LYf63cNCTnBl7TzJ/
i03YX2471ntvJPvcD5u0CdkXxOu5Ng5+P2v4aTUr5n8Nf1ilpjyPNlfajPlv
QfdWrdiX22BYaXhzi0ECx8MFWLl1W7UjYvb7AlYb//Pgz7bM/+fv8Uw3Vel/
zD9wi0zwtGoyXt2B+efDx0JdP27kfCt5CrfRuzFat4Hz20/4ld9bb30N5u+/
VSakXTboqMXfN2rN4cxH6WfP8f21dsL6Z08kj+rGfpvguPobJpO02W/fbTJh
2ErfFgc0mX82/GHE+MTtnC/F2+Hf325ZrnrC+TkaNvCuezsqg+ud9naZ8KL7
UNMS/j5iMBN2WdkY04fzt2QLHNJlst9N/n7mHwEP/X4vK82b8/N9eJd3RlcD
/t5kPm0H9jPGufdcnnH92AhP6GwQUsHfExJOwAunDDW6wN83S+7Co+ouTHHY
xPXlC/y65KDV+NVcPxxdsB8vcg2ab8f14zi8R8P+zTpf5r8DmyV2qQ/n5xt8
hrs0l3cu5nos6bIT+y3Fu5XjuP+qPQbvEn1dFRbJ9e8WrDVr6rRjZ5hfBrvs
MNxWGsO8E3dhvQvbNeAPfx8U34Rjs6U3fRLZZyV8xPtO81euf5EdduN6Xz/N
bDXX//xx8OW6uf+Vcz+hsBreqKJ4PmcH+/wAL83VcKng77eZ7fYgn/o0z3vM
V2sMSwwSl6mXMq8tbNdYqNI9n3kPw/o9Li51ucs+27jKhJ2PM6YPusk+R8PD
LxpGruT6Ll4Bv97Xq/z3ZuY/BG912vo4jHkjk+EOrxqiXLzY50g3meB6vFOP
LhfYpzWs1jh/157jzO8FHx59qW4Y1/PMRFgpPDXlHfuvLYTfG0bIDvL7Jbjv
lQkJ5ZPjVnO9L7kEG70ImZ7LzxMV/D3+cHHLdB/mVdknE3IGbV9/jPsthTi4
9FPZWB3+/mvwCt5x8GBlGn9vlSjulwlbBs555v6F+QbB47xXCKIP7O88vN7w
5eU9/H3Z/DmcMPNo39Yyjtfff19//JNFsgKvN90DMuHlwYNFLWuYdx68f3Vq
1R/+feQPuNPPQVfm1fN893PHeudVIDrCvhXM4YZvI7ab8PdbAxc4IUK2SCmX
fX2HbSo+TZrH399r+3hgfzjHfVan98w7C7Yw/Ri/lzbfBjf26Oed8pF5o+Cl
O4e2aaJFWp5Yjwy/aN7n7/3iGfBzu7cNnbifdNoM32640rqWfUWGw4pX1075
+pD5c+D2ow6NtmZfkqleWI8l/i3bsy9/Z3je+M9Wv/j/B8gMg9ct6u7YVYvz
VzZsP3HCkrG9OX/VwtYZyxQfGbBPB2+M/xcxqnWjOH+FwI1K5pumjuT8dRs+
9qv4ldIEzr+f4J8O39L3mnL+7XwQ+w3dP9GPLbkeZMKHrSZcf7CG65kUHt3W
c5nNWq5n/x3CeD583jnFnvPtBPhQq44B8w9xPbgB242yatXsyfXgI/x7r8rS
4QeYt70Pxp9zL6t4P+YdC9vmHCwz4nonsoP7flcZfnUb14NyuMNVl1KrpVwP
NHxlwiOxyFd9JtczY1g3oVipZhjz28AHopa07KbD/L5wc1JuQI0R+1Q/LBO8
omLEdvrs0xD+7JXd25m/l5tL4Li5oxMD+H3dDv49HrD4wBn2k5AEt5ozbu5+
W/Y5wg/3K5u36Vrx752WwfctY+xOmjC/J+ycVLt52TTmvwy/795t5Q+ujwqF
8Im2gT8KxrJfK3+ZcHaXTg8Nvj7zAPzo7ZFTv2Yzfzy8pmTYgUwb5n8Dh2ds
PFNtzfzKATJhTi8dH1WuzyV74YEdzjeeXM1+L8ILon+5KvPvxS/hkw1NMzdb
ML/CEdwftFCKWrCE+fXgBQOfvT7Mzzc4B9uO/Dylzwr2+wy2uClsiOL9gf8v
WNausyzFkfkHHMX7Sf0uXOH7ueXDSlFDs4by/CY0wxJXyxPLuJ8p0QmUCVba
ydbmu5l3DmwyaYqtdSDz7oC3bsrxWOHBPr/BrQPGrzGOYZ99gmTCYsuJHpon
mNcMfn7d2ryB+3/JVtg15unUsDjmjYSbn6TtNIlin72P4XpbrDR+YSj7nA7f
9D7a9gr3X26b4ONJp6fkRjP/Sfh8evLPpGDmvwdr329aGhfPPk2DsT/M6DU0
K4x9OsEWGXq79/H980NhB/vVgiyC+bPhwBiZSag/89fAk8oc773g6zM3hGC9
rDyicJr7u9pg2Lan0U6lS8yfBWdqKv2M+3c9VsN+7k+2v+N+z03zuEwo76kx
K533V6Ig+Oms9dLwh+w3Aw65aKQ3j/c/TlVwdH3gRuM3zN8xVCYU9cm7lcX9
df54uOulCmEK99/+FfBNnW3XLn5lXlEY5v/wKsNTvxsn/g/+QaJp
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.8919207850181947`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.8919207850181947`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"VTI\"", "\"EDV\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3746673722288538`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.12304449224936241`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "11.172116257288039`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 
   3.705314944965003*^9},ExpressionUUID->"8fce0729-e724-486a-9cf7-\
ecdfc5880e19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
giFpeJ6uTVX6tZDyzkvj3J86HvAb77QOnQfsn89sgeVnzysal8y6Xisd1/90
t6cbO1mrzIFb3B9s/BHN2sodfp4gNzhaju6/43CR/f6YBCn7dZ7mRTGzrvTT
6I/FrI1nwg0j9dakPWMt2A5vtOo2cngIa2EcPN1Xa2GwKuUvgk9NCmznnRCz
9WQu4Xlnoj117hXWAVthuc9Xd9jsYp15FP7UkpjFP8+6/jb8Pig4V/UraxUx
vPDEcEtTLfb7izZniJlebgrJfE3WpdHw/UG1m8VqlP8mPGGfXupYOcqrmonr
3/VfW4ga+/2kkXDS+VMtlstZ61yDNxf8ixq1ivJ+gP3c4gYKRlJepSzMd2f9
XPbVi/KawVcLTofOcmdtlQ9XDdZZPuAoa7e3sMubD3l26axFvbPx8+8W6X2h
n790Ajw28vXcHetZY8GL9deaV49nP2MtrIOjzNZW2FaxLuiRg35qZc67XKf8
JvB2d5+fOU6UfxXcmD79mPE6yh8Kl0Zqj089SPXslovxj/dqRDd7qqcx/P6A
+dlAO8pvD18ZE5/XxY3yB8NXHRzmfq/9wua/BJv97IitHc5+3XjsZVyPabFN
ti3s1wV28Kpzg7VKu1H+QFhh4tpRnpMofxpst8J7w6V5lP8lLNgVsGKVLdXX
Ng8/30y/vf4jqL574OHHYz/l3WO/f/0F2NBDq+VuCWuVMvjdWO13YV6srf7A
1vmvtnxZw7p0V76Yea1kdtNenzXvHBx2yq/43wrWxqXwQb+ojt+qlP8n3GVz
bq2dDWuh3hU8r6ZrPrwaz1rnDFz7xtNg0zXW/KfwertjwfZ9KP93ePzwo/aL
K9mvZ+peFTNDPX+/0FCk+i+AHfpqLIjoSv3QBu8+bZ9mc5TyDr6G+dIwteA3
+ynvPHht1vfqAgPKuxP+kzfF4+kC1gXN8N57bbebrVlLB13H86jKvSRbl/LO
houL45ze2VNeN7goZKCB+lLWAQlw3I7fw823Uj0H3hAz2VnHSmotqZ4z4Pp4
ddU5nqzdtt3gXA/RMTjYcNXTglOUvxBO+lFRzC+kelrdFDO9z+0ZkdtM9XSG
563be8fOnPrhCPwyhpE3mEP9cAt28RN599Sgfv5yk3P/ZW66hfXNvD2GSwdT
PaPg57fe3Dv5g/LfgDU/dmamyVM/f/zf1z0cX//+TvlVbqNfwwZWtVO/8iJh
p0TNbb/o+hlfhZOfminUKbMWvIe9G67e21lD+fsUiJmC5XbxQxuo/pPgvaPN
/1m+p/rmwUumX7v58iLVtx5+evqnyDWF+qFXoZixfRqnWvSL+nk8PPeZT4ua
Gd2Pa+DyebcGhs+m/ngNB10eYDNmHI0XCkUY300sHNpovOSZwAPlriusjKX8
jtyvC/YXccYjadc7WN+vdmiv8Kf6GsELztQYntlP48VKeHOvfX7FNP4F7IMn
lDsGTXOh+l+Ez621rBqiSvUdcxfXy1g7cvMAGi+Ww5se5AbGP6D+CIBTQ6sb
bxZTf6Te5Vwf3ktYONa/0WUd1dfmnpj5VZV1TTyP6usPL8uuvNZ/M/X3eXhU
79wP7Xupv1/AT3q3lYy9QPX/DWskn5oluEz19bvPGb9UkmGloKNLs1Kpv0tg
w3u2xS8nU390wt4TW04Gz6L8wx6IGYMvFqeqAun+S4J3Lassyj5C/f0E5v+Y
+HI8XW9hB6xgoT6wIZHyzn+I67tlfM6DM9QPj2BFZvKnDauoH1ofcu6veu1H
mG+7aMSqTKK8c+HjcbGTK/Uo7w54Yq/yLkkzqJ5S+E7JiX75dD/zBhUj7+lr
lyf9l3dWMWd8ELjCqUOPXnSdSHnj4Vl1y9a8Wkb11HgsZtxDfCf8tKB6Tn/M
GT8CXOCxu56/HU/1yoyFN6e3jm40pfwF8K3HPrMmHqN6Wj7BevTgqntDd1A9
tzzhfH/eLXie9U5HTRXK+xme7NfMe/vnM3v9Nz7FfDOk2rJuFNVTCO+erO7S
TY7yNcBPpSa+Af0pn/IzjlUi4A89xyvtN6L6XXnGGd/c3sFn9OMdZxpSPsUS
MdM1e9K9HzT+l06E75/9u3gmXU/BZThpun1OM41vwjclnOtb0LMU9yu/rF/d
CcprCm92uL701UOq72o44JZlaeAHqlf357gfO9Xzwr5Q3nHwxC5D+ptUU14H
WKHxtVX5RLq/Qp5znu+8ri8w/sYkKiqb0v1vCEcdiL+0YQbd/yvgwsVJKdl+
9DwOgjM/DfSftInG33S4svzENq8jdP8blImZxUW3bZ6/pPt/Gfx8mF63xkN0
/++Fj6cnJfa3pvE3pYwzPqmUl3HyipaWc573pbvhyxKLBVeGUv7zcJXrCsOR
PMr/vJwzvxD8gnd1PS1OHEXj1dmXqLfG75o8Gi/5z2CpluCIqxbl/fGS87zN
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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTP8aB/CxL5ERsjMk0WZkLdIcspMppAgTobI0oqKoqUQlGkUpZCQl
wlB2akQpwliSVIySaqYyUWS/zz3PP7/n/nHvfb/OmPmc5zzf7/l+z2nYGi+H
dW05HE5dew7n//8L/5EKt6gZ/L9aG/gv3jPwt7SCNYcGshb+AGsKB0UYLWEt
MfBSMwWKxSfLUlnLF4Ljfd5Xdz/FWuUHTpmT5xSczFr8DVzS/6LdvP2sZTyx
mhnjtHqE3xXWynngO9sq3deGs+b4iMnn+SfBXTRxtr22s1YM3qpmzOsSHrqv
YK2dDe4zuXPA/hjM7w1ec+mO45RAzH8cfN7QjqfxwPz54MjkH96JJ1lzZ3qr
mc2dmr+mr2Et8PImvydOAN9sHRe7aiPmvw9ePV43eKIr5m8Az99zcpbzUdai
TdvUzMukfztmbmEtjQN/rI+9dzcK86rB+tm7ru/1wbx9tquZjPO5Lp8WYD1j
wTuqTz7pZYz1vAseMsz/tmYo5q0Ftwu4WNx+MObV8yHXTzwVbP9lzeWszljP
22D3wZJ7cY2f2XpWg69HbJko7I15e/iqmXPXwu+X62FeS19y/RVrwYmN7tdX
l7D/XlgJ/ie1Ot10lrWkm5+auXxO4TluPWv5RLDJpvwG+TLWKhH4ke3pEoPT
rLn7/cjvy7rsIPmU48B/9tgb/6pkzVkFHpj6uPpTW+yHcLDSihNqVsEeF10B
x+zfmPnTFOvL36lmwm6ECfaZYH1XgB1cR+neX439ELaT1F9yCWw1UeevaifW
v3Qn7Qcnf3L9xSHgKwPPP24+jfkzwPeqHpVsfY/98BrcbvfL0uvtmtj8bQLU
zES7O88k9VjfIHD1CuchRVVY33SwxcvuPwOeYf6X4MJZBWWvIzD/X7DZWsP9
m3dg/lG71MycLk3iJQHYH6lg/7el6we7YX88B/P0s5a0OGP+X7tofsPdaqaj
uHaL7jLMv2g36SdRK9jo69RBq4dh3uGBaubB6/ebCiww74JAUj+tbyAZr5IW
sDgkufBiENZzaJCacVoWdrMoAfPOBfczm977SBHm3Q7O4la7/a3AvEng80bb
RiQJ2fopB0nUTL39tcLiwVjP2eAhBidzkjqy5m+VkPqKjknI9ZDmgQMfLEzg
v8F62garmXUp3z7b3sB6bgkm41NyNJj0izw3mMwnqnrw0vLXVQ93YT03hqiZ
/Mf9O77YhPU8Am60fbzKdCv2Qw74w9ZqzQ0vHI/qENI//N6h5PwVMeCpJjPj
1ZlY3zvgRO2B23rZmL8mlMxfwp571MzupeFThwdj/ingoVKbfj99sb639pC8
go97yPmLdcPUTHlE3F2nSsw/GZwZKR7V7hfmXwO+fGRi9A8F1vcDOCp+XLeU
Uqyvzl6SRzEB3CY8QXCxEPOv3kuuBy8S7Dp6zgDBMcy3ch+Z/wX7wLue9eIY
JWG+y/vI/QUmADWz12j+iSMhWL/l4P6Z14TSS5hvTzi5ftKL4aSfFW/CSb8L
l0WomafmfbtO6ov1CwbPGLp7GtMJr//5CDL/qIojyPzK5USqmWju3YqWHli/
QPBKm1c1pkZYv7PgW4FnnznbYf6XkeR+KjLaT8aj9gxYdCvk7lhbrJcSfK3d
zx9LxmLen+Afw/0mx03GvCOi1Mzz9Lz3U8ZjXjvwzN7XS+YxWM8n4LYtlgld
rLCe38HTEzq3nTUC8w47QKycf4DUh+N7gHyftPkAyaMYcpDcv7RzDpLxz9t2
kMxXwhNg24PTjy1ahfUcGE37YRb404cnyx/mY34xeN5f466rrmL+xGjSv7IH
4FNP9EN3hWE/zJCqmV+Hph5Jica88VLSL4p7UjIetRpwrxlPPwQ7YT09D5H1
jSobnGb9rymyHPPVgcNunbO10mPnH0GvGOivFleeXmecrw6Bv6U3rLdti/PV
HfBXc5tDNtWY71MMna+4sdA/epUfzn7DvFZgQ86ofZ2fYv1ugrc2bRh59zXW
ryqWjC9J98NqxtuvfM2Nm3j9J4E5bQ3bZ37C/K6HyedlXY+omaB5ucUmt/F6
jweX6tbWLM7D670a7D70TN7cYswbAV7J/NC8786ej6JTnJppMdhpPHcoa+1Y
8MPFmbMkE1nzXMAdvbtvu2fNWrgXPFO/vOyPEWuJHGw1md/2sIg1d0y8mllc
d89u62ispzP4SMgj4fWFrMWhYI+DnsOdTFnLLoBPvm3TaGiB9S4BG4u53/QN
WYscj6qZwSeMQ08bsJZKwIc6DQq4wsf858AvZSN2ty7B/K/Avq7CI4/NMP8/
sNLQN+3rJNaqtASSh/sCbK7JfjxwOub9DZ4845t75EjMOzKR/D7nTCK53/Gf
JZJ+EP0AL/jqdnrDZ7z+BsdgvjmrrUuow35dCF6xIMfh9Uu8/kXHyL+XfANv
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
Znv8
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
HvEdxutxHg+rmnnWesu+FWvhqiCJx2SOK0/DI7/XvvaX/aifwr5TTZc2Z165
V5xWaLFgVKPsUPYZCq/+GjLuZhjzn4SH2U54acW+9blwRk/z7N8cl/yF89ed
arCE1hzbpRW2Nl41XsT5Ln4EL9js0daX99P5N/xZuVwhXc28neP/7/yiI7B7
XZ15rYXs8wF86fjFwL+LmbcSvuP126kLHWW+G8+nxadOgwKZdyRcJ/5D7C1/
9pkFzx06evDU2eyzHD7cfHNBz3m8/5I9+H6762x0i+fTDIPNrhj/O2I58wfC
7s2DDFyYT/kd3txlz8ZJIeyz3V48T/Wbt1zH7UVD4W6ej61a8/mQLoR9lt93
37uS+ffAkb2OOz1cxj5b79MK+7Ico00Xsc/BsHfp2oC/Nfnnw9J+04cNWsD8
u+Ci/kef5HJclQYbn9dU1Fyvs8t+rZBc2WJPCq9XMRc2MbeQZ9HKnbDPwvI9
q6YzfwosmnRj4YtZ7HO2Uiu0/Vrpm+vNPrfBxSlOt7tMZN7r8JSdvpfyRjPv
Rzin15z0DqOYt+kBrF97Zpe/Gsw+o2Bv6/YbhKHsMxkOnW1vGeHKvO/gJZFV
91uNZN4mB/G9EXpKun848zrC/eZ7Rce4sM/LcN717i/indhnIez+23BMIsej
Gh7C75tGJ2TbnJm/N9zt0cW04QLzy+EJ5h4DPg9gn6/hszFx59y5veqfw1oh
VvGPJp/H19jBQzSWvgpaPAVu5/bx9REez3kDfKP8TsmJf9lnnSP4/vund5dg
bi/qAV+bVvRyDMelE+Eihy65CT2Zfx0cFTt+wyI75j8Ly5vcXaJ1YL82R7XC
zZbq56b92K83PME5pfBLH+ZfA9e7fd7DgOOqBNjRZvhLf1qTB1s0a9rhFfMo
xh7D9/37LxtvML8yBK4ySe/s58b8J+Aru7K2VnFclAvHX9p0Lqs/81fBDVst
8pswkP0GH8f688X3sDutPwoXCq5JT9mv5CF8x7Eo5hzvt+wX/D7DKTaNxw/t
dEIrjBHnZ7zl/s458PbJTbIsxzJvBRz0PO/cV3fm7XgS/Z02apNPq0fAxjfH
yAzHsM/7sMfWtQ9cBrHPMji92baK05x/KR1O4ffA9C1Nm/J+6N1gK4efn27T
ksVw2OVTW0fw+KpvsIWqz+NhnJ+atglYn+tc0u3h8cWu8N5a7lEqT+ZfAG94
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
OHHU35Km7DtFvBv31+FBpiHu1/8A50R1mA==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0.6955366487282654}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0.7190931479360704, 
        1.1902231320921717`}}, PlotRangeClipping -> True, ImagePadding -> All,
        DisplayFunction -> Identity, AspectRatio -> 
       NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0.6955366487282654}, 
       BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
       Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0.7190931479360704, 
        1.1902231320921717`}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"TLT\"", "\"TBF\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.8786634408113665`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03816070605036626`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "23.025345486314272`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.687615833418994*^9, 3.6876158524318953`*^9}, 
   3.687615921773959*^9, 3.6876165394318285`*^9, 3.687720896530587*^9, 
   3.6877217386603785`*^9, 3.687722162469653*^9, 3.687722978435768*^9, 
   3.6877235769144897`*^9, 3.695714568883484*^9, 3.6957281372588663`*^9, 
   3.6962339241803055`*^9, 3.696760738858155*^9, 3.6967614759983745`*^9, 
   3.696761549389127*^9, 3.696761745976468*^9, 3.6967619332326574`*^9, 
   3.6967620772883496`*^9, 3.6984977495816016`*^9, 3.6984978175739803`*^9, 
   3.7020194355299563`*^9, 3.7046909929956284`*^9, 3.705041419913451*^9, 
   3.7052520316130114`*^9, 3.705314804564131*^9, 
   3.7053149475645857`*^9},ExpressionUUID->"fdaeb33a-587b-4373-aa11-\
5cf8c76cd464"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<IWM\>\"", ",", "\"\<RWM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6877208799567623`*^9, 
  3.6877208858208823`*^9}},ExpressionUUID->"4277d921-c313-41ad-9dbe-\
20988045f588"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
BMzxgH4ylRNZc+bBfqWhztUM69gH8PcyZ6tfyqyLO+At+R0tCuvo+Ku+FjDv
c2sfh/vT8beBB4yRaTLfQfkD4NFpRzaX81g3fIMTVd2cj29nrTCiBvO3Y5n5
ezfqh1mwbeJ6520elH8DXJF47egKdcqfWCPSf0bKtZg/njcvqc1k7c7AhwzD
gk/7Uf51cKjD1UuZCyj/sVqRvG234ZEz1fp3WrDmWdTh9eXH9XfWZc33gdPj
RvbfZk35j8A3SiK3ZVA9FArhGbqpCYaylL8Z7g2Xlpk9luq7+o2A2b/Ixbxm
OdU3FhYmF17cRvUwugFfzbIwP3mU8jfCxiZPHp8+QPnl3uJ4KW1zdp5N9T0I
f8uX+LK7H9X3Ghz2cZTu05GU/z2cXt742NuF8svWY/9Xu3P7k7e0HifDGton
tg/OpPWWD2ubRm6/R/MlpR7+EXN424A+6mfpdwKGE+e6ssCM8k+Ci+TSj0pT
nuI6uFe34uJTJ6qnZAP211ULzLs3U14j+HLcUvPPayivM/xbz8tZbhPljWgQ
6TeFfu9x/DrzLl1aSvUc/17kePkvg8ttzh1evYv6YScsoWJjLrOb6p0N21RO
1vTZRvXU+4DzeWL64c+RVM+lsEV2VHD4Isq/Az5TsTX4HOVtOw+LTdftN3MD
5X8B35ov3n9KMNVz0UcBk2fBj8m7RP0QCn/sO3hY6xrlz4Bdsns+rTxO+Stg
2a+WmtzVlP83LFfu7jyM8nFCGvH6EY8fj4qlfjgDS77bHjxyLeV/As/Q4l88
nkz5u+BqvyXT7bMpv9YnzIvkwM2JpVTPR/CHAE21Py2U9wfcPD8ne3cj5VVv
wvFyPr9/jMQvNu9c2DOsX4O8HOuUMjhYjdOgPJR1RTv8JaH83qfBrDmqzTjf
mVw6v0KdtdEc2Dy6MD11Dmt3f3hK/t0SZy/WbV9hxUgt5dtrWWsOb8F+1eFO
yap1rLkz4epUfeVzDqx5fnCokaPJgXGs+QnwSc+D+73NWFsN+4z5cjRrXwTD
2t8K3q31pOT+Ysq/Fr4TeCdtG4/yH4WrlIrSdu2l/LdhLbvD+6yCWMeaCwSM
Veq5dIfNrIu94RKOofJpe8p/WCCa/xas7HYxffYayt8Eu3YWlqwNZN3gJcR+
Jvvovmkbqb6H4L0ZV9KGJVH+AtgzWLFr22nK/xHuH+Y5P7SI6nngi4BxKv1V
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
5NNg1pqHlEXmG7cA9m/hhfmnUP6PsAznW+uWXOqHVSqYDxkTtS/2UT8cgNs6
PC1336P8V+Ekt9z4CRepnxvgb4UTdKrocfeo4UJml0nNE6aD5v9luCL1/ZMc
ms/Fb+GrblqSg2hetkmNEDL8opVmm4dQ3onw7aL4TR+nUT/w4aXRnx7tGUH9
UAs/bz8at5DqoSA5EuvHJdTReTb1gyG8kn9408aZrP2d4NnRF+KUqb6c1/D7
6xKSlROpnuKqQmaFdVzcCz3qBwP4ffuTR0XzqR8cYfp+D9WbB6+pNlddvp76
oQ9+o8yYTeNSP49TEzKLOAPF01ZT/iVw35zG5hdzKf922N7aeYVXf8p/Hp4U
aKBx2p76QVdd+O/7k9TPXHWR+nBC4cQBsi1dv2iepcNWn1se7VCi/M/gTs7D
rFW0XtoWaKA/tSZojKT3o7lVQ2Q9ctPgBflfmi2p3rxyWMWEI26xg/J3wqtr
K8sSIqm+WzRxfigsK8s9TvU9Dd+xUeoLTKT8D+GDqo/LzsVR/u+ws9tO/63n
KL+6Fs6ffg/L9BOonvdh+j4o5W2DRzmq9DUdpLwjtYVMclbAphl7KO9seHRj
5CZZOh4NpbCSVlbOQ1+q51d4WuSuTUr/5oPKKLye2kLT7s2U13qUyHxKWQ8/
MA8NsqZ5ZiSEi+0kWqSkqJ5DR+N6KfhQkCIdr1hLmKfyt/GXA+X3HS0yn9ri
YPvPWuJfaT3yFHWEzAHnyCC9kVRPM/i4c1FOkiXlXwMHLIrZFDyP8h+GzSpT
D26Jpfw34ciO6E3hi6ieprpCJs+mtqwfvR+OF9wUqN33dCvlj4E1Kg01Emwo
/3V4RFHNI+1JlP8DHPDxUFydMdXXY4yQOav08PKMf+fn/XAct7W1m+YV78oY
kXnIfwczwY6WZ97TPNg3Vsh8khkq/eApzYM8WJfjsWIp9WfFG3hEtNjXh/to
/UmNw/x1nKNz8ij1rzF8IdBCW5Fevzh3nMjxaKuB71Z+KVtG/aEpoSfSz9wJ
8Np8V0f1nVTv5bDclZF99dQvCq/gRMkRfauiqZ5i+rj+0/J2jN5I/aAPB0Qv
M11N/ZLiAN9olPm0wpzqHa4vcn3n/hfuK3jBl6DzZexYAyGT0rMzaKI29cNi
A5F50BYG0/efKf85A5Hjw9cZL2Sm2+qIN9H7bVgI26bGxz0eRfm3wT+dxCRr
TCn/Wfhuu8uKBnHK/3S86HxbMEFk3hgFw54qB4JGDKJ+SJ0gcj6PfQzrKV3j
PxhI+X/CHaENjxR1qL6bDUX6k3fKUGR+8B/AS1SbBQIxyt8BG3aYjG2k/YCC
mpGQKcpVH3I+j/Y/J+DdrT8++Z2n+xH3YPm4hKNj6X43pw02c9i3/zvdTzMa
YYzrkcdva3Ia6HptFjypMu90H7mtBD5QINsVnUP7z1bYu+VwzO822r8pTxQy
56JMTbiraf/JwKm5F9If+tL15jpYoffsfkNZ2q8NmYR5artx/rt0ymsBD9l5
cF34Irpe84GfPZ5o4r6J9ptx8HKH392Vh+h6bbAJ8vcuNN6+la7PZ8DRhafT
Ht2nvKvhTreF+qV/KG8sfFRl52qPb7RfvgFzvXavS6D7aw3TJuP4yQxRfreH
7p94wlElsfvdJtN+8yA8KnXy1GB9yn8N/p/7lynv4aPm7z/sUKJ6uk/B9Zq+
Vr9nW+n+ajQ8Lkyj35Iw2i/nw+tL1NV2fqH9cj0clCvGCeul/bL0VJzvVa+k
T15O9dwLl5Zs9lEto3peghfKv7vlTvezGurgn+3c+WM+Uf7+01DfqvBdF9Xp
+sII7qe/xDZCm+bFRTijs7Y6fiz1cw38P/dvjPqZIl/13tWL3lM/jIfp+9+0
HpfB9H1tun6rhl8WjJW95knzjTMd+xmLDy+8XWi+6cGzW6qqtSfRfFsKB6hd
jVen66OGHbCa7eU4qRaad3/gWocewY1XNO/GzBAy2vmMdccjyr8IdvIKdBo0
jOZzGBwvdzpuqiKtxwxY7sbAlk0/ad6NNhMyx3jGGkp0PddmD48rUhQ/sozm
RQg8OvtWjhpdz3DPwHPlj23yNqP1+MRM5HpJwc5cyEhlz7O0/E31DYJryg4G
xcvQvEiBjfK3hXjQfi/lkbnIfqLiB2xQN2+s0Vyad5sshP9+n0L1PQnbFbyt
eEn7m+IyeHbpFidJecrfDqeUXOfPor+nqWopZHz0PzyK0aJ5cRz+ED7D8uNw
mhd34dePtbSraX4qfIO9Oy/wG+j5/jOthExr6hKzA+OoniXwiRZ97SKaZ0Zf
rETOD+7DGOxnO1QkU6VpvlnBNu+41vaUv3gtTL+foHp+ZkTmKU/JWshM5Dc9
0aqmfjCHoxMtdXLSqB+8YUmXhJCTl2m+HYGvFM6zVTGheirMFDIz0m4kXVpK
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
LutihRPov5gZhhtH/7X8P3eFcGE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
xOw8cMlpv8GecZj/MVhiUx9lmIr5f4EbIt1FWvMx/7C78Hwau1P3jTMx9zBt
wUOw/cBVf1tcMX8rOGVt79tB9ph3RrmSGbp89LNoR6znPfCyP5JBw2dgPb+B
4xeH7DAJxryD78F4BKzLmRiCed3v0Xkj71HXl6vBTo058YUWWM9B95XMlSCX
uh2TMa8rWC/V0yQhHvOuAqd0fksK3ol599Lm9H+gZG63vnxZEYH1nAp2WpHg
KBVh/hXgkRPn8LkczL8HHNPb13ehGeaXgT07vM4rNbCeTg/h9/O99dy8T+9I
PcPBMpMPVXrVxKwb4OAay7D6MmLuR/Cdz33m3Cslli15RFktBl/Y4vehooCY
/x6sM0Hr4483xCL9CiWj7tq/jVdHzN4BTioo9HzVRMwrAsduF2YEVxAL68Hm
52PTre5jvp6P4fd56YIkw3Ji+Xhwpk79pKxiYsFFcCh30pHcTmJx7WMqv0xH
DvvBK8zLpGOY1xbsGbvie+NpYs4COXV9hdYTJXN6stzS8zLmHQt+v3RL1y5n
Me+8J9T9CbeAH5Rp+Kf64nhrPIX5p3mj/OJyHO8xT6n+Esx+So2fOPEp1R+y
AnDhtIz8mYtwvEc/g/lwuczGqBbHe9Yzav5JN4KjD5Vk5JbgeJ98RvUn+zn4
9euLW+9Y4vzxfU71hzwerLq6e8oNFY7/cXDqd67W3AYc/yfgmv2BW9weYr3b
n1PjzTn6QsmMKzcvX3YUx7/iBVVPURs46fDQ+zkniKWmL6n68w6BVXbnN17L
xHo+oC35QVtu8gr6RXvn86A4zDsDfDfMZt+d5Tj+5WDTkKWzhDtx/FvAh/ee
vfCEwfE3fk2ZMw3c0ua/ztEO868Gl/YdtkBnLPZDM32cPbBSyRyYOabd2xPz
u4DtnKfpLPXG/CvBPc6Zjfq2GfNng/1c9q0+nIH1NHoD/XqoImThIqwnA+5x
IvtYkRPmXw72atlq93425s8E+5cUncudjPlL3lDfJ5pSpWQ6dzWuWh+K9V1a
RR1X7AKLJ224ZRCJ+YvBTHVl5/EEzN9YReWRh75VMluVESn+E7C+YrD11wmP
8vtg/qtg74iTMfVdMf878COL57vddDG/XjXsr1d21Bi7Y323gysrWnqWirC+
l8FjYgakFYZj/rpqqt5S3RrY33+rPmByEPPb1dDrw4Uaqt8kNTXU/ci1a2H/
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

           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTOsfB/CxU2QkuxilxT72LcyxL8XY1xiJqGQkexiSNjKRfRtbWTPI
kiWjKEtlbJF1qCwzaGRLqN/n9pl/fvePe+/7dZqZz/me7/M85zwzzbzmjZpZ
XiQSfawoEv33X/yjlgcYBf6vuQ/+JbkHNxlb175OScF/lv+GYzb07RRQruy4
ynGeUfgeNji6Pq31gEcP27I9hzYshleW8zdPLV9m5U84oX6zmDd/y95PI1Ea
BZtIxyf2PK4fCtfdtOqMNT9PtBA+vv1u88V8P+k+OG+wVfK8grLjOvv5RsGh
ivOTSbR5ENyhTnFmvcIySwLhD4MHF036yvy7Yd8FCyWN88qsSoPHvmhmH2Eq
s3hAoFH4O67arUeGMsvmwaY837vSd2VW7oDHHF/6Yk4+86fCxacLNrzncf1n
+F5RQ1n9L2VW+C8wCv7f3L4cYT71Vnhz5bpOsm/Ma4SHql8fasK/l9QJMgot
J15r5fahzNrNcHgHhwX1P5bZcBV2iT5vXcrPF3+Ap00dd+EAP19mu9AoLCv3
2ed0LvO6wZP/5Wa48/xEl+GXL+4d8HxfZmk+/OJhxV73+f6KmouMwrvZJ7t/
MjNvd/iVKmelmfXTzYAX9C5ObGdkPd/Cs0/MqJNnqWf1xbg+ufGvp79h/i5w
w1W288e/ZX4F7GtKuGPm54uj4Cb71oU/5udpqi35P+s7wlbau5c+sB6iqfDQ
OR6lnjwfaTicv3rmyGash+IMvOT2xXqLf7C+0qVGIWjT+KydrLdkMpy3x2as
UxHzh8I3rj/aP5ZWnYK/OG2caFvM/Dnws0r/3lX5zfpOWIb+GOXz4Mkv1ncN
HOBZa+pyvl5zAs7wfvs0kK/XZ8MtsyO7d+Z4EpVbjv75nOK0j1avgjs92pwl
0LqjcFY9peMI9r/5IdwwdtqJNqXMXwJbfV9t8P/J/K7BRsEtrEqPxcxniINN
Ew/3WfqH9b0P5zXoOc6JeWR/4MdLJIPVPK50WmEUWusvb3bj+2lGwBOca9X6
xfGpKIK//vZ6/Zzvr3ZYaRT89l88acvz17nDCbYRFcMqluU3L4Lt9tYO3Eir
fvznae8nLuH41jZdhf5Kah/YnMcNQ+DmhbvbWFcuszgInldxa+U31css2wur
2k8rem3D+aGxCvOLdeNDbWqwnoNgl3nya5Np6Xy4cc/gogi+XrEL9mkQEHiN
x9U34ZTkWsNyLPNb/9VGof/d2d30/1jPANhLkpCUy/Go2g532NHPU/KZ/ZAC
l3TbFn+E/WX4BNsYfJOLOb6VfmuMwvDDle1vfWc9t8AbjQMy5rK++muw1aOi
Eyr2i8gIb1134Nhg5pHaheB86nxdl83rrdsEd34yUj+B1898BR6XeOvmX36e
5D3c93j0wXOW8VhrLfq5U6ljK44PVU9Ydftf4CnLeLsEi/rItTM5nmV5sEPE
yJYdmUdpE4r599n9N7vYf5pusF3a2/LPLf3sBU9t1OFbMcej4g3c89eb5pto
tfU6o+B+K+2F5wvm7wz/+KT0//2E+afBm95vahiZw/yRcECd9rfaPGc+zzDU
/093+ehXzBcGV27zZ/Vxy3x2GnZ0Kj26iq/HBGAUCgMXZvnz9dJJ8KS5vVfE
cr5RrIXX1u/e62kG8yXAyz2Gt3JNYb6ncJrfl+CvN1i/8RFGofzbb8v60arV
8JqEkhFzrvH6H4eLj8d0l5/n9X8M18xwPDHpAvOLIo3CAami0d/LrN9KWDap
Z4dlfD/9Ebht08Yb+qQy/0PYIa3ezn43mdclyijUGJG58fYD1uswfL5ZxMEJ
zC/Rw5UKJp6ccpd5i+FDSSlVXB8yb/P1RmHg3FbVRj1i3uHwiE5J4QrWX5YJ
n6lasEN7j/X8Bf8WZX48qGfeZhswfk4/c+hF64fBvdtcb1rCPKJFsPJUTPww
vp/6O3xptlewPa1rEo3+lBgf/3vJ/IPhp682KpvxekoWwIqw0RX+ZjP/Hnjr
zAkf9/P9DY02YjzOD9/1zdIPA+Ex6ZVqKtjfMiUsvnXx3p/XzL8TFnVKS4rl
+qe5AWecaXlteRL7oZ/aKHh/Oej08RzzboMb209Yfp7XS3cd9u+aE3Q7kXlN
cNtlxXvOHGM9fWOMwv4NK9YYLjJfMuxyu2b8NNZX/BF2uN3m3CdeD1ntTUZh
n3t+68OW+sXAb72O3JmYxfpdgROOH3Cdeof53sGxp0NcMjN5/cWbUY+uvsvP
sr/VPWBf9/Vt3FgvSRI8NC+2phvrLc+Fy/c+3HPsU+atEWsUnL1+VEumtV3h
5j1/3qzN9dgwHT624uQOB1pjtQXj5dfitkWsr74TXJxd/diET8w7DW69zHHu
ZloaAcd+aHs6kvObrspWoyC5e7D5X95vmdvDOxPHVarJ+VEyBQ7Liayby/Vc
vg5+ViPx1wLOpyotHBTp0fYj5x9xu21GoWL1mDEzeD8imwh7bn3fuY5lfgqB
GwXkJKznfKQ5CZf8iZkzicf1T+AHHXMlpzifKsZtNwoNbrvO7mRZb1Ww57i+
9zbzflJ3DH4jtr1vx/XJ/Ag2LGzd7QyPS0ph5/fvvhr5ekP8DtyP6pqobatw
vXoAd9oWdN2G66nsL7zK+dPCLZxflc47Ub/az/y+cX0RHYbPWN0KDOX9pfQe
/Mlj7vzmrK/iN1y1IGJPJP9e7bgL89vqQT3ncz7WecAfZhwZrrXcj2fA+zt2
eO5nWW9/wmP6nBpoY8X1VrLbKPR77Wh7hzYMhW1fln635/ooXgg3det9f6q4
zJpv8PNXXTZXseN6a78H89/bdRsb2XK9HQwbrL6IltHSQPjl8o0VHtZlvXfD
L3KHDYjk55kb7jUK6/svynTj+i4ZAG+7+fydC/PK58G1KjuNN1Rj/h3w5z89
3fpa7hdS4cTe5RODeVzWdx/mu9wdyld8vdIf9nNWfKjP89Fs/X/rdbDNbXM3
p1q8/nM0WE9Cr/X6Yc3rvxkumhJo+7om816Fc+z/br1oyfsB3vW8XI9Afr7c
dr9RmBVRt7R2JdZTDV/e4th1Kt9PfBmu6lA/Qcf7FVk+PFSeL1vdgHlrHkA/
OAS6lDZk3u7wq/fxG8Np6UV4a7rngPE8f8Vb2Djh2p/nzKeufhDrZ5f1ykE8
f10X2OvT2NxxlvsDBXz1T+TPEuZTvYYjRq1Kd2F+bbVDWN+bJK/ezHoYOsIT
wtwnx/F6iqfCQ0ouTd/C6ykLh9/fVpR0svRD5cOYzydMaHCEeUXt4Z7el3uX
b8z8k+HsZavGjeLfK0LhmOe73sXZM/8peFSjVzFjXFnftnFGIeTPx6LGLVjf
CXDdfR1zX7dl/jXwLscWrR93YP4TsO22KhUuSZk/G57qHTV6bkfWd2w81uMG
ozcFdWJ9V8FXno6x69SH+Y/CUx79G1VnIPM/gqtEj5DP4HFpCRzR8/rvkcNY
3+AjWP88761qPJT9EQfXt4/Jyndn/vuwuaVsxKZ+zP8Hdj8/XO4kML/TUaNw
blqj5wF8f1kWPLOmzlU/gHmL4KbjfNtb87jG4ZhRaDXbue9vvl7vDr976ji7
Is9PcRd+tLbpveXdWM8f8O9h6j0deVzX9LhRiG7p1LFxc+YdAm/dO3v8GNZT
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
5/gR3YDnDBnQ6jvnL+kXOOfd2/hmHE+K+stNQoHkj+8ny/cHW+HL0S21hTGs
73X4Y3GbvD9bmd8Ef2i3sdm2bczbJxj91jnw7+D9rGcy/Kz+5pAXsaznB3je
9cZ//HYyr+0K3J/dr/a6Oo/r3eDm7cLrpFu+v/OBJd0qp5TneFbnwx1u3nwz
dhfrWXMl7n+WDq1x8CDzdodX7fzi432Teb3hgZsmtXpwl3mjYenDK2tLn7Ge
1Vehn4eeOOv7lPXsCtvvbZsuMzL/dLiVZ919Gx4yfxR85tjqYcmvmP8cfKRB
G5ubqaxnJxXml22tfg25w3pOhddnbm4V+oj5w2GHRj7lN2Qw/xnYbk3Y5Lx0
5n8B11uz5JE9j2tDV5uEqa9vRyY+YN5T8JzOdWK+XWHeZ/CSm6G2LrSs4hqT
4JTq3KDDGdbvJPzbe9zgX2nM9wSO7fJj1Ots5isX8v/5WsGn6kZe7/+S9TsG
u48IbR3A4/JH8Az3csNO06oSuIvPtsEbXzCv61qToDyk2HfvMfOOgm/JN/8b
zOOaP3DfX78TvXg+eqdQk9A2eFT9Qay/SA4fCGoyUZTFvMvgN90CJ03ncV0R
XLrB7/mI+6yXwzo8b7Qq1p9/y7we8IsJyWcyfzPvYvjsxMLe138y7354aqtM
+eZC1k8Shvlm98eSGW9Yv6Fwo8QGLWxpZRB8THpva9Vc5t/7nwv8DIfymP8W
LH/xopmR768YFG4Sek04mtqB76+eD1+5Gn1+Mq3bBT+bkNk99gfz34TH6U/W
zqpUWJbfDLsG3mvTsVaZtQERJmHrAecZeyRlNmyHNec3nqzYqsziVNhtdOay
kT3KLPsMd3Jxij3ctczKepE4/lgb0setzFIdXNur39cc9zIrjPCBzPZdBg8t
s9ouCs8rw/rEbeZxXW844lCBQ8aIMsuvwsvHln5zGFNm1XvYZnFB97v8e22t
9bif+TL1ZHYQ8/aENzZ1b9/Vi3lnwTk/8uMnepdZkwe/DQ3q2nBymfU2G0xC
qL9Vg0OjyizqDksuHRhQ5MH8M2C/ETmVLoxk/g1wvydxqTF8vdk6GuNxcHT/
s1NYzy5w3wrBfWL493IFfN4l7M5FX+aPhDtmvSq2nsn8ifDxwPjSQJ6vrONG
k6DwW5M3nuen9ISL+0lqpDszfxis3LbZR2jL/Kfh2PrTC2+1ZP4X8I96c/aN
cWV9J6lNwurYNrG1+HrdWvjS2UDDSV4/cwIce2TOEKdezJ8DDzy1pEKfgcxf
IcYkzL6kbhbdh/VdDRf8zl4l5+vFJ+AeeuXPQF5vWTY8sKnyxNuOzC/ahOeD
qVNSt/O4piU82cuu/ZDurO9RuNr51Bt9e7K+D+GgjOytI9hP6n/wsTovxdXZ
fzqXzSZBsPfLv12f9dTD93wfN41tz3oWw7+yc25WaMG8zWNNwhb52JALjsw7
Ap7wI/NjKD9PthSuqjyWn8/X63/BRypNv3iK10/ksAXz8ewtQ4qmM687fNM/
8Mrjacy7CC691PTpDfabWgMnW8/ZHm3ph6ZbTcKm7Z/Nt2awnkPgbqti3p9h
P6oWwPvnXHdV8P21e2B9XdfamTxuSIc/p33Xz1GyngO34XngxcO6IfNYTyX8
rNzUK8PnMv9OuFf425Kdgcx/E07y+zZvtz/zF8Av2zQ/HebDes7djucbqf+i
lkvYD9vghMbfk1ovZP4U+Mfix7Mfy5j/E5wWX9X1FftTVXcH+uPwiAaBrId4
C1wupLGuZgDrew3u/7Wf8w+OT+VHOGr4lhdRy5m/9k7M59olAy5FMH8veEqv
mflSWv1u53/jM/Nd/XXMK96F9dv248tPoYV9/gf8L3Su
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.8863919132230216`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.8863919132230216`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"SPY\"", "\"SH\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1576965969444921`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.041349912346480125`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "27.997558670593893`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 3.7050414278141985`*^9, 3.7052520522880807`*^9, 
  3.7053148130018167`*^9, 
  3.7053149500649757`*^9},ExpressionUUID->"ad5e0c12-fa5f-4d79-a208-\
fe563a5e2ae8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
ouQwQ/lPwPjW/wPF/Laq
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
bi/ywbzMeNg/fl5NtPKvnPo/fugPXg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJw123lcTPsfBvBB2bJM2SsZoUJpQtbKHCFbTIhkCyVrRpbsJpG1jFZLCIms
2fcaSyFhbKmEsWSZCZM1Ir/n9szv/nHvfb+mmXnO53y3c853Wk6aPSyoqkgk
+mAiEv33X/yjkofoBP6voRf+JbkHt+oTnb737+f/LP8FP/q3oURaXmllq9k6
oZ1nc41XRaXTveGD2nsv435XWhsGh2gHTW5epfLzFD/gH5NnnLtWVvl6skSh
ExLsLGdO5udrBsIWv52m+5ZWWjQf1jS7Vq0W/166Cx7r8jhv8J9Kq5vP0Qnv
5w8wDeP3G7zgwZslaVf4fZJQOPGKYcVGHo88CV6aaBK0l5+vzIZnhP1teZ7H
I+4bqhPWvj+1RVdSadlsWGYxbqZvYaUVW+Ez9hseXnzN/NfgmWtr9f78jPk/
wr0D43ua6SsdMHOuToh788wh7WulVQmwSfb6qlX4fQYdHBHdNmPmz0pLGs3T
CX++FvU0/c56xsL1Hl3v+UbHel6GXU46hFi/ZN738EyJc3NL5pFZzNcJNx/3
zWtSzLxucMncyQt+fmA9L8JFZXs1/m9Zz2J43ZYHA33pgPoLkO/GcZ8hPH5V
dzhoqkna3ves92S4963L8d48XvkreNW+xKG7HrOedcJ0wpCSdlOb32H+LnDT
6AWvvR8wfwCseb2ifvkj5t8AV38h+mCez3rWWqgTAuKa7KnPems6wXZWs2Tq
h8w/Ho7L6Vsn9S7zr4V3hr1PFPh9ASfgBxMePC7KY32li9BeRwz8WOUp6zsG
NmiPtHV+zvyr4S1j5h0y8PuVx+BqoiVhYXw9vQCW3PB84sE8Mr/FOmF8p87n
LY3tYSUsHrzKZQ+/L/kwfDF+71tnnh9NHrwz+qLnOJ4PUZUlOqF2v5k+p1hP
1Qq4tNfPbkWstzoNXi8ta6Nk+zE8hNf1qmhY5Q3zV8AZW1t+fGysv8NSndAv
zTy4tZb1TYWzq597eoEW34f771y3fADfLyuHTW6livJ5vhVtlumE2Rbfpx3m
8SYPhUP3/7F98or1LIMbjxK/72PMa7sc7b9fy585bI/qwXCtiU2bpLO/GxbA
49enfUwxqexvyu/wrcDC7ZbG8aHFCrQfcdf4EvZP7QD4gUWE6bdqlRbPg03b
D2j7r1alZTvhhIVHnEeZV1pjrdQJB8QbjpjWq7TIC95QbXLfHP69dA78vnFb
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
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.9099160942295341`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.9099160942295341`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"IWM\"", "\"RWM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.1301209245457022`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.04264966483953551`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "26.49776800820483`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877209007057943`*^9, 3.6877217416893167`*^9, 
  3.687722164894137*^9, 3.6877229814657383`*^9, 3.6877235801277614`*^9, 
  3.695714571930441*^9, 3.6957281426149473`*^9, 3.696233927274042*^9, 
  3.6967607413772273`*^9, 3.696761478024253*^9, 3.6967615514443197`*^9, 
  3.6967617479688573`*^9, 3.696761935722108*^9, 3.696762079427864*^9, 
  3.6984977509213963`*^9, 3.698497818863474*^9, 3.7020194373725157`*^9, 
  3.704691001590322*^9, 3.7050414278141985`*^9, 3.7052520522880807`*^9, 
  3.7053148130018167`*^9, 
  3.7053149527525234`*^9},ExpressionUUID->"003f8516-ff0f-4c1e-8757-\
a3680d0a8f9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EEM\>\"", ",", "\"\<EUM\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<EFA\>\"", ",", "\"\<EFZ\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.68772110106639*^9, 3.68772110604591*^9}, {
  3.6877212572034655`*^9, 3.687721262025201*^9}, {3.6877215083368464`*^9, 
  3.6877215085778017`*^9}},ExpressionUUID->"b1d487e7-f623-4847-a8d2-\
c923553c7741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
qQ==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
BNv1XK+2lvmlHdrjfDUunxrShvmt4H/1uf/iRczvAUu7PVp/jPNH6R7YMNR+
hA3nF+92HZTC0fGmXSt6s09LuM/HL5+a9md+d3j0PIM16mOYPxKeG2122NCW
+bPg9Utde7eSst8ROkrhU5xzlM8E9usKzx2VPEfdmvl3wnmHgjLtef9KL+n8
16dOashvjucK2DJBt/dR5hO7dFQKl2avuubek/1GwF7d7z0+35T5z8PDMzTb
RfzieC6FO3ZWr+jG73Pe2kkpdIoNipitxT7PwlYz1CvTNJm3GA516yZerse8
TXWVwoLtzpYbjJl3MCxPu2XewYJ9psIf++u0ihvGPl/CGjfPH33I8Sdu3Bn3
85TiaouRzDsIPjp20sklI5h3FmylOW1xV+YRPYf/hA5MuWjCPtW74PuWPNWO
Z1/OhnBtp1WbLDmeZNNhlwy1OeGzmT8A9hvudaJ5APv8B79+7B8lXsfx0K+r
UvApaaaT58P8U+Hz7c591XNh/g2w/te/4X78ffFx2L/afGh3J46H3t0wXj6F
5x6cx/EghQds6JS3ajDzr4ddFA4WCyXMnwgfL6ob/YP3n/N9eNs7pUY9x0fV
pO74PQ+tWcHj2O9a+LYybmFL9iONgy3ezDcQc3wHFMLWnyuP9HZj/tr/t9Vq
iVLI6CLJ1F3Jfo/CQ+pG3ZuwnPkL4HrtvR31VjD/N9jI4W69+Sbm76anFNJm
Pp+bsp593oD3eY54HziHeavg8fZ7bOq3MG/nHkoh8mrc+meBzDsWdo98uT3F
m31eh+effpGS4cc+v8CvGxkbbOPvW3XsqRS0tmX0bMbj3taws23xsUhX5vWC
ja9++ZPVMD8o4Zifp6O2NYyH9vpKwfSg37uzlhwPo+DBi5rNusLrmbME9voi
Gj+X/VTthj2+XV+Zz/kqoG0vzL8dt5YE8PtSLeB+i7d5rOH4KnWDk3o8zV40
k/l3wYs+umce5fiyugy/Sh7pN9CDfZr1xvV6N8ex/Ub26Qpf9L1XnsZ+jXbA
uWcrvi/m+TtfhKdnL/fp4sX85XCf3VrDJ81ivwv6KAU1qy565p3Y7zbYo9hm
hyPXRwEZ8KJbsZH7OV5TS+AeE5feGmXKPsP6Yj4M+iXqyvEZkw5PjIg+uIbz
p7wIDij7LBi1ZN6m/ZSCd+5s/59cnxkZwzO1R9e0NmKfKfCevd3Hmsxnny9g
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
BIJS
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 2.3396788064045237`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 2.3396788064045237`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "1.3432392488068474`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.08372983230118955`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "16.042540775371457`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314955455719*^9},ExpressionUUID->"7f72dd55-5f02-4fbc-95ee-\
468205b92d74"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23lcTOv/APBBWSoZIa4sY40okyJLMockiUbWso2USGVUopKmSImYSiHb
WJIkxpatZbRvNCllb2yVOanJLuL3+Z7PH7/z3D/uve/X1PQ5n/Oc5/k8yxnm
tsXZozOHw/moxeH877/wj1Toq6bwfzUz4V+8SnCHh1Hiv1et/7PwF3i3adk+
+xrGkhFb1JR9n/ClB1+2/M/yBeAs9xCF7Q3Gqu3gvX+Oc70+MxZ/B0/P98/f
vIn5fRlPrKZsg06oY+8xnysdwLrbn1Zer2PM2Qbev5w/8ncyY/5p8AjnBA/5
IMaKwVvVlE3X3dmDOz79z5q54JnFEzdc2c2Y5wduDEyO9jjFWHhiKxGfpAjc
ZXav9msJjLlz/NSU5aFLn7xGMfEJtoCnWV2b/Oc1xn/Mj/h9WT54itqm05+H
GP8n8NDxzT4CMfP3RN7+ampGsIJ/xY+xNAl83vPpk/9eNjPxqsHhOVv+DTTH
ePsFqKluBm8k1dcYyxPAdr9/T79azFiVDQ6z5l75NQLjbQogrl9gsA3+3pzq
vrGBGK81+N+gjZ1nNTKfc+6DCx6aX9/whTH/A3h4kfKpIB7j7RWoprQLfedX
yzDeqWDVrKrr7q6MFevBu4+cfxBTgfl8C75blrTUNg7zqbddTZUJ5tfXyrE9
TAbv08lpad+H7UEEtrf33Xr1KfP73P3g9yc9ir51ZizrsUNNNVk5mH8fyVhp
AX79bU2o+zyMfw04NzXm3nc7jD8aXDKmqPDHcYz/OlgyMcMv/QLmlx8E7eHP
0IjKMMa8leD5+0M3r/NmLIwEz7PRnbxuJWPJVbDxMufuXyYzlj8Di1YYjnj0
H2PBimDi58URYNX2nEeRyxjLLoPzA1dRAzwYK2vBo3qoHn8exZjTKURNzW07
ylnnwFgaRlqRFkJ8n6YavGGmT/4jR4z/L5iaF3+7Uorxj9mppoq51OUBUYxV
F8D2oStjlTWMuVXgf4uWDln/DuP/DV5Tm1l1WY/Jl3hUqJr6K03Z9ngV5t8p
lMi/6Cc4QvetpdEsbA/Dd8HznFJ02sgd24MjONeoxDQqC+MNBGv7Hnu+xwDz
+Q0cbTy6zXor5nNoGDy/WT4nP/fFeOeBuwwzTtnTCeMNANs969MYPolm4j0F
LvD+pV3WqGbyOUiipnrM2LzuAp/5nDMXXC7Le1E2jjF/K2nRcfA8/5+LIpYz
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
Hrs9KGP7FOyf68GbfTPt3n/A+Hv8UVPX9ifXKWbi+Gz5h1ivkF7/Q9QHipfg
av/F2hPccbzr2kHExzMHm53kpTS+x/hXdhDjoepZBxE/V+uvmkpLGuYyYRvG
b/aXmG+LV4DVFVfm6Z7A+CPACy6f5zb4YP3T6Z+aKt/1fO/JYzjejQNXzIyZ
YMbD+JeCD517k+ZshPGH/SPGI00aOOHvtux3+dg+xnBoaqHPkruBX3H8cAZ/
iagTm37C9rETzB6vU8Ex9guSHvhh/FXgFuPZq0/YYj3h1Imm7AsXiD9Mw/wG
k+afBzsYKFI+zMf4H4FZ9Zf0J7jHy4m3eozC/G7vTLPzLzwD7hnYn6czF9tH
eWfi78u/gVnrIaqhXWj2eCc+BdZTL0lIzsL2XQJm1QvKz2DL4L46ycnYnudq
0dTl87OtFHqYz0Iw6/5pWsEGq30VOsEY70BtmuJy/8TobMJ4bcFeGV1PLV6L
8fpqE9fD/QT+tCHhpm4O5rN/V5ry2TtdlN+O7YECs9YTZJvBrPUAZSKYtR8h
6tuNZu9/SW3ArP0GxUYwa76hiQez1h942WB7qWhJgQ3O56d3p9nrVSoPMGu/
mysFl2WbvNbrg/P792BW/c1Z34Nm18f8WDBrP110uwdxvQpdHZq9PiSMAbPW
HyU3wez1v9dg1vxB1V2XZq8/cS3ArP162TWwmMcrzx+E+XsBZq3fcbrq0ZS5
lTa3qSuuP/DBrPUhkSuYVR/zuvSkiXrdtCfZPpeDW5s+a5uW4/MVDmbXuxx9
uP77Y3a+/47t0wQsXtqz8f0AjHeJPvF8KHeBTXuvGbDDFeNN0yfyKzXuRbP7
G8UiMKs/0ISAlc98k81mYfwXwBZ33df16IvxK3sR7Vm1kEtTBxJzyx/sxnwG
gVnzF8E5MGt9UPwQzKr3ZT+4RP8ikvWm2f21tAwcu2xLgLMOxvsVnNF2y1sx
GOMdYkDkR3ISzBo/5MXgx43SHbnPsL9qAy/gvd0d+A7Hs0F9aHb/L7AjrSzo
Q8THae1D9Hf8//oS+RbN7ks831If8LxF3I4lhZjPZjBr/VVo2I+mitySykK8
sP0KwKz1QLkXmL0+eRgcXfTJVuaBz1MfQ+Jz2QxD4u8pPcFLlqS7bDfG9hBv
SNx/fhaYNR4qpvUnrk/j3p/IP+8QmDXeCO+CWfM5yTswaz7MdRtAtFfBgQFE
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

           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
lSl3ZrLfA7CJuV6CjJbfgDfvCMqR8vc0n+DEp8+P+C5gfuuhaiE57W71rsXs
NxbOfbHrTYI7+70KN/aa//Mc85p8hENNRc/M5zCvo1gtrIyQvrd0ZZ+X4add
LVyNJ7PPSjjBuHe221TmNRewH1+2TzdlAvOK4bAC20JzWr4E7r/d4oQjLXkP
18Q5jC0czT5Nh6mFG1l3bke7MO8QePiU4PRqZ+b1hP0dn620HMm8EXDOiVtP
zIezTxNHtTDEPXnUZx6vGAS7ufQxjXJk/oXwnRpx971OzB8Ge3ycEDROzPy5
cLXijNc8gX32d8L+NLSg5m099jkPXpHa2nZ5feYPgfe+lTeRGTJ/Njylt63r
eAPe/znO2I/vauTZhpYGw0ebRHoursu8p+GXFQWSVnrM+wIeJzmpY1mH/W0b
jv34r0r72zrsLxNuecXtdvlftTbfU/hcS5fka/w9Ub0RmL9EW5qObsx8PeAd
LomHlzdlfxlwZdrxmDxT9lcCFwdNdMs1YV69kZh/1hQVX+bn0q7w4vZTDOMa
Mu8UWFa/r1n/9uzrH9zr7ab0fRbM23mUWnAxra907si8rrDs3i77q23Z5wb4
VJip10N99vUbnjL7+Ldonj+zgwuez7V959mxb6UEjkj1L7rPvk384N9nLIzu
/dZevzgJfn0iLFR4p7Wi7Wi8P7b4W2Wh0lpnHBwSn3H21Get7dbBvS60n9D2
vdbuCbD4/tsmBq+1lt2BL0dKqoaUay0aPQbr2WKn5r48XuIDvw1pUKfNJ60D
DsGWLQYqu9CZt2CLPzlPv3/RWvkZjvCvbp5UpXV83Fjsn30DDaa/YN7rcJ+4
vOVuj5j3E/x78jmrzIfMazUO7zeHvK2Gl2gt3wcbTQq2+qDg/b8Cz14SXrmj
kHmr4LhJ42N1aYnFeLyv5WceH0IHDINt77v3+Vaktckl+HLB/tcltFgN97lr
6f/outbSZhLsx1fqnplFxw+F77jsfv3oMvMvhsdY1y1tco19VsCvIzfPn3aV
fTadoBbKeudE7+Lx8sHwpNzk33vkzO8B31sUOX0bPxeFwxcK1q3I4eeZjSfi
fvaubr72EvscCLuMMZX9u8j8C+D1E3ftUPF4cSjcvmp52EmeX5rzv88DnRNv
3WC//V1x/ozp7yQ32e9c+EBJvbo+tfl3wT87LvlxI4/5z8BOrubmlefY5+xJ
uD8NK9JO57PPHbDTvhmTnWrznoL971RPvcrzKZ/DC8puHGnM85kYTFYLM1Za
/+jOfPFb4eXOlypEtX2egOvs82wxN5t5n8JrSod9/sLz29WdohbsglO3vEpn
3u7whghd2zE57DMdLpZuq559nn0+hreEnlmccIX5dadi/e7SucvdW8zfBfYO
WTxkIa8/czJcHD64dzaPFxfDFRkd5unweqR/4SkdL2Xb3mf+TtPw/li+LDm1
gPknwpb/Uj1i+Hs6G2Dpm7/NP9b2+QveHuRvkUrL20/HfGWz2ETO82nGw4KL
ynQKvy9aP/0/35ckwoNWTwr+cYH9tnHDfBW48UA/9mMyFhaVr3G7dZT518ID
ts+83z6B+Q/Dl8OdUnyOMP9t2Ly5ZWuPJPbrMgPvO6mFHQbxeHdv+MKH4DFH
E5n/INx1spe9Hr8vvwmbnJI2zeDxmmo4+ayulSSO/a6aifehSQcmyQ6y3/2w
9ber2bEHmP8a3LD48ij9GObXwKc6/fm1gxZbzlILkY/kV9fFst+9sHN29L7D
e9nvFfjx3hmzBX5u9wH2nznXN4e/7958Nvbfxjn2y+KZX4DP7HjtP+4Q+1TB
HuGDB5/m8QFmc3A/xbn9rfl5pgO8rXP+KSt+X7kInnYgI9gomX2+g9+s3aG5
k8o+m7jjeq3mHW5wnHnt4fW6OU9fn2JeD7himaGD8hjzymA9o5aP3jC/vNFc
zC8Z/1Jv7WGfA+BpGxzSkmnRfHiiWbeOo3n9kt1wo7nRi4zYV8BZeFAXvdXR
/Nyk3zy1sPF9n70XeH1id3hZ3ZC7ww4z/074lMusLhbbmT8Lfja3w+nh4cz/
Eu412G7TnAXsc9Z87J8M1FMOz2ef2+Hu2X6x4oXMfxJWpJScT1vF/M/gL/eC
lyzyZn79BWrhe+aBRRM2sM/jcNq5k02aLGXeJ3BY88yK80uYt85CzFcdnv7+
7sm83WBZY+W/NT7sMx3uMuRO0Pn17PMRbP1vd+nZrcyr46EWyl+ZnE0NZF5b
uOPk8TdehTHvJDg6renNervZZxH81O58hUE0+/wDV8RsOnt0B8dDR0+872d7
zl3A7ysnwFX9Cw8WhTC/P/zmgCTqbyT7/Al/Vckedt7JPtstUgu+PSSe0yOY
fzx8pmaj+YMo5veFZ48d8qmK99v9CJwS3yFmxn722XqxWjisU3yiB++3aAy8
TerwqK6M+dfAj12GrvHn7wfEw+fv+zdT8PjMArjIw7abM59X8agluD7LDW9e
cDxKV8N9Ow3RUZ9k/gNw00L/+KFZzH8DDiz2O2LH+VunGt6ZmnKthPOtTLoU
+znD5EPet9lvLFxjV156kMdrrsJ1j6a5eHC+Fn2Ed5zwTejB+VXSYplaeL4l
daGE64syBjarUe0K5/NkchkOea3y/sbnTVwJR02JblWSwfzmy7FfrBraaArX
h3gxvPJowGVXzld2F+Gz6VM2beH1ur+Hy4K7xj5JYX7TFVgf1I7pL9i3fAh8
uesUeyfOjxpP2Oe1+rcP16dMk5WY7506D+11j3kHwTnD8vO2cD0wWQjfs373
0ITrjTgMFq/oE+PD8aVoKMX6mzA7MpfPp84A+OXF3aY/NzHvPFgW8m3v9yDm
DYHTvmY3rb3/smy4h3eO6waOX1HfVWphyYD4w7q188McuLjy1nT9fRwPwfCy
ewZK3bPMfxoeX89uak7t/uIFXOnY6orXCfY500steK6f/82G81P8Njgqe05l
Ij9XZMLiTz2vHctl/mdwp1RlvxucX+zqrVYL7TK/ezdhf/ItcNQnw2vNOb40
Gav/c7yoBE4LEcnCTjO/njfeD+POtPfj+AvoClub+3R5XjsejsEJ17/Ub8z1
UfwQbvq67YoFXH+k/2BbWdKo5Nr8nX2QZ0Jh7Cs+rwpXeNme3MQOnO/cC+G4
rh59WvL5lv2GbxxpKKypXe86rFELt13WeVSmMb8E7py07nI7rrciP/hgbGia
N8dT5g9YUXdsXFfmVbZdi/tj9HPaTY5Xk3HwojW/Av253ojXwbYvz61y5PMv
TYCvf33gkMrnW6f1Osz/l1MKyvi53Wh4w8vwVSd4Pe4+8M0eZlU3NjL/IfjN
m00d33F+lN+C+z2etKsL52fJSF+1IGn+yO4256sAL7jqY9T4Thz/mXHww58G
F9dImf863ChxV9Sjccz/Ca5cW78+3ou1/a5cj/e95K1ytT373Qd3Hv2l571R
zH8VFg/Y4dbeifmr4DS50aOXtLuFH943nbI+fxzCfqNh8yVZz76OYL+XYEXy
3JjeU5hfDfe7EeJbOZJ5h/qrBYOhr7e2HMM+82FFzZqLCgn7rIAHbfgxaOcE
5m26AevLmIR424nMOxj+blv+2YR5dDxhW7dvd7+4sM838EiF0fQGruyz8Ua1
MFM+drQx82gGws/azRuh78G8C+CbdU0SWyxi3lD4nKZxUfo89tlgE/I2Szy5
bSb77A8n1Kxv1J3rnXgunOTxp5vxcObfBb/csn5KC/YZfwYu8JR1vO/MPvsE
qIVuYQ8MvRzY52w4VDZ4p2gY8++ARVtTPXubMv8p+Pooz25Jhsz/HE67sOnl
pQbsc+tmjIfJUeOqGjHvCfhR4BbvY/y+yVN4gq7lxXNtmLduoFowfn3p9Bor
9pcBf+xYVe9MO+Z7DJ82GXbuT1fm092iFrLyr7bM7898XeCtgwIPhvdlf2mw
+LnF8AG92F8xfOfoxwdePD7gL3yqKCZ6MO9XZqcg9DO+al2X0cw7Ec7rdqna
sLavX/CCeF1re1rRfqtaiLGLXv7OkXklsGKc27cK9me3Hj4bX2J1lONb/h0e
FGThs5LjRdNmm1pwFU/e9WY6846FNfVS3Cxq7/daeOcAxzPVc5j3MHxs2Z7O
Y7h/MhFtVwvy45Nzds5gfy7wQ5+mmz+48357wz8PdUkcO5v5D8LWZZuy7nH8
KG7CY/512oh1TNvniB1Yby9uvJ/D88tWwXHOXUY24/Hy/fAZ3UWzdy1m/mvw
oSedbeby+RZp4Lavv/vYcv3JXBGM/XPZ/G8l3D8p98LO7cduO7aF+a/ABk8b
zl3K+Un8Ae7+p9HwzdzvSJvvVAtt7od00NnGPuXw4g8HFJLa/Y0Krhj8wmw5
5xuZ2S61cHTvyGrX2vXXYdf//r4dOn4yvy/Jg19I295LZp6Ad/CdYNOnJV7M
2yQE57vQxrwfz6+0hwNXFTUoXcG8HnDZnEKH+b7ssxzuUHKxXU9a0Wg39mti
0z2D/DgeBsLnCsQrXbk/tZsP338wtX0r9um+G3YRVFHJPL/GOFQtDOu68OoX
5hX1g0sjwnO/+zO/O6wpubH9K9+nAnbCFzpcc/nO9TQzC06aYxi4h+uLuHeY
WrDJ6Kp/m+/X0lnwhJCWrwy4nsRvh4OeTw86Vrs/Owm7zunheOsM8z+H+6Ve
qZ/G9VnmJvvP8fIgeLiim1rJ90fNcbhbm/TGh/h+KXoCR7QcnvWVx0vqhKuF
B4Nfxqm53ik3w/ZXW5w9mcl+0+GNgw0ObKLFj8L/k1eqE6EW3HUPqJ7Vvi/Z
wm5zXepk1r5/psIDbL5Wd+d+wL0IVpx9Ne8G12/ZH7jNlOqbJbXrccdI7B+c
Dw/cw88DFLDe0bjQI1xfM3/CJQ4/ZhZyv6RsF4X5/cO4GINQ5h0P5x6+aVJc
ux/2hYMc2szy4Pue4hvcsGr6fufa/U2bPdgvnKsUlfDvQXZj4CH90g4f4/7W
fQ180GWzVxD3U7J4+FSXyzdn8P1e1Coa7/tBRxdk8O8HklGw08iwUz2fMv9q
2L2Jp70fP888AAeWrbr8hfs15Q3YzDT1wh7uL6XDY9DX4sXWAv++Ei+FLYea
WNuVMn8s3OvJy+GTKpn/Guz/ycZsnIb5P8LeetIj4T/Y5/K9mF/eic/m8e+d
mhj4w/iojjf491TRZTj7i/t4e/6epBKODprWZQHPH2C+Ty3MsT/9tHsN+90D
Ox09PVaXfw8UX4Tb9V91SPjO/O/hBTf3edn9Y37TWOwPTVTroo349+AhsPnw
oysONuHfV9/CG0d1y+zNv4/KTfbj+SoxGFGB8/0fx+ma8Q==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.2496593128990734`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.2496593128990734`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EEM\"", "\"EUM\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.8736459147756043`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.049730120331360345`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "17.56774182234733`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.705314958127657*^9},ExpressionUUID->"de9be430-cb7b-4388-95dc-\
7eed90b1418c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV23lcTG/7B/CxREiGZP9mKlosNahIoZGlQgpZk1KWSIVsFS2iRWoslaVI
izVaZIs0tspSDcpSYURkRjUhIvL7ONfv9XrOef54nuf9mml85jrXue9z7jm3
9nKfOSva83i8Tx15vH//i/+IHbzlIvq/ykn4L0EZvFngqeaow9jhJ3xc+POJ
hRXjYF0fuUjXrOCNWy7jrFkwz8MpIyqPsWwLnCtfG705g7Hvd3hsUfeAgTsZ
Jwt85aKLQ5MGBN9nLLWDJ6qYqBufYszbBLeMDllSXchYeBzeZMDTPtCh6Z8l
/62Xi/IePQ0X/WBeV06Hi20EF1ZPYl4XbIDTbZ4b1S9k7JAIS3dkjhgfSvkL
4ec3KgpmnWTMn7pBLnp/sr5+6nTGVj6wpuPyN9HLKf9heOKD9sFDoyj/Hbi3
S672l/2Uvx4u3vz3p9oI5t9z9doIZwsj+tgyFsfDA3lCN/F6xko5HLhSL/ek
PuXV9JOLbpcVR89oo3oegP++vFKc9I3qmQ/zju8ef/A55a2Ddax76hS9p7y9
NslFz2K+bzxzjfJawnPDNpm7fqd6XocNM/u0C2qmetbC77taH5G2o7w9NstF
i4dnnNQeQnnNYfnns3FHZ1K93Tdz/j2HGlj6saBT3R6qp9oWuei+VeRhPRfK
bwaHqRSq6flRftctnO/D3wOX5Q7dK3BgPj+5y1a5aFFZvfpLO8bSMbAie1vn
/caMeS6wZviLSRuFjIURsPeNX6KqL8znuebAGY3dEy/spvoKt+H7nl3ydMlJ
qu8S+JbKpPpRj6gfdsGdNHSNYu4zDs7kvp71EhY67rf6r5yx1UJ/9F+0U8l/
Nxn7hsLVE+42ZxRT/gw477C5uv91yv8MVux4s/fBV8rfLgD9kLFp8defVN8g
2LFoQvW5b1TfM/CixLlxPXt8YfI/hdOtB7V70IWxoA0+5t3JxqOR8hsE4ni1
9By5uI6x7CQ8x2Vk+zY5Y/5jWMV+3o2ED5S/FQ50W7t75wvKP3Q7zq/VP67f
Pkj5Z8PvvQ9NW3KD+qEF/lv++4h/OuXV2SEXTdkmbWd4mPLOhAO884vrVCnv
ZnhfWEN/L3vGwc2w63pP+y2GjLMGB+F4DYyTTHZhLLOF/27cWaG+nTHfD1ZT
lrWa3mNsdQxOy73TeO0bY+mgYLmoKFfNx7SKMW86nNR9b2hLIWPheu7rrkfh
sc5aiz1vMBbfg41vmxt3L6B6TgnB8akxGe90gbGDN1zddVhgbTTlPwRPmWYW
4baU8t+GNw2v7pwTR/k/wxnyOd57xjL2XRvKeX9yHPyqrKW+yofyF/zzn+fm
wc6UXx7K+Txh7504fos2lFceZSzZD+etPH4wJ4jqewMuHVoSwLeg/B/hjJDJ
B1+NpPw9w3D+73uyuHgG5beAdcyPFgZPo/rmwYayx2Mm+1F938OOfy5a7r9N
+dV3yUVNS6KXbGik/OPghU/uN/+opvzLd3Hyub6Fj6UFnrbLp/p2243xSSpa
t2A+5TeFW0yXTm5dSPmXwWIDYajuJsofBc/IsVjV35vyLQ2Xi1bKJT4H11C+
cFgYrnqiQwrlyw7n5McAIBdVPOrw6fFqqt/iCE49XcMiOP0ovgBn9BudZzyE
8r2AJ5o1Wn0ZSvVbEInxudVvzDodql8IbOb2Mjy6Gx3/c7Bf0e4l+lV0vlXA
Cs2yi4P+/3zjRSGv7sVvWz/S+bQDPndjo85HO6rfafhiwWr9JkfK/xTW6XbD
v3oR5dXfw+lPZTp8zMKrNPEi1Uu6h1N/h19w8bYq2fCblHdItFwUyjdXDf9I
ee1h14ll5Zn1VM8SeILXihMvvlI9f8AtRfvGD+N9ZfJq78XrE3c7mXRmLJ0B
W56KN67hM+Zthkvvzr2c1oux+Bs85ewek899GUu0YnD+JLr49TZhrLSB88ao
DFRYMxZshK1rb9xuptcdkuCcwwJlzDTGsoGxclGVVXL1w8WM+dPgd5VhnQ0W
MrbyhefE1pnc8mTsewROqvyiOmoP5b8Ldw/t+M3Di7HQWiwXGThu0xm9jPIm
wLdUB5Y7uFDeW/A7zctxozZRXgWc0BLVfaUV4+A1+zifL7sJu2RuvnP8BeX7
BJuV3LNZdIryaeyXizRKAu+/klD99sELVa3mvz5L9bsBSzTX9bkcQ/k+wK4p
Q0LGn2bsyj+A8fDJf/M211He8fDKsOhAla9Uv2uwdY6OrdFPqt87uGJlWfPk
Jsrb/SAnX9ZYuPpJefmvdt+Y/G7wivrE+Rd/U726xslF2rKrmgv+Ul4TeF14
SEiPX5R3GSzIeXk/pxfz98JIWG6v3aptx1jSOV4usrvtKU4SMlaOguVXRlWU
zWUscIaT+J6efRcxdtj9zxNtLl2fyjg4C15YkV7dx4cx3zhBLoo9OMhayWds
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
582GI23T1m25Qfm3wRoeXo3GVyh/Kszaz6fU9lSw94sJZsITzB/q96Tz12Ez
XBa26teWk5Q/2ZMz/mc9gFn7Iaxs1+DzuqU6N72n8WEjvG5Riuna7tTPSTBr
v5q0aA3n/pX3BWbtLxL7ruWcD5IjcM2MEd/70vuVd/+9/r/9ZoJGeGGHXQbX
l9D52N8L492Tyc860HgrS4BZ+7v4t2HWfiWrz16cPL591nHO92Qr2GDmzW/q
dH4LC9Zxrl9dP8Hs/X4a3pzrX8kE2C+huHjHKMq/yptzfZvF98H9mSAra7eY
8o6Hl2k88hl2gPKugDMcw9qZhlHeWJi131Da3RfXr6M8/JbZUD3H+XKud4XL
Ydb+TNdoX878Jb4Mp8nNHZJvUz+YrleIzhXM7tLpFfXDMrgtbaLqk1bqh0g4
oKJhyX4nyn8RjgwaULo0ivK/gln793ydN3DGu+TdGzjrC9Is2PTI8LJ9ayl/
FWysXX7ebxjVW2Uj5/c0yc6NnPsN5fmNnOMneAGz93+298Px0oo3bLSk8XkE
zNpvyT/nxzk+VhUwaz+s718/Tj2SDTcp2Pt1pHPhKepvZZufUH2fbOKcL+Lf
sPaW0xZnmmm80NuM80O5b0l+B8rvAFdb1F443Y3yB8Cs/YJZP2HWflmZ7hbO
8eDbb+Gcf1ZbYctXauLi15Q/ZQsnP097K7c/ZmzlfB/XTTBrf7H4+FbO+C65
D0sqLSIy1lN/2GxDfw5UP2F/mfpjA9xy8Idk+V0aLxK3ceZ3WSFsevzD79w8
yt8Ep09r+Vj3/+Odjz+Ob+LO7yeCqb6HYSM3ieeJeMp/F35nHfe2wo3yN/hz
x+t+Aajn89j2Wo403sXDEuuZyxcHUH/fCuC830EBd1f0Lu21mfJOCsT7M5wt
VXdRPW8Gcq4Hfetgs/0H82ZHUd5e2znvl1pu59SHtwoOMFut3bad6lkLp/Xr
nzglk+rZYwdnPFaaw+z9oB47OOOLQ8wOzvgkUwvCeJPQ0+ZXX+rnsXDSqYWx
nrOpn91g1n5e3z1wzsEVt9f+oPyX4PKyN2VK2n8tNAnmzBeuLsHc8SIimJNX
kgNH5uROH1pI+avhc/MnGS98SvXcFcJZn5RlhnDW//iVIZy/t+oYyrn+550P
5eQVPg/lnK+u7XYq2PuLxcPhAK/XIe9p/hCc3ckZHxzKd3LGj+A2OF3DxVvb
lc43gzCMX8uyb6nR/mTZnDDO9VdyK/d16dBdnPGG57CL8+8L/Xdx1k8lLbs4
1/NKnd2c8V0wazdn/cthC8zajxl8YjdnvZgvCOd8npVdOOd5AV+/cM79RfIx
OMR+2vbMeMpfDLP2/7lOj+Csf4rXw4WRXbpmBVP+ozBr/7XyHjzAp0U18Djl
V0ZwPi/LO1LBfp5Jdgj+4Z0ZyaP1Y/4dmLWf1KoeZu3n9O0bhevrlvWN/g+p
npIoznqaq5xrce89ClHMmNTtYXWUdyIcG+umWXKL6pkP5zyo0plzj+r5EbYO
iihbmU95e0YrRLaxZX2efaO8FvA6PdUbqY8p78pozvpu8ntYUDd72GEZ1VN9
L+d5Fp75Xs7xFLrv5awfuu7dy1nfVXaLQT+HJSxR7Ufrp2awl5u53fkGyu8K
F9a7XB5vQeunUTBr/2FWLsx6PstqTKyCvR/Rdyms0Tb2d/IkWv8Nj+WsB0uz
YdZ+PV41fE7Z1fL+ElqfXizG8fP8tuSVJ63/hsFtE7tqWofR+u8FrgUvYQtZ
3eaPvrT+22Ef53kSWcg+7vMcGfs4zxNZPYNLlXOvT5lM+Xn7Fez94MnD9nO+
j/DMv9f/9zyb61O4l3Rh1u85lP8PzNovLdE/gHrPv9rDYzjVU3qA8/2zfh3g
rG/LhhzE9VvOSINRWpR3Ntxrlc0ze1vKu+0g5++lP+CNXvfcf9L+bZ5OHOf5
LeHMOM7zGq6bYVOTH1Xt6fcqcXIc53kLweB4nJ/Jv/PyOtLvh7bxnN/HgjfG
c54fy0qCl+Z9usmbSb/PFcGs52l9pyVwnj9J9oVZ+7ukR+CnqqP7fqfnXXj3
/r1/kO3bt/R5wkZYxS7eKNaLfj9cdwjXd7uKbhyKpN8PEw5xnu8Q3D7Eeb/D
53/+33654D6HFeznSflxMGv/oFXBYc7v076fYNZ+nGSNIxxLJxzh/P4s/gCz
9l9J+EfRP4U18y7nfp/0fzaoldE=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
B8EBMvI=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV22lcjH3fBvBBdhESKkpkDWNXwpxlSaRBQpERspSEbBXGVokYIVES2UIp
S6XCZNfCSLJExp6ZMLJmfY6rY1489/3iuq/v52xmjvP3X8/laue9cPzsmiKR
6J2BSPTf/+N/Cqm/RuC/6obiH5Z34LTmd44P/P3xP0ur4La2KwLX8Li8/UKN
YPvq1ldxzWqnusC7B5UcelCj2urlcPzk2Pkb+PcB3+CMypATdekEywCNcPt5
R/UZ/r3KGfaJkd/rwuOipfArk7TV+jzi/XCSj3eSa61qK9ss0gh+vz8PHkrr
RsJ9xz4s2FaH+RfDunvtHg+vV21pHCzu3fzl0X3V5yO/Dgc+du7ZhTYavhif
t71cNXx3tSUL4auOi7pPja52wB546jeTQO891U64An+fE5yo2Ftt1Xu4pDg5
I+hotWV+SzTCwLdXDz5KqrYiGjb/MEIRd7baOg0c0K62/7iD1bZsEagRgiyj
I8OZJ3UHbFzgetyNx9UX4Om+N2aa8veNyuElk74tNefvS5ot1QgVp5Z2abmL
ee1hJ/9BN3Ljqy3Khg2+Ndrcht8vfg2fNto07yqPy5os0wjh220yXx1iXlt4
oazRrG3Mr5wJ2+89McGI9ZG+gBW/pv3rsJn1bLRcI7hdv+LYOJz5+8PHDcN9
gzcxvwxO77rx1uMdzL8Z/vFnzi7LBNaz/gqNEFonbMxr5lP1gfd+T7v1j+cn
8oKVZecLimOYPxyuF3Kg/qitzH8avn3IRz6b+XXilRrh5KUPVc/ZHpaecLxJ
gzpfTzL/Rtj8zrb4eanMfwrOEm/sMOQU8z+CG2rThnicYX0nB2mEnbFmV3bz
8wHr4IfuM7yvpTD/SfjL6Dt1M44zfwksMa9ftCeD+WsEa4Q/QqHzgkzWdw0c
4VxRo3c665sEO+cYbB17kfnvwdEzC6vqnGf+v/C3qtDcofx7aecQnO8+w2ur
01jfI/DNoOKzx86xvnfhNZPHHxrL/ib5Bffemq5+mMz81qs0QlHW+CViff1d
4VY53XS19f33ByzzbTbBmscVVqsxHi0iZqxmf1GOgee3vHJkP/PolsHT1mw7
p7jBen6FUz+5bVqfw3parNEITwJ9g9/fZN5RcIMbW6YnFzNvINzI+X3TqtfM
Gw//jlrwtM9n1tNcjvY78/eEwUfWcyS8Z+WEmadesT8sguVWDxf30zJ/LOw2
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
msfxLhkBHzMc1subVl1t/j+fF32EB5aMcdNxvIpbG2uFSY8m2unfT5I5wpP/
ep9pyudTigXwkMPj21XwfSPLCjjrxKatC/XPi0xaYDzvG9zMlvWWS+Ck3UlX
FgUy/3xY5zz9XQnna/VOuG9imb092yuguQnaz2Hl2Vy+r5cwGFY4GdbaxPf1
VHPgZqXljw9wvhFFweav9ugqud6Jc/47Hv92T3u+f6u0a6kVlr5YH/BJ//xw
FrypU6rxIb5PYrkNvrwiQ3KV85/0POy/b7jmLOcr+Ut4xP6mv1uyfkberTCf
j5qtKuT7DpIt8ETfkEq5fv5Kh+f2tqmfx/k5QQ2fMm1l0IV/L9vUWis8cvkw
4L3++coZeGuBzalVzKN8Cne1DPuyUp+3rqlWOHtl37cwPs+y7A0/1CYrJuvf
J0iFferOb1nG71M/hm/UrPrmp3/eWdsM80tUmtqa7yNIesLzM64b3eT+JWAK
3FB75+Ii/p7oITzP4cmCVvrnQzXNsR6VeN7z5vsxMhtYvahHWWM+j1K4w/vD
pONCuF9SyuGfver9ea/fn/2DYxb/uK1/3i7v0gbzv92S61nc36VOgOM0+yYk
c/+mXgWbjAj6VlP/PscxeEXnEmv7ztyfdWyL+btQXaDh8x2VFF62tax+Pz4P
FAXDp8/VTD/F51/iw3Cv7XG3h/B8ZHfg+baTP67j/lPnYoHve7quSMrnHZYr
4J9BZlPGcf8uPQg3q71Repr7U3kB7Lbog3sp98+p3+B+zeeqBnH/LFlqqRWa
jp+Tekq/X98Pe9n5NgnQX2/cgpNan5jTl/t31WfL//m8qG07rbCzz9WEbP69
8jpspNibXJP11+ngJ5kuPtu4X7U0s0J9Qt2+Kjoy73DYcsv5rIP692OuwIpT
AzqV8/mk0Qe4rpA3ZAm/T9KqvVbI8Cg8JOH7GAEO8BoXVXI5+1eCH3yqdFbo
Ys4vYi1cM/nCZne+7yZr0QHrwzbjNxP076MNhW+syjrYWP8+0jz4VbcOmV3Z
nrodcM2Wub/W83movJm1VnjRu/7mOhx/qfZwj+HmlXW4X1b7wEHX9l0p5PNY
o+1w5+tt0yX8vCQbtr82sHsTPt9V2XbUCkUrLf7M5vN60Sx40csyi+H691G2
wi4/67Vuru/PmXD5GLchzneZ/wV8I3Oawobj13JGJ63QqHxxV/e5nB82w/LI
hRtOcL8gPwcf+36r8W/uZ1Ofwd1vXtDmBHA+CO+M/lY07ugfrpcJp2H1mKFd
/4g5nz2B8/6eMTn+jutx3S7o/xXGG2e1Zr17wVYeVwdahXC9OAW7VlrtL9rI
9eIRPN8wyCuM73NaGnTF/P5Pc1TK9/ulPeBSs8JnAvef8snwjHvGM99xfTJ6
AMf1LI9sx/dJJTW6of4HVj04qX+fuhu89tIJo758vz1hIny87+bWk/T7sTWw
hfjDuKFcn2V/4ZGv6o7tzusBRWcbrVD1x9l+xnLmHw8fOh4sXcDrAV0IvPfX
j4nNub+3PAr73K83oIDvL6Rad8f+fFtUbxu+f692hX/a7/UO5fv3RkGw9e6N
jqv0/73AIbg45FHVwS3Mf/t/Py9y6aEVLkQcObKY+3nxcrjHNcci6yDmPwCP
GfjVUTqT+fPhdRFf5xtzP6D8Cq++X5JXzP2LNLCnVqj0G/hqnIz1jYcjgiSB
tUYx/03Yxstnh7g781fCs3q41jF/Ud3eRm3EGB+FhVdnH+Z+LRb+u13+t/Mo
7teuwZ7hM+Y+8GT/0MEdNzh/qxvN/ZppL61gYHgy48LZasuGwem3umZ2Ol1t
3WV42LegkQ/jqm35Hs7+veuXxfBqS1v21gp19utWes3mflOAs9ouPLbbl/tN
X/h4/LeLG3pXO8C4D9pno7fdmaXMOwR2r7umcrQ/886FN1zV3J2wmnl3wDUf
5aw5FVJtRdO+WiEqJLPLm7nVVg6C701psKQVj+tmw37r341zPMi8CnjWO4NO
bw8xbxb8Jrptx/oy7n8H9sP6mTzpyUNv1nMmnJxlI+lnVW1JJHxw+rp6h0yY
PwMeq8hoG9GY+Z/DvmpdZr32rKesP47P3fnS5sv76npGwJ3XX69Rqau24ix8
u4V2cqgp85fBR0ZuO5Vnzfz1BmiFXxZhFQ6jWc8wuHHYhBD7YNYzDa4537ul
+RrmL4VXVvTIO8n2N6ozUCt8rTBLcs5kfjFc4uLRMzGH9U2B8xKaur88x/o+
go+PbjL20Tbmr2WrFTIX1nKwiGF/6A6fnfqzeeE11n8S3F1aWFRxmfUtgYum
1/oZfZ71FdlhPq0X23VNMvN3heMyxy6MP8H8bnDf6Ed28jzmXw077By6y1jD
+v6Bx8fMEOlKWd9Og3C9E7dg08grzD8OVo5IiRO/Yv4Q+MulCPkSHhcfgWfZ
XrCoxfNXdrDHeLvk9fjfA9Z3LHx/6ar5ItpyJdztwdvoguvMnwiP+vfn63sl
8xfCDzy/Lgzm+DAaM1grbHM/cOztDtZ3GbxY3kX7ZSfzJ8Dp+df/5h5g/jy4
wuZlaGYQ83+By3ZH1imaxfouGYLrl/jrga03sb774KjSt7VGRDL/DbhehzeF
E48x/ye4VZdXj+LOML/5UK0w1DtidcJJ1ncvvEMx5pN9POt7FT5sGyZ5vp/5
P8JDTPr7TmJ/CXCUaIXwwgXyeRwvosuwxzWfrZMTWc8KuJ71Zf/cXOY1EdDe
fyLuxsYyrwQOEF+bL+P5K+fD7rrs07OTWM93sEOJxQPLvaxncweMv+At7Z9y
vKcOhp9YvtCOnsm8c2DzE+crX85g3ig4yXxrreGcPxKMHLXCj+lNapX2ZT3t
4BX9jl7wFZh/NmzuuPH8gUXMvw2e7hSR58f5UHYe7txs/q0DfVjPAcMwX1Vm
JyjbsJ7e8Kfc2u+Wd2D+LfDc1sE786XMnw5rYmMaXXZi+08fjvPtUNGrbCTr
uQk+vbHl7mIv5j3z3/EAyfBOrsz7FB7xYt2yz/x+RegI9IdKA0t7A9YvFd6S
a6Pd87d6vtA9hiuWjW3T50G1LWuPxHrj+rXm2UPVlvaEy4N/3V0XUW11Mnzu
h+eP/O3VNnoIL7VuL7oWX21JTSfMv2vMV4lWVTvABp59O3S8a0y1E9z/O968
S9mjUZy//sHd8l2KNk3h/NVlFPqT2YeJn3tUWzkB3nto5o+5dsy7Cq5Rw73x
gYBqy3/DHT7un7NoQrVTOzpjvRhUY9K3IOaVws/id/p09WPe4P+On0h64c7P
Sw7DBU+2nYnaVW1V+9GYX4VEYdKOaovGwg0v9NKNlVVbvALO2NJvaqtA5j8I
by1rc7EzrSiAz45LWTxJynqOHoP1Xvnrb0p31nMpXNv5tc9oU+bfD7s/M6hn
1Ir5b8FlU1KNWv2rqM7/Ga6zyKbGYDPWL85FK8hOBaYZD2be67B5kYFXPS/m
/QSf9pz6pgl/X2w2FvOl9eKrPuNZzz1wo4hn20vmsp5X4NqrL9j6D2PeD/CQ
PXXbvB3KvK1ctUKaS+7hAZOZ1wE2Xp89/Jwr65kLP7FoYN58OOuphX+bzLw4
ZyXbv4UU9e0ZsmJrOPMPhb+3j499Hsv88+B9RQdbLUxhPcvhnPRzJnaHWc9m
47TCxtWeX4p3Mr89XPZ95elDcczvAx+Zt2jttd3Mvx0eqTHMn3GX9WwyHufT
zbxTSiH7gy0s6SoJdTjL/LNgaX+h3al85t8Kh5i2HFT8lPkz4VYSg4zIEtZ3
wAStkKryup1VzPrOgPtnro525O/JNsM1z9VxPXae+c/BfyeOjfx1jPX0csP+
0Hzq8DfprGc4rFpo6eStYt7TcJ1r/XvZvGTeJ/CPqhWKG7nMW3cirtfGu7+e
yXolbIRtV76zmsPvV52CA044X3QJZt7H8PWpv2TF+5nXwB3Xu4pWCeGrmbcH
/HBcxJVcfl53Er4j+bnqWRLr+QA+4n4xpWsB89eYpBWE707HSj8zfzfYeoH1
316/mX8iHFOcUlTI45Ji+NrPrlvWG3L++gtLfn9uGGnL+avzZK2wqe0y87d2
nL/Gw1+Lj0Ue7cj5dhXcsEATa9qd89kvWNbuy7FjFpzPrKdgv9j04tq/nTnf
usKl97cE/unK+TYIXqfYrcioxfn2EFz3yd+r3j9YXysPXO93+LN1cXOuBy7w
b8+RxkFvmH85nNZ+9I70G+wPB+Bjs6Z8rHmV9c+HM7O/xq3IY32dPbFeN5ty
c8g11jcQthl0/Pi9cvaHeFi05VHDQ2xv5U14c/juxK7sP7pKuJnhJwttBuu7
aKpW+PZ6R2599r/UWDjdYnD92MvMfw2eGnzDcauS/UMHZzr6Pw89xfym09B/
2obWt7jJ/hEDF6mOuvTPZv+4Ascf7LNmoZr538OTx3de3bmK+Vt6YX+1IrNV
/D/mF2Ddrx4f/UWspwZW1f/cuzv3n3Lj6VphYfYY2+iPzDsEPrJit+fBSuad
C7vlymttqcn+8Bb+8nJQ9K4m7A9NZdiPRq8LjmvH/jAIblVgYVei7w8+cNsu
jh4PanP9VcDX7iqLRnK8KRvPwHh7v7nElPOBbiC8eI2iafhC9ueZ8AT/Cs3r
9ezPkbBHeu/A5qHMnwGnrDlzZ+Re1rO/t1Zoev185VmOd4kMHmt/Jy+L7RkQ
AW94pPyduIz94SycZxZgEsT2V5XBvi/kQ+88rZ7PZdNmaoXXzbuV2qZXWxEG
ezh/r6xXXm1lGmzi67LauzHzl8LL6nSwSenJ/HVmYfw//uewSMx6psABzycG
2dRk3kfw+bK8pj3/VH+fpNZsXM/ruphj016dtzt8rNirlX9Ltv9J+Or3OhEt
BrD9S+BhqrN1Tk5i+4t8UI/tPxTJbmz/rnCQdf7HpfNZbzdY3b7JmGNcf6T3
4JWii8vazmI9/8CNzGYPKh3H/tBpDvZHvvH3p/gw/zh4aPFlxY2pzB8CW/Sr
0dJyBuv5E54es339dX6/qsNcrRBoUCCym8f8rvAby6zLBYuYfyW8+HT36Q39
mT8Rtu4T3iM1kvVsN08rWBbf8avF/YnlGHiD59yUU+wf0mWwn1+778uZT54A
f/HOTBjG9T01Dy7ITtweJGd/GDVfKzSfLfE5u5H9YQn8rn5ig+nsPwn74L43
n6ZEJzL/DXi9QuvuwPlfVAkry55+1nC8KgJ8tcLw4rJRtTg+lXthj94Dbd/y
73VX4VFTrA/P4Ppl+RE2ars73ZzzkbS1n1YQDywIS+H3qXfDVoGTrnRMY30v
w/v3xybVuMj8FbDBGGFWbc43ASYLtMLHZ3Xebj/J/BL40O+Lt2ruY30vwVM7
bi/4dJD1fQd7hMe3DEpg/ub+mG8G9R66iuevHAw3/jMuqAu/TzcHLrUMcdnO
9STVaCH2Pz/bRQ0uY147OKpXuWNbzkdGs2HRxzbDDB4y7zY4dbaBgx9/T2UY
AMdUOk04x3oOhLten5f3huub2Bse8vTjS2vuB2VbYOk73eoo7l8V6bDaoai/
KfuPZb9FGE/3XBo6hrCe0+GYN7NNdm1hf9gE91458c6CHOY/A2d13ByWf5/5
n8LHt/er+/oS6zl1sVaYv61kmOcR1jMU9vzQ96HiDPOnwie7f9h7meuLqBS+
2eT0sD3sL+LaS9Dfm2z96pjJeq6HnVtYDWvI9tQlw68cFxql0pYP4b4n/4Tv
y2L+moHY/2ZYd7Rh/eU2cKv503t+Z3sanYA/fFnTsZj5JPfhBF1lwbg1zP8P
9nv97X5/7ucSuizFfOEaf/oyx4tqAtzB3qPGnyWsbxGsaTLd7Aj324rf8Hmh
Q883G5i/4zKtkN/E7/tz1lMnhft+y/lpp2D+YPjaB796RzazvlVwbOvGqqv6
64/2y7E/K9B8H00bjYUv7G+vG8/xLFkBG2fadEtdwfwH4Q1NzS4toUXtVmD/
YTBgdUvuj8Sj4W31/x23188XS+GVNRrt1Xoy/37475M8h/608hZ8KGXk7oUO
rK/TSsw/v3/6OcxkfRfDTb/7tA3m/JgaB6+WXfWMYT3U12E7u765VpxfjD7B
9dYbRaomsr4Lg1CPIJ+QWrw+Uu2Bo2uWepnxuOgq/MZiybAP+vn6A2wxU+19
1YX5WwVrhTYuPpUeXB900bC8Xc/ybEfWNxc2X7qpe6Yz82th7ZS2kY48n9Sh
IdhfrVvgb+zEel6E406Mj5o9iPUsh+/rqu7eH828zVahPxZ+2T+N36eyhxOU
uhkzef0gmgO3WxScGMfrA8VrWB2Qtu7iNNazyWrs92pUrdjE+uts4RdlHZf4
RDPvLDhmeNXIUF6PSbfCKZMzOszg+Fc3WoPrnUxdnbk8bjQA7l0g7Jyn3//M
gOPHpG/6wuuPgM1wZ/XMkYXs3wnnYGezMrfx3A+I+8qR78Lz/kv0+2Mv+OSA
xeUL+HlFOOz+qOx+Ga83ladh0d/TBaFjmf8JXP4tduoBtlfqxrVaoeNLeUou
1z/1KXjW8clhESOZ9zH8xuPlzStsP4nBOpxP8ZKgi1x/Rclwp0hTVQ9er4kf
wHknDDsWc78iq7Ee8+/vzDOrOJ4V3WBF1T3z+ryetTwOX1w/7msXji9pMXwk
rPa425z/5H9h4xVdJsfy+j218wZcnyfViBzM63/1eFjSeOy+tGTW69f/HldZ
b8TvtX2+S8brOZEUNrxR9OVSFPMGwV9cm1et5N8rf8DftflbJunXA6tQXJ9O
6flnEedDSxe4RZ5VUCn3x9Ll8OUlgwuec32TH4Bv7q8bdlS/37UMQ/8JtFx8
9zjr5wzLiswVqWz/gED4W9VJ07ecDxPi4Ypy8/sGnL9VN+ENYZODcrk/lo0M
1wpjsqOXLeL6qlgEPxjToHlqKvPHwpoxs4ROPK67Bs/7OMEhnPtxSx28zih5
+iDO56n+mzC/1vdu+uMe6xkD156bLXpyh/mvwBHTcty/PGb+97B1mkmc7jnz
t4zA9WL6cU0Gj4uV8Iilr7d+5PWhTANfP79trf56UWG8WSsMPNU/qVDDvEPg
vXtNJsVxfZJegO0St9k/5PWE/C3sWuNdt5wi5m26Beujatt1Offv6kFw5hP/
mZtLmdcHFjfKvbf2Pev5Cs5/vDVg7ivWs3Ek5qsDXybW4XotsoV3Ni70a8X2
FM+EW0ZaHTv+iPkjYTsHr6hsXh/oGm7F+r3Ls84ZXh9Y9oeNVuRZz6pgfhl8
fOpkuW9L3i+LgAOOt12ewPvbqWfhOLP+jtN78P5Zn21a4cTzV53XduL1xjR4
WVppZmMzXm+EwU+qbOvqaFUabHzy/LTFvH8megI7a6Y1vsDrS4WHAp/3XPo4
uBevPzfAHnbeDeSOvP5MgS+V2ldV8X6h5SPYzsS4/PIAXi/V2o7r68yWeS95
v1G9Fg4JG7pL4PWt0UnYz/qhmYMN85fAKYu+uc5jvgBRFK4Pstzinc2Zv2vU
/5yPOAne+1NXx4/PE2T34Lt3V5UMZ30Uf+B6Xw5ndubzBGWnHeifw3o6BfB5
g1wFfzPd0SHRkvX8CdfK6bt9Aa+P1R12YvwcW3Y2qg7zusJusf4dnvP+pmQl
vHT64JZqXp+rvsMNPNd/bxPAelrt0grF2clx6WHMOwY26f5oVL9VzLsM3tKs
6c2QdcybAN+pGOOatJb1tIjGfJL1Ybg5719LR8FnXwfbBPP+s3wJHFLRWeTG
50+p+2CF6/bjQVnMfwM+stlLuYb39wNG7MZ+zGBnsyd8fykhAPZf1Wl5Iu/P
q/bCc2/WezCT9+9F1+Agu+Gn7/N5hPgjvCwuxrnFbdZzQQzyNFS1T3vG/rAb
bjfboLYN31+yvAw/vH6jbf185q+ASzJtysT3mN9kj1YI3X+jWb9/rO8u+Lih
5tE7EZ8fXoJjFo76nVeDzw/fwfY+rVs25/tQCc33Yr/Vp9XHW3zfSjUY/mqi
VHStYj3fwOcu/vxoyDxKo1it4H3h1mEnHP8/x6FG8Q==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.5181525097143664`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 1.5181525097143664`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"EFA\"", "\"EFZ\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.9679301488921903`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.03757150424750149`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "25.7623475098567`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6877211113806815`*^9, 3.6877212643788567`*^9, 
  3.687721510493889*^9, 3.6877217441506047`*^9, 3.68772216712606*^9, 
  3.687722984397417*^9, 3.6877235831088696`*^9, 3.6957145750077534`*^9, 
  3.6957281466407585`*^9, 3.6962339326490183`*^9, 3.696760744758747*^9, 
  3.6967614798352337`*^9, 3.69676155356863*^9, 3.696761749770854*^9, 
  3.696761939509365*^9, 3.696762081686345*^9, 3.698497752280811*^9, 
  3.6984978201604033`*^9, 3.7020196726620555`*^9, 3.7046910099035273`*^9, 
  3.7050414361952705`*^9, 3.7052520925894547`*^9, 3.705314821017618*^9, 
  3.7053149606589637`*^9},ExpressionUUID->"baae6d07-b213-4bb5-b3bb-\
8e038922a534"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<DUST\>\"", ",", "\"\<NUGT\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PortfolioChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<JDST\>\"", ",", "\"\<JNUG\>\""}], "}"}], ",", "start", ",", 
   "end"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6984978302715607`*^9, 3.6984978560185995`*^9}, {
  3.70201941324889*^9, 
  3.7020194137295437`*^9}},ExpressionUUID->"9d865506-bd6c-4380-8300-\
cddcfd93fe89"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
T/1B51sT4eSgyb2V1el42Q1YbA1rDqXyVf6EI1otCZqUx/l324PzxXD1BqUr
rsH9J66PUdWh89X5cPtvC5KDQzm/tZPMwo6tq0ambPxJ9bcv3Fpsfl3o96uy
4Ct3ph1LX/+D6vMX+E3NA63l5aj+GGrtNQvpYnMaR+dbe8Gnn36a+E5Lx8vm
wlSdHnB5foSHf/V/VfUN2VR9H8oLvdGIwZQfqRdcd37cje1f6HkrZsNzI9+4
NfnB5R0LL740L9bFi46XVEvG8xaHP3KyvBvsFjTBo/sqKg/VTDiynTgAod+v
jUm2tb+OVN5n4exdY/FGFqPyFPajPFvWvfo0vgSV57T9tvEIWR8FO7vdTCwW
VJbqczp857jYgJam/Jvh4k1HDGm5gK6nm3IA/dk62fhHpqJUHyJhly6uk3tu
pvtLTsFer/3bJ/rQ8apyesQjOPtPQnF6/uHwkrp1a093KknPPw3OWlTF9MWF
8qN8obfFK5zfsim2/oB+r74dPPPC8er5/9H9FUfhp10bf6n8mKx+BufsKh1X
N5DKS1fqIOKVHhFrq3+j+mNsDVv7p79SN+L6q4Lz6y5Kf53F79cTePe4ZV0b
dqbnbyieahYo3DpG7Y21BXx1ReKBdgLVF9loOHZa6Q9DO9DxypXw98Vig0H1
xeRwyCwEbF0pKVKO0qVyODQl5kjJSLJiBDwWb9/7z2T1MjjBs69DzSSqH7r9
h+zqk9z9MMY3jTZPHbaB2wdvGC97Sm4Xrg/BcHJ9cYBINuyF/ds8tQ55Rvm1
3oZbXmk2Iacw3U8z5IhZoOHqce7vFsMu3VvMebSGfq9pNxwsdi/rub/LhgfV
nuGnf83j+d9w/7H1n3Z/xvMNQUfR3yC6/X6P5xsS4ZLi5S/Q8XIjHJlTxPnm
T0pX/YAr0ICJ+5e6xxD/tn01o6qW58+2wy40oOP5hqvw1rvnS8WMpuM13+Dv
IdF/B92h/kjvetwufjD1gfdMjOp/Ss7982e4XWQH7/exPN9UMw3PWwwfR3D/
3Auug94/ehj1P3J/+LlenKDi+OED7P9sEHpcstXlhFlYM0WJJpH6J1kPeKgp
wbziF/d3arhYbecGz1OoPmg2w7283jaMSf1O5Vn1JPorjB5vDqR0RVe4aaFR
JVrfpfJXzzhpN7+m2wg/qPeo1Z1TnP8zMA13Z9P9VYpT6G8iI577nqPztX4w
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
v9JYi1BFDKDTYzv/D63mvPA=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
1S/RzhONqvI/QRsaZQ==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
fg3W+6A3Yrk/aKvX4G+dNommNng+ZxC8uv2NwUA1xs/XzYH5/+xl6bLzpF+0
B9dosH/OkJHnm0qw8bj27w+ukX6rH2wZHlnEGcTjhdrXYb9JXs/fEUf6RVtw
i4rc7fI00i8GgrfpXFlvbk3y2Qt2yWP5aK4m+Zx6Q0IVDDlWJceSelgJrn9a
6rnUDG21F/ywfdxCyzI8npMMfhKc6agUTupB46aEslVZEXLSG81cDq4cU/c9
IQPzz/YDb/YPWRtoSur5PHgHtfbtNL1BjP8JeHD30JgC/wHMJ5UL68/JkoEN
jr8wnz7gjp5Ra41y0IKz4FAXmw95Y/9h/I/A52eON5/W9Rvjl4DHq2rM8DTF
6/G9b8H82n5g1N5rOF9Ep8Dc7ozC7pX4+bQSsO9U7XmKdDyePV4goR7PcvBo
X/ET85kAfqLxkrWEfD7jHpjpp5qZ+gDHWR/BiuOixY+uorljb8PzhpDX+mw2
fl+BGXhgXcGsGwvw862KwFG0BWtMTqE578Bx9+zm+K8h9Tv6DqyfGb2/Txdh
/YgWgL9TaVX9n9HwwAv9bkmoQuVlMr/awOEWP911LMjz2cg8iO/brvcVZP2X
zQPTy8o3jNQk65sLeHdef7Av6a9Z0WDbFnm/ZRRZ3+TzJZT9w33n/v0l/TkT
3HCp5ODV/aQ/dwYzFdlDSjWkPz8KVjdzWnZ0DtYHPxe8/kvI3HeapB6MCuD5
kecfM+hM1ofN4MSMrumPu/D78CLAqn82BCaQfAmvg0tPT6w4eJjU8xtwRUNS
7+27ZL/bUAj7p5eajnkR7ueCcHDhxZu6MWyy32WDHZxGWmfd7sD4a8GZd3+l
qe78gPH/ARtpb6sevugj5je0CPIrsVm4TOUT5jcTXBdaWaK1GI9nisDamZsi
w7RxnP0LfHD6liiRF57Pm1YM/Y35kckHB95jftPBuisC/V3y0axX4Omj49uV
IvF47gC4oM5z5cfXeD2Bzl0JFaHfoPx6D1q8Glw0UHLKRgvj538Hu89utN1/
HsdFWvfg/u+3HL7KhcRrCz4wwfuk1rROjHcf+HLqvYJSYzxf+A0c+Snu7Ykq
tGzKfXiefkX5ycaSfmcFWOg2y3bkZcwniwNOj1qb/JVO8n0R/OQy3TpJi/QP
kx9IqGPaNXtf5JH9zhrsSpMMnLUn+7MveMeoNF3TD5g//jnwdy+lc2xfEv9j
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
MtRnmtdPw7WJlv8D/vDNig==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5474976*^9, 0}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 3.8100712807541965`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5474976*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5474976*^9, 3.7051776*^9}, {0, 3.8100712807541965`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"DUST\"", "\"NUGT\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.016899764153691738`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.37809060232664377`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.04469765725383337`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 
   3.7053149633465056`*^9},ExpressionUUID->"6497b470-c948-4488-82ba-\
341b635a13d4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
+c7gsaq87/GNbDoO3if+HGMW51vfgFt3fzeq6yWyI9M4lfdbj57k+901wYkb
7T5u+0jW9QHzPs1naQ8vwbdrPspsPkp2ZRivKlWOFhmbxUv2VQNH5kPBWVva
c09wU0T/PCWkPc8FnwjZtayone/3pJ0gx/83h6yvAl5l2x9dI5Rs6gY+Ux8J
7P7hlD8S3G5zxGPdCMZ/x74Jsn7QT2N8N1a0oZ5D9Vd3GNnSBfwY1eqeimT7
DDCPmwsyvrt2g7PAIBqmJvsegtedQUD7xfc7p05UFaHepoUYzz07wU/P7SrV
+hrXW39/opaP0/+akk5SlYzYIMkHUr+67WDR/f4xgPZkvAMW93tf5Jf+N9Fk
lff9SmWV8aMkmPeR99KfGLZM9vdjtsr4dhPM63/1Od/2Fyyu/8xOJ+NbsSmy
Hxw9XfqzllP8/qa1jGe/wPVhoDkHd+d6F57qP+/TyXhmBvPvI8qQjRFT/f2a
afSXru/g+6LdmJvP+4KmqQqvO0aRDU3Bm8Ygwcki49nIaf77AiekvKun+evv
CI7rDdNVRfy1zty9ZFMoOFu3CSFvivJ91mFg0c5fcLgb5V8JHn5swdbIuRbK
fw4sqpvWqcmWhjNQb1za+WL1vXbU5xDwiBKnggbUa0/5l4NFd/CTk+O+WDCP
L/52oPy+GVr+wfnOQTPl+cnSWhz3LAF7kf1FN+O4/tRMWY+PPE42vZ8Z8H5r
9lnIj34VifVm4fNGF5jt5iQdKa8XfHBx9uxTi5LtWSJV+fcQZzjfVRvcQ3+9
duGRnajPY5Ey37pQm/qxvQYfE+3BqtSPM+NsVSlcERlVJerDU2O2v58VKuNx
b7Dovrw7xucdL8DiPl+VO7Qvd/o52G+/Q/OFNiDrqs2R9xF+J6U9GnuA+eca
a8iWOeBFqM6/VeH6+dLMRX5Q1PG+10n+vqHy3MD8xjLXn/99pb5ss+Zq/pzf
69w7V/qnJzk7U58V5qnKa1Rnix9TP9bOYFehis8a9uZ8x3Qw/1qhBsfdu+bJ
/lGy19SX7iF4JMy5SQW+z97BjnzJsu6MI5zzXVPAPA64zXHfDrv0H6fu8HnD
Pbus10aX6kL5k8xXFbZPIzjfM3G+rHe2Pef79NvmB6yv6TbYLOr7xlJ+XZSq
TNtT0njdSXaUiPLnF4n5e8bN4DHigthkaR83wOK6Z8s46sv+J8p/HnCV9uUq
ukBVeF20A+fb3Au0+MX3OX8uCPh+T6GFqhKz7+jBYjquj775Qn8/MYxsGr1Q
3k/Qt5b76xs4iShX+tO+dEGL4B9Kn7x/6DjX09gELNqnBZaTLSMWBeTbdge4
lGjAX+S4If9i6FO0yyzSn4WAYY4DIjfKfH0oWFwfaWqjfTlXgHl97xfjtefs
YtkfaRjJeG5tEK3K+5RmmZ9Zo+V9ibbrye5l0X57iZP2HAsW5VJLu5T/Y7Ss
j78s435wDVyC709za4uzofRv0eAW4vrrfX6/IQbM9vYG6sf8bonMl6q1kPsx
21LsD0y3NSbrF4H3N+vVLukwPm86AR4s2meN+fvWt+CWcHAr78r9mHkZvldc
X90g641ay/z9+jpk+6tlfv+WSdYX+uWqvI9ZqWfw/wGEjJM2
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJxV2nlcTN0bAPBBJFGTtaiMRCgZikg0N7KnkSTZJhHRy0QkWYa00TIKlSWj
lMo2tFApY22VsZUkDdIyVxlKJOn3eM5v/pj3j/d9v5/n3HOfe+bcc8/SqA07
nDb1ZDAY8b0YjH//hX849QVyivyvwhb+xWfek1N59k7b1C9++WdGFPjyrZDb
2sFodg7YOCww8cGMpn/mfQKbDfCI3D+i8Z+FAyRyqn4fp9XLpeGfJVZg0447
DUNZn/+Zmw3uYTBxRK4DWiADN8fctt4trv9ncb/7cqrfFfe3Y69hXGYJfr/N
8JDOPrwfcz24u8qR/2093k9UA05JnVK3pi/9z1L1B3Jq6ZX4jwYj8XkYU8C/
x3t65Mc0Y/5rwK8j+vm3hmGcFwwO9uv7fewntELtoZy60yPJXRaCZk0C95xT
k17UjM/PXfUvXq6Y2jQX6xMEgpdu0t4xsj/mJ74GHnc12OtsJj4Px+wR5O9e
fGXdH2wPvgt4emNx6cZ6jIsE4D6tT27/ycG4NB3s23PWnfkUPj/jNXiJj+3V
tEC0cPljOcUtetJV6Y2WHACfOOr45/LjT5j/ZfAfbuOyCevrMP8X4NNuTXHy
yXg/7h/w8pFLHfu4kPbd90ROJYqTvTtmYXlmMtiuKkvvWArWx3kGvtSLr2H9
WYb5dzxRth9aNLpQToVig9di+yaCD5nWHjSe9x7btwzc87q9o9/ud5h/O1in
n8cp9nC0YlGRnPr0nhFxNgivFxSDd10IGh8le4Pt2QrOO7l+uVufCszXoFhO
Bdz5wz9jjXHmAnDmshznq3mvMd+dYMO0k1OeOqKlCvDCqN0v3l3A6xkjSuTU
+WTOtcikKszXHkxpnq43KqjEfHeUKPsvWhgPrsjI7dtzAt6PpVsqp9y2Jnuk
F6K5duDpB9xNstdheYE3WMsvJSn7LN5PfBrM27FTjTsW85FJwH2c34b+eojm
25bJKZ+hhppFta+wPb3Af5/9Pjf7I8m3ANw+6kvHB22sn90IDnA4WUbfwvtL
PJ/KqWFndhb47sK4Qggun1Stv2ABPh/381Nl/6/B/LTL5VSqif0kn+NoZiT4
4OKcDYNz0Jw74OCN7PSRg9D8j2BvoUfWNLVqzK//Mzk1ebttxtojWL902jOV
8rws8Kxe+gfmW3/A9qsFC6ZaOlU+xN9XoiGVUyO/a/xx88f+o7AA/15iet7G
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
4GPOI4te2JHzruYwlfGJP+wY/J5nde8bp+P1bAnYXysk2iWGnG/Jwa9dQt8V
7SXntYOPQ/2O/dfeeU3Ot2aDLVe35cSNJOfH+ceV+9nYPwQN4JfPKq3UVpP1
p0646u8/M1y530PeL89w5fhMxqu6cOV5H/ZXqVaEMl/cT2DMiFDmg3G2B3iI
4k8tuwz7Py8CfPbM7a6l33G/QaEZqTKesaZFqtTH5UWqjH+CY2ATbqje12lo
cWakSn4ciyjlfj8Zv9ZGKdcXZP0cAn5VdDegeAcZb29GqbyPjHdRKuOJ0E0I
/fXb3nObJ5L9iKNClfFScV2oMv6xqsAFw2QndjlinNvrBE3dojdNdpCQ8evw
CeXf15D9iKvgenXrH/0ssX5OxQmV9uAzomlquEHrn4i7pP0ngOdcV/Q120fG
hzRw5q+2EXulZHx4Cb6Q0ct3XgMZf7uiledjZPw1iaGpuBgfPiOR7EdIwe4+
4w86aaDFv2OU8zOSr/FJ5fkz2f9xBMcK4sd1PMffh+N/UnlejZb+BN+u2z1v
rDX+3gyjU8r5EDnfWnJK+X6S87k9p5TjGRlvRaeU8yGMs0aepqm1rzz3aYXh
/Ie7ELxjUF2rowNZv+0C3xe6FTw4jfNP8fl/5bcETJcvw/WmrBDMsl7ctHoH
ri/582JpamPoABt2LFl/8sFDdDRF13aS9ecZsOMc/ZN/r2F9jMexKn8Pxv4K
/pGxcHbeD7J++y+O/v/fa5P1W2yc8u8f0KwHccq/j8D5M/cLOGz/grnHXpH5
5dB4mpobXBju24hmnopXnsfg9Zx74AMLM0zGu5G/R2sCNxzY1+9jI1o06Ax8
n1O/6DV2kPXnrDOq8/N6cM+q1I8p8WS9zDwLzy9PSr/IzbL9H/MZlWo=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.003666666666666667], FontSize -> 20, 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1: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
XOptcXQN6ZdcDqYLNpWFn8P5GJP0ZFRLipfb96kk7xKwWdiur3ss0JLH4Gz6
wDOzHWh6DzjQ5HBF7wmSV3MqnNf9rkfdlLDOXQhWd4obPrOL5N0B5ipe32O5
C+/PlIErtGl+4hNY54yfBvtl+UTDQAWs8+3AejEhVjmOWBdtA5dr7HTdbUDy
J4N/7R769kkimjdmuoz6XfngJec0WQ/W4APvlm1ru0TWgy+4xzh9fCWD5D8B
Tjp7ovI3h+S/D+60+HLk12vSzwUz4H2nWjHM+iaOp/mAh0dfE5m/RzOPg7cG
9j2kfST574AnfthztL0BzW8HFzv3vrg0gqyHTfoyag4zOIWugOuHHQ/OSdke
PNOfrOdb4KnUGzc44zF/GzhotNrFC2exzo01kFHLC49/4xeQ9XsDvKEs3m8L
2f/Fb8HpCdN657qS8011poxSvpK7mdaKdaYpeEK+7eVPNWR/uA4eF0Tb86sa
7yd/DQ5YvUj3lxnZz4YYwvNW9r6/uIvsZ8ZgQ+OZGfs1yX7mBv4YrPnE+hfZ
zxrBHTXzzZ2/V2I/FWbJqBnM4D2N63D/5c4CN70/ffaMMu6/AmfwaJNDvwUT
cX8XR4HDGjS+XjiN+zfnLzgz6u2/srU4nm9gJKN0Tw3rW/oO6yIncHF00Cn3
o3h+yMPBEwpehtO34v0YF8FWHimb3BfgeOH02bDf3huzMKiSnBcO4ItZdXEe
HDQ9FLx2S2jS2na8HysbPO/03/uvtEn+F+C6pn7n60vRNHtjqL9K1/tST953
9oL7DNs8tNvJeZ0JlvTrGCa5kvVQBV40qC2/3UP2t+/gqMEsyt2E7G+7TWSU
k+/o3H+aZD2cA7dtn2C1qhstLAd/XDMrb/xQsp77wIvH3Txx9mkx5tdhwvvj
g6j7GeOxLjgDLhx95Nqek2R9PAEbbAo+zokj60MOvuqklnjLEvvH1DKVUTcX
dRZNSif5F4PDnZR5q9rI81YKtrRnfMiah3kY3eBfWcWZzz1I/glmMqrMz/t6
32k0jwIv8l5Q3BBJ3t/8wSedxdd7f5DzYtwcGSVKcd0t34EW2IKthpRcNybv
P+KtYB+z6/7n/v9+kQzuM9Fa8W4DeV8bbQ7ra+eJ9MuDeL3ICvxUednnjZrk
vNsCLryeGa7YQvY3PthTS9M7Qx37xb4Hvvu9W+OJC1oyf66M0po2a4b0CNkf
NoN/LYxpaTxIzrtjYJd+wa0kEXkei8DdZ2sC4vRwvxC8A5f1LLiUlkv2B44F
vB/+mv1UpZecF3HgI3XfnV+/QfNvgttXz5vwajZZD63gk42bpw8qkudx6DwZ
FTq23j1+KubjxYDXm2k9uDLmPvazAHyjov7al5V3MX8z+Mzfo36mtmi6ynwZ
VRLOZwZuvIf5meCki9mVreuKsL/54LL8U50Wj9G01+B5kjGmw+bfwfxKC2QU
5TTehm15E/PPBh/cpiHeS0fzXcEVIp1dOotuYX8bwLcDujJXzcL52DRLGcX5
aqrUsBTrPENw0ZrESZqzb2P+dWD+2qw6nx6sSyLBVKeN1buzOD/3D9h8r/WN
2jSsC/St4P0zbbIF9RItdgRPlH47dWELzkcLB0tdHfy+i0n+XKv/zrd9hXG6
2A/RNGsZdWKUzNBfCS1fAzbaf3pv9SI0Yz/4g/ZErXwb7Bf7Ath+89zqySHY
b95z8LKCaYqbDMj6WG0jo2wfeHYob8fvh7UH/GfxQtPik+S8FoBvasRvPReL
dUElOO9zpGbVbHK+fAPPXnOqWXQM65xgWzgfIj/crhqN5p8FexlMcnzfSs6/
Z2DH7zT2z3N4vbwXnGWhU6vmgfkY2nYyqv55wPlAAXmfSAfz8qotOH7k/C4D
d3e7nGtaRvaLL+AZSqmxSW5o7iIW/L45OknDspi8P5SCDfzTZh/sxjrzMzjz
xYUW2wV4P44GBefHeeWhX/JJXhbY8m/mc4e/2D/RdvCqXKlWzBz8PtifwK/9
3lLzl2OdN3ahjFoSLxN8vI8W2oBjb/3oL+gh69kPbMIqMsqgY52eBK69Y1Bg
ehHrAvoiON+frPMo7MU8YktwkiBEITkBTdsCblodrOuwkayHRLDihMKU7YdI
/rvgMoZxk8kNsh7mLYb1vyI0/tAAjmd4g4PfjHqQPQvr7ARweltGaskyrPNu
g02Dhi1echvXH2vjEljvZc/MbHZjnXsUXL0sbGCwBZ8HQSFYIWpxcQcT5xO3
gE9EGd/v0kDzjyyF/caq+8QUSxwvEoKdgvs3NCqh5W/Abt7NXTEmeD+G8jIZ
5XeSn6bTgs8L2wQctaJgBo/UJdfAXUsO2DRoYB56E7i69oKaxR28H0txOdxP
fdvSmaTfXCNw4YmMw/q2ZL26gNcVbT10u4ysz3/gBXX9ukFmZP+auQLe52cU
yv1ukPW5FrxJ25HTGIyWR4AdftXZvzhK3nd/g9sLlh64txTnE85YCb8HHYYd
N+vDfBI2+P44+4WKpfh56WHg1cE2UVceY52VA1aUV5TeF5P9a+oqWI85m+/c
GcT9gLYG/OLegJ9YG+vMfWBb68feebvI/pUFHpnywLKv4QbmrwZ7Nx7wW1Mm
xH6uWg3vm20KBtuv5mM/Q8AHc0vd50ZjnXcePObe15o/Q9DCCnDL96otWucv
Y/6vYIsX5389mnsJ+5dhL6Nu7XKQvdpzBfM+BTepO2ltOYh1Wi845ALbamNj
LuadtAb2z7l5IcPXXsR+ngazWU67DwvR8sdgT+Nn3BGr0IwecGa9c8fSJ3g9
W9MBfh+OWXTT0w3NWwg+MnKoErsOTX8E7ll+TBrfkYP9lIGPPXsleeWBde54
NtS99jWvfoB1gR14qFuO/W1RNubfBm4akJREPkdzusAaWt/Spx9G88c4wvPY
Gl4c4oIWWYMV9VX8pVvRcl/wtG9ysy51NOME+L5v/HBVFbRQ3Ql+nxi4qIUb
oiULwEvXZwSZjEDTfcBGN+0HK9gXMP9xcNwVJ9VpZmjuHfAW87ZPteZo2ry1
sJ9YHH/QbIVmbgL/PHGp8fRSNCcerH+m3Di7IQvz3wJn3aLmtJai2RvWwf5I
bwqaWInmxYLNbS0Ucg6jhTfAiTcPrejYiJa8BaveEliqb0bTVZ3heTt1JWfJ
drQgGnxyh9ujK8vQ4uvgXe47f0cvRNPegFdoFTybtxLNHOIiozRjs6VH/dAc
Y3Bz1qpwxWq0/Cr41oTsjgIpfh5GI7h1ROTr6SzsF1vBFfrVcbH2bzLWebPA
P2NPb016RPI7g7k5id8YZ0k/68BaMx6tuvGA9PMvOOff0AclrWQ9GLjB79nO
fq1oR7IenMCKul481aVYp0WAxV5dy4qmkvXwC6z9+8ZnmhjnE013l1FTrrZP
vaGA4+UO4A0T7qbfd0IzQsEFWgFJIVq4vtnZ4Gthtp1uf/B5keith89/3OrF
wEg03R7sEv1k0MMZx7P2gk9GDbu4Yh3en5sJNmxMbG07QvJXgamybI9Tn3E8
c6UH7BfctL9bKsh62A0WKLy4fHc+juefA++lJG6dT/H5EJWD3aecYZpOQ8v7
wOkv/Ve+20eetyBPGXXh4UlXWj7OLzwD9npzdNJFT5L/CTj8u9GCq95kPcvB
Th6mi6zeoFlaXjLqu+nKgwE+eH9xGvhrnFzrQRzWaY/Bvn232rfaZ2L+brC3
msvZOn+yPiZsgPcDdft2d32yninw7JyynfIIAfZTCjYfNefwBTZezxu3EfJP
b2ny0kULbcESRc3nm43Qkq3gpKJaycjRmIf7EaxoOy/F6TPp52gOfH+V9pP0
TUheK/DEYnNecSR+fpovuPJA/9xIYR7m5YOLLpmJ6uLI/jZqk4yaXBM45qWY
7G/zwfX/WpTHncZ+MjaDDVoC5eVjsX/sY2CXlfoRaUNxPK8IXFsxzN/kPZpu
4Q3n7+LdKUP34/1YHPCQ58Gl9Fiyv8WBG9vUVJy+oAU3wctbx7MX9qDFreA2
09jSNU/wfhyvzTKqoSzV9JwUzY8BDzu9JK8gBecXFYBVfHj8aWzc/+XN4E9V
vT76prjfM1R8ZJTzydDE9z+uYz/zwVlem32POBRg3tfgLU+jIlLCCzGv0hbY
DyJXfxeewDp3NvjRffNQdRnWaVfBkwckmRIbPM+YDeCKVN9TTnU4nkPzlVFK
N+sK2zXI+7khOIiZ+S2uF68XrQM7cVp+ve3C849dC25uvNJ2SYLm/QGv9tSr
CCrA+YT6fnC9f7R2QDl+HokjWGC5wbH6OH4eejjYvWFIxKVMPC8Fg+BKr4Ht
6+5iP8TTtsJ8q+JvPtlwDfM7gPdz/GJi5Xh+MveDXf3vMofbkvwXwFldXXEt
LMwr190mo36POWf4cQ5+HsZqcOyAS1z+RPK+swdssWnvxt6rOJ4nAAv9KFFL
MNaFleCL1wqPF/ji52Ot2A6/D4e7h8lW43huMPiVjurtczVowVnwtJFnvflV
eL34GbjsvSD25yw0rQ+ccyjBW438HuJz/WXUzrzzB0Uz0aJ0sMZ8kzbHrWh5
Gfjjt2kfR5fg/Iwv4NTBwz8cmkj+iTtk1KE5sc4rBjCf5BQ49UjFcp/7ZH2U
gj9PKnxw+iz2i/UZrJeS/NC3ENcjVyMA9td/7UYuo69ifhb4SGBngLYvfl/M
EvD0SpXHdUlozidwdrvu41Pb8Hnhjw2UUTUq/nW/yvH5FdmA5z6tak8Kx/Ut
9wOfde6wKtiP8wvpO+H5X2Ge8aMb80gswUXfeQt3u6PpW8CTRpq175LhemAl
gqd1D1308DbOJx7Jhf3w2RZmRjXmoc0HBz24OKHan+wP3uArLpaKutfQnAQw
7fGNJeveo/m3wd4fl16qZ5P3n7lBcP4WqXpNmox19kZwZFhJZbw5mncUXOru
zSz0wvUnLAR3rtALChwk67kFbM751BNvSvrpuUtGXf162TvHCa8XHAH7Gn8t
X/yc7A9C8E7L74GbLmCd1gxuixS7OqiT/MrB8Punhu/c6Er2t0PgVLdnU0ea
k/PiGni6rlVA14nzmL8JvPDOgPKFvWi24m5433GbX/tFNQPzG4EzNn0zKpp1
Fvt7BdxnsGSjjtE57G892PfjobebLp7B/P/AiZ/zOnyX4HjBzBAZtbK/s159
GM4vXgv+89hhRuU3nJ9TA97p0n3vvCLOx/8NXqebayfqwPNCNGMP7H+hObbs
APK+wQZfrLPIsGaiGWHgw13xn7ZYkPeJn2DNy8/6/L/i9ZKpe+H7rXlzf4gN
eR9aA7Y+nXY95x/WWfvAPyzfh+5kYz5uFvhcZrbFMEM0TXcfvA+X1RyrOI3j
mavAQWqzn7oYkvMuBJys+8pjcBmeV/zz4PnnRKf0I7EuqgCvL/SZXXUG6+zl
+2XUl1M7VIeycH7eLnCMyp7cTl38/MIMcA31sv5bE9YlT8FPBzWa9LNOY/5e
sFiSat0ScBL7uzMU8v7Zd3zzwhTs72nwnX37JnZVn8L8ZWCJzZ2Fx2RYZ/aA
09JraErkeo5mGJwXNec8G5aj5algq1/x6/9Z4HjGIzDfzrZ3xB80WwbeaTN3
YuXMZMxrFy6jxtotq9wzAc16CFbV3SE4+hLn43aBM6rcWp8dJ3nHRMB+OiMs
36wAx4utwYMpCreMwtA0P3DIX5b1+LF4P/4H8CfJwsf1y9Ai9Uj4/H+WzwvW
RMsXgF1KCkzLxSSvD/iV1nD1w80k73HwjnM2BW1GOL9ELQrWj47uI9M5aPo8
8EBlZoR+AMm/CewVXlb/TMjH/PFgs39NPwpXHMP8t8AuVvxZzMMJ2E9znozK
ddifuTIdzdkALr2/pvBACZofC775Wn2rtjladAM8KZT9StUKLX8L3mO/oO1R
FVoYfQDG2w/Xsko+jnmvg49HOFqlMzEP/Q247lHsQdV5JO+Qg3B+uvmUPM7B
Ou0aOMxD569TbxLmawQvM7DV7RHieI7CIRmlO8hOnybD9cGfBb7c726+Q430
7zKYdmiRxKqD9K8OPDx+YouSPo7n/QWzc95sG2OLFhochuevLb426Vkq5nUC
f5gVuJz3Ey34Bb6d8mP1FEVcv+Lp0TJqzTh7jV+dWKexwcoTX8VsvI9mhoI/
zz0T82g7zi/6AZ4ndr3W35WG/dI7IqMU5hfpz7FBM+zBCS514YsKcTx7L5iq
sg3ZXY/5eZng2AlqOfUynJ/OiJFR0s7U8ZdIXtZKcPMI52ruSpyPuxtcvsLE
dcVbtOAceO+z5Bt7N6Rj/nJw9OTrT9x1cL/jLIuVUVste4JNN+P+wA8Ch/nq
1dqOIPvXGfCIgWCuZAta/gTsaV1XPOMt7o8MOdhEL6N6XAk+78LAozKKN3pu
3a9E3A8kaeDpHs0NfvFYpz8GV4xIOvKUjmZ1gw02ms4Rz8D5uRPiZBSjlppQ
HYrXM0Xg9munv4f44/04UnD8WEpZ2QnNHxcvo0557uJ/uYIW2YKLZNL3jkq4
P7MfgPdIpo0THsTnl/cR/LI/IyspEPsrHJ0A631Xjtmug+T7twLbGHcmmfFO
YF5f8LjUNsWyNFyPgg6w6IJ9WfCdROznqGMyKuAPV3HvTLJ+F4Ddeuo/uaZi
nbkZvCq28vdhAT4PnGPgoltlP3ONcH75iOPwPlrsqGCvieubYQF+O6vs6B11
nI/NAWdF687yjSf548Ap6w9SV9XQwpv/efVe25vOmI81JxHy/Sv5XWuJ83G9
wJV+mtXJX9CCGPDb89c35K0g+1fBf/Ws95LEBXg97S34fGLoztCRaP56vowa
PS4/6+ZQHC86DC5btlBjZgzJnw+uTNhdPKiE4xmvwXn/LDiNLKyzlU7IqDF/
o/R0r6IlB8Ab/MuMHsXgePpVsMPF1W6GamQ/aABnJzfwEzuxzqUlwfMXuvv4
uHTSf0Ow2R23wzbryf5wCcyxN4vnX0VzasHMF0eGvLqN8/H/gO/oTmj6uBv7
JdJPhvfvQkv/2nAczxOD2+y9q/b3YD7hYDJ5P7sdS/JOOymj3qTr/Dyxmuxf
DuCqifHnqt/i98vaD04w8NmWoUfWwwB4oITyOeeH+y1NLwWeJ/UzehfocZh3
9X92VFk5xBzN2QNet/OT0MHmKOYVgNXichSbXqIZU1LhfSQwfMVo8v7DXgFe
MmuxQ8Igvm/ygsE1NtqznqxEC8+C1Vf/rCqbiL/HJc/AKiv89G7PIr/nl56C
3y+0ipgC8vcHAfc/5yx3azIhf49IB4d0zK6N9SJ/j3gCFocHz3lEfo8yv4BP
RjR0J8WR328BaTKqMMLnWOo78r57Cqw5MmDlsWB8H2SUgtMmbNjb8Q1/z7A/
g5uKp9LH+ZH3S43TMur0ubsnxaFoegrY0jxt5I1teD2rBJzHNAk+8I38/vwE
NpS++JsbhXkEY9NlVLB+9xXtU+T90gasr/xE+4ACeT/vBG9xfdFrZUn+/kA/
A+8/Ieu2r+nLsfsfPkKWsQ==
           "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {3.5897472*^9, 0}, 
       PlotRange -> {{3.5897472*^9, 3.7051776*^9}, {0, 2.024975751697381}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
       Axes -> {False, False}, AxesLabel -> {None, None}, 
       AxesOrigin -> {3.5897472*^9, 0}, BaseStyle -> {FontSize -> 20}, 
       DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
       FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
       FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], {Identity, Identity}]& , 
          Charting`ScaledFrameTicks[
           (Charting`getDateTicks[
           Charting`getDateTicks[Automatic, {Automatic}, 
             (Map[DateList, {
               SlotSequence[1]}]& )[
              SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
             Automatic]& , {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
            SlotSequence[1]], {Identity, Identity}]& }}, 
       GridLines -> {Charting`ScaledTickValues[
          ((Transpose[{#, 
            Table[
             Directive[
              GrayLevel[0.4, 0.5], 
              AbsoluteThickness[1], 
              AbsoluteDashing[{1, 2}]], {
              Length[#]}]}]& )[
           Part[
            Select[
             (Charting`getDateTicks[Automatic, {Automatic}, 
              (Map[DateList, {
                SlotSequence[1]}]& )[
               SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
              Automatic]& )[
              SlotSequence[1]], And[
              FreeQ[#, 
               Alternatives["", 
                Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
            1]]& )[
           SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.4, 0.5], 
         AbsoluteThickness[1], 
         AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{3.5897472*^9, 3.7051776*^9}, {0, 2.024975751697381}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
      FormBox[
       TemplateBox[{"\"JDST\"", "\"JNUG\"", "\"portfolio\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                    ",", 
                    RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                   "]"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
             ",", 
             RowBox[{"Joined", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"return\"\>",
         HoldForm], "0.04286427543614025`"},
       {
        TagBox["\<\"std\"\>",
         HoldForm], "0.28604004622690565`"},
       {
        TagBox["\<\"r/s\"\>",
         HoldForm], "0.14985410610001618`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxDividers->{
       "Columns" -> {False, {True}, False}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{False}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     OutputFormsDump`HeadedColumn],
    Function[BoxForm`e$, 
     TableForm[
     BoxForm`e$, TableHeadings -> {{"return", "std", "r/s"}, Automatic}]]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6984978355597053`*^9, 3.698497857049848*^9}, 
   3.7020196766195536`*^9, 3.704691029372875*^9, 3.7050414559741106`*^9, 
   3.7052521514720287`*^9, 3.705314832549121*^9, 
   3.7053149660184507`*^9},ExpressionUUID->"04747758-c8cf-45d1-abe4-\
6ae8b64e282d"]
}, Open  ]]
},
WindowSize->{1218, 757},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.35 Inherited,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4635, 117, 380, "Input", "ExpressionUUID" -> \
"8c08837f-8e1b-421e-be78-0bc82eda6287"],
Cell[CellGroupData[{
Cell[5218, 141, 1304, 34, 156, "Input", "ExpressionUUID" -> \
"ca58564d-e2c2-4c41-a41b-4195dc58339b"],
Cell[6525, 177, 558, 8, 43, "Output", "ExpressionUUID" -> \
"f23e9290-700e-4fe7-ab20-b5a47db629c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7120, 190, 1400, 37, 212, "Input", "ExpressionUUID" -> \
"9ec59700-6cdc-4997-9164-7d1dbcdd846e"],
Cell[8523, 229, 21500, 434, 605, "Output", "ExpressionUUID" -> \
"0bf1a93c-db37-4f77-aa3c-51703611785c"],
Cell[30026, 665, 21297, 430, 605, "Output", "ExpressionUUID" -> \
"e51f5e01-42fc-466b-8feb-d0e3198b374c"],
Cell[51326, 1097, 21857, 440, 605, "Output", "ExpressionUUID" -> \
"221cb984-c019-481b-8626-2c4333640d8b"],
Cell[73186, 1539, 28850, 568, 605, "Output", "ExpressionUUID" -> \
"d31f3904-8848-4abd-b2a8-fb7587909f02"],
Cell[102039, 2109, 29135, 573, 605, "Output", "ExpressionUUID" -> \
"ff2ddc8d-da33-464a-9bd4-c69b46518c3d"],
Cell[131177, 2684, 29038, 571, 605, "Output", "ExpressionUUID" -> \
"1ebee599-41e1-425d-9cc4-c0addd733fb3"],
Cell[160218, 3257, 36222, 702, 605, "Output", "ExpressionUUID" -> \
"1b3f1c1d-a346-4618-99b9-4695f302e75c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196477, 3964, 1317, 35, 212, "Input", "ExpressionUUID" -> \
"24ead3c4-5f8f-4f88-bee0-28c49916db91"],
Cell[197797, 4001, 21933, 439, 605, "Output", "ExpressionUUID" -> \
"cf07595d-1227-4b93-8fff-1174cc645cd7"],
Cell[219733, 4442, 21211, 428, 605, "Output", "ExpressionUUID" -> \
"54d8fc21-3a2a-4117-9118-9e436e89e74f"],
Cell[240947, 4872, 20865, 422, 605, "Output", "ExpressionUUID" -> \
"3726fd7d-8b7e-41c8-9714-53d1c481b75a"],
Cell[261815, 5296, 28954, 568, 605, "Output", "ExpressionUUID" -> \
"e4038b7e-0674-4590-95ae-e8b1f16b7857"],
Cell[290772, 5866, 29102, 570, 605, "Output", "ExpressionUUID" -> \
"85200671-6a21-4508-b25e-4f99ff043141"],
Cell[319877, 6438, 28559, 562, 605, "Output", "ExpressionUUID" -> \
"bbe0fd64-9044-43da-8924-2255e5e1b7e2"],
Cell[348439, 7002, 36039, 697, 605, "Output", "ExpressionUUID" -> \
"f3cfce94-44bb-479e-ad31-ef6ee65023a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384515, 7704, 489, 13, 72, "Input", "ExpressionUUID" -> \
"450dc594-3d9b-4fdc-9103-d430ebee1359"],
Cell[385007, 7719, 71178, 1258, 615, "Output", "ExpressionUUID" -> \
"8fce0729-e724-486a-9cf7-ecdfc5880e19"],
Cell[456188, 8979, 67834, 1205, 615, "Output", "ExpressionUUID" -> \
"fdaeb33a-587b-4373-aa11-5cf8c76cd464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524059, 10189, 490, 13, 72, "Input", "ExpressionUUID" -> \
"4277d921-c313-41ad-9dbe-20988045f588"],
Cell[524552, 10204, 68905, 1222, 615, "Output", "ExpressionUUID" -> \
"ad5e0c12-fa5f-4d79-a208-fe563a5e2ae8"],
Cell[593460, 11428, 69001, 1223, 623, "Output", "ExpressionUUID" -> \
"003f8516-ff0f-4c1e-8757-a3680d0a8f9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662498, 12656, 766, 19, 100, "Input", "ExpressionUUID" -> \
"b1d487e7-f623-4847-a8d2-c923553c7741"],
Cell[663267, 12677, 69844, 1237, 615, "Output", "ExpressionUUID" -> \
"7f72dd55-5f02-4fbc-95ee-468205b92d74"],
Cell[733114, 13916, 66472, 1181, 615, "Output", "ExpressionUUID" -> \
"de9be430-cb7b-4388-95dc-7eed90b1418c"],
Cell[799589, 15099, 67428, 1197, 615, "Output", "ExpressionUUID" -> \
"baae6d07-b213-4bb5-b3bb-8e038922a534"]
}, Open  ]],
Cell[CellGroupData[{
Cell[867054, 16301, 545, 14, 72, "Input", "ExpressionUUID" -> \
"9d865506-bd6c-4380-8300-cddcfd93fe89"],
Cell[867602, 16317, 69790, 1237, 638, "Output", "ExpressionUUID" -> \
"6497b470-c948-4488-82ba-341b635a13d4"],
Cell[937395, 17556, 57035, 1027, 615, "Output", "ExpressionUUID" -> \
"04747758-c8cf-45d1-abe4-6ae8b64e282d"]
}, Open  ]]
}
]
*)

