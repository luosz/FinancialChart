(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    406882,       7533]
NotebookOptionsPosition[    405742,       7492]
NotebookOutlinePosition[    406118,       7508]
CellTagsIndexPosition[    406075,       7505]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"NormalizedData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ziv", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<ZIV\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vxz", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<VXZ\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ziv", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"Mean", "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ziv", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"vxz", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ziv", ",", "vxz", ",", "mean"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<ZIV\>\"", ",", "\"\<VXZ\>\"", ",", "\"\<portfolio\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nd8S//3B/BYtYmtaMVWM0arRslta1eltXcotYlNtQQfezT2JhStHat2
RdUqKvYssUlUU61N+3vdc76Pxy/vzx8+nm5yc+655/1+n/dNqgwZHzost0Kh
+IY/5P/jP43/drvEf3W2wR/6MXCvpvHHt21Nl21aB0s5oTlvzpKtFthnR9O7
uodk40iTXVoQFpCZkUq2rIbzT4xdXXQd2Xkefpz/Ve0Nd8mqj/DA+8se2BeQ
tSV32CX7lrHn3W6QbUZ496T4bxXqkZVn4fgJ+wPsv7/I1ryDE4LOGnsPJ+uL
77RLt1+1r3F1ENnUHL6cMKR6+L802epT8DuT71y/lnQ+3Wt40rz6caqXdNxY
JMYuOTTFYxZX5/h94N2+Udd/xnH8uhjhegwv4ci9V/ZnhJDNBXfZpc7aB7vW
NaDPtzWB835+a15UhKwcKFqzaJfw+Va33XZpb/UhEXNOkBWN4At9LjdstZ7j
7wdP/5i8pVNber9uPhxxZnPxIl85/sPwh5C3bruSyKoGe+ySYe3+/hEDydre
cNHcDeq4//1M8c+Fu4V7etbypOPmA3BQ1tQl7ovItoewMT076co9sr5HLPK9
MOtchJ1smh0rfJ51L3zqg8eWBrkoPsV9ONqjQWi+WmR1NlypSofwgC/0ektk
nF16MMezXamOdNy5B14xY9mYubfIqjvw+Tehj34Yydo/8P3USJ0xnWyosRf5
CPQ6edXB+UyB/ykfhFUwcT38hJPmef0MiOB6qLrPLsUeSq/id5hsDYLzFC20
/U1DrocbsH6k+6g+s7mev8F/Ng0p/HAj10Pl/cL4cHaEayend/R6yvU8GS5p
vWwxzuR6+AqveeE1+EATrudKB+xSgw3ffhwrS+9Xtod9nsdP/BVB1kyAR677
mFa6CY+/zXDhukl3lswlKyoctEtVdbUWth1KVgfCZX97Ld4wkKwbB+9c8+zN
lK5k4wY4qseTTkuLZVD8iXCdXR9zLb1Gx7XSIcTT7MS8zDl03DAaVtmPN8g1
kGxeC1droWoTG0q2XTgknE9ph91MldcmFiKbRhy2S+7Tk2pG7aHzW1fBSUs3
HembyvGfh/st61jo3T2Ot4TZLvUpdniMYhnnMxq+eDdqUqqT83kGnlrQuWT3
CJ4f3pqF8WkodkS4v2Zf+HNJW5nOd7geTsKNK05MfxbE9fAKLnjQdqGhO89n
hY/apeH2B8Ezp3I9eMPPTy07mN2P61cH15u5OSU6jGx8ARv6TlT3fsb1W+AY
8p2WWXLdTrKzMbw++sG7kud5/A2Ah3g9bXN/JI+/hfDeQZv3xPjy+Mp33C4t
zby++F8AWamGPdefwRCj8anpCxdw+/Wl6xiy/j+4ytS11np3HBT/IfhZid3P
PQ+T1fVP2KUm7fqtPB9E1vWC27wOT7t7mWycA/v6G28ueE627Id/RU39lRRD
dj44IZzf0D1eeL95Fhw+waPw00oUjy0Odt88f17CULLyHrwhuVhJbw1dj+Yf
/PKuyXH5LB23zjxpl7x/B+Wa48Xz256TwnG1FQ4e9en1gBVk3W9YOd00d0Bu
srH6KeSD7ijFo4qB9+XxW1ZzFR3X3oJnVMt7fcw1Or/hB3ymaq9r2v94fqty
Wph/bZ3hxVG9Gp324/khC07LOFPLeZDnM88zwvsVHWFMRtt6deX5eBJsSaz/
actYrocM2Nt7Qf2YAxSPs+JZu5SxM/xAz2ZkVbuzwv3S6uGjL4KerMnmfG+C
X3UoFVgokax0P4d6xGi29SNrAuDCwa3O9KhM1o+FUxeW8w47Yaf418MeQY0K
1PhCtl6EK5b4+Sz3aK4HzXm7pLX1a7lzDdfDKFh57Mmh2fO5HtbA4WUuOPtP
5XpIgH+dOlzjQ03O9ye49sdWQ1sM53oYnmCX1gYGNTTHk20r4eTgT2cmhHH8
5+DPexpNWB7L8b+HKzxMOGz7wPErL+Dzns5PapFJVkTDyxvkia98levhNBxm
mbBg0mrKr+4N7L3ybXtVN17vilqEerA0swjxa+PhqvJyE8X5tVmE+jYXuoj1
9WjqwP52ypetKXwzqV+p+JFk5SB4oW505bj2nN9UWPobUXdTDc5v/kS7tCph
cVDd+mRFYzi0Z8rq95vI6v7wo6oRmuZdyboFsMfCUU3bTyA7816yS0UWT3k/
bSdZ1RD+k/kxpOA+srbPJeF8hnlwUPyPiZuOkM0H4XHOFL8br8maekmYj0Pz
z14WTdb3FG0ywHMsa7L7DeT498GXQ4/PjrvH8T+AXyRqB8/3JRu7XbZLh3sv
+V58CtkSBcurv8d6jj9WPi4vp9s4/ruXxfj/wt+6lWx03sL5jbgiXK9y9xXh
ejS3YX3dAqPShnH8v+CZSYMurUr5RPFXu4r1J2dD+vEQsnonbPO9dPp6a7Lu
Jux3t2zYKn+y8bt43NnpmvB+w3V4TKvUW/ndyOZM+OutrsG+zcg2j+t2qX+s
tvnGomRlB/hoQZ+ZU7M/UrwTYW3htqnz1pCtTnj2lMIdfvUiKyom26XJ5dIq
TJ1IVreFywbo2i51kHXj4UnPj33plk42bkwWzq8qf8MuzZ+gmZf4gaz1F20Y
A/+Rp9N/Hyj+dTeEz7dZ4Dvue6O2B5H1bW7apVvHC+MO0OtNI2H/Hqv7nplO
ViTA8dU6nfYbSFZ/hCdQA0q2hN8SXu803hKOa9/B8Wde5TxfSDYUT8H6XmVF
z9L/kZUrZGcOvP5ATdacgt8PerVucsp7iu81XGZwmw6Lz5JNRW7bpZQ6s16d
/ky2+sATf6/KCLlA1p2AFy3tfnFxezqf8SUc8Kupxu8uHbcUtOJ6L5ap3acs
x9sE/pc46cnYPGTVQHi75eTUQC+yze2OcFzZCC6THJvLvpLOp+kH38ZorHCJ
450P11Gpd+es4/zlvWuX/i5scbCzgfPXAD6J3UtOIbKuN9z7VI2txw5yvHNh
LCZocTm/B+DakSsuRPrx/a57zy7Vn37pd9tbfL97wJe2JRZ/951sng1fz6PL
W3wA1+te+Fjg+NgNc+i48j688PS84Gub+H6H3kd/2t177+6lZGskbPKSL4Cu
RxELnxw4792gV2T1nfvC/dD9gQNv5DuWPYus2vXALu3wqXN7UUOyNgWesLKO
b8ZHsuEnfHvYyaLPx5PNVR8K79fsgJGck7smcT5vwP3WKzDl8P3/9lC439bK
j4T7q+j0SKg/4zV4+5f3eeZFcj6/PhLy76z02C6V/vlwRe13HH97ePuqRZ/y
PeT4J8CLBtRo2jmLbEuH+8rbr1SyssIT4XyaQLh0TbdKw33J+nHwrfTAE+tH
cr43wKXObx3iNoTrodxTnK//1bk++bkeJNm0IaDzG0fDi68sT9ufzPW7Fk75
G9x95kay88JTIR+G1s+E8WMe8UyoT9sqOEBu9/5w/OefCder+QDXq98i8M0V
zu+w58i/YuSI0zrOrxFecm/9sujf7yj+M3CO7/tGRwtyPbyFT9//5rfrAx03
FksVjquWw2W3TJ+8vzXn9yTc1q3NS1Vujv8VvLSVop3TSu83F36Bz8t11T2l
C8fv/UKIR39ctOkFjM2Pbuw0jr/AS/TjBf5InZ7T+RRNYLq872TLMzhnR7Cj
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
uwnjVbcUzpQfN2Xx+DsB8+9jX7X5P+4IDmM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nc8Vf8fB3AkyShlhArJaHdRkox7IpWkGyVatCSjLg0V6aatpUEadI2s
hptKkdWWJC2lwqUo9yaX0tD6vb7n7Z/f94++PR/nul73fd7ns25Dlq7xWKEg
JyfXiT/++z/+404+I2HorzJH/MEPhjnNquufKLEWxsNH0r4/vafAuqoUFoUb
zttJr49dJZQwm4cf/6Yqz7r0KDzwc631c7ouK4JzjeN8zP61/Wejj/DSAxf7
DOhizeufLGGGhb05J+7Jvl4cC3Neu4dldrLXNW7Am29sNOxH17lNsFHq0Zob
ZH7fFAkT37dlWQj9PuFEOGbVsK16lIdzHRZteDtun5h9P79GuP8w97jzjaxj
1VLx/mkOlq41rEut4cgHU9dFv2Mt84NHNS+sUXvNWlAP/85f3z6ULOqdJmHO
nws321bNWmwFu6QJD0x6SfkXw7N000LnvGHN3QMXuJV4vSJXKZ2VMCZRmZHB
9Ho5C9i7xGz6j/esOQvgoMCY8PAnlH8n/GRFn4W9P1L+HNjtUJbz6hdU3zHp
eL36L4ePlJ/nDeumRS33aaH80bC3Y9eU+VLKfx7elPNjxBx6P3E1PN21/wJn
+nz8uRnIZ1Ut7aR8wq1w434mfvgryp8F64iPqPbszv8cVlDWSjlTSfn/wgm1
G0Z/qaX6RmZKmIvjKgYPoHrJ0uG0uMcTnG5R/icw78bsHipk3i/4Se+wrGeP
KL9ploS52TreUuEm1bMSTriTnTQhn/L+gD8oz10RRBYaZyOv7o8I73LK6wYr
VpWvP1BC9XwIm7lMnzX0LtWzEz6ZN671fRHlNTwnYW7VOO7XJMumw1ErFFOr
71HedfDLiYssuujnRR3w2toZCYkFVM9B5yXM6sy22pHnqR+mwvpv+s1Upnzc
UPjxbA0rjSuU/xS80aR+tMo1qqf+BQlT7Tjb4Hou1dMZ1n2/7NfQS5R/NWx6
798M/XTKnwBnm2x5qkvvX3oL/tSkxMug9+cxFyXM+okVps0VVM8g2Hi6S5Lz
HcofB+/56PTk5W3KXwIryqn1a6V6aUhgh0shx2pyqL4BORKmhOd74Ewy1fcI
PHfUKDXvPMpfBAc2yVY/yKS8/UQYb1ad3X42m+p5CG47kuhvcZLqWQBrLT7n
mXac8r6Hv3onvhl5kPL2uYT7fXGyi+8pymsDFzXujGlJpHpeg5Pm/PS7lkL1
bIC7Tioo+e+gvKq5uL/TrozgHKC84+G1ja9W7k6gvH7/Weflx+l0PbYOLrMv
MT98mOqpfFnCvGZCn504RvktYeMRQZ7CGMq/CF4et3OqHuXh7YbvaA72H36E
6tnzCt5Pc+nljfFUTw78NWCIehHdP+58eLd6RIiQ6sHfAVdHTvycc4PyX4Tn
t6v7z7tP/TD6qoSpfP+3JPAh1Xce/N4y5bcC1T92Gxxc+y3kEfVT6Tk4MGPD
umx6fmQvYK8e3/b1ukj1nZOH+z2y6/EYur+iKNg8qW/h9zOUPxOerxa+a1IG
5X8G52/7ZFpD9eH+gfvbhBmvp/tVFXFNwowp/l2XvZXqmw5/ddSfNT2O8lfB
CfEOU6/Qz/t1wX7XZ8aWUD/FmlzH826l2TmLfp9RKry0Imj7EbqfvEdw8KPx
z5LWUv7vsND+78fTayj/kHwJU1qduutkAOWfATuUpYSH0nXhV3iP3cSccSGU
16BAwsT98gzVXE95p8NijSP23sGUdy2sdzQr/Cm9vrQd1ip8c7k2nOo58IaE
efU3W67fPsrrAjdP0Ht4NZby8mGNEUq3NKkegpOwwRl90f29VE+9QgnzVmxZ
1Jdez3WCtWaHu9sKqR9C4HUBvf6lXqb8x2FL5Qj5+1mU/yZcXOGRUr+T6skt
kjCn976Tte6hegbCr+IG1k/fT/mPwT2rG4MkZFkxLHp37bH2CcrfAruf3+iq
RT8vWlmMesb/ytei+ogPw2EHnV0U6XnRKIRf3j4RxN9I+Zvhe1c0T0gjKL9G
CeafifWza6Oovodg619VISt9qL75sEnowyq/qZT/HbxDzzqQw6P86qUSZmbf
GX1SPCj/BNgus8W2bjXVNw/eWfTx69EtVF8xrDJj78IkL8qvclPCfPuz23hM
JOUfB3/fK++gS8+bhi9ct99WIE2i+tbCgp/+D4tTqb69buH3Pbh0U4PGFzlL
+ORxnxQu9SNnIZw3p3b6Knq+/XbBmU3TeLO7xwvF2xImuoDJP7eL6jsWjve4
dV2H7j/PBz7bHDl30zLKvx2+6uiy4l53/S/AtmcCuNlUf+6oO6jn+TDRCao/
3wtW1jzY4r6N8gtgOxWlxhx6vqqy4f2FeQmLgij/C9gie8+rJMoX63kX49n4
dRIJ5SndAt9KNHPwoudLlgE7jH1a4Mqn/E/hqsuJa+3oOu83HFk+8/SMMKrv
5nsSZrbe1bv76brGWdjRVumDNfU/9zFcNcxpaxjVg/8TPnj9zbyZZyn/0PtY
z/m2ua2l8YuTAhtqbivvQfOxXwXs3BSYGF5G+b/B6w8f2zue5mOZaxnmmxVj
H3avFwQP4FY7lxePaD0l+gIr8equ7aTXiwc/kDARG+ZszqL1gsY0ODa1Y2RP
Ws9ww+ArvEDZga9UTxmccG6R3UJaH8sNLEc/fS9XSP9GeafAk0t7HT5E86vf
Gliclj14cjHlPQHvFOovLKB8RroPMX7X+Na10XzLmwx/DBhXPoQ+nyAYvq/1
2jCyD/v7RPHwb7P5J1bS+k5cCs8fHnNUldbbfMcKCbPh0m9xvDqtj1fBxTk6
hi2GlLcY7hVoUxExhNbLH+GYD3LzIoxoPe//COuzAf453P60no+F5zRX/HtF
r+c1wWsmf+vYOpC1oG8lns9FLww5eqw1DsKXov1S24bT+v06vFrWKFjlQOv3
RpgbZqb93JHyqT3GeP4jIGziONpvWMM7Uh69GzqZtd9V+FOvQ+9tKH9sPWwX
PXjgUkvK27tKwki51f6fxlBeK9ilqCbyvhlro8VwmpFZ0gj6ebHSEwkz4ebo
oxYjKK8FvOi12V8rW8q7AL4pC00KGU95d8JzLipHlihT/RSf4nmvmaq7l8wZ
Azs/UI8JMaC83vDglas39/tN9zsa/mCwt/a3BuU9D09p1h49mPqBN/IZxgvb
rAE6NH8I5sIOA1RN7Wn9INoKl7kY1mmtpPudBSs/Ul28hV6v8RwWjtW6v6GK
nh+P5xLG1yPHOuAT9WsknClbP6BRlfJnwAM8Rhocon7iPIG/ZGnde61D+X/B
nNH2KjL6PEZpL7C+UVMsT+bQ/a+Elz6ezNtF+zHBD9il3jwk25j607hawhTm
PQk/MpjqmQzP6XPq/Ty6H/yHsHx9L0uToXT/O+Fqvb+L1tDvrzJ8KWHSFUbo
mahRXle4OOXwyXVNVM8yOGGBQmE5rcdLO+Aj4njh+F50/we9Qj0qTj1K6N5/
ToVT1WWKk2l/ywuFu2SK45vp+RW3wWGaGSWj/1A99Wsw37U5rv5VT8+/M7z+
i9HvVtqf8VfDhU1Tor93r88S4HL3+bvXXqXnf8BrzKdzfTPO03jgx8AhA0IK
z1G/xAbBTzg/vKzIpXFwysAG9dN0f2QlsLtMYw6vB9XX4Q3W2479fbr3v6IA
mP/CwlzYvX8+AisVJQwMpP2ZRhE87du/V6kfKP8HWOfdD5tlv6gfVryVMKOd
rijq61N9Y+HImz3HjRxG/VAAW/T5sKnSlPrhPbxu2pPxKSMpf59aCfNso9eD
1kHUHwfgQSOu747vR/W9Bm9n7E0ldH8FDfDhDZzDVtQ/ItU6rHeuO0253Zvy
j4etFy16nUX3j38F3vWNSf6qSf1RB0++Pf+VF41nVcr1EmbL4SjhEsonZwUP
j8uNmELjTekbuHz8cM9yyivrKcb6fcTT6SPouhEH/rBIuaDEnPLOhyPulo3S
7M67A7Z8Y/gpj/pfo0eDhOm7VH24pRX182i49M95ae4kyjsPVrm479zNiZR3
G3zB8WCEB5fynoNtjw5ccoh+3m9EI9bfPhNn+9H4FzsHvnUj1CvDhvJHwRdm
bt1xfgrlz4RdTQWNHFfK/wwutbm0St+H6jn7HZ4XuTe/4wOpnhFwTOX1zMFB
lD8d/sDd9GSdL+WvgmV7zezG0c/zu+AdZkE2nquonpveY/2T6DjObjP1Qyoc
0zg8XXMT5X8EJ0xNO2u2h/J/h+P1hvY9HEb5hzRJmEeac9b+CaV6lsObWwU5
lyMo71fY7KfpmbmRlNegGevH7ccWj6HrGtOb/1s/9HiuspbqeR+OvGBtWx5M
9WyHP56pevFvN+Ud9AHjY1zNlo7tlNcFvtV/zOrwRMrLh52W84xMH1M9P8PB
R5MXVt6keup9xPwuiDm+sZz6wQle4272aF0B5Q/5+N94H97bJZ7yH4c7TmSX
fcukeuq0SJiK0ubOhxepnlxYxbmvbUMe5Q+EbQ5YFFR8pfzHYLXTy2ZYiyl/
CdzgcHjj95dUT3sJxvem5GfhjVTPlbDt5wWDJNWU/zB8b+ralKZOyl8IW2hu
LsqSb2fzN8ObyxfwP/+l+i6X4nlYVTryhSZ7XeMQfLTqpVTbgjU3H96390Ok
yhTW/Hfwx8W3Up4vZM3Z/wnr1+b6HrfGsfbLg4331NSIR7OOFcMx99q/n53F
ulSlFfur0wZbmiexlo2DR/ksbSn2ZC24DAtyy3RyA1mLauEcq7uRcSGsxb0+
S5iaY/OnFfIpryU8otLF1WMo5V0IW2oPmbd1Geuq17BuzQ3taD/Wcj3bJIzP
gFXl9kso/1i4QN2kdpIb5feBJ7+YckeTHLsdrlZXSJlAeY0UZHh9neE0NS7V
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 1.6765588196065355`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 1.6765588196065355`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ZIV\"", "\"VXZ\"", "\"portfolio\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6678461022283344`*^9, 3.667846139497766*^9}, 
   3.6678464769698286`*^9, 3.6678465152740993`*^9, {3.667846764872697*^9, 
   3.6678468054650745`*^9}, 3.667846863653308*^9, 3.667846940058202*^9, 
   3.667847047074705*^9, {3.667847163057259*^9, 3.667847179850812*^9}, 
   3.667847235483157*^9, 3.6678491919843855`*^9, 3.667852098617084*^9, 
   3.6678531826297216`*^9, {3.6678533126989336`*^9, 3.6678533263492355`*^9}, 
   3.667853363049285*^9, 3.667853477657905*^9, 3.6678535215967693`*^9, 
   3.6678535928882294`*^9, 3.667853674532955*^9, 3.6678540880952816`*^9, 
   3.6678542071320305`*^9, {3.667854246135454*^9, 3.6678542593261414`*^9}, 
   3.6678544902958994`*^9, 3.6678548276211667`*^9, 3.667855323827012*^9, 
   3.667855429025695*^9, 3.6678565776839647`*^9, 3.667856609259245*^9, 
   3.667856842203129*^9, 3.6678570429309707`*^9, 3.667935983026452*^9, 
   3.667936037542777*^9, 3.66793708247532*^9, 3.6679375444453373`*^9, 
   3.667939071817354*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xiv", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<XIV\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vxx", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<VXX\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xiv", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"Mean", "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xiv", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"vxx", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xiv", ",", "vxx", ",", "mean"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<XIV\>\"", ",", "\"\<VXX\>\"", ",", "\"\<portfolio\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.667853395894722*^9, 3.6678534334433985`*^9}, 
   3.667853599592286*^9, 3.667854081127548*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcjN0XAPBJi4qYJBQyRaJSE4mSmicVoQwtsg9tFBmUSDKUfRtCkVQk
FWVKm7XJkiiZpE3bCNGMmBJS4Xd+5/5+n495/3jf9/u5zzyduffcc+7zlP66
zUv8BtBotO/wr//+F/5hOSRKKPK/Mnv4F3cjuJQqvjXC+Ot/nXQO3PXIPZ+9
Ey0SgoNOqleme6L5G5IkVKNJTZjvFrQwBqyQc2/b67Av/7XsPnhBabLeuOM4
zvgEHrSp7VHUHxxnD0uWUEe9tkVZ6uG4mA+2pRX0rGbhOP0u+MTVqMuc+o7/
mvUBfCjuYfkiLTR36GX4eb47P6Z9/YzxWoM/rjgRqeiHZhaClbPWh18S4v05
reD5X8blt9rh5/mDr0ionJZZjXau+P2FVuDY/OEJqzU6MX4O+LDT6tyOJPw8
rwXcZCt1vv4F4xOopUiop17GETGr8X7iaeBB467M8N6Opq8Gc0IPGR56RuI/
BPZId1E5/QQtUrkqoV6E0PSlyWiaBfjuEenKhOVo5gpwhO5T6/2x+PM4+8E8
287aYadJ/DfB32NtSnOk+H0ZZqkSyrh0ddoHLprtDf56ZGdXsiGatw982yRG
wcQTLbgBLtCNnPq+Fi2uAadnSwPO8dFcz2ty90vaA+7zKtSMm4wWpV+Tm2/a
a/C7TEMlvxQy/3/A32a2bmS1SXF+I9IkVOC3qMIlTjguSwX7O422y40m8VeC
M93stb5Ukfj7wBHlUZnLhuL35RmmSyhHkYvm0T4cZ1Wky92P2wNmtlm6zs4l
8RpkwPoPa107V0DiXQi+b2Sv+j0B78cpy5Cfz+/gj+mV6uYdaOG46xLq/fJi
6YCpuP4yF3D0zITmxje4HoyQ63LrLei6LheveMwNCfU36VrK8V6Sz3PBJ5eM
O/LHH/ONtQXsYuK27akL3p8bD2b7vzv1TBvHabqZEorqX/d30mEcZzqCfbdY
mi4ZRvI5GOxan9/hp072Yxy4SL3K65oX5q/wIdictnvGwiy8H5vKklBh7CyH
t1dxnBcEjp4ywELPCC04C1bRKK6ml+D14iJwkJVpbJEOmi4BG1h9Gt6pjE5a
f1Pu54tOgx/HeFvv2ICm3QefM8i5bGxA4tUUSCiHIksHx0icH9lJ8ESTQb+P
TyHrfwdcve/E4f4LmC/s9+CnOv0PstzRvCHZEqoupdDoyFkJxjsT3EANrnpb
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
a/rOMM1yOn8Ww09uNGmku9C80QJn9ps4ymYPzRu6XeSck0tMd66V5okLcEe8
/5AiM+p3D2Eb5Ykbo6ZQfXyFMyJmqsRspninKcm50/w+ph103szJh5V3fHmh
QvWjaIIXb3/6TZ/mEcFgZTkX36C2/PYyqucpcNlHh8aMxVTPPvBc78C6TBHN
Ew3wo7svm6NovhEOVJFzPz1mvah7Q/Fy8KjFB/xt6fmheB1s2e3ZzPb9rD6k
J+DrW4ZOsYpn9ePZv6uca3+Y/eavCrsusoYD4xoNh9hQPa+GjSdOvl/jw64r
ImCZxVa93X+ZBdnwHJeHt+L4NM9PVpVz9RLNbar0PLFqJfzr/kXDuBaa50Xw
zXuSTJ46zZu1cEi3CbqBVfQ8bYWanDtrqpTk8JHq9wg85+YQh3ubqH5vw500
kzaOllN83bvh/opr7bTHsXhcDsJFPl4t7gPZ9eAUOD61vrU4k603SQX8d80k
+1dmtN5Uu8u51cdTdSoG03ozgz9o3T8dGMSui2/AnwI/LGu8y94vfQvvzR9d
M2IBM0+lB+pp6Ks1vtrMpqawV/dlGWGZn1m8C+DWTeNPL2hhFnTpKeek17JU
1XvT+h8JfzLsLrIWMwfPhbcPDx+beJB9vyQENmmxHHFck1nI6yXnfuRss/Ys
ovVvDE/lhXA1nSled9isKbhjfDr7Puku+Iu3rXffH8y8q3D/W1HeUTGf2P0e
1hv1IMxbd8aBXc9xhTNOL9zcv5xZEQDfbXeo/72V4r/877p1edblCmYXKRz2
YUl4/izmqpl8xPczXOmqLTN/O9zD1PG57Caz8CLc5YTVmYZoZr+Sf68vnDxw
xnr2+8Vt/6zR6fiU08ye4j5y7o5f7tf+h5lFRfDe76XFXCJzznd41mHnq6m/
mRU6feXcsLbHoQ6H6f5HwaelvZ6W/0f5LITF+h8+99Cj5w/N8PP7Saa7eXT/
tfrh940+uOSiObNwKnxiv3XTOkdaPw/gWHP7TRY1zLwm2DEvW//kNmbTQf3l
nHb81LK2UGZPO3jc1pVBgdm0vjbAcw7/ODzrM+0HX2Dbzwey5+pT/Q5Ql3O1
fzQiJp6i+IVw3TTLg5mmFP9aeNbHyqtK2hR/JJzT9vfPtzSqh34D5NymVyMl
req0H1jB60yG3Cg1pfi9YQOLul5+bRR/BNzaZmne6yvFnwV3S1G80rOh8/yk
gbi/pw3qB5+k/cALvlT26lt7PP19Vzg8JTBXvCSX4s+A6xMCtDUa6flPDSyR
P30tp+fh/OUaWN8rl5Rvp+cBwsPw9/il6zom03k5DW48ECXRnkT9qwoOGc7v
qR9N6//AIDm333bWoytqtH/dgqde0TqrRH//lfMeni6s9u/+v/Ny18HYD+w6
W5+2ov1hLPxMGiyboUPzgQSuk9ZYXA+n/v8GHv50r1nyPTpvKmtifzlqt5mv
S/12NFy24PYjvSU0P8yHnYaXnjD/SPPBK/iPe5uH4QLaDzprIf8Bp2z/0vNC
TxNYbXjuzUR6HiiaA19Zrc3/TPNvTjA8YMoz95uptB/8he9kLCk/S58XbKQt
59K/OC7jHlL8s2GlToI54v89D9wJ//x+oriE9gd+PKwXFPryLs3T4qE66I9n
6/Pdo2n/coGfZy/76Ur7ES8A7jNnVbf8/+2/l+Bj777YHupP8ZfCMwbKzw9J
oXndWVfO8frVvLFfSfuZP3z+h21q6HqKPxY++8KlTnKR4n8MP2s9UHiCzruS
Vvjt3Nnj9TvR/PufAK+PSnYs8KX5Nxo+13vbuoUxdP58BLv1C3gy4hzNl9/g
E01ay1b8ovlSRw/9I0MvuVcLzbsFcM4e+fSWVTRPKmAt/pIYD5pvBZr6//pH
t8FeeTQP28NHGsWTs5NoXr8Px8duTGgpoXm9Ed5hEjojNILi1TCQcyOCApfP
klK8tnCY/NCiKHeKdz3sObLAzEJE864c1g/Q/+jhSPO6uiHud/2NdVvX07xu
A7vtNNutpkLnizXw/N8J0a/pfK04Duf8uVWrp0fnt75DsN6ynEeWhdK8bgkP
E+c2d9D8XbUK/qn1uMr6f/Efgyt6Pp3lRech4R14yamkXiv60Pln4lA513PD
sxkpiXTe8IJXi0435fak8/NReNjvOxFmD+h8lA7z4v5M5F2g81E1bP+i7eGM
VDp/LhuG/h+fbGk3hOrhELxn0SO3aBOqh1R413O1ncLfVA+V8EZ/1e7nh9H6
ChuOfprQvEmUQvP5TfhRY0V2wHaq33ewpv6M/OMr6flZVyPkf/c9K8ex9Pxv
DDzf4kHm1FL6/3uS4btazS8r+1A9vIaPx/Q90TCM6kHJGP1ov/ryF+ZUD6Pg
7npla37TeTp4HhxqxJVMovMg/yXs75r1yXsG5bPTCDm3quST8P16Om+OgM0u
WA/eE0TnIw+YOxrveIPeLw2CPfNitS48pXr4Ay/Oe+jk2Z3qYbgJ+vV5QY9f
3ake3ODvE+c6vLWlegiEHxcHbjy1iPJ9Be769dsrwXI6zw8ZifwcMp5bcJ7O
b7PgKKFS92kHKf4dsGf9xsTDlyn+OPhYvna1YBDF/wTWiF1qMM2a6sF5lJwr
vGC7/Xg5nT+3wfkx+RHRWlQPMbDzVI+M/fR+UTF8cLuX0jdHir8FDl97esCN
WfQ8YstoOdcQ67QxNYTyewEuGBLf/NCN4n8In2tPO+mlTPF/hc8u+Z18o4T6
m7Yp1uPecrMwOo+Jz8EpfW905Gyk+ScfrhxnUF3m85HFr4B39j0T7pLD5h/T
wWNQjwO8I9xWMntOgf0Ed8ZNvcper8iDe0aG30kwYhY0wCcu/Sjq5FnH4h84
Fv39xZohxzbWs/g5eK3h0Jii7cySdXDC/Jje/lHs9X79zeScofNtm5Vb2HWx
NZyw48RDDxNm6Wr49JgN9l3+Y+Ydh2WGj3uNvMcs6jMO/aFZ10w9izlnMhyU
/XHy/D8U70rYdfcq84537PcIRPCSvUsaiz8wu2TCtQYHi/vI2furLMbjfONq
9ft6NXs/fwWs0iN24q0adl14BO5UofZnuja77ncb1jhnvDU5h+L/AF/rYvSm
YhWzqac57vfUCUkG+9nv9TwIH1gw2bfXTmZRCmw6M2GouxLFXwEbRm2TBYxg
VqhOwH5+6u3rN2WUz/1wPyvDlMTj7PslN+CkPqeN53sxV72F9b1fbz6aRvGr
WKA/+pRuf7+N/V6hKdx7hNP9XxuZpdfheotkRUYgzcOv4VfS21NG0nXTLhPl
nO9u6Tw/daqHkfCfv4L2KZPZ60Vz4YYPvnvnzqN5+AVcHOCriD5H8zxvkpzr
O8d20r4adj3YGM67bt5qfI59nsQdvhNn8y27meblXTCvIf/I8ls0D/+G68ui
dvG1mcXDJmO/nbo+P2oT1bMrfMAvpySPzhO8QDj20Nx6dZr3TS/DQQW9rs3z
oXne0FLO8ffUjDHypPl4JpxyeNHSX20U/3b4b8Sf8hnLaJ6/CKtb3S7QpfNL
cAkcMS28PFOLvZ/vZIV547vHhQh1mue3wi8nqZ4r2Efxi2F/qfhLhT7FXwSf
3OH0/u1Rdn+k32G3wS+EA0PY/fXcbI3vX9qtpU7BrouiYCdLn/LGTsw5hfDI
zQMCpvVn+VM0wxNEj+wzwmg9atng/nDpwa7dKL9n4T4fasNLdzJXPYBHiv+z
jFjCzG+Cz4wvNRoWzexnJ5RzdpdfOS9ez8zLg7PTFgetOEr18AX2P/r+ujKd
bzwHcHJOMWZqaHQ4nZ+E8LKkb5eu2VG8a2HdI0kVkY9ovX2G7StcczLcmYP7
2WK+WNz71PLHVM9W8JPNhktm6VA9e8M3yoqNqhpYfvgR8Pqo525bUmtZPvl2
cu5W/peUSdR/pJPgYUcqThxpYuathNOzau3V3tF6DIcVe2e+TphC+c6Anxn3
elE2iL1eMWGKnBtr6iF5dIVZsBw+G/J8jLELe73LYTik5b8pB+NoPabB4oBV
rnNXUH9Yao/++L7lllcYs98BuFy3zuhmPvWHW/BXi5+3Sp2pv72H+Tl8dYN2
6gf7pso5q3mSIyE9mXMkcMfEsR7vAii+N7DO87BdxeoUn/K0f/Puu3eRd2pY
fKNhj0Mm+3bqM1ddg9PHLNfsvZiZ/wq+ct3/qvw5s7DzdMwjVwsGr7pbzeI1
gQfGcGXpfHZdPAceu8VmyrYB7LrnX9jb7Omipf2YRUYO6E8uh/4E13xg8c6G
tR9Y35j9iVmxE37yZNTauP3s9cG/4Mi6BM/19H7J0Bn4vXu8Nnb1Ya5ygeOL
bv7+QN/HD4BDzpWZdFvILLwEr+ja+fTom8xSA0fM7y9Vdv59xMybCR8InzlS
bQizqT+s/SXC8LUlxR8L87vM7+83nOJ/DKuke//0KmPxChydMA+WxS7buY3Z
5T84YdD03M1rmIOj4U3vlqnfnc8seQTPSQ0tvNBSxeL/Br/NHXPmsTm7Lj7v
jPmkk3ZjZQiztMD533llX2loLjOvGV6RLzn2uYjZVHOmnBvyvc+nvF+UzzOw
8rMZS474sngV9+FCe27o6w6KtxF2j//+O+APxasxS875PKlYr+lE+baFb9os
875mRvnMhd8kLvTSUqJ8ymGL9A+nvhXT/Vd3kXOz1ewGtjcwi23gLTaXlne1
ZfUgXQM/GfTSKkfA7PkJzriwT7e6H7OoryvyyzPfJopn78+xhMW1ldeGFlH8
q+CWx5M0/FqZBcfgygfKuYJ97P2S3m7Yf9xSd0y/RfU7Ed7W9deOuD1Uv15w
Uu5J7XlNVL9H4Vt91ixYNYf1A790OK281wOVRcy8CbNxPxus4u7fZzZdBqdM
WXuf18TseQiecDldus2BWZQKm4VE+rV61Nr8H8M7K8E=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 2.176084099868594}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 2.176084099868594}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"XIV\"", "\"VXX\"", "\"portfolio\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667853437373308*^9, 3.6678534784098496`*^9, 3.667853522447867*^9, 
   3.6678536012259502`*^9, 3.6678536782991314`*^9, 3.667854088986391*^9, 
   3.6678542086698356`*^9, {3.667854246905309*^9, 3.6678542600932436`*^9}, 
   3.6678544911123643`*^9, 3.6678548288219166`*^9, 3.66785532763468*^9, 
   3.66785543382206*^9, 3.6678565792686005`*^9, 3.6678566171563845`*^9, 
   3.667856847191949*^9, 3.6678570437409773`*^9, 3.667935984901471*^9, 
   3.6679360383709126`*^9, 3.6679370863091173`*^9, 3.6679375463355083`*^9, 
   3.66793907664716*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"spxu", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<SPXU\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"upro", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<UPRO\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spxu", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"Mean", "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spxu", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"upro", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"spxu", ",", "upro", ",", "mean"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<SPXU\>\"", ",", "\"\<UPRO\>\"", ",", "\"\<portfolio\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6678532626245227`*^9, 3.6678532967483373`*^9}, 
   3.6678536030841618`*^9, 3.667854078876112*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
3a/BtB/PnsLaj/w7wRFZRdnNofS8ycIN7vd3JtUNscf9XDITPGBEa+iBH7R/
7XBjPS8StoPLXt3cunwzXQ+GusP9Qr/CezEHKa8nWO69/1nNOBznbgP7ptkd
FFXR/X4yuKCv5QYtL7p/M57Kuh/iTAcveJexfPoaev60Bawh1fDV16Hr2QXw
rt2aosh6fL2oBJzDW5cv0afnEVM9oF6S9blDVel6Fgp+ERdzK06NnvedA7tq
D3F83J+enxSCn0w69G+Agp73NXqwntclnp4G15/wbqeP+tHzsXww/f9GlLcB
PHOcalblETqfDZjOsiQePNeur9W6TOrPx+B+vHWugcF0Pfs5nXU/69l/BtwP
jpS8WLGazpPOYKt5PwLGHKD7n0dg3f1dt6zqR/OvAKe4pVicjafzjZ6nginW
kpv4zqH15eTJOr9JV4HdLv87wPyh9fMNnHN50KT336l/dbzgellgOZy3i/rX
AWz+5V7M3nHUv8u9WOdn3hEv1n4t7uUN5wM1ppf+Qlr/Y8ERn06vydxA6z8A
XJHatt6UR+vtMLhtu1tC4WtcXyHZ4H61CbPjT6E5o2dC/4Y3Okii0fzFYEPH
A8f3HKH9Kxq8bfyDMc1f0aJM8IvZya3Lvkud/h9PbudZ
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 2.588518843089068}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 2.588518843089068}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPXU\"", "\"UPRO\"", "\"portfolio\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667856583896697*^9, 3.6678566217175283`*^9, 
  3.6678568516380696`*^9, 3.6678570475623646`*^9, 3.667935992442292*^9, 
  3.66793603930842*^9, 3.667937087106018*^9, 3.6679375508702607`*^9, 
  3.667939084416214*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sqqq", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<SQQQ\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tqqq", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<TQQQ\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sqqq", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"Mean", "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sqqq", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"tqqq", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sqqq", ",", "tqqq", ",", "mean"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<SQQQ\>\"", ",", "\"\<TQQQ\>\"", ",", "\"\<portfolio\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6678466725749397`*^9, 3.667846715974824*^9}, 
   3.6678532491921763`*^9, 3.6678536071960926`*^9, {3.6678536679720716`*^9, 
   3.667853669355891*^9}, {3.667854071730443*^9, 3.667854076392754*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
uO4=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2Xk8VP0XB3AkkmJSSbYmKlKYqFCWuZYi+5pCyRZthpIWlZKSwkRF+7Sn
R4yyRJE9SqhUQoyoNCPGkkjpd/qe3/PH8zzv151unzn3fM/93jtz/UJdAsVE
RER+wL/+/Rf+YZpf5VP4v0Iz+BdrG/hUTIZ28u++f+acA6s+zSrTGSduKAGf
VVbYOuUPMTuEw6c4Z8Q+zhojLkkB94XfTOv5SSwsAj+Ij6Z4fGJ6N3hY0WLV
gl5iJ7lrfGp9rZGG9yAxjw3+ubdDKQGP0x6DtQy75x0VEDM/g5V/bhi9hJ9n
yV7nU2JNnI2v8fwcI7D8pkvGW/HPMx6BLTs0BqkXxL6fwF9fFHIO12H+KTfg
+7lffCVaiPmXgz2oPrOGR5jfF7ynWWp09RXi6HbwJQN2wNLbxFypm3zKU4b9
SiML8+uDOUrlJ6+mY/4N4Nm0YIP6TMwfBxaqXP6tcR/rKXGLTzH5OWupPGKR
JWAfGov9qwLze4FXvzRt212A+WPBhVJFc2reYv4s8NiZYRW3Uayvzm0+pW8s
OT1aklxPJ0/wpxjdrWYTiaOPgPOvj/lpyhJzM8Cm7yvvDEoT896BfbzrrnyY
hf3gfodPfZwXpXFAiZhzCHxyhlVZiiZxQzpYt3PxoREGsUgjeE5nr9p0bWLG
ODj6QeglF0vikqi7fOrMWGfNG3Ni4W3wEF1tfJcFMf0VOPxZIUuwGPOPgUtq
rzj7qGD++el8ate7vE0BqsTMOrDWWA+PswTzjoBlviw/L6eOedXu8akYxbZc
Yz3MawdW7awqs5hN7PsC/M2rIDhHgZj9A/xulrpn6lTMO+c/PnUuNDXVqwX7
wQYcr51Zn/QV670LzFu3o6pPDus5ALbcZreJPQ3rqZzBp0a6M2jsAeyH1WD3
kNWMwMfYD2FgzQv5LNUu7OeLYKcZ0WoVz7EfFO/D38fp/V2I/c6wBI+nRPlF
4fXy3QF+fS6suKAD+yENzPI41T+8Dfu5DPy98kH4dg9cb1QmXI/GYzFRRtjP
W8FMnw23xeyxn8+ChUoGYh5+2M9PwWwtm6XqaBofLHe8dFv/FlxvwVlQP98U
pY5Y7Odk8J5Je8YXnMD8ReAnwdvuRKZh/07jwnq4crmuKx/rmQRef2H+xAKs
B70QPNKp7lb4AfN2geVltipdHcK8MtlwXDq0usQQ620ITrzce+Y69hMzH8xy
KLZ9b4f90AGeWHWtgb0a+0H6AZ+6x+rVYjpjPywDZ664Kp1hhf3rC6bVfXrn
S8d+aAPTxQzyHTWwHyY9hOs96Z7I2ynYv3rgtJbPJqvksX99wNnxJlY3cH04
HQdHf6m155tgP0zM4VMKovou/OXENAa41idwJc0W868Hc8qs1OTdMf9RsDBs
7FjZfsyfCb4r3asmTMb1pZ0Lxy0tDNemYj+sBV9m9spKRGH+w+Ctp3blSbAw
/39gCxOja95HMP/bf/61zOfoLlxfbnl8ykoh/9Sng1jfg+Cus7Mm7z6L+e+C
wwvo4ZNiMf8b8PlrQ8+TjDD/H3Ay3Uj0qD7Wd38+n9r5RuF0mC7W9zbYfV5T
dRQT8zeAcwZKTGyWYv5fYHbirdQrnph/3iP4+3KerPu5G+t7A3x8XH5lSiTW
9yXY+0hsz1WcV9E/wZ8fujrKYv25cwv4lFnsjHxpnC88W/CJpbYlvXicMwRu
NamTG8Lr06BaCOtxirtxVjDmtQHXcvusbbB+jJ3ggKB9evXhWM9+MG9N+auU
u1hPpcd8qk5We9SrHPOuAkd3OAyJPsG8LHBamVZXxQPMewGcq/81Z/kjrOfs
J/B9jmaHt6VjPS3AZ5a9GFV6jv2wHcwYZcdtl+4n+VPBCv77JjjLEzeUgjfv
kRpp/Yv1ZBbB/a5Mq/LgD6znFnC79v1NusOY/wzYdhLnoX0X5i8Gf3y5bGPV
VHI++jewm+D10kQxYu7mYri+XsFT+/9gPU+Di8Y3t6nrkeO0J+DymotdqxYT
M7+AVSvuj3p+xfy0p9Cf/ezhKswrkgTW/E8refQz1rcALHvQNsfyAObvBDeb
fZQx2Yb5p5bwqQ+lXuuf1WF+A/C0v3Jf2/D7OOWBd/afXHhNmZw/mgfOCRNL
/z4J808u5VNqg9OneNkS85aC62udBZHbMf9G8AOBOMeqGev7Efxwb3Pbna9Y
X8kyPrVmq+Qlx17MrwcePtYQurmamOENZvK+xMt9JvY9Bv58aG7z1pkDpL7i
5TCfIvpetigS03XBdxd0DNloEDutA6e7lt44Ooc4OgYcuX1CjNFUYu59cPPK
mBmKU4iZiytgHn/ftTJOgZjlAVaaJXa3S42YEw3+aZOeckCVuOEe+IFP4pnd
yZj/LdhoQln6UwEx27WST/Uw15bKthOXHADPG7DuPoDHhXfA47b3P9QyMf9r
cKa2jeu9tZj/N9hzp7+eTwgxb18VnxIfrdJ/hd+HdguszfXpcJ6I+evB67ct
ynAcIudnjYLNQwq88/D8HPVnsN5Zfkcj8HyM68/+9ffEO677iX1rwV2NMge3
pBOzh8HxAk42px3rvaaaT1WOzdW+RRsk9awB77zJknk2jvUcBDvqWK0LHMS8
KjWwn2GHZaSOYV5rsNA84MVcPM4MB+u45goldcn5GoTgjT6WfoFuxCJKz/nU
Ud/4VaX2xAwr8FMTo/C3LZg3FLxCZuW2yDLMex4sn+wTIpKL9VR4Af05p8gm
8zPW0xxsOjxxVPQ19sM28C+W4QOp5eT83HNg+YhNtDRFYl4J2KZNwdUugphl
Vsun5hf1+Ze3EnNCwI6bchUNeZi3GGyhxVo9WWyI5O0Gi5h+3y/+jRwvCXrJ
p65nXpk09JZYyAb31EWGqimQzzt9Btc0qLNGn2F9Zev4VITqqYk60cS0RPA7
yz7a+g3EzEdgK61Uds99zPcJrClQXuNZhfmm1PMpxfkRVbTbWN/l4PiCSy2G
lcS+uWD5S3EfWXrE7Hbwomsf/gx2Yl6pBlhPG5eccGWQfEJ9sJXx2r4oA2L6
BnDO1PrVb35hvSRewX6NeiyZaEWO05aAmcGHb2cFETO9wMf7l7TMNyZmxYIf
J66OWbAd6yf+Gr5ftcvlQhm83jrgjRO23khA+3qCjbeoLznJxet9BCyfvtVg
cDXmzQAnDM7Wuc4gdlr0Bv68MPbjukC83u7glD6dI4HnsF8PgVVUEnXtDmC/
poMn0DT5f7qxXxvBuaFV20LisJ4ujbCfqH3jaYr1a4gC18Sv+R5rSL6PyB2w
yr762ARrvP6vwK6RX9e43yb2HQOvr2/62JOJ9bv5lk85dI4qi/Dx+teBxY2K
J2ufJY4eAbv7P6N9ek7MVXsH9/OiOXf787Ge18CfNPYG9/zEer4Anx2ott4h
IOb8APeG/aItbyNumPOeT+2rO2TP1fxB8q4BS7i2Tjg4nZhdDV6bvPr382Ly
+ZIBcJm5Tl/wWnJcqNwEzxcbdomrRhLTV4OXRkWOnNtM7BQGFpT6LR3VIeb1
gUNEX3MzlhPTFD/A/JyW4uEtQcy0BDOaln43WELM2gFW7k+SnnIK86eB2zr6
0hOYWM9ZzTAPvefsWHgV60mBpd7QyrPUMf9W8FnLkf7STsx/FmycJWqgKYr5
n4KHMrbtmrcL62vawqdEs6OOULj+uMHgP2rhBl14PXnJ4Bn3slQGsnH9FYED
vQNrinAeML+CjS2ZcVXx2A+BrXwqrsHr/MAL7Gc2uEI80SE/FvMXgoO/mswp
vI75u8B5grW6orbEbJmPfMo3W/66Cs5DegLY8VqO1dxanF/54HvCmHhdNZwP
HWDvnhsbiypwfkm38ak7QVMktOKwn5eBn9e5STTPxftZDrioOETxywa8H7SB
z/yIpbGj8H42qZ1P/R42nby+l1hEH/z05ZbZFeiSFvCETS7xV3FeCifyYP/2
VsGrIxbzMsD2fgf8Ohbi+lsP7r94sbvxBOY9Cp7AiJsW/wXX14QOeL60Hpfd
MQnrqQ0+vcheQ9QB59lacKazxbG1W3H9HQaPNSXv2oDna/gPrK98zZaxF+eD
1ic+xc07MeJyF+eZGzhxR94cY3WcDwfBRqu3dR2SwPx3wdk6LttD8P5EfwP+
+Uy51JiO9XTuhPXel+gaWoTzbT/Y+Kx5dRrWm3YbfK594kmX05i/ARycerZ4
iznm/wUuD+ssiTqE/bC3C/avk+uzWnC+M26A+8vKcu9fw/wvwW9sS9am4f2D
/RP8ucAtWVwH+3nuZz6V4fNngdch7N/nYJHOpHeR0qS/uUNg35EnCdlfsH9V
v8D+eYXrwPD/158NOM6M+X2jHjHnGXjBnfuLduE8aOgHDwzm20So4XxQ/gr9
NdSzcoEdMWMVWE5VNrQtl9iXBTaN9ki5MoLrqxd87QZDO6If58PsbqgPU/vN
9snDpB8swN9W3uf9ESOO3g42rz7a+y0Z86eC4660yEVk4nyQ/wb7m0m+8aHF
OB+Y4Lm2/k9+lWP+LeCBAQ3Gdxo5X8MZ8LQw8XDLv5j/KVjv0HhSoCw5zjbh
w34t7NL91unEJZvB777pZRlJEQtPg78e54zbeBDTn4CXF6k8cPfH/F/AYmZd
Vf+dIuYFCOD7jfrXlWYR05LAvCSTgrpVP0n+AnBcTpPvgCcxqxN878TVS5o5
xIxTPXxqjqSnzbxYYt888LJnKrmObZiXB9aOOFUVhucrmfwd+sOD3Tgwm1i4
FLziuuGlkRDi6IdgFcmpmo8riLkfwV3yOrfkk4l5kr2wXo2dV6hWE9P0wBKi
NlueT8S83uAT0q3W3TzihmbwblO/i6L1xCIT+/jUsxNDxRm6IyS/LlhH0cEi
N4HYdx3YW89mkdd+YnYMuLdt8vXPxsR0MSHMu7s5GV3mxE6Lwa9s+25eXkgc
7QH2abRfERlIzI0Gu3Y/LRBnYP574LirTWknRkl9WAv7+VRV1K59Rlhfjiv4
hveR0uhu7IcD4IwDBlVPeMQid8Hp74MmN+UQM16DFbW+6vrPxPo6DfApw9iN
9IdYT+E+cFfuVc2oDcT0W+DQ5fMn7x0ldqoHB/9+O/LeCvOPgiXSP0ktiCem
7RmE9dXatKNIYpTU9zp4yw1+h98mYlYteODXkoATaM4w+Imu77fqaOIG+hCf
GllZcyLuLLHvVfDQ0kyjc6+J2TVgt/AhGcnPxCWDYL3vH87ko4UqP+D5hVN+
7ncdMd0anJjkJH5G9heppxAs+36nmqopMU1pGPrffLfSl1bMawU+csw6wfgF
5g0F6/ElYm/QyedFesG69DmdGcbEDIWfcP+fxfPxeYh5zcEts+fIa+uR4+xt
4CPdFv5BOsQl58APqlMCzd6SzzvNHOFTozPF5xnqEEebgR1qBqNtnxJzQ8Bp
ShdLmc3EvBTwlZRhzZ3OmL8YTNMaPphjScwxHuVTHgcOHDpyD+sZBLZUCEti
7SMWOQ3WlEnVLl2E+R+D81sDPGdWYD9/Br9XO65RtQXr6f8L+lHi74F2T6xn
IjjNnNqdvQ3zPwJTqclizBDsh0/gDKunU/uDsJ+njMF+9KPgjJQo1vckWNVD
0WxSKznOygU/OLn/rvQ49nM7+OTRtL3zVDG/1G9wmTD/hxz5vMhSsIlc2IHy
CzgvHoBXFDAlUyvI/CtpBTco+9MW1uF8lvgD91fLYbl+Fs7nJeBi31nF33H/
5eQFftpj6+v6GvdvH8CmdHm/ynicb+LjfKpJuWiDXC/OCx3w7Rv3LVs5ON88
wbqzV6T7RJN8nCNgg7bLGbd/4rwQ/Qv7yxtBhXJTsD8WgcWbDylEjGE/u4Pn
8Cqyp+ZjPx8CHxeOlBp/wPqng7Uqx6TDSsj1itYUEVBvLm7Ocf5DzHUB73qk
kjtWhP0dBf5x7kXM+yfYH3fA8V9lauf2ETNfgZ84fmBc4RE3OIoKqJ5LVS+7
lMdIffeBmx+wMq+5EzNugoOkDUNmRxL71oGNeT/igyqJ2SPg0fm8PptxYnqk
mIAK4E/PbysndroGntC41XOZw2+S/wV4s5a637s/5Dj3B9ixk+n4yokc582Z
IKAyTl636j9IzLoCTqL9zjkk84fUtxo8iekYckmduGEA7O5o9MzvHjFjtbiA
emu9SVVDdpzUsxKsqDLjZew0clzYB3bIDYl1WEtMV5wooNZt7bsqe5bYyRLM
cE2TKowmjt4B1tzXW60YS0z7Dla6xPg86QfJx5wlAfmytHOO65PjLApcPTmW
/32QfD/OVvAszibeYg/y+Yaz4GWbX7S2xGA9Z0gKKLGIV9p/anFemIK7t0hJ
3byD/RAM5uYsd539hhwXJoOD/SNyzsWQ89GLwLtFpKZdeE7MXTlJQM0Yv11G
SZI8vECwzP7mnSeqyXEaG2wy7H9y9C3Wtwv8fOmFxqR15PMi/lICiva93szU
C+uZAP6doPN3xivyed988Ojpv0UWE4lLpCcLKA9m5GdBA17veHCdvJec5GPs
1xzwyrgPy3rrcZ61gV+qFtpJpGO/TpKG75tnXXPhJ/nzNH2wtbqUe+AerF82
+Mijxq9HsJ8bWsBGKR8K1+TjPJaYIqDGdgc7W/vgPGOANx+t7Hq3G9fberCs
Y6bK75XkOH3CVAGlreSSsbmQ2Ekb/MKvREN8Jvn7oteCfVUjDs4MwHoeBre4
5blMS8LrLSIjoParZjg/j8b6aYFNX88RtiXi/HUDK6x7KG24EPMeBN99//Bj
Tz3mTQe/+L3At3o1Xm8NWQGV/NvR73U73h+cwccbbquZHSZ5hPvB7NWr1aPD
cH3dBt/8cvxw/wzy9zs1gAutWk1uXiPHeQ40AaVl0FXY6o313Av28D59KuIw
5r8BDqWviFmB/cJ6CV4SVUY/lonr6yd4ov/LA87ryPrx5UwTUPPkb95etY2Y
/Ryc3u5fmB6P62sIPDy18tP2IWKhqhz0e9QWx/QDf0k9L4O7B/IOH71AzH0G
btwZ6xGVTszrB3MlFXYG7CCmKU8XUF75yhz1j8TMVeBajSPv1fcTN1SA7b31
NvyYA9cC/ukDL7opNG17Q44zZs8QUBV5m9fdP0zsawHuqhRpGrtGzN4OTraU
Xcu+RfLSe8CT3VNn5X8jdpKfKaCO7Wjgi2zA9c8EP3x4dtr+buyHLeCu/TvV
KwNxfZ0Bu/mGLLaQxfU/Xf6f87gFU8j5OCbgniuvT7rpEzdsBmdN932w5hex
SDL4pfG4/REVzP/k3+c1NZ2THhCXrJgF/VP70LVlF7EwACxXr/zkhRYxPQn8
9SyVoo/zx6kAvGG00y78D87bTrCmpF35j5U4v/wUBFSkefInx8Xk72eeAu9Z
x83qdsf8eeAPZaftRbrIn+fwwCOlzpGNvbj+T8wWUNkBP+SeJJDPsx+CGeKL
nLbsIC75CJ5Fa9d+KIP9IKkI9cp8V70qCeutB64Jqh7a30nM5YIF2bPi0jKJ
ec3gtJpQpcIwYtpEJfj+gguJV79jXl3wsW12vJJGYtY68GmnbkbtMZxfTWCd
qRoxp3LJcYaYMtz//K/UH6ZhPywGlxs3BHJisR88wE1/RmKeYL+VRINN388X
nxlN+svpLzi4S2XMbTNx9EIVWB9F1WeMHYi5ruA3igE2BhOJeQfAukHLyuX+
w/x3wdrTFh5Tf07Oz1mgKqDsUl4OG3dhPzuBD8ZtfXooBvthP7iZG2hR0oPz
9xa4M1HP9Zwfrsd68FJVq+2KAdgP9nPgfl+VsGZ0OvbDHvB6bmWfaT7283Xw
VK2d4e4txNG14A22bTb6UzD/MNh6l113gjQxM4IuoGKTcnO+GhGzroKnT3ke
J61LzKkBh81MdFmwjLhhEGygsmHdfyxcj6pzoX+9Yqc6BBGXVIH1rDnH/pZi
XiFYrr3PQT2FHKcrqcH1sil3NduN9bYCz7BYpjwBz88rB4uKiVDWHsS0XvCY
oVemtz7mVVAXUJ+sKmbmumFec/ClgLv5CqKYdxt4fYvmKWYNri8B2Mf5xhX7
L1jPmfME1MyWrJDsMpxvZmBpdtDMTf/vhxDwZYv9tYoTyPmEKeCijeGy61bj
fJObL6B4pye08z5hPxuDc2NEPcWccb4FgR+eH7AoTMD5dhps8Z+NRpUf5n8M
tg3sdSzXwHoaLYB5bLXz/PoYrGcA2GdeDj/zFDEjESw12NHS6kTs+wh8/Iv9
ngoDYvYn8OfzF3Yv/oT9sEkD7gdDmst7XuN8OAmeUSrGjp2L/ZALdq1pPKbO
xfztYPNS9ZmbXuD6itMUULOzPZ6FJ+I8ewCuPJIX3pSN86wVbBixzXbcHtef
5EIB1RBk3T55BfbvEvD9EzP2aITj/SILHL7WzMiuGfvhA5i7YHvmBEPsB3Et
AbUjeZNC5BrsBx1wYMftdQ/bcf15grt5K2ozzomSfngPti3O2xNbScwUXSSg
Tkn5bv5cQMxaBE64tNznjQ4xxx1sLnLDQXYc630I/HNvQF/pSaznOJhXOfP3
ErwebM3FAuoiXc3fAY+XuIBLvq03f52H/RAFjmzV2jWtF/PfAXvXzBp604Hr
a762gIq6m7G77gn2syP4+8bL9kdvYD/vA4+KLou88Bf74SZYcXuyV6cJ9nMd
OOe5dvi4DvaDvY6AqtqR9VcvC/shErxh+wKffAXMfw28Yjj88G9cv+wXYP9t
AXYDmpj/B/j9mG6CN57faZeugCpNn2qy4SLW9wp422PGvBBvzF8NVpNm24rO
wPwD4JsmJeH3C/F+osKA+0fKQ7ev/rj/uQjOcT/b0HkL36dUghuPzujgb8L3
KUIwJ5b12MoA92uKS2B+u8mE2Ung/cUSXPs2WGOTKLGwDDx+vzbRUw73P9/B
wjl3vx/vxPcps/Tg/KcX7Mu4hftNClzQXlHUwMTno63gDcre2cV78Xl+hr6A
emXRYpi1EfeXpuApLc9T18Tifi0YTN9XenH5KnweSgEvtPoTGHwPn3emLYW8
Mo+Fv3A/VrISfHSV2LcF9pg3EKwXO6t47mPcn7PB1gqFS5gvcb9W+M9PE/ZZ
PMD9muEy2N9JuC9/2437NX+wJe3hwkZ8HmAmgGW92nT2vydm5YMV7a7se/X/
/WYHuE5s4Xb5P+T7MXyXC6j/Kh7F2Yrh83w8+EFiT73vA1J/dg7YUSrkqS4+
j5a0gc/3XnhUvx6fNycZwH7qlK+x/hGs53HwkGvFLZFUfF7LBhu8dlwdthLz
t4AjhffF7TmYX8IQ+m+97nzZXmImAyxy6HLF15X4/JMJ5p7PCqnYSSzyAfzk
/g8z1gA+b04wgu+rbXro7jt8PtIGr9PuEX6h4X5jLfi5q+WOrQH4/PYOfNT9
9xV9Hs43kRWw/yj8aNi6FfdvWuAFTt+WrsX9ENcNfGXASO9LAu43DoJ7rFLG
9cNxvf0Bm7q1bfp6AO8fGishr1iGrGcqzgtn8Km01G9bBnE9RoFda/uYp7tw
Pd4Gd5icdXyRgettnjHMx6TUdbLLyPwROoA/fAgMsPImpu8FJ92adLDJh9jp
BlhiFst7kRFx9EtwXdn7O8JVOO/sTKDf0/mmaqU4L3aDPfZIhMy8hfk54JW3
Piouxvsr5zm4xWbUbCsd8w+Bz+TbFQ9H4f1vpyms9/AfT2vu4n7oMvgCeyht
djne/56BpQr2N20swHnXD949tXZm+lOcd8pmsP4rNIKWyJJ83AtgF5NHwQtx
HvIqwLpijTGrcB7S+sBGRotFwviY14IJ/SeeuPfRCNazDDz35gYZL5z3jB5w
8N+SzCNryfl95Sn4+8bLk1OlidlMcLSGRkHLCqz3FvCpH8PiVy2xnt/AHtf4
oV+nYT2nmwso+VcXxSTkMK8J+IH78cVvXDDvZrDhntRPhvGYNxnsk7kgOeYH
3v9oFrC+rbLZHvg807ACbHvHyaUV91MigeBD3x6d+5KL+ZPAkzpkDO9Nxflc
AJ787Kra3724PzawFFDXn8g/snTE+7UfOLbX7dvOVmKnU/+OH6InTrHC+ZwH
vq0RIX/FGK//RiuYF/GX5n5aifU8Af5QrEdr7cHr/xB8cJ/ONbFYvP4fwVy9
+oTETrzex1aB39802Dsd789csMSO8pqVjfi+pBkstdwhYGwWrreJq2E/1ehS
1ZCAz8+6YKXXdY10nD+8+2A/Wlzl9yX4/qkJ3C20jogYw3kmZi2gDu+Yzzqw
A9//LQb3vlv7p/YNvg/2AN+8JVYX+RB/H/gLduf3uP+swfm10EZArcnSfGdw
Ht9fu4JfrJiUuSUD318fADdNNazWxef/6N/gwoRvJqtC8X3kgjUCKvXSiWZt
GczrBD5zvSXvUwD+PrAfLNKfYi6rTz7PvAXmneXoWqfh+0h1WwHFd+nwNCzA
96kO4J5DNSqSFL7v22P7b960nakexPzXwRIb++XPfsP8teBNWg1pivj7Dt3W
Dp6vm5rtwrvw9/AI8OCOs483ZeHvXVfB62fs/bISj3NrwGznCCPqA/7eNQhe
1v/ZdM15/H3okr2Aat/Jzdd8i78HVIFjspbttV+G70/7wSvWbLf/sxd/j1Fy
gH79xeXpZmM9z4NPTPV9vzCTfF5YDhbWpt1acwZ/D+gF71sfYhmK9XFScIR5
4c0utHmB73/NwRdVF46cKMbfA0rBDR7WleOaWE8BOEgnKOfRcryfzXQSUJmX
b6xyMcH7mdk/jz8eN1HC+3EIWLlu3fGx+cS+3eDK1+89m3Pw/amcM6wvz4j2
qbPwfmYM3t3cHpgei/ezIOd/+53T+5ih+P76NLh+kYHa06u4P5B1EVD6XKUv
0hX4PsoI/CVh934ZfN9KCwCHGrDd+jbg/SwR/Nhye1OMHTHrETgyKNR+Ke4H
RAxcBZSkxs+ZZsV4P9sEtnDoy9sygvezk+Dj5qUqNV64n8gFly27vdti3ZjZ
/wBbRddH
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 4.292877267584336}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 4.292877267584336}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SQQQ\"", "\"TQQQ\"", "\"portfolio\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667846720886284*^9, {3.667846766209381*^9, 3.6678468060915036`*^9}, 
   3.667846865337495*^9, 3.6678469415392284`*^9, 3.667847050582179*^9, {
   3.667847163584626*^9, 3.6678471803811812`*^9}, 3.667847235993513*^9, 
   3.667849196716724*^9, 3.6678520990843368`*^9, 3.667853183092428*^9, {
   3.66785331380021*^9, 3.6678533336944427`*^9}, 3.6678533677443867`*^9, 
   3.667853483127186*^9, 3.667853524309921*^9, 3.667853608310999*^9, 
   3.6678536830060177`*^9, {3.6678540734761887`*^9, 3.6678540904678497`*^9}, 
   3.66785421172128*^9, {3.667854248505397*^9, 3.6678542616272354`*^9}, 
   3.66785449265819*^9, 3.6678548308829613`*^9, 3.6678553322559576`*^9, 
   3.667856591548161*^9, 3.667856626201625*^9, 3.6678568532059584`*^9, 
   3.6678570483214145`*^9, 3.6679359969267135`*^9, 3.6679360432001705`*^9, 
   3.667937090910787*^9, 3.6679375554025693`*^9, 3.667939089004693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"btal", "=", 
   RowBox[{"NormalizedData", "[", 
    RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invalid", "=", 
   RowBox[{"First", "@", 
    RowBox[{"FirstPosition", "[", 
     RowBox[{
      RowBox[{"btal", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "==", 
          RowBox[{"{", 
           RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], ")"}]}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btal", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"btal", ",", "invalid"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sphd", "=", 
   RowBox[{
    RowBox[{"NormalizedData", "[", 
     RowBox[{"\"\<SPHD\>\"", ",", "start", ",", "end"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Delete", "[", 
      RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"btal", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"Mean", "/@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"btal", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"sphd", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], "}"}]}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"btal", ",", "sphd", ",", "mean"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<BTAL\>\"", ",", "\"\<SPHD\>\"", ",", "\"\<mean\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.667854871399291*^9, 3.667854912590684*^9}, 
   3.6679375938914623`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
v34oWvnME+a/miJNwLomaOOgJjDftCwhy+b32j9oQ6OmYHN/tGNhU+g/VYfJ
lQqn+xu5P/PwsguvgrJPVtVyf9aXLFu/Kxd4wfinOYTWPfCC51fRuxlYPb8Z
zHe1B8iaEw1K+x7h/PfQ5u9oca43WL+fLFtPme54w3zSmuON84maarvwxmPu
fvcnPL7tJZdsdvbHXGee79wid79YzSUmlcc3B1l2nkZd3QfmU9qu5CkPWnuX
1/D4dp2cuK/frtmBPL599oH5hejanF4/K8v50WQe3wTyx/DYeRV+8vg8tTmM
h7rKLeyCkiaPH0tx3o5ky4Nfr4635PF4ElqxFW2o0BLqYW5PbnC3cMDjvEHk
hXXPRyQUcHswtITPExNawvzQ2qaVXTjl1uj1xmiu5/hWMB/VbCSnl9tbd2w/
nl/GkZ8Xlr8jn5d5TW5VasCMpAA+z6NtbRcMtdNWmI7w+Zh15CeFP4dc5Pnl
ObKz64uwhGU8v3xFfjc/LX/wfJ5fuvja5eeH9Kt9Ia/pDHliXOGCnvOnkmes
N1v6Wjh/8Tbweo2aLFuPW07hdcWLNtA+1EXbwvtrvcifozZl31vI9R9CblOn
qW15MreHf9tCexIV7aB+ek+y652IKocq83mkgeTFHqeyFqdz/sXk6dJ2Cj9v
v8k7jz2LGr+C20fD9nYhLiClYeImzt+vPcyvFQvJST930wyM80eTZedlzPX9
7MLQwuN7Ru4v+vjBfEgVSpbtD4gH/XC9dN8P5h/KXh3s8v18zf/QOiPaeLcD
rM8t39DaOR1hPWzY1xGumxM7wvrdkY3XVTU6wfrZtIf8oo9b85Fp3N/d7ITz
zS/k890KBxjO20UDVlxHqz9p4O+1VQXs3zQCru+nkGXnh8SPaH2lzjAfNnXo
DP2DdSJZdv5KuYUsFv4adZPbg7KLXX6ezNKuC7RHRRC57eK5la5HcnvYRJad
B9TGk2Xn5xy+XeG6ahxa3NAV2qM+Fq0Z4w/9h26tP64/Y/xh/WxJQxtWdYPv
ZzaRZeftHC/JoWcKD4Tx+UTn7nah8x7LvEUl+TyoN1l2ftZ6krw9Y/zvZC2f
V31OrhYWb5w8iM+rOvWwy8+v6pqS6/QweRcZxedtB5Njah5PDF/H51P/kmXn
ZQ2NA+zy86vmAeRjX6eWjz/B52sXkXsmRLg+38nna3+Rw0a16/bhIp9PbdCT
6jWq5v7WsZxXJM81dIkTz3HeMPK1wu7kAeeNIvtsubLWJ4nP19YLtAurthV+
QT5f24c8qoLrs+6+2dL9DiFf7LBg8kc3ydpI8o+bmZGBiZw/mTyvbd6ELGfp
uiqwl1142GdZ2NMJksV55JorTt8uOVayPoI8plbhiT/JpiRy+6u5hnvrJFu/
kmMXfeq0uatk4z+9af0SNOLHpvec9zbZvf6MPiUOc97s3vD91O597MI46XgU
13M3ucGIqtNqXOB63iA/o96qbDafB84iN32s1r74xvffra9d+N3+7w6XYpy3
c1+oj/Ia2fNWIvWQXE87+fGl6ICc7Xz/q4h2Yd/p4RsmTOL734nc9XDb1Et+
nH8y2XWG2N6zLreHD+THkwsnCFzPiv3sgm+sYmqTJZzfj/z7Q4MV/os4fzD5
9so/TdJWcP7N5OgOfX6lNuT2UL4/9c8udc4cbsLtoS051139/eQ8zj+BXLxS
sJ/7CM4fTg6oYJ/crhvnv0Du8LJzL49WXF/fAXZhmm5ulVwPru9YcqViESdO
uHH+9QPg+TCcJwf3at7y10xHp/8DxS8YGg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Hk8VOsfB/ApS5TQohA1lRaSLJWScKKkJFpUlKZVKFRUKFSSVEIp0jIR
SWREEtIkrShKihaE0kwYUknS73PPt39+94977/t1zPjM5/me5zxj9HqvJZv6
cjicTvzrv//iH4s5F0UM/a/EHP/y3grXRI/TzRnMmn8annLknKKiKutyIdzj
1ZCqMpF1pBtfxDi2T11oaM1aeBIOCLun0+rMWnIHHhtwrljfjjW3GbZk0u7q
0HX7wZdEzHDtYz8bPFnXRcKcT75GQVtZK+fDPuN2BpzdwdqiCT7H/ZwXvoHy
KiWIGK1KW+OwjZR3Jvy4fWtVy3rW+rnw6B1VvXf8WfM+wmOO1qwzPUn5FRJF
zC7ZHTeWB1H+6fDHF1tevD9B+Xmwbz9nLvcq6+BauPh8mvKRAtYC+csiJjLc
UeVnDuU3gktW6Pe8y6X8LrD0DX6qXyrlD4Pd9RrjhsRSn7JJImZxy4SMmiTW
HAO4z4gvPfEXKb8zHL0kwz0jj/Ifgp/L6iY5XaH8GXCrSoiBZTz1q5csYuaY
Tx2fe4z6XQk7Fg1yifaj/AdgrUzz+qS9lD8N1n0zVrHdjfJXwcsMdiunbKJ+
l18RMbEZJ+x4dJ0fBGcf+Gti4U35r8Kv3p49NPAs5a+E1desy9hzlPL3wrnV
7zmah6nfvSkixkR7gfaAEOo3GW63bLujsI3yV8CBOQn2Teso/2/4y8EMU0sP
yj/uqohx4meffu9EfT6DfVJcjzTYU94uWH3BtIIhSpR3TCrmYX6zjeoSymsL
a/2NkX7e1Mb2WQK3yL2WSpWnPr/DW7cn5aq1sdeFo66JmAUbHuzsamUtsYG5
k7oGL5ClvD6wguidopYG9dkB7/tacVVJnfrUSBMx8QYXdbIG0jxYw3kfjy6Y
3Yfyb//v+nxxruEYyh8PF0+66rRqBPWpno71P3VJJKLr+lZw1/VG+2ojmgdP
WOmO6ENTLZsvMhaWH1RgpZVI+Yvgqt4LcdNLWNsz10XMnomlmya1sw72gB3e
cPXWUD5BDPzqqU7RTi3KfxcWzduuumMA5RfBNfJ1x0IoP39Lhojpl2X+zb2X
fb/yaHiZsLzN8Tdrzh3YbHD2gcW0v/AGCUTMovXa3RP70fqfgFcs+Or+7/25
ebBivnHBYdpv7Bvhd3pxfAPKF6yYKWJWlqZX6WlT3hmw4/DlSt6U1+IW7Lpa
gXdMj/qshwNK/jQV6FPeATdEzLjIdYpmU2kepsHy/X4r759NffNgu3tZpw0m
0zx8gEOrp+as1KH5lctCPqlqWS+6LjGEu6sywqyHUf41sLRijMqiUZT/MLza
JLQjiPbLOplsEWPq3L0jWZf61IcbHx0W82heLJz+85K1DZqDKH8IPLFn1S7B
L7ZP/nV49qmvdiYqNA+Tb4oYe737QQeoH94K2J3pP6f9D83DfjjNf0xEP7ou
vAYPunVF4Sq9v+QV3Nw8ukzYQ/OwLEfElJZtOaD1mbUgEI5dPcar/j3ruhR4
/Epd6/InrJVfwsdGflg05jhriz8wZ0RgaPcWmoeAW5hf9SiHcBOah2RYafii
V0GrWOuX//91XjfskuCYH8Gl/Fq5IqYgNGxLLV3nJsI9qr3qbotonsvg0/yw
AQNcKf/P/7dg9G0Roxn8/mDhdMq/EP7jujRdzZD67ITrhyccFAylvCPzRMxg
28/1PpMprw0stswuquhoZfPuhL/UWn81+sta2A6fdu/NG06WjMjH/RkzZXZQ
J2vuPDg2cIFSqDzl9YYlJSLtLLoefBbeknY4Y6Ia9alWgHnRnfQ0fBT1aQnP
6f/ttJsOa+9t8OSbFmffBlP+M3DIyQbVzTsp/z344yF9/8UrqU+LOyLm6/0E
X8ad+nSHr/vJWKgtof3hFKwxdYmXki3tb4XwiGVbywLo9dwvcM5+7fH3xlGf
roUi5lNzzLNpfanPKHheqZRgrRblL4Azsg3PaI+k/J/gZ7s0BDKt7Of1Vr77
f+acgMcX5RgffUT93oZVja1X87pY8xrgIb/f2NqNofwDhSKmaJ6w9LAp5TeG
e4yyB9UsoH5zYO2aDvl6huahDrb2G5YRPI3y97+H88zeNFM/6qNuKmyh5jlF
JYryr4VzJqWW1P3r9z0s4vaL/hJK/fYrEjFy3Hydj/k0H4ZwpOL8hvyHNM+r
4Rc3XsVU0/3BC4W7ObfP3SujfqXvixiBo6/vSAn1OwUuenFO8rST8q+CHZOO
7Hv/lvIfhLtKMl9XV1H+dLja2dtnTyX1q1sMq7a582j/93aEPwsdPk0rpvzB
8MFhJZGn6P3KU2H7HkVZu9uU/xX8yb+y0ec59bv0gYhpaA5SelBN/e6DBy9z
tbf7l/8K/GfGWhdOHeV/Ae9R/LhnAO0f9j3w8Lf53RXStN/5P8Tz7MzBO0cF
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
jblvqc8aWCMrW/9JE+WVGSFmdvTzqX0ipnmYAg+8fGpt/3bKuwr+UN01+9sH
2g/ewN1eKdsXvaQ++2qImU+nJhgm0n7N04WXnV0y05jWO9IRVucY1FbRegmD
4aVl1sGDf9E8/IUNG0bXWNPPB2tripm/1dYaAvp9dfvg+sff0xIFlDcFvrbl
Ocf1PPU3fqSYWXRYY1X4RVp/e7j/x4ib2dsobwDcHfxS6d4uypsEG0p8WmLO
Ud7nsGRc+sd9hdTnolFi5mi6mqkx9cPdA990Xa3f+47yJsDzQ1fzTV9T3lKY
/2YgZ8st6vsH3Kpj9LP7EfXpyxUzjSkN/Ms0794X/9/8J3By3Njru+n5Wv4N
PsP7UKFC68UZORr7m0fY2vt0XfgQ1gqqyEuj57lEAkvn7e/aRc9T7ogxOH+o
PD2y4iblnQtLDTi15GIq9Xkfvmf2hePwr89WOFRzSosHPe8tVMciH193fjKd
B7znwKV6/eyWn6C8W2G+je0Nj93UpxgODx3q0uFDfapo4f5MWznZdietvzlc
v2FWmMtByu8Gz/fcfndYBOU/CTs1PWqO3Ud9Dh4nZtLdnczX7aA+TeEYl8U3
5IIo/2b4afbRoQZHKX8UPDajO6vyMuXPh3/GxgvvUv7ymePFzFfzpKQJdB7i
bITDIkdVH6HPqx8Bz23b0jD6LOXPhRe2H96itYHyf4Ql0h6FbnQ+5K6bIGZ8
R3S2GMyjfo/CvYuVGlVnU/6bsFJtU60lnS8EtfDDc6qtDfT5vMMmiplhQUr1
W+i8x78BS+1ODZem9Sp/B5vIO0bcpvMNp5+2mJnTf3ebXB7lNYAPthscXkvn
AWEGnNcT+93zPfVZDdu7FqcEFlFeaR0x0/5rsVkmzZu9Hhy25NR98zeUdyX8
2HfNNIcn1OdreJgo/ttcOq9Z9JmEPi7MDDSgefaeBDtcPnUnjPZ3/nI4MXXW
0ka6f8uD4FFmh7rMaP/m9cIdk5umznxFfU7UxfnKybtMRM8n4RL4UdrkA44y
tP/uheOnWRrZ0v7KvQIXS58dw6P9VDBuspg5vKus2o+eR3WL4QNfH9enf6b8
/vBxI51EN3p/i8twR1HMoHjaD72fwQqvL2bJ/KF+F+mJGeWEspdzleg8tht2
yrQeZq9A+/ElODgwJ3fgRNqPS2Bvef3oyHG0H3+HxyUkzz4ynZ4PPlOwXoYh
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
t5B15E1YV9WqPRav/x9zty8R
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0.8309240866339276}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0.8642261353104727, 
      1.5302671088413737`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0.8309240866339276}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0.8642261353104727, 
      1.5302671088413737`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"BTAL\"", "\"SPHD\"", "\"mean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.667854907937216*^9, 3.6678549138276587`*^9}, 
   3.6678553360120983`*^9, 3.6678566338055277`*^9, 3.6678568577312145`*^9, 
   3.667857049065646*^9, 3.66793600446531*^9, 3.667936044002632*^9, 
   3.667937094738269*^9, 3.667937563008226*^9, 3.6679375960862556`*^9, 
   3.6679391025439124`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizedData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2", ",", "chart"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizedData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizedData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizedData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"chart", "=", 
      RowBox[{"DateListPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
         "}"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
           RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
           RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}],
         ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
  3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
  3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
  3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
  3.6679369641014714`*^9}, {3.6679372872517247`*^9, 3.6679373220403585`*^9}, {
  3.6679374116080265`*^9, 3.6679374118424006`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "Today"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"PortfolioChart", "[", 
   RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "Today"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
  3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
  3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
  3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
  3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
v34oWvnME+a/miJNwLomaOOgJjDftCwhy+b32j9oQ6OmYHN/tGNhU+g/VYfJ
lQqn+xu5P/PwsguvgrJPVtVyf9aXLFu/Kxd4wfinOYTWPfCC51fRuxlYPb8Z
zHe1B8iaEw1K+x7h/PfQ5u9oca43WL+fLFtPme54w3zSmuON84maarvwxmPu
fvcnPL7tJZdsdvbHXGee79wid79YzSUmlcc3B1l2nkZd3QfmU9qu5CkPWnuX
1/D4dp2cuK/frtmBPL599oH5hejanF4/K8v50WQe3wTyx/DYeRV+8vg8tTmM
h7rKLeyCkiaPH0tx3o5ky4Nfr4635PF4ElqxFW2o0BLqYW5PbnC3cMDjvEHk
hXXPRyQUcHswtITPExNawvzQ2qaVXTjl1uj1xmiu5/hWMB/VbCSnl9tbd2w/
nl/GkZ8Xlr8jn5d5TW5VasCMpAA+z6NtbRcMtdNWmI7w+Zh15CeFP4dc5Pnl
ObKz64uwhGU8v3xFfjc/LX/wfJ5fuvja5eeH9Kt9Ia/pDHliXOGCnvOnkmes
N1v6Wjh/8Tbweo2aLFuPW07hdcWLNtA+1EXbwvtrvcifozZl31vI9R9CblOn
qW15MreHf9tCexIV7aB+ek+y652IKocq83mkgeTFHqeyFqdz/sXk6dJ2Cj9v
v8k7jz2LGr+C20fD9nYhLiClYeImzt+vPcyvFQvJST930wyM80eTZedlzPX9
7MLQwuN7Ru4v+vjBfEgVSpbtD4gH/XC9dN8P5h/KXh3s8v18zf/QOiPaeLcD
rM8t39DaOR1hPWzY1xGumxM7wvrdkY3XVTU6wfrZtIf8oo9b85Fp3N/d7ITz
zS/k890KBxjO20UDVlxHqz9p4O+1VQXs3zQCru+nkGXnh8SPaH2lzjAfNnXo
DP2DdSJZdv5KuYUsFv4adZPbg7KLXX6ezNKuC7RHRRC57eK5la5HcnvYRJad
B9TGk2Xn5xy+XeG6ahxa3NAV2qM+Fq0Z4w/9h26tP64/Y/xh/WxJQxtWdYPv
ZzaRZeftHC/JoWcKD4Tx+UTn7nah8x7LvEUl+TyoN1l2ftZ6krw9Y/zvZC2f
V31OrhYWb5w8iM+rOvWwy8+v6pqS6/QweRcZxedtB5Njah5PDF/H51P/kmXn
ZQ2NA+zy86vmAeRjX6eWjz/B52sXkXsmRLg+38nna3+Rw0a16/bhIp9PbdCT
6jWq5v7WsZxXJM81dIkTz3HeMPK1wu7kAeeNIvtsubLWJ4nP19YLtAurthV+
QT5f24c8qoLrs+6+2dL9DiFf7LBg8kc3ydpI8o+bmZGBiZw/mTyvbd6ELGfp
uiqwl1142GdZ2NMJksV55JorTt8uOVayPoI8plbhiT/JpiRy+6u5hnvrJFu/
kmMXfeq0uatk4z+9af0SNOLHpvec9zbZvf6MPiUOc97s3vD91O597MI46XgU
13M3ucGIqtNqXOB63iA/o96qbDafB84iN32s1r74xvffra9d+N3+7w6XYpy3
c1+oj/Ia2fNWIvWQXE87+fGl6ICc7Xz/q4h2Yd/p4RsmTOL734nc9XDb1Et+
nH8y2XWG2N6zLreHD+THkwsnCFzPiv3sgm+sYmqTJZzfj/z7Q4MV/os4fzD5
9so/TdJWcP7N5OgOfX6lNuT2UL4/9c8udc4cbsLtoS051139/eQ8zj+BXLxS
sJ/7CM4fTg6oYJ/crhvnv0Du8LJzL49WXF/fAXZhmm5ulVwPru9YcqViESdO
uHH+9QPg+TCcJwf3at7y10xHp/8DxS8YGg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
kovuN+n7q6Z7cGoYZ9u0BfS81gcrGGUM1/yi56FJ83iMznBKbG4Y3Z+ZwLy6
GcZfyX234TtrdU8E2dH9zkf4rPDu9YH0/ZaNjCaPcdqQ7i0iQ9dnBtZ86pv2
fhJdn73hmSvWL5GvoeczSS0eU2lV/7vVmvLqw5E1AkLdgnR/5gGnMn1n5ynR
/dkJ+HXryLT79HwfO34+jykVFdO+MJPuzxbDeUW/Tgp7U15X2GLMe74Wut9X
iIVXrpVTdD1G95el8AGfWQEL6fuKDh1tHjNyxLogExu6P3OGnZvjFVRF6P4y
Gl7gFWn0hI/uL4vg5JVHjVzp+6TETvij9v4fMR+oT6cFPObCxTjB0670fHkE
1lPQkrvkQc/H12GPyB2N8rX0fc9LmE87tnwEff/UN2ohj5kmfE64mD4fJxK2
kHmyTOYQ9XkV1lHdGDafnj86nsMTFv2I1Uym/EI6PKZQJtNBo4Xya8CyuRkh
B+n+vekKrFlauKWenu/4nsE+tQItESV0vy6wiMco7XNc0X6R5kEN3rBu0Zln
X6h/e1hr59UMt7G0357AEzrnnlQTp3nm0+Ux9RE5YwfpeY+jAt/NnpL59S3l
Xw276rboXDaheQ6BvUIkvGfR/YDfbzjx1TbfPzvovJi5GM+zF04d7PKk88IW
Xh8wO3XGZdqPwfCPttmhD9NpP6bBMtVnjzbT9aFSWQ/3e24Gr5Qf0XlhDUuW
Nr+RekP598BnzbRPr2im/CnwzwmpgUH1lL8BrvNRc/Kpof1muQSvd1dy4u84
Oi92wQNeBx/YJlL+RPhwx/S7UXS/k1gLF3+2luFfRPkHYK5h9iaFH9Tvdn2s
z3TfqixrOi8uwCP8Xew55pS/Gj5qPn73aLqe9H2GNexmVIym91OYbIC+wuLn
z6D7n7x42Hzu3Xd7r1C/d2GJ69XpRoWUvxfedKbccSv9vp+xIc7LqrIsGTr/
+W7DUrIZUz/R9UHjA2zaXntF8zmdb9IMj7ky+1J48N/7NUP4nda7ImfKX+kF
T1XO0L9dTn32wG8cYuuC6bzjSBjxmNYA0Z54un7lLYFtErwE3yyjvO6w2jF3
/f/R/aN4HLy7ZmZ/3Ts6L8SN8XxoM6VXns6/Jl24+deGn6b6lN8Vlg4+dOoc
3X9oxMCLpjy0jaH+nUrgSTLtxlq0P/oWmuB+wF7U1pKeFxS2wA5TTzX7aFP+
o3BZx++1LXT+cgrhP8MPIlbT9cpw01Lc31sPyGrR9dvvMKwYY7F8SzKtfz7s
HyUQZ7OH8rbDR+Umy9wxoP4ilqE/k1w/pT46z/JgWX7jWSk0H31tsFhYQlb2
NTrPBE15zNj8iDIP+j7RRh1OHLCNfveZvi/LgYOe3Q/W/kbfl7XCB47s3RI+
jc6DEcvx+T43rImjvzf4zYH9V20bNbefzrM1cG2ZtbREKJ1fw/CS5eGKYvT3
jtjZZjym+uwKh1IjOr9WwbIte7Pvb6Lzax+828A+qobON84v+NrLA7qrguj7
xxnmPCbY9XFd6y3KawPfO930WID+HiO+F97cVd/n8vf7vVT4ip04R0OZzi8l
Czz/Ct+pW0yfh88aPhAsXVlaSefvbtjN9Obik3+/P02G5xl49wx2U/562Frb
2vnXfvo+3cIS54XkfScr+n7RZifMDXj7/CSZkwDf0rt8djJ9X59XA1tGBzZW
D9Df477AYWoVsXKO1N//rHA9fDrcNbmQrr9V8On9EteKRSnvZ7i4Wc4z7Svl
lbPmMUNJZWXT6O8hlefgBdut6xsYWv87cGSiVIjEb8r7CRbUGbLLpO/jbWRX
4P12iHiK0PfNHCPYMNXwyy5zuh7cgt2fOMsXy9P68+DJKT1xT+h895OywflZ
HsF/vYj2lwG8h3svP6SB+vaEC1ot4tJf0XnVDf+y/94v/4auBxNsecy3fsGM
vjSaXz14qvOFl7a3Kb8b/Kz8ilJtFc3vcdigcIlKJX3fkSe2Ep+/jpcSTM/L
HYvgeN+d7iZ0PRF3gccndPsPaNB+OwY/djV7+Gc17bdi+FBRiMgub9r/C1fx
GL8z8g//ni8am2HxLx9HHvCj/R8F3/s9+Wk8na+xBbBq5ssyieVfDf4POvoq
0g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cATmzxr+//3s/wDj8BAi
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13lczNv/B/AhLaQkRZY2ElFJVJZkPqWQMFKEZFQixNgrqSkJCYNsSSYS
ZZsKES0UWpVKrhKTksxEiywV+b2/8+qf3/3j3vt8fKbPvOZ1zuec89H33Oq8
ri+Lxeqgf/3vv/QP2/aShMH/ts6mf/E2k78abs/epyqz8Mz/d1kOebbt75rX
GjILfIUSRkNxxsKXpjLnnCLr6qfJO9vL3JpJXqXhPniRmcx6TeRgSV52/DSZ
OerxEkY+4+So8Q4yiwVktwN9Hzfayaz2iLx6d/Hb/gtkZn8iW+5wtttpg7yD
LksYW8kz7TuwcDr5hf7g8IPTZTZ7QM60djyweb7M3I9kp29Hu0TrkX/gFQlT
YDfgriOu51iSdeWdP9x1RH4u2VG5QrzRXWb+B3Lr8HOfy7fLLOqfIGFMhtRE
Td+B/FPIZsbXK7ftRn4PslrumfnNm5D/EPn6CMc2Rxf0qXBVwmhenH9koafM
rMnksqxR6fkeyL+K/EZeZ81Hf+Q/QFabmvRNeTPy3yG7r9rtFrgF/ZomSpgs
zaPxn5CH40Zml4nKN65B/jDyAL1yppCH/DfJRq5zxvVbh/xVZEPPP2MKVqNf
12sSxr8zosTJC/2GkLU3TEpz8kP+JPIV9+9De6KQv5J8s+hw/e0w5O8h3zCX
VqmEot+g6xLm4fSC31I++k0knxk3LvDkBuR/RY7v07D45lrk7yZ/2B+qZYG8
/LFJ9PvGtX6r9UafL8nT5/Pvfd+GvL/Jdk5GVgI28o5OljBHn8e9GhmJvE7k
Aakid2dD9FlErrGsdnmH+Sj4QbYTbHjRNQZ5dW9IGCXvJAOeNvLOJw/sWLa4
3gR5d5Ldv6jMHYv5KWonn+5z3MdpHvocdVPCdDUsbNqE+ag2lzx6/W39eHw/
exv568Syk62Yb7wL5DM3B0cFzkCfI25JmEfK3SZeeD7M5pBLL9x+d2I58m8h
G0/e8b1uJPKfI+vJf+poxvOc85SsYBVxqFAefTK3JcyOAJsHTgPR5yby0dr/
5FbrIf9p8rvwhuXTLZA/m7zogsKpKF3kl5ATTs079WIo+t1wR8JE21r2zEFf
ZSfJH2++KnDQR/5Msr708ZrUicg7WCRhwm12s17Zos/jZM9ghbkGs9BnBrn4
mtWQcifkbSBXjO7/awueb75qioRpPD/79h1X5J1GZumf6Hq/BH2mk48nVLSs
WYk+68heO5SunFuBvMqpEubzqEsuvpjfZRbkCWNmpF32RV4uOXnwea1IPO+C
9+Ro7/3pQ/A85iil0XpwiGeyAPdrNSfrjTxtp4rv11tNnnzWNX0FrnMOkv9M
fVJ4GM+fWP6uhJnz9tgtZ9xPzYy8c2vO7jGLkX8lufLHvNuPOMgfTr5w+NuG
QMwn4W2yfldW2WLcz8zkHo1nxzTe31Xodzl5QR9Dbthc5A8l5wn1xUELkf8G
eaqw8M1D9Nf6muyXb3xXjPHgu9yn5ysw3Xcanh9RMLn0+xuj2t71+TqZPcRT
vHAm8leQ05xLXNsx/9h/ybOduoraeveLvekSxiJpidU7zEdWIrnmvzWbLykj
fxk5Sbj1yZg/LbL8XeTiWm/DQVKZBQYPKM/kXaWtnTLrXSH75XrwYvuj3xLy
1sJPPdf6IP8vcsmA1+/dcV2k/1DC8AbYFXZ9lf29eAH5gHTKFCOxzMIOsuJt
g50V32Uu08mQMFvG+uR1Ix9rPvmBQV2uebPsutkO8vK0jC/O32TOaSPnuF0J
9P0pc+vIRzTec3OLtH4hrwO5cufQTzN78/LIZ1I7Fq7qzRtD3rP5Scg/FfQ5
/DHN5+IWwW30x7YjJ9qVPn6hhfngR5Zbv+9EC55P4Vmy6ofTM6wnoe8nZPMp
i754YD/msjMlzP3DnQv3TMB82EhOCSv02quD+RBNLqu96HhnFOZDFrlBNV99
9VjM5y/kcPURR44PQp/rsySMh0WdNPgf+jxBfhbQf3/oYOR/TI6+7H3BA59n
N5IXWEdUaPyQfZ6nli1hRm674hnS2+9xssV3/9jMUvT7kOxq5+ZVVI/5UE++
8f6R3Ol+yK+SI2EEo/KH12kivxXZtYqbtRZ5OffJd+vu7XqP9ZUvJndqHnA9
j/VJNOAJ7U+Xf1ja4Hwhnkp2G/lVKRHPr9oa8pYt0qzKZei3lswk/b3zFOtJ
meJTCdP+9naXDfYrljl5Dq/F/ST2TzN38ld2RAkH+yM3gqyprKpWhs+39suV
MEe2M1uqAtDvJLLWa+OtXhHIv4J8sycg7Eog8u8nN997ECyH/Vx0i7xw3Dl+
F/Y7tnGehJk0f1EKg8/zlpG7dCsS67BfCvlk+UtpjZ+CkD+ZfHYz4/UX6w/r
Ndk5IIO1IwT9Ln0mYV4dCVWcdQT97iNPjeoK34J8rdfIKh8VJnmfR/5ycn4U
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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
0oj3LA==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 1.434010631249362}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 1.434010631249362}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BTAL\"", "\"SPY\"", "\"SH\"", "\"BTAL & SPY\"", "\"SH & SPY\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6679366397690153`*^9, 3.6679367516068416`*^9, 3.6679368593411646`*^9, 
   3.667936970922141*^9, 3.6679370012599287`*^9, 3.6679370989355893`*^9, {
   3.667937301643483*^9, 3.667937329121683*^9}, {3.6679374044328537`*^9, 
   3.667937417822565*^9}, 3.6679375710827637`*^9, 3.6679391073697505`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
v34oWvnME+a/miJNwLomaOOgJjDftCwhy+b32j9oQ6OmYHN/tGNhU+g/VYfJ
lQqn+xu5P/PwsguvgrJPVtVyf9aXLFu/Kxd4wfinOYTWPfCC51fRuxlYPb8Z
zHe1B8iaEw1K+x7h/PfQ5u9oca43WL+fLFtPme54w3zSmuON84maarvwxmPu
fvcnPL7tJZdsdvbHXGee79wid79YzSUmlcc3B1l2nkZd3QfmU9qu5CkPWnuX
1/D4dp2cuK/frtmBPL599oH5hejanF4/K8v50WQe3wTyx/DYeRV+8vg8tTmM
h7rKLeyCkiaPH0tx3o5ky4Nfr4635PF4ElqxFW2o0BLqYW5PbnC3cMDjvEHk
hXXPRyQUcHswtITPExNawvzQ2qaVXTjl1uj1xmiu5/hWMB/VbCSnl9tbd2w/
nl/GkZ8Xlr8jn5d5TW5VasCMpAA+z6NtbRcMtdNWmI7w+Zh15CeFP4dc5Pnl
ObKz64uwhGU8v3xFfjc/LX/wfJ5fuvja5eeH9Kt9Ia/pDHliXOGCnvOnkmes
N1v6Wjh/8Tbweo2aLFuPW07hdcWLNtA+1EXbwvtrvcifozZl31vI9R9CblOn
qW15MreHf9tCexIV7aB+ek+y652IKocq83mkgeTFHqeyFqdz/sXk6dJ2Cj9v
v8k7jz2LGr+C20fD9nYhLiClYeImzt+vPcyvFQvJST930wyM80eTZedlzPX9
7MLQwuN7Ru4v+vjBfEgVSpbtD4gH/XC9dN8P5h/KXh3s8v18zf/QOiPaeLcD
rM8t39DaOR1hPWzY1xGumxM7wvrdkY3XVTU6wfrZtIf8oo9b85Fp3N/d7ITz
zS/k890KBxjO20UDVlxHqz9p4O+1VQXs3zQCru+nkGXnh8SPaH2lzjAfNnXo
DP2DdSJZdv5KuYUsFv4adZPbg7KLXX6ezNKuC7RHRRC57eK5la5HcnvYRJad
B9TGk2Xn5xy+XeG6ahxa3NAV2qM+Fq0Z4w/9h26tP64/Y/xh/WxJQxtWdYPv
ZzaRZeftHC/JoWcKD4Tx+UTn7nah8x7LvEUl+TyoN1l2ftZ6krw9Y/zvZC2f
V31OrhYWb5w8iM+rOvWwy8+v6pqS6/QweRcZxedtB5Njah5PDF/H51P/kmXn
ZQ2NA+zy86vmAeRjX6eWjz/B52sXkXsmRLg+38nna3+Rw0a16/bhIp9PbdCT
6jWq5v7WsZxXJM81dIkTz3HeMPK1wu7kAeeNIvtsubLWJ4nP19YLtAurthV+
QT5f24c8qoLrs+6+2dL9DiFf7LBg8kc3ydpI8o+bmZGBiZw/mTyvbd6ELGfp
uiqwl1142GdZ2NMJksV55JorTt8uOVayPoI8plbhiT/JpiRy+6u5hnvrJFu/
kmMXfeq0uatk4z+9af0SNOLHpvec9zbZvf6MPiUOc97s3vD91O597MI46XgU
13M3ucGIqtNqXOB63iA/o96qbDafB84iN32s1r74xvffra9d+N3+7w6XYpy3
c1+oj/Ia2fNWIvWQXE87+fGl6ICc7Xz/q4h2Yd/p4RsmTOL734nc9XDb1Et+
nH8y2XWG2N6zLreHD+THkwsnCFzPiv3sgm+sYmqTJZzfj/z7Q4MV/os4fzD5
9so/TdJWcP7N5OgOfX6lNuT2UL4/9c8udc4cbsLtoS051139/eQ8zj+BXLxS
sJ/7CM4fTg6oYJ/crhvnv0Du8LJzL49WXF/fAXZhmm5ulVwPru9YcqViESdO
uHH+9QPg+TCcJwf3at7y10xHp/8DxS8YGg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
sHYTY/2wOM7bAvDMpSMGDfD9/wfT1y6C
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Wdcb
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13k8lOv/BnAkWoSKKNuQQtmSJC3msetQUpZKpWRJknZFNSotUoSS1kFZ
CylriaJdQmlRMlo1UyJLtPld3+fjn9/545zzfo155prr/tz384zmqvWuvhJi
YmJd+Nf//ot/uFbnhQz9b7sl/hUSBM96/eWi8VDW/BPwCdEOrffDWddWwA86
VF1/y7OOXcMXMvUftV/ITWBdEQ9vnjuqPYFh3V4Ga+3TK79qyJrTCnOneug4
G7F2GZUsZGxKf2r0m7IWxMJenrsep9Hr8tfhcaOuV6+fzZr7EQ6a6/sy2ZLy
yqUIGYX4maOVzCnvDPgU90xkohlr42J4keJ61TvOrL3fwQufDdk4bA3ll0kV
Mlsdg146cCm/GZwTUp2y2ITye8NRwvmpIno/rxnmv7s/xyiEdd7QC0JmNzcy
WXE95Z8KewV+W6VIr8svh6NljUTGAZT/IDy3vt0gm65XK3VRyOzYP3rcK2/W
YlNgk6y1uon+lH8p3BbRwpkXRfkj4fay/ZkF+yh/LszfkNv7iV7nGKYJmUuz
x8n9F0/9esJGP1Y/vruR8u+Bl2vO3fua3p93CR6iGpI9KZzyP4cTZl7+oRZG
/bqlC5kr396bnomgfnfDgcmjR2XyKH8m/EP+YoNiEuV/Boe2OSvknaD8/2B9
33NWxsep3/AMrMf5hqUfjlG/afCqLbFhVaGUvw5WlLi++l4w5f8NPwnqGR67
i/JPyMTnrauobN5EfdbAhk2mBlZ7KG8vbLPkVlP6IsqrlSVk1GRttzxNprxO
8LHis5PVHanPR/DV9/8MMxZSn91whdHULc9o3io0soXMm0SBwpgZlNcR/u+t
klspzQtnM/x3cZzVf7R+eT9gE7mwSM/l1KfqJXxe/q77ci40D/bwxszBce3T
KP8GOP6+/GVxN8p/Gm6zebHorjX1Oe6ykPmjPKVJnL6PsQ3cPjOj9Y8v5Q+G
TzReOfuP9kvsSVjsvzNSJWMo/214Z8KojZG0n12YHPRxXiLsiiL1uRZe4FcZ
KEX7N+84bDxBubNnOuUvh38vOx1Vp075hbDL/ZFaTzWp34BczMOMC/4j6PNr
42BJzTS7LrJYGcx9rZGqZ0V5R+YJGYvApB35rtRnDLzsdIXKHXqdUwpvfiWx
oH8+5f0AnxOsiwgZ2H+yV4SMcnHlsDya5zxzON+L0/dmG/VZBPtYi9v30TyH
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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
c1cx/wfY8HSPmA2Lmd/wLY6vQ1nVFM5f6zj4WljkGGsf9psKt1xp1urmKOYv
gOf4ShdM4/4UTd7hebnhWC9Dzm+VK7xhmcE9Oa9/YRfgSSO+z7zL60nCO9iu
9PSuswLzN87H87nKyGmXhPm7wzWzTPWSuF5nvoZPWK572GYs+2yowvN1no0k
ZArzimHXlpenBdadfxNg3XJtsUcg80bBjV2trLrXnV8NCnC/0Dy9/12e315d
4dEPxt80ncC8Y+GZrqM9k7n+JayBC54+jwng7ylPwa8bRsY7czyk9oVqIXJ4
zPo0jpd8NBw0RqdmIte3zFXw8lunEztwf9ok+LXVm+6etPUTeMdNEwtDfl7h
+14tRCw+c+sV10NVOBw8PHqUD/s2ToQfO3YL2Mf11UsJtximer2M63NYFawb
HtIul/2Iln/A9WJKmbULf098BLb4u9d1E/NKH/zn3zsVDeYw/w940v4Njg84
HzPbfcT8dv5buIXnh+wu3HNA1G6dTcz7Hbb6mz7rcjTztilSC/dOJxz6zPPX
eAjcOm+GbB3Px4TbcC/T6e1X8HxVlsJZA7IC+/F8FFl9UgtjKgTb9VuZdxCc
+7tbp1YHmDcMdnk5WbEnkX1+hZN/jGy//Cj7bFWM9T77mFXicc6H/vDroW5u
+rRsDlzysDLVcQ/z74JfND1QUf8g+zT/jL7yIoMNub8wLzjNtYXhdm5PmAWf
vy0+/ZX7V27//H/7E12DB3w8dH9uEvvso8bvpTm2a3KCfc6Ep73d/vAvP6/d
AhuaJfs+Pcv8V+C9aTPqT0xm/iK4707f8m+p7HeaRi08XG8v8U5nv/GwVN/d
UnOb+S/BDZ4rg77fY/738K9Am8ZHn7HPTSVqoVNF20+jlewzBZ635Opoxwzm
VcEh49ZIpTnMq/8F43n7kuW+G8zrAmuGxD7LfMA+z8PHgpx0n+axz7dwsChR
onjEvLpf1cKPqLa31nD/xt3gxxOqoqZmMe8kuPCj2PbPK/b5CjY4U2+Szkv2
2fCbWrgyXM9+aQHzO8Grj+W3u1HC/OPhvqX/xHipmX8tfC3IpP7V9+yzvhbX
L+tTC2Uf2WcXeJ36fr3O/D2ZP5x9s+/6J0XML4Oz3Lv2+JnN/Cfhdj57ujXj
8Yd1LsV6ZR0Rrc9+E0bB5Zcb1r99jfkj/tt+4aeOPy1Kgjt1cbvU/zLzP4YV
sp7hHW+yX0kZ5qNf4aaluex3BSze0/NXC9r6GDzswtf4R2+Y/yHc6+mODFvm
lf2Cv5ydE/+WfRgvK0d/nTPGXv3Jfg/Dii3tPK/VL63Nf///nVAJ+xia2y9p
WGul9Xecb1biCeMa11p6EHYZLJ1S2rTW8hzYxLBRrq1xrTPLYVFVF6PPRrXW
tq7AejvjyqaWtPVgeI9z52fDzWqt0sLe8c90NK1qbWxZifX40vn1CsNaew2E
qz906HGE+wubB7+ouDxrIL8v+gqPnr/DWcrvi1v+wPXkXIazmz7z9oMzdEfq
mnC7PBS+31X5MsGceXf++L/9Scx+qoVVp62SyqrZpydsf/u23kqD2u2KEPhM
XoF7AI9HtQ1Wp7sbtLBi/gx486tFYfqW7NPjF86H5M7XhjVhnzPgr7dnPByk
y/xb4BH6zW4tbMn8l2Ffx3ULHL5zPn+E3U7ZZl/WYZ9Tq3A/NLLt6j312Odm
+NzE4PbvOV6SNNhgpnNp4WfmL4R9LL2/X+b5oDD4jfsZK+uDL+vmw0a43meL
lBOVnM8XYdUq67zb7zif8+Ez3j1fjf7D+az3B+dL4vSQLYWczy5w4pCYuEGc
z/Jz8I19XU+MOcz5/AbuOzysYcQRzudGf3G/MvffXlm7OZ+d4aOKL3oRvB5I
JsJvTq/7c5HfV72EJ4T++7Q71ztjnWq10GS976XRKuZ3hC17j+6pfM784+Cc
2L/6Nl+ZPxKe6qq/YgHzi+vV4P5kdbN7H2ipA7zZ+dPPvBacH2Pg50O7X/rE
8c1cDbsVjE/Mac7+T8A71YcHGHWttayTSCMUiRwsR4g5P/zgacs6f/ljz/mx
El7dPsjbpgvnx3G4z7qdYwY6c34/gkddT/Wf7MT5MbKeRnjlX5Ka6sr5sQKW
vn6kU9yb8+MorEooW7qgL+d3Lpw9YNQgPW/m/wkvK/jS4sEwzo+l9TWCld1+
K80gzo9D8J8Kw36lo5n/HrxvQFz4YH5eUQE/XedxKpTbVW0baIR+913j3cbx
/DsAa50ld2bM4Py+A1c9fXvXYxbzl8Fbm6bWTFjCvN462O5omv53Ffu8BR+t
uWl0Nph9foM73eh5ySOMeS0aagSDFaUXbRYx7wB4unTY6CcLmHcuXE/c/WC7
hezzC2zSrGzP0Onss0UjjXDaOHpgKfOECfCVDU907Hl8CbPhX1vCe7mPYd4d
8PpMs0M1nuzTVFcj9Iq7XhTB8ZL3heufi5jYpW4+BMP6j9bO+8Xx0m6FN1d1
eWA3kfmvwge2H5Csn8Y+ezfWCF9WVfYv5vGqpsNpRfo/tgQyvxy2XeJsZTyV
eT/Aq69esJbM5/hP1dMIXb8sen6O/Yjj4CWh742W8vPSVNhzjyoreiTzNdHH
8VhP7ysewv5i4R0WTjGn6+brBXhw22vdTLh+Kt7By4r/EU/h8aoaN9EITjM3
t70ygvm6w3fWlshb92N/ybD4VL7g6Mj+XsMe7W7t9KVFjQw0wuErI6MVHZhX
DG9/18AohOundAJ8Lq141Alr9tWgqUYICnk4aSD7lHSFJ+iOcirsybxj4dCa
sIjfE5h3DSyssh1jOoXjLTKEmx0dd3IS+7OHQ11H22Z0Zt7R8PttHoOquD/l
KnjP6MACq+7MewLu2eORWybzyjsaYXz+vPx9ndszfeGx05fMkQ/keIfD9XZU
Wbzpz/yJcGKK/FIQzxeJEs6Tvl51cjD7HGGsEVr1yI0Yx/6Ml8Ndtr6Mktfl
PwJvyDed4TqT+R/AvWI97j2PYP4fcPGiZlrnePaX0Ax9psmLXbYw7114Z7XE
o8125v0OP1wbUeZ5gHnbmGiEmsLWketOs8/98PaOz5tU/8s+b8Mt37j6KM8y
byksvmCkE3GSea2ao49nDuW9LzLvIHhYXOEhEX9PeRPOMXffYnqNfX6DW7ld
zB/Pz4tbmeL8eBUgHsDPS/vDQyxO3HFWMP8cWDc87e7M3eyzBL72yjvOivkl
5mYaPA+8L1jL9UTmBce3dZ77h+e3Yhac0iapVcRS5t8O9xilUqyZxz6bm2uE
xYcPbwqMYZ99YNWAv5rkTcw/E/YoN14SlsD8W+FGWUeT3x1h/itws1+3808y
b2avFsj/vfF6B/annQbP/10Zvv8Y88fD1Xeft75Yt35dgndfjytPnMP87+GV
q+w/X1jMfoNaagSb1Y9ab2Qer03wubJ08/483rAUODYy9VdFKPOrYPe1WeY1
tDSmlUYIUxvb2nJ9lZ+Hzb9dSR62gnnfwvmRhQFNNjKvrgXWM1Fy8ZNdzNsN
jm7S2msIj1+hgJdcuDW+4172+Qq++t67413OL+OGlhjv8F/daw4xrxM8Ji2u
7A3HK2w8fGi8390dnL+iF3DN1hLnqH3ss74Vrm+enfbasy9pF7hYYh71s24+
+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
mU4Avy+/CN/TZPU6Cf8PftoGBg==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5731584*^9, 0}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 1.7391309249195603`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5731584*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5731584*^9, 3.6677664*^9}, {0, 1.7391309249195603`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BTAL\"", "\"QQQ\"", "\"PSQ\"", "\"BTAL & QQQ\"", "\"PSQ & QQQ\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6679366397690153`*^9, 3.6679367516068416`*^9, 3.6679368593411646`*^9, 
   3.667936970922141*^9, 3.6679370012599287`*^9, 3.6679370989355893`*^9, {
   3.667937301643483*^9, 3.667937329121683*^9}, {3.6679374044328537`*^9, 
   3.667937417822565*^9}, 3.6679375710827637`*^9, 3.6679391123224363`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.667937039730649*^9, 3.6679370458548574`*^9}, 
   3.667937563023834*^9, {3.6679390384723988`*^9, 3.6679390621543503`*^9}}]
},
WindowSize->{1474, 812},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 895, 26, 36, "Input"],
Cell[CellGroupData[{
Cell[1478, 50, 2185, 56, 152, "Input"],
Cell[3666, 108, 47841, 861, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51544, 974, 1396, 40, 106, "Input"],
Cell[52943, 1016, 49598, 892, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102578, 1913, 1411, 40, 106, "Input"],
Cell[103992, 1955, 49526, 891, 297, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153555, 2851, 1509, 41, 106, "Input"],
Cell[155067, 2894, 50438, 906, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205542, 3805, 2092, 63, 152, "Input"],
Cell[207637, 3870, 45142, 819, 297, "Output"]
}, Open  ]],
Cell[252794, 4692, 5013, 132, 313, "Input"],
Cell[CellGroupData[{
Cell[257832, 4828, 950, 21, 83, "Input"],
Cell[258785, 4851, 72723, 1302, 460, "Output"],
Cell[331511, 6155, 73611, 1316, 460, "Output"]
}, Open  ]],
Cell[405137, 7474, 601, 16, 60, "Input"]
}
]
*)

