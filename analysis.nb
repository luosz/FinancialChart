(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    503180,       9360]
NotebookOptionsPosition[    501600,       9305]
NotebookOutlinePosition[    501976,       9321]
CellTagsIndexPosition[    501933,       9318]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
yiQa
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
scnj/5xdJAY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
JfWfW4n1TtiviX3Ji2IvVTI4H2THkufe2LklD+sN9zTZhS/5Edq7/31OTnRc
qrq6BfX1tpIyf3e7Bjli/eKs/2OVlbx/byL/SXKZ++9POVjP0p6SFfdGL+Ze
R/4f5LCVL7qeYz/tt9aa7j/r1vmlWL/4x8mbclMaTO4hfxHZ3bKoQ+8h8jeT
79vZ+vji/ZCtx5EybZWxR/Txfph1lNw8L1MzZxX2aw/Jka21ar9xvsOSkWMK
GLMXntiv6djQz2vcaTTG+zHPnSz9VeFmgfNO2X3ySZ2m65moj8E38um8wP1R
eL/0G2YrZQ5oFMX2YH/JZ8jntfpP692vCSLIOknlazqw34vWspMy7YWl/3vV
u7+cSObvUG+26n1fXk5eK7xafR7nuaz95LGq9zYJcb6QNniclLFKbtF0xf5S
6Ey+oX1KLxPXy0LJwRrNhnp43zNII+v8pWI/GuPBL5+sEjlcd+kgvM872tP6
/b79oz7eT9hLyJeeuZ51x/dzU8gq8eY2Tb3nETfIVeYPLXN6zwM/ku9HVJ7/
F++HHN54+r6VLW+UJ6KeSWTnqw8/ZHsg/1XygLLmrPTe858q8o4pm09n4LxG
pupA88nXzcgK84G/i+w1yGyQM/ZjgivkUPE1y59Yz8XvyG11W2c47ER+ZUfa
z/F5T8LQT7kc8qndgpJC9GPRJXK5aX59WRDqW0nOn63FL4nGeO47gd7vLJsC
UvD9PEtyPNeKLXLGeA4ip8/lGB9zQH3Lybt1Vs9+HIn6spykjE+SoUfvesg3
J+d2qu3irEH+WeRI/4A+Z7CeibeQtezLm2dgPY7uIo/0PqgxMADjw8SZ5uu5
CarfjyC/Pznc3mHiIfQb1iayXuHFl7sskf8M+dfIpEsWNphvRi60foR4bQvp
j/HhQz7+dNf00k+N8vwbyeNLBJ5pJsh/ijzlt0PVUEPkf0bu2uQQF9zb77xc
qb4vYoIHGaG+MeT8gfWZ+j3y74vOIh+5F+JogvU8q5gccjf7pCvuV9RKnq88
PZCD58NbM/HP+DTkjhyD+maSl1/2WX1fB/kfk393aeV7YT8ja/rju4O1vduR
X3cSzTe37Rv2TUJ9j5Bfd5cPa7JCfR+QDb+mKPugn7O/k3/k6qV2D0a93bg0
Xqv7bK79If8+1n0yR2HFx4HKqGcD2WVllccVM+QdykiZ5//86D6I9SKNS36k
fCbBGvtT4QryGsm2TTu2o55fyQ+tR7h+fIJ6ak6m+TvBJnTuZeR1JXePtfB4
eBd5l5H17d45fDmAvPvIr5pT7It65xvbjfY/aSrdPujHIify7urOd+fxPsUK
JUd6fz2Qi/8fwkkl31k2+nIn5j/vFjks58med3g/lDm4S5k9zJMNOegHBovJ
JUq+MwToT37J5HTR7cTEROS/Ti5Uqxo2A/fHDfGg97GjP5Ku4fwmejf5Uqng
fEbvecn/yNajC4XD8f4p+kB+VD/VYDX6edrOKVJmq6uIc6kG9ROQWTMTqypw
viR7S/Z96l53Bv3PQGmqlPEc9+n9YwP0X2vytOlmS9Jx/i2+SE6MPaioOBvn
Z2/IQ/NSlULC0M8Upv05//C7O2sJ+pkF2dSjjn8f5/VZgeTflcsicuahf/WQ
9zUVjsg5gP5l5knjKflnEfss+tdM8tDOpeWesehfm8li25IgRSesB7/JPop9
9U1W431+zHTq9+1notwnIa/fHw9qnb17KvLGkdPqU4u34HyGm0MWudVaXv2E
+o2eIWVWfDbvMxHnBSwfsoqKfvk1G/TfDeSJR4dtX4D1gJdNth63t88FjJe0
EnLeBOtR3ljvDGZ40X7npup6m97zyHVk++1vHG45Iv8JsvKDgZqtzsj/hCwa
l7KiBp+LW8gc2YFDj1H/rGPeNH/Pezu643xW9IjctyzbpBbnM6wmcsKPcWV5
OH/gjPCh/RJPzTgH5yPCw+Qjgig7lTw8/3/JD2wP5/6N81eDRjL/ESf3oxjj
U9uXxoti5v4YjBf+ZPJgiyG1wTgfYt8jx41z/22A8zqulHzf0cbZG/un6CF+
VO+BvtU7e/vVJPIQwUy1TLzficLJlZ5jtYLR73j15LLI9SuP/ZL3izQNf+of
DadGGaLfCF3IYe6+55IGIH8YeaN2o6LlBKwX6eT8Q10C7ffynxcMCpAyh9nn
Kx9J5RZPIK/++SwwGf2HvZRsqNvqf6RE/jl3L3lF5rF+Dk/Qb2+SyyJOzW0u
Rf9ymCllFjveTVK5IzdnEfltRcTK3Zfl5u0hJwwxqZv3FPmvkcM8prSUvWic
9H9GGRTt
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.473056457139303}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.473056457139303}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"IYE\"", "\"DDG\"", "\"IYE & DDG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6678461022283344`*^9, 3.667846139497766*^9}, 
   3.6678464769698286`*^9, 3.6678465152740993`*^9, {3.667846764872697*^9, 
   3.6678468054650745`*^9}, 3.667846863653308*^9, 3.667846940058202*^9, 
   3.667847047074705*^9, {3.667847163057259*^9, 3.667847179850812*^9}, 
   3.667847235483157*^9, 3.6678491919843855`*^9, 3.667852098617084*^9, 
   3.6678531826297216`*^9, {3.6678533126989336`*^9, 3.6678533263492355`*^9}, 
   3.667853363049285*^9, 3.667853477657905*^9, 3.6678535215967693`*^9, 
   3.6678535928882294`*^9, 3.667853674532955*^9, 3.6678540880952816`*^9, 
   3.6678542071320305`*^9, {3.667854246135454*^9, 3.6678542593261414`*^9}, 
   3.6678544902958994`*^9, 3.6678548276211667`*^9, 3.667855323827012*^9, 
   3.667855429025695*^9, 3.6678565776839647`*^9, 3.667856609259245*^9, 
   3.667856842203129*^9, 3.6678570429309707`*^9, 3.667935983026452*^9, 
   3.667936037542777*^9, 3.66793708247532*^9, 3.6679375444453373`*^9, 
   3.667939071817354*^9, 3.6679899966262302`*^9, 3.6679906484349675`*^9, 
   3.667990687285232*^9, 3.667991001612897*^9, 3.667991041368252*^9, 
   3.667991094560013*^9, 3.6679913399594393`*^9, 3.6679915933537083`*^9, {
   3.6679916744163084`*^9, 3.667991681370572*^9}, 3.667991727448231*^9, 
   3.667992289246281*^9, {3.667992351592111*^9, 3.667992376553158*^9}, 
   3.6679927186666965`*^9, 3.6679927759086905`*^9, 3.6679929406300454`*^9, 
   3.6679929986203775`*^9, 3.6679932326996365`*^9, 3.667994567599383*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTN8bB/ApW1qYEmlBWZOWiWytc0OISEKIb1JJKqGoJJOSokgqJClZ
KyRKKmQrEiWUNsYac6kphBS/j/v45+ePr+/7dWfufOaZc55zzqXjut7BXZbH
4/2Q4fH+/o0/4vgGCUP/K7XCf/jXYINPbgtL/7T+tbAZVrpxvNHhN+cq90YJ
83maMPYSvZ4XB7MfYr2LZDgLCuF6kzsX0ntzdnkLR06NH+PUk3NcvyYJ82qL
U9/99HrtWHjkVIOJil+4+9tfgb1HeOwd9ZOz6BU8KMu6wZc+L0fhhYRxiVPp
TG/nrosnwkkJi167tnL2uww3rEvyqab7pb2An/v856ndRfnlXkqY1ReCXeL7
UP4JsIl/dXJtf84lDfCTE8Wu9gM5S3uJUR/bn0cXkbUFsPwH3b4z1TnbL4Or
CsbECum6KAI2KV6c4kr34/d4JWH6begufKzMWWgAT49+GTNqEGe/JXD+iojz
29U4p4XBhQahzqkDOFdl/f91F73XEuZl1r09vzWono7wredZ1120KH8ofLx1
r5zXGMp/BuYfWHt+lQrlfwIHd1u/GcOnei54A+9Y32k+mLN4K6wVpnG1QZPy
n4KPvhAl8odQ/iq4tbytZ5si5e+EM9NDDvUm84LeShhV/WLPNfI0HjLgM6KR
jU/7Uv6H8Khaqwghff+473BHyQzdy/R9S3TeSZjkvQMOb6d6icphr/3dYw6r
Ut6v8Nmw5o5/9RYPfS9hDO835RhpU97ZsJGbTPzJHlTPMjjcd9CrEVSfqjb4
ppxB9cthlFerWcIUGQ2f704W2MAxcUWPayZRXj84JPScwtnxVM8W2LB86f20
CVRP9Q8SJnujemmdgMbDNLhOT3WA2hTK7wO/fuQzQlVI+Q/CXZElLTx7queg
jxJm/vEtjrnLqJ5CWH7nsD6WKym/F5w/tSHRbg3lT4AfZeSqn95A+W/Af7xP
T7KJpnpaSCTM7qfto4XxVM818MZBE8a6raD8++HJs1JiD66j/MWwrfyMrGfe
lP897Fwttg71pfq6sRJG72rm9y30efx9cPGPn2E2myj/VThY43lsz/WU/w3c
eDzJNDeQ6hnzCfXeKFfe4k71zIdFZsMFSm6UVww3rT4RlkL3L5H/LGFmKW4a
l7KU8prA7MppwRNtqZ6X4NEa3dN4y6meTfDRR/mJ26ie4j4t+D3m8I4m+FHe
8bD/uzJ2sx3ldYZr9baKKxdTPevhnKER02vJvF6tEmb2FcmBc1RvgRG8/Eqy
vEkA5V8Kyxb+Cb2xmfKHw/4TXC+cpe+jLSuVMFfGLY4L+I/qqQ+3mx5qnepE
+RfDZ8p3Ng+ZQ/lF8OikpGcJvSh/JjzSYvyZXgpUz7FtEib2Zbpa/QgaDwvh
KdHBc/x+UT/bBqvLfrjoTP2UdwaOU/GaGvGJuy6ohs0vqI9u7Uf1tW+XMDeq
iw470vyXBsPiWzaygbKU/ySctrIhIYk+374S7ienf86c7i/6CW+5WebRRPOb
H/gF3ycrQCmG7i88DnfsNtQKoP7hVwHPPT1z/BSaX2kdcNsa+T9CcpX2Vwmz
61Fr6gKazy7HYKPXnt2GNJ/j7sPjNfiCRQaU/wusk9y38DBZOuSbhLF44Jy8
wJDyz4I/iiOfvqP5J5bCI7+qmr+k+c/X7JAwYSfNZNKHU94ZcOhPRu8jrVd+
6+Fqvy3KIdSPeC0wr9D714sWqufg7xLmra31wblvOLtYw0mBNqpy9ZzjvGHd
EXOi3MklSXCBWcG2dxdofRv4Q8K4fZCM3n+T1jcruIF1ULrbyDlnLRysPKx7
QCWtbwdg3+/B7rXXOPOvw8bLTzV8K6L1zfynhFnXOyqGn0TjwQOuLhpQc24P
Z95+OFa3MVpxL+Uvgm2OXHj3yJfyv4MnR0gXGW7gLF3diX7be0fftmDO2nvh
vTH3l39xpfwF8BrX7bndDOV/DXcmFosyzCm/4i/0q9iUpluWtH/YA3sWN9us
Ivvlwe1ZvftcMKH8L+GatIebqydT/r5dEibirPLlsdqU3+SvD40YOlOP6psL
39dIXNE5k+rbCLs6+vAG/0f5e3dLmE8aPVZl21F+Y9h7rEJoqi7lXw5/y2rS
VdSk+tbB77+trlyiSPXt+Ru/d6qjtwPbwuU3hN/wDLOnSTj7OcHXkxM6los5
p+2ArZ/3PTj/JWeBzB8J0/Kjpn8Z2WUcPDM/fu+PR5zjFsGWTuIn5ZWcS7bD
eTtijrx8wFl6Fq6OmCX/4BZnkS6PZQpEDlNGlnDOcYCvdjhkl93gLA6B23fH
WUZf4sw/DX/a16ZTmEv5H8MWr02/nsvnXDVfhmXen+7I+3iBMy8YHmql63k1
m/KfgGVn+PFSyC6PYMfoyrDSTMr/A/699/F61xOctbfIsswzZaUY/3TO9ulw
V25G5E2y6AFs29kqSMug/N/gZsWKn/9eLx7Wg2VGqujKjKTrfqmw/aZdE08f
pfreg2dI0x7aHqT87bBscF29zxHKO7Mny5R9ajLWukj1vAt7TbEryT5J9WyF
P9pYXx8WQXk1euH+Zj1rJT6Udzo8PshMbLyd8vrCWZuzVfX2Uz0/w3bpjivv
NFM91XqjHmkpX5+WUl4GTju2cdIuAY3ndfBco62n64xoPCfCQSX1A/mRNN9U
+7BMZs37pS2ZNJ4t4YiQnRuFETSePWG76TXblc9T/ng4QD3xsJUb5b8Gn/eJ
Op2gQPU0k2OZTW/qJoTrUD3d4d2mk2un9aD8cXBZWtlldXq931t43M78tLdK
9Puv7ssyJk8zfzH0ekEsXOp9xfeICv3+V2B+a6F9mDbVV0GeZdIdfhnYDqT6
7YZbrIP+vPGm+l2G1aJujTCh3y/nBRycf3erXDzlk1PA7+e0bP51hvJNgKct
d78Ys4h+74uwTYpDTNq/8doAay3eHFb0nPL2VmSZnlnqfRXvUV4BXMo7bqzY
g+q7DM4reKel5Un16qHEMjeeOx+NXkV5DeDG93UDI9Qp7xL4xe5Tzzf0prxh
cFBN/RTzEfR78/qxjO5DpUFq7Z+5+unBNr8Sj4m+ck5zhPO03yZIXClvKCzV
StCZvJzynoWTf7xf8s2Q5s+Y/iyza/PEa/q3ufeXLID9rK/WaPhzlm6FTV/X
nBUf5ax9Cs5UPy1p8+VsXwVvvVo8x9+Ps3gen2X62yt59ljNmR8EuziZqIfT
dWEGPDT32+EPgZT/IWwTsPJXxHLK/x1++DQ7NMSMs0uaMss4S8PSV0zmHFcO
F0prZI5YU96vsPzYO98mzaG8Q1Uw3w1Wy/HsOYuOwmMMMs88XMI5pwzm9frP
eN8iytsGK6ttUFak9/O1BrDMEdPR33lrKa8N/NgnWhqwjnPVHfhS3tL97BbO
vFb49dPL9l83cRaoq7KM68yNEwcEUf5p8Df5oMt3dlB+Hzgl0Se3LIvq+Qku
3GBcoHmT6jloIMtMafgQdF1K+YXwi9qmLJk3lN8LLn1SdzvvG+VPgD3816+f
0Ifm04BB6M/6P+YbPaN6WsBxfYIqLkoo/xp47uK+P9JDKX88bHT+Ye3ds5S/
GD6Vc8lu/3aqr6ka+oH3vH5bd1F93eCxqdm9BiRT/n1w9vU2VUsaL/ZX4Tey
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.9352020515945565`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.9352020515945565`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DIG\"", "\"DUG\"", "\"DIG & DUG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6678461022283344`*^9, 3.667846139497766*^9}, 
   3.6678464769698286`*^9, 3.6678465152740993`*^9, {3.667846764872697*^9, 
   3.6678468054650745`*^9}, 3.667846863653308*^9, 3.667846940058202*^9, 
   3.667847047074705*^9, {3.667847163057259*^9, 3.667847179850812*^9}, 
   3.667847235483157*^9, 3.6678491919843855`*^9, 3.667852098617084*^9, 
   3.6678531826297216`*^9, {3.6678533126989336`*^9, 3.6678533263492355`*^9}, 
   3.667853363049285*^9, 3.667853477657905*^9, 3.6678535215967693`*^9, 
   3.6678535928882294`*^9, 3.667853674532955*^9, 3.6678540880952816`*^9, 
   3.6678542071320305`*^9, {3.667854246135454*^9, 3.6678542593261414`*^9}, 
   3.6678544902958994`*^9, 3.6678548276211667`*^9, 3.667855323827012*^9, 
   3.667855429025695*^9, 3.6678565776839647`*^9, 3.667856609259245*^9, 
   3.667856842203129*^9, 3.6678570429309707`*^9, 3.667935983026452*^9, 
   3.667936037542777*^9, 3.66793708247532*^9, 3.6679375444453373`*^9, 
   3.667939071817354*^9, 3.6679899966262302`*^9, 3.6679906484349675`*^9, 
   3.667990687285232*^9, 3.667991001612897*^9, 3.667991041368252*^9, 
   3.667991094560013*^9, 3.6679913399594393`*^9, 3.6679915933537083`*^9, {
   3.6679916744163084`*^9, 3.667991681370572*^9}, 3.667991727448231*^9, 
   3.667992289246281*^9, {3.667992351592111*^9, 3.667992376553158*^9}, 
   3.6679927186666965`*^9, 3.6679927759086905`*^9, 3.6679929406300454`*^9, 
   3.6679929986203775`*^9, 3.6679932326996365`*^9, 3.6679945689927893`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6679929143603*^9, 3.6679929287370925`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<VXZ\>\"", ",", "\"\<ZIV\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2WdYU1kTAOAIKthjp1iiYgeJAjZAckEUUCQg9hYV7CV2sMa2dg22tRNU
rJ8axV5jr2gsawdj11yBgCiIKN9k5s+d/bG773MlTM6dMzPn2GDYxJh4B5lM
VlhKJrP/F/6xrH1lFeh/bUHwL/kFsLVV7pzouzl2qz6Dw18tet/pJNoc/9oq
XN/TPLpUM7RMD1ZNvn/x6uZsu5Vnwe+ud+z39DBa8wF8stzNOePmofWVM9hz
xSrwZuuJaf8WotWnwNW2la4YuRutewsOWemx0TwEbayQaRU6dmooP1AJf7/F
L5PFoz3ObcgEt/O41357V4rf+Y1VKL7zY9mOifh5Mh9w30E+LvPWo02vwJ/e
6JXvp6JtZSxWIbneMI+jiyheJbj5ktHxzskUb38L+z66ReAiY/KxpP1oueNb
q9Ay5VJAzXi0ygt8PnCK5z8V0No+4OmzOyti3dGG+eCVI/cnVqmFNh8El3zo
NvSgH61ni3dWYXdM5cd35LSeseDBSW9ubFJQ/HPBZV0Lq1y/nIXx7wPXLT1o
tO48WvEYvOHEwRK/UWhj9HurYLF/3Xpoyyyw8ewI5d9maPkesH+jCZN6haBV
ZvD8D9vmLPFBa4vAdy81GHrj6zdcz8QPViH9xYz2j4+glbvAk7t2PJC3HK1J
B3/JbDN6qxatLwAnOx5ePPAs2tTgI7yP4HmJLe6gdXfAZ5xHn/SYhTbmgztP
0hbM2oC21PsE+ZVd7U3tE2h5OLhog1g98A3acBOs6uOmmPgAbc4FL3EJ90y5
RPHW+WwVWhmGTkvXULxdwLM2BChdM0SMVwt+t+aRu5cb2pYNrtK9S8HGcLTC
9YtV2Hp/V5XfzdHqEHCFNrb6yxeidePB+6KNFRZWpPj/Bf/osuLG/aX4XFXr
q1XYuKVA83Y7Wqv6yj7fMAYsO/K+kUOKFeNfD66hy0s1/oeWXQInf/n1ycmG
1gdarcLZrOO1zUa0aST4z/pV3X+8RNuSwBHLRzkJfdCK8+AETZuzp7qj1Z+4
LXGiVbjqf2r7Twe0fA3YP6uM7/8Of8X4z4C3peVo9wxBa9+Da8Z3chpYAa1c
+c0q9MozxU2diNacBFv630q9uwytt4DtbzNAiTaVz7IKx3fE3hnaH23zzWLP
dWngM49kibM+fcH1zAB/3XenZd4rtMUpG9ZrvffiQ0/R8jbg+Yd9VZk7KN6B
YNjsmaMe4nPzS/CfxBeHDHJ8LiuTYxWmVH00LvwnPld657Dfr+kHFhocgy1P
8S/MYfEqHGxQH9pGLiuvQqs9bWw9dL35c6MOHLemUftyLrTeB8AnHw9WXbWi
tc1zrUIb3CBoQ09wxoAm46uvxvwwzwE3cCxJaX8aLdsHflLJ4/M3f8rnR+C5
R9Y6NdmFz03qPJ7PM7kVqWDczgGUDw/AGVjgKf5f4MJQr5J/FqHlCd+twkB7
OL9xvVQ7watqrdpe9RRae4/b8BP8cfXU2I818efNinxmTXI+e7/62/lsvU3f
81m+2er+YO9XEQa+u+xMo7q90BYbOBBW/8xUitf9p1VoWqfg6J9EyodQcNGQ
hU/XRVD+TgQvL257o3Qu/n5ZNnjn5631TSLlg0uBVcDt7k7xBhew96sfBz51
+kDKBAXFuxFctdsX76hQyoeahVahYu2A+X5naD2DCtn3M44GJ6eHhqU1pvjX
gZe+s2QXtKD4L3IbAn5ZhUW3ltcW42g9R4Bzq85Xjy+kfE4Cj7364FPD3bQf
z4H3tS0e1yoY36/mI3hdfJZ1XiWqD8OLIP+hO+0wUX1YDe7b9O7L/0ooH04X
sXzTvQO/mWZvYGhjxd9WwV5Ni6Pxz6tW/Gb1S3viN6uPhjfgevfzWz5rSvWt
XLFVWAzTRpA35bNvMesf+mPFrD+aXoOfBbca1OMe9buyf2C//DdWbJVL/a41
2J4NiaHUrwf8Yf3P8gLcfNyJG2lPqH+U/gvroUtZ9uQZ1edWf1k/0/YFR16a
PGfnZ4p/wV+2H5WlSqxCGjYs6h8tS9j66ntxm+aVsPWx7S9h66drJhOFh89d
J604iDbGgAcPmLEsZwXVi9lge7VL2Ej1eS/4ZRN7glN+PwRf71VpmuNtyo+o
UqI0H2UzwZJ8Ve4G98UEpfy+D96M/1B+F4Il+08xw0GU1j91igN7rrsLltR7
4w/woTH73MPuU37XdxSl+0G7A9zz+ZhVI/dTft8Cqy/WONn/PcWfB5b0H2XX
0uzzTdfBfmf6LV7bkNYzpzSLX+FWhn1fdWewZP/rJpRh6yPPAkv2j6p2Wfb7
tQJY8v4MY8HlXLaEzblA9XkDWDr/1HASBWz/AyifO4El84tpFFjS321rwc8q
3qif2o724wVw990XMyPrUj74O4vS/mqJB0OyDkz+QvHrnfn6fnBm+SEbXk4U
7Ltv5kVaz1VgxZcIxw9Z9P5PgSX731ShvCh4ju1TMtZM9WA52OFD1ubhrWle
Ow4+3/DSqtYCzTuZYMn+sDhXEIUneRPDNk2ifPUB4zgfRPvpKFiy/8yvwN8K
l6r2taV5rWxFUUht1993ehfqb0owlqsttL79wQ+/p1exTEMrHCux9Vd7gf2w
QVL96gOeWE3pm1RE6zkffNQ+vg+m/S+rzN6HtkVl9twQC/5zRBDDU2m+nAuW
zI+y/WDJfK1vWoV9H1M0eOQ1r8Nj9lE/ngWW3fn3Su+xFP8eMCCgWzrNl+Yq
7PtZeshF6TwsTwS7PYj5Xs8TrdrFrU0H3909/sqk+hR/AXgJDojUDwxVRWF8
4YuBi3zxuf4OuGhmu2lfatD8kF+VvS9bvWos/3XbwZL503gTPHvm0qRr1ahe
5VZj+SuvU53Xqy7VWT6ar4HHZzS+6D2G8jWnOst3pWsN9lwTApb0R/14sHQ+
+AaW9H91rZosHp0K7Hi7w+/KIyn+MTXZfresB0vqt7Z6Lba/DIHc5pFgePlz
nkdR/GvBtyYO7y5fQ/GfB3s4pLy0pVH96lhblM4rtrjarL4p1oAl/VJ9BiyZ
z3XvwdgeM2n/D3Ph9WulC3uuPenC3o/BAj6ojuns70z5sMwV8n3R37zY9bSe
aa683ma4svW3ObmJ0vlI0Qac/Xr6ywqjaF43glNL5f28d5Tm9ZdgybwlL+MO
++OKAiYMmie9wRETj4/6tpLmyX7u7M/LnoPd8AKB5jOHOqKQGDrXffgCtMYT
bO82L2bQPNkbXC9NtWrBILRJB14X0aF7yxC0ugQ8tL/rlb1L0LrmdaH/7NLU
LutK8fcEl731yufmMIp/Tl32++X7wB1O/74QUY/m3Sb1mM1qsKnsoaYbJlP8
s8BJ9vIwh+JPBdtPB79iKP4HYP9H0Rv6fPiM6xtZXxTip07cfDwSnysSwPbV
dGlF8e8EH47Kn/3dkeK/B24Ep4FtX/HnjT/Bt2OPHDp3Da2apoD6oYh1n9sW
rU0Gw+EPtiTacBv8aOdRn3e10Obv4G97x8UdePYJ46/XQBSGNLafWNGmG+AB
kL0dWlO8NjB8eO0G6fhc4d5QFLAcF6PVoWCXOEtQDSf885ar4D2fAvsmfMbn
8mzwlJ91IeMpXpdG7Oe1wWBopgP/U1O848B/B9sDQitF8Pt+YzIXLkZranpA
vbvpCa8UrQ/yYJ9nGg1ObHFnduXTaNs68LCg+EY9L6B11RpDvYPTSd+KtJ4B
jVm8lhHg1b+f/z3/jeJPAkfE2is6WnUO7Lju4YX4R2hzhyaiMG/w9JbNOtN6
xoErvn0cstIDrVzNrTnNrX8Htt/2ZOR8xPUd2pStl3oFGIaZzQ9KoXUnwNfr
2zso/rzxTVMWn3ZpM1H4NMV0Qt+N1vNYM/b9za/BaQsNLSvp8bnMqbkoNCkV
Un3/EVrv1uDp8qmwxWk9j4BhOBhoK03r+QKM5cqN8qF0C/Zc3Qrs5Wa/ccLv
o+sLxnFpIFr+DHx22ybYEmhVqZbsubYleOqr0d6GoWhDL/CpBcFx11egzfPA
UJxgx6I1f8G37OW+CK1v5gn9PMTeUNGmGHBN76e3j01H22aDH4zfe0H3D633
Xk/2+4yNvUThAg50aEsUePqPS7DjKf6Z3KrdXjz+++DB5QccyvVEyyJbiUKd
4QsS7jmglTPAXycPyw7rSvGntGK/X38XjNdbART/D3DphLr1qzqj1VO9Yf+u
PA1HAlrfHWD79DOzHcV/y5utryXPm+WXvK4S6pdoH2DwfRm2gu3Z2/s81bfr
YMl9hswGtt9mbLlM9c2ttSg932s6gyX3DbYr4JDe52HkpHk3C+zs0+PzwyU4
P6lrtxGl9xs6AbwcL0ho3hzbhs1b2ho+ohCeWmfPhgZ0H9jJh82r5lFg/Yhu
x25WpflynQ+bx/RVfUUh6sUtqJg0//j7svnaFg/u0st+A0v1WO/L6/FZMF43
Paf5ob0f6+/y4X5s3lat8mPzjfaUHzv/GN6CJedDpaatKFQbsQ1aLp03l4Ml
94f64+ABeMFA83tmW7a+Nud2cF7583F/s+90/lkCVo751c7jHvW7o2BPbIAU
/yvwk2fn9ofspX5Xtr0o/JA3WtY4n+qzElzuXesKT5pRPhwGe/rlXL7iT/Xi
BXjk6uvay9UpHxw78H7t1YHVH30fMI7bA9CKp+CrZaI0kROoXsg6ioLP6K3a
1zepPrcAd8IGRfU5FhzX7xwc8ag+zwXjdftcqnd/OrL6aGjqz+qhORp80M1a
du0Uqs+zwc+eDnr3eyfV5z3+7PebPALYfrH1AOP1Tj+qd4lg+2qc2k7x7wLj
dWUCxZ8OzihfPqmmN/WP7oGi4GQfFzZR/5geyOLRGgLZ5xnuBLL+bs4PZPOM
ZkonqDdvFzQ1NqH13Q4uaJGoaXMWbbrZifUnWy4Yj0czaf3rBLH3YdwCPv/Q
PiDQ+l4LYv1HngPeee+zbmwDmi9CVKw/yq6o2Horv6nY99fUEmBe27Qy22sd
9TuVwD7fNAasXvq/hKM9aD2/giMn9E7ZvZTWs3owez/GwGA2n1hGBrPvJ18b
zO4HDPIQUahUvAROFLSeHUN4/4sPYf1RuSaExac5E8LmX1u7ztDv5n4s6vyA
1nMY+CtekFK/XtmZzUu6k51ZfqqGhLL3rV0Wyr6/IQ2sx4ZF+ZsRytZb/08X
UWhhb3/TaP2MXdj8ZXvZhe0/RZmukL/pG6GkUz3zBkvuxy2HurLzlvw5+Ble
QNL87hDGzjdazzB2HjL0DmPnRU1JGDtv65uHs/OoqWc4O4/a5oSz+yRdcTi/
H2kSwc5/FnUE60/yWRHsfKNKBduzv+1bql+NurF6J+vRjX2eMqEbq9eanWDJ
fbn+Xjd2nlR0686+n3pad3a/oksGS+4/jbfBkr8vs3wHS/4+ybAtEvLpeGT7
7OF0X3Ijkn2+LDeS3W8o3Xuw87ppcw+2frarPVh/UWT3YP1Z7RLF+pkuOIqf
5y9HsfOpSoxi+aKtqWb90hCkZucr82g1O59pvqhZPumrRbP5wRTAbRsRzc6P
iqRodh4yVomBfLoyqf6rZNr/HcDzcOCnfhYXw+qhanUM2w/a02AcX3vT/m/X
k52XlEN7sv2qWQHG69ktVG9PgN/Abptx6XPQ/wFYKCxr
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fnsE3LHIcr+XDX6eUgTm+126aK4psvkfjINKLA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13dcTu0fB/C0Zd2KrKRC0tCtEg10UvFQucuopCQj0bLnQ5JN7oaehEpl
RwNpIUoq2jLapch90pIywu/jfP3z8wfer7M+53Nd51znVnX3tV8nLiYm9nWA
mNiff/GnIaRaxNB/O+fiL94DOOtXp7wZ2ewDzGus+HRfinPpuhoRE9bh6xI8
mLOYEE4b4lUxSZYzPwPmN5VHh5HdmuHAd2fVxMjCobUiZnx9waDIAZxVTsPH
xULfp9L1BPfhLIfD1t10Pf9G+MQP9/PqdHzSoDoRs6HkaWTqt44/bpgBB6y8
cnFyP2e/u/DERJNDWTLc/jF1cFRRZv63v/ll60WMtKL5YRe6vpg+3H+/v92X
zp9dDQflHxjxXZpzp1SDiOnQrNWKJavw4Uu5ItU1tL9gBRw04VeLD233D4QD
a/rO+4hTnxKNIsbiRJb0iEHUpw6sOeb3bQk63s8BTjf8oD2DHHMQXlA89PZz
6rf0JvyPhfcUAzq/m2aTiBk6cEPgHjqfcCm8LzJfWkT3m70f9pl3/EsFufMa
7L9p9/RiOcpfAb+zGLxzxRDq0+6diOl+vnaDvALnhr2wYqxU7aURlP8K7KLk
57NsKOUvhettlcpS6Px+3+Gw9Kouh7/zYXczxkM+f+5SOh8/Dp6m33TGg453
K4JvF3/UXjOK8vfBqXUHI7bQ9mzVFhHzn1xIV+ow6rMQLioN3PWItif1wD3P
HR4qyVNe5feYL699PC//zfsPXCNe21hJ22OewW5nJBn9v312wdkv+8/WTaC8
Sh9ETFLhgrKVtD/fChbOjTihOJry+sGSNfcutE2lPtvhTyfD156bRH2OacX8
qLFZ+3UKzYd5sNXv29Kqkym/N9x2XGNqBN1v0n8w38Ug6jPZTPGjiDm1e0zE
S2Xq0wx2GbP8pLgS5d8IP2g7NHq5MeUPg7uSo0VNupT/EcyTdwiy1KY+Z4sw
/oIxzpd1qE8PuOCR8JL63/zBcLuC1HMtfcqfBSc8fCFnZUL538Ny/X0CFSPq
dy2L8Y544neUoX7PwJfcvyQ6Lab86bCp8Zgrvssp/zs4c3/s5t5V1OepNhHj
5bFa03kR9ZkKV+19mlC6gPI2wInerVMuOlFeuU8iRuGptMstW8prAMfNacmq
XEl93oF7Fn5Qfbue+qyFY61VC796UF6ZdhHj+OvHrAZPyqsHr4nJdioxp7wr
YdO0thUtrtRnFXzO7Zyd9xrqU6pDxORsbX+vtpry68JN/0hKttP9uTnBr+Wi
R/Y4UP5DcMdmz9aJlFdFvFPEDF6eKS9P/Qi04cWrfg/+SPv7L4fVVKomvLSn
/P7w2PEpkiU0Pg034LDqq6mSitTn1C4R0+oRZ3Wa5mvMEtjkbvWtxfT8l/4L
P5ot3aQqSfmvwQtzzxSKdXHvQ345XLF62ZOR9D7KFnSLmOJzSU65w6nfPbCr
074DHfR8qFyG5wZFROapUP4S2CnuamWZFuX/Boeo6iU30Pzj7fqM/FJp11xp
fM1i4cSHMurmAsr/Anb6WFDmQfcb0wt3zGlfNduM8qv0iJgnhm8SJthQv9Fw
HN+upn0h9VsAp9wMNQw1pfyf4fzQH2tzDCn/+C8Yr65T66T4lH8B3Ps84LkV
bW/ohIfq20TtoOeDN65XxJyXVoqrmkZ5LeGXi12W3DegvL5wwdhQxSp6HsTa
4e7BsavCaf7wR/fhfvMv+TjPpLzmsM23kVeGz6a8XnCihOu6R/T8ZIfDR4/e
OruJri8Y+VXEnF17K05Jg/qcC1vqba88TNdP8oTbzoyVfUPnbwiFJVdGp0fP
ovwP4RFSOnaRc6lP028ihkm2VntM76PS9fCbGYtqd4yj/MFwXVlKjQaNJz8T
fqV5MG4srYduLXB9wb8lw+l91LnmO97HJd8WLvi7PgfByq+8JhZ0cvNJkAbb
Hgt3fPOMs38T7ChsHLGrlXPS4B94PmVmzN/59/vhJOxbvWvaznZan+/BfjlO
Nyzp+Jh6OFBFsXvVZ86lA/vx/mzwSzmSzFnMAC5nh2iEHOUsTIEDyjNP3nHh
nF0DC58bnVNYxLlT+ifG89T2xSamnFWmwzWTenS+TKb8zvDSZaf6HP6h74e3
sHvtxAtldDxP8peIyWONNU6t5mw2Dc5QdjT9ylB+R1hJ8rrlSzvKHwBrx6j3
DPWh523Ab6wvkyq39HtzdtOCI+eMqlkspPzL4F1O4VPVDlD+A3AcI66Z50v5
r8MZm1MKz9P9+muIsYztqgmLbTdSv/bwzkupwzTXUv598IVbJTO1tlH+q/BF
w8pJ845Q/jJ4y7+CH9uiqd/FA1jmikFRz/1U6ncPvG2el5rwKeWPhx94ikVt
uU75i+Hm6x97lv/N/xUW31ZxtOIy9btTnGU+rLceZUDXE1yCZcV/73an6/k/
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
Dab5fA8WHtTT6sL1/wd2tBwF
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.3179553437507026`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.3179553437507026`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"VXZ\"", "\"ZIV\"", "\"VXZ & ZIV\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667992292857834*^9, 3.667992727935062*^9, 
  3.667992780896806*^9, 3.6679930085594435`*^9, 3.667993237546131*^9, 
  3.667994571351944*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
kS80ODO88j9EZ0Sy
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
sg7575ML9hbq79iC/N/ITmYl6ic3If/oPixT3Tgmz28r+k0gpxU6BErXot8y
8scJuWOfbET+r2Rp1vS4x6HIO0+OZVzPz5O8i0Wft8n3E5MPuMPSz+Rnhz6s
UfgHeTX7sszWS+529SeR15Z8fH7PXocdyOtLfnxA5mTzBvTZ8vv4invLJ0Sh
z6HyLBOnOTjcNBp5GXLwYf/pQehP7E3eE5nzRIx+q/4h165R+3brGPpU68cy
qZc/tSmj32hLclp+Qk3DUuTfSPb3m+XmdRz5Y8jfnnZOVryF/IVk34LLRyLL
0ecsBervh/Wq0xXo05Ps6qUte/kR8keTn64KX9CvGnnfk/eIFhzs2/8rd/3X
KbKMSWPq3qpBnI0iycrTF04f2o28OeQbaqUvY14jn1J/lgm765EfFYn+wsma
L0pH8P5Cf9fIh8ve1GnsR77X5D2tOclOZ5FPQYllzsT27Zoox/09FVNyZLjp
yhPt6C+L/Hhj//UV47jPq2rJw0as+HnlGuZVXpllWsbWnPt+FdffiNxpozt2
NPILXcl5rcZP1Cdw1u4zgGV6PNKX5uhxFkwhvzfWi5vdhrzLyZa/muPkFbnP
M3eTH5sus4zE9/m8gSyjn5637LYbZ389cvOadeZXB3MWO5E9MvXbuhnkDSPf
s7KJ2+iIfs+T5aZuDw/C70VPGETXe1x2QbM25+Kl5AKNKK86PmfpTnKGWYXE
TIrrnULOvZ1XliOP/FVkXT3eiqkv0ae9Csu83DQ9c+w7XO8g8qjKsHNLejGv
SeRm52WBWjhf/wdks6mdmWwX+u4kP9ddZS9B/0KxKvWRIx2/sRPzWU42yXSJ
nYPfK24nR2f01V6B46WjBrNMfyV1fbUW9HmaHDHUxrbiMq7/XbJk+b5HAy4i
7xdy4lGLezUZyKs1hH7faVxagRh555L1T+y1isK8V90ip00J33OuBNf/MznK
9o5YIx/Xf7gafa776+j9dOS3ISc6vL1kWoj8m8nR1w2P1WFetT+RK61WaZTH
YX411Ol4mVE+2phXEZ9sUHz9jeY25PciH954Xf32CeQ/Rn47dXXuykPoc4gG
y3ySf9cTk4w+Z5N5vK2WD08h/wayUMFPnHMT+WPIW69K839lIX8BOUFmzy+z
h+jXfCjL9FX771HXc/TrQTYXPDVqvIv8R8h3hi9RlcHnghtktyS36Qq430Xv
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.3630645304980609`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.3630645304980609`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667991764802039*^9, 3.6679922964703465`*^9, 
  3.667992732384021*^9, 3.6679927816009655`*^9, 3.667993009987155*^9, 
  3.6679932412636375`*^9, 3.6679945757182035`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667991558094616*^9, 3.6679915606375732`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
6vfWqc/6f29tDuQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTPv/B/BplyVDpBCjVKI0WqSIOZU1ZdoUWQZlC83lRtEyuLpFmOxc
MZSyxaTs2+TmZknKJSIZpYs5yUQkSr/397z/+Hn74/J8nDrzmvfn/VnOuYPm
xwRF6fJ4vG86PN7//oY/6h0vNAz+UzsO/sO/Di6/PW93lTFn0VtwQ+dvxvrv
P/7P5VHVGsbNWXaDn82ZJwcnb5qTOm4ZZ+EVcDejE84/AjlL3oBNXDomWs7l
LDd5qWGOK916hd7gLNgKvmh5/XliF+7zxBfB2/MUN19+4q7LXoMztj/t5H6A
s7JLjYaZ1XD1WLwV9/NqN/Cm1OGVoydxlhaC87zksoV2nBU1NeT7lHd6pWHW
SBoOZRZhfhewgcnWOesKOatevCKfpzVQaxirIUZjLVZjXiHYJmR28OiNnMUz
6XXZH2pyP77eaw2z91HPE8mZnEWOr8nPS8PA6tYDs9PDOSvWg8+eCHz3OALr
fQpcZ9O08kwU1nNoLfl5eUgtyatKqiXjoT1eS/P/C1Y+yW3/uhjrGVinYcJm
/tlm35ezeh049WT5b6/NMH8OeH/q5+oL7pi/HDywh1XBp2TM/x38svb8o6j5
WM/4NxpmSSQvcdAk7IcscNPT63fmxWP+B2/I/eQt4ObLzT2uCjD/oHoNc25L
6ojheljPe+CKinDbxopGLm8zWLG+e/7IJ5zVA/7TMNeU3/uW53HmTwZrHn9Y
G5XJWVEC7lP7Y9rjPZzLm6h5/d9qmGPbD3Y/l8ZZOAH8xeZCvH0oZ4kUfKbQ
pDXYlbO2Ebx2VMyKtUM5CyzeQb+lXqobYcdZ7ANuvDC4+IYvZ9ly8JOC7TET
4zH/XvCiuN5X/OZzFpm91zDz3J5b6M3lLBWBm1vnRhpNwvxLwdEzp+odM8b8
u8AlF7P873d84PLfBO9PGrfAs5Wz3EtDrFoEZuJ3+YRbYv4Mel1wDXzw5O64
WYaY/z9waVnqs6Yv3HV1JEvM3w72jbifnl/MWXQZbGa16KjgBmdpHdg5MKjr
lT2chekNGuZwemnR+TzOkgvgTWnuy8fWYl51A/l9VecP5LrWFfzH7Ndh/Z9w
lhWAK6p7uy8/yVn5EuztFLtm+0XMa9SoYcqUNwf5ZWJe50aSXzQL/Fvw4qeD
czmXPwevSr7RMKEQ62nwUcP8fHxuvTod8zuBZzl3LjXciPlngG88OnghNgHz
bwRnSlaf3qnAeupqNUxWVv7U6izOYgctqZdsupZ8X6VMS/pNfRK8JDv64fIY
7Af7JtJ/imDw8Zz1B54lYz8kUvOOgwcEbjUYl4v9/Ahs5VIcsC+As0r8ScMk
Rt7eeNAd+2EtWBx28YzjWOznY59Iv4kfgmcm2O97+A7zt4JDPBpbUuqxvnGf
yfcVHf1M6iMtBV/LmXAkOIaz4iv4eP7YU2HhWH9Bs4bxC3krGTEf63sY7OqS
Fmo6Fut7F+xi5CJqEmJ/fAbrXHx/z8MV+8Pyi4apPPHiyz1PrP8k8K3CfzvK
rLEftODdubeHSoZi3n5fiUXjv5LPk8aAm579MzfSFPuhEVzSYqLoY4f9YN5C
8ku8W8jny5e1kHyqPeCEbGHluznYD72/ke8rGweODEs4f9wR+2EJ+LO+ZWyK
APPvBCfO7NFZ0NrA5b8BDvLXc8vv4KwY06phjL4Pjt7gjvVc2Eruz8topfmv
tpL5IalvJfm0C76T8RJs+076X3zpO+2HWvAQB7WVeQPm7/qDzH/Rlh9kfkjP
g7u1N19KMsV+fgV2smn7ujcN8xu3aZiaZzoz3ltjP7u2kfVTfg48ISEyI6QV
+7kaLJ3dP/BIPfazYbuGuXP6vzFT7XC/GwH+Wj/F7qUj7tcRYElya/39Ypxv
Ve3k/nz9n2T9EQ0HL0s5al5ihvMxHFxfYem4pAj7ecNPkl+o06Fh7GtV06el
YH2HdZDxkYeCjW3XybJ9sT+SO0i/aU+Av7ePmmx4gxtf2RAeywwL2HDj+hXO
yiDwvarx76VlnNUJ4JTkjZ+LsrA/csG+gX1M3VI4iyrAR8+smB2RwLl8mg7L
6Fqfcj6+mDNvLfhhTpfjZXM4C7PBTsLLRn3mc5aU0evyb9SCNbos86PAItEr
nLP4CDh+496K8UMx/30w++Rrj8XumP8Lva4eqMcy+lVbFr7S5Sw9BHZtT/rn
908sV9874Cj/O6MdPnIu/wT+/H3xD+NazsKJ+uS66jbYb4rL20Jr7n7aj/rk
foK+Bizzqaznf28fcxb7GpD7yVaArQfOijhcwZn/wYDkE/UxZJmq+4kZUmPM
y4B9bIrae8bjfIwGO+gv+NQcgvXeDd6f1rbqcgXWs5cRy0ztfGfX4jas51jw
L/2hWmxExlO7A7wjxcH2+hfMfx0sSyg4druEs3J0J5bp+rN92vo8zuoo8NKI
0AO5WZhfDvbo0tVGm8NZ+gbcPvDFm1PpnHkLjFlmiOP7y31TsJ5bjcnPSy4a
0/p26cwy80bWKQ1asX6bwYoN5pM8YnC8C8G/9K+yBqzTEmKZEoHj3akLy9j4
nZMW1WA+F/Dzln9zdphh/fLB8uwv1QsCsH4vutB+NezKMqY6ZZmJadivQvDh
Uvdeuk+wvjPBK5wfPlq/EvtTrxvpV7Ej+MqmvINKT8wb1o2Mt3I9eFH8gMCA
Ns4ingnpD+lQ8NV8vXOPJmLeEHCok2dS51zMm2RCPo93AhwWId/pUIjjbded
zC9VYHcyvtp14MeF+wynmGL+HPDptKK1rkVY73JwYLhqvPAZjncAn+Tlx4PH
BUy8Peok5s+ilj4Ah9qk6G9bjPOrBWxSWLPx0kQcb0UPWC+yr9TVeHGW36NW
NVNrB/Rkma0bZz1TWeD8yQQ7fj8TF2eG9SwBWxjkbkjo0HB5m8Cbwwz/PtQV
8/Y3ZZm5U759cDLFvBPApZtWZg0bivO9GMze997HfuN+n/fRlNxfaNEL6p1/
55K/O+b3AR+Jiyy7JsT8y3uRfhc0gMMDqy2UsVhPs94sc+vkwJSgeswv6k3G
Q7kUPPLV+e5l+7Heu8A1VZ217HWsp6kZy2xw3lXVNg/r6WVG7l++CPzzyVXz
OlucbzvMSL2F18BXc6eNmm6M9fXsQ+qhjQT/FvLbCjsG828Hd3mU6zlXgfkv
9yHzX1ZHr/Pnm5PPE6Wbk/kuvQAeY9V01iwT86vNSb0kaRYsw1e77n8egvUs
sCD9o3oJrsspPzM5APMa9WUZnm7P4QaumNe5LxlvpRL86E6ez++OWM/n4AgX
0wXGlpjXoB/Mz3WtVrDvc3md+pH+kc4AM8Ikkx2BWM9n/Ui9hLr9ST9KHPqT
/pFPB5++6/BA9o6zSgY2+uGou6mCs7gDPNn+QG2Pj5xl9pYscyKz8uKcF5yV
wZbkfupES9J//OPg+lSjb0e/cNcVtgNYJs5/q3duDedy8QDaD+vAIv0hrTG+
mP/YAFIfyUNw5ck36Q8ec7+v9R9I8gniwO8KZ3e7rYv9cHQgqZesFDzfwck9
7Qrm/wq+XVo06FsB1jdWwDKCn7emtx3E+h6mVtwF/62I7lqZg/k/g5Mi+h6x
2onzccAglvmYF//aV4H1/Aeck9LkMKoe82rBO8RWewecxLz9rFhGW/Xw68I8
rPd4cPbMv/qYPcN6/g127jTm6ed7nPmN9LrI3Jpl3AcOmt+3CPN6g82rxMtn
fsK8y8CNLfvyuhliPVlrsh5Ieg8m9ZWPAz+t9Dz68TXmXwLWf/i0YX4x5t85
mIy3rKcN6VflGBsy3uqFNqS/+Bng67OFy7ZmYf6rNuT7lXvYwnoe0LW0YD/W
MxL8x6FQJnoPZ+E2W5JHcsmW1ENeSy2YZ8cy58+4RFZGYz9sARdseBlQOAfX
h/N2pP+Ur+xIPaSpQ8h6ozg3hKy35dXglurDvgvSsH+N7Fnmi3KyE5OA9R4B
lqwO0AsS4Ppw1p7k01bZk/4T6A8l/SkeDl7nVLyFl4L1DgfXPJy+OiYZ6/kU
PMbxjGp3LNZTZxjLnD21wOz5duyHYcNIPypCwVHhm6aeKsF6Jw8j65Hk5zAy
f+VDHMh8VQWBb6alrD+rxPwJDqR/BbkO5PsobRxZZpTfmjVjyrAfpjmS9YO/
1pH0ryjbkfSPtMyR7Ac8/+Hk/sI1w8n8lxwZTvpNfn84mQ+qL8PJ+iH+3Ync
T3bIidRHeceJrm+fnMh+wLcUskzFo3nXtdF4/vkLPHuO5PUQOT6/3Qb/8n6A
pwUfVLz++aoEz2t9R8D6sM61/+WueF7zHUHO09pbI8j5SvAB/MvzsbiPM8ts
CnasObwHz28MWCkZXWAix/NmNFjQfvlmqy4+b/Zygf0g7nAJw2DesS70vLYY
/Hts51X3YvG8ttOFPM/Ie7iS871qtCs5n2mjXMl5TCAHZ8ys5P/1DuffFVdy
3lOPciPnT/4CN/J9RFvdyPlfetGNPP8pXlMLJSNZpp+wmXdwJT5vbgb/8vwu
LwR3qY4ofFGD+WtGkvOytpM7jO+rmB1zo7Cef7qT864y352c99UvwEpFjkHE
RewHw1EsY6ezM/tbHJ4vhOC0IzbbF63E9eLMKHJe4FWNIucpoZ4HOU9JHD3I
/i4P8yDzU1DpQc6HYp4nOW/IhoJTYx/Gj4/C/CGeZH6okzzJeitt9yTzWWE3
mmVGVNcXVVzH9SIQXJ3Fm+e/EtfnBHCnfJOR16JxPuaAxVYXLmSk43wbPAa+
r9CndzcG14sA8IXsZM0MR1wv4sEpsvTNxV44H7PAEauSzof64nx8QM2f6sUy
ecnddC5twPViNbjzy0i/mjjMr/Ai65/iHnhtfF3YXRbzN3vR8/GqsWQ9kGeO
petdCXhp4BHBsCjM3wQ2aZ5cqR+D+fuPY5ldzjPUawJxvTgAvnPm29LACKxv
MXiJjV8X43DM/xF8IHaXTBWCeX1ELFOy4WioUwDW8xbYQyf81KrFWM8GcC/d
p64ya1zfzBhSb7mIIeuVailD6iV+z5D7yUy9yXlG6eVN1+dF3mS8+Tu86f7H
9yH7fbmnDzkv8qJ8yH4k3O5D9jvJZR/Sz1p3X3I+Fcz3JfUXp4PXr+wYNjkN
81/wJf0qmjue7G/StPGk3oqC8aRfyl+OJ+cHecoEst+rlBNIHu3zCWQ/FxhM
hHxhzDVrS3x+dppI1n91HjX/2UTy/kWkOwnmd5n/q2X1uJ45TCLrjWL6JPI+
RNIB/uV9p9x+MstMGpLh1z0U348Eg395H6xNnEz3gzawLGXRQG9DfB9pO4Vc
V4unkDz8deC9s3Pm7C3GvMemkPcR5dZ+sH/nbh7xwgL3hwBwXfVzr3f7cf2N
8yPfR3LUj6z38lJwXpL+0vPvcD/zm0q+jzgWHOt2WJAUgO9TD1Mr74J/+f8d
6s/gm6mJmtNm+P7xoD/LnEvPuCPMxLz/+JPx4jWB/3SLtGv1wrz9Asj+qtof
QN5/aP8G97cV/TnQFfM2gg0Natfp8HH8zaexzMnZ0VE9C3G99Qbnl7b1TSzG
/aAI/G+qd5OdIdaTnUaeH6W9xWQ9UowT0/m1REzPZ+/E5PlG3jOQzCfVmECy
H2gXgp1sDbYdsMb+zQik57PuQeS8qfYIIusJPzKIzC/RtiAyv6WXgsh6x3MP
JuuhcF4wWe8kW8DdBQrWNgHn3/ng/z/P/h+idCz8
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
B0a0/g7AXXfneNq1ofq+C59fsPv7GWpXf4EdFj94P4PahR4GLPPtXVjUWWNa
b7dgp5zLk4uof109LPwzpsKT2gU9DFmmaNO6S89aU7xu8KlVL/pvo/5k/8Cx
y0/5OpP5dXB6HWNqRO8XdTNimagZL4rNuXgZ+PGrOXlG3H0zDN5t59uuhTuv
d8AFQYKQTG69dTVmmfghKYfNtVQP4+GliQ3TaqjeVMHw4V+F7a7QetClw2Vn
d3w+TOMRXIabU69kNFG+lWNbs8wQbZ8b3Wh8miA4esanuttkvhzekeBy8DGN
V1oL7wlXjy2m8fEWtmGZikSvLV7tKJ/bYNkPx/gPND7JBXjXULs9j7j9rF1b
lvlnZWJUO5pPcRLc9cWpFffrqF7z4OSpayrX0/iUVbDvG/3KkXS+aFq3Y5kp
/yhyr3Pn8wg4ZqPFP7O4/J2FgzMibCbSelC/hB/nLlqRSeYZtWeZMXqR9Xve
0XoTwv28LXx43HqbA0f6RJWHUjyCVh1YJuK6l3wsWTwUdnknrDOn/mSz4HOV
z/Zd4u4TcXBw7kG/Rdx9gdeRZaT/OzCyPff9YjDcmO24xYjGo/CBRV0eew2j
/UAdAzt0Snh4jPYD3nF4amlTlXMlzfcAE5axbdAOKKR21XT44/7Y03bc/hsN
71p35N4y2i8FOfCqpbEPlHS+itWwfscd6nnc/Xcqn2V6+fzWcvszPwpWnnAN
zefiPwyfaz376wgan7QUlg8ceMea5lfxA77bLfFyJtWLRNGJZRS8zffKqV7k
JTBjtsyvK9WL6hu8MyJPtYg+r+vVmWU+mA2M2NSe1s9++PcrE5N5VE/KO7Dd
3uXec6ld8xn2TP9hqOhA82/RhWX2Tj9hvJraRRPgd3MzQy3a0nq/CR+Vrudd
pXZePfzHL9zUn9qF5l1Zxv2C3tVUilfiCn+N7OMVR/HKl8Eb6lOkK7jvmx/h
Q6l8i35c/ZqZIt5rZ7735upBBGdNqHBO5s6zUDjqZt8XBnRea7bDF8MHPEuk
+Zd2McN883q4K7n7zTh4/3aPZC/Kv3oJ7DXtQkVbyhcvHVYniPtH0HoW/gtP
7D9aP4fL75hueH+S95ZoLr+L4E3fLFyOGtL6T4WTjOfmPuHO40uw5uCRnT4U
j+w1bJR+o6+Eq4fA7iyzL7BwFHdfEm2F812bf3Hf96QFsJVJwP6nNH6FBn5a
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
F8WfDIcPDxnZkc5veT4cERFlcRDn9/8BPwozPQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0.7987983712186127}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0.8168335945156877, 
      1.1775380604571881`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0.7987983712186127}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0.8168335945156877, 
      1.1775380604571881`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPY\"", "\"SH\"", "\"SPY & SH\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6679915623105946`*^9, 3.6679915979486947`*^9, 
  3.6679916950619264`*^9, 3.667991734756138*^9, 3.6679922971558294`*^9, 
  3.6679927367163024`*^9, 3.6679927823233705`*^9, 3.6679930113559713`*^9, 
  3.667993241936161*^9, 3.6679945831319904`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6679915695421605`*^9, 3.667991572220644*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/z8RRyKH
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Es7/7SHU/cTlIf/v/Pd/YLoIhQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTPv/B/CpSEhGlCSaiLRgUkKFOUmKlil7xHDLkqW5riVpGeUq+7TY
QkaRJctQyJbJVkjGGiGjFOYokxRZ6vf+9prfH/f+ce99Pj7nnHmf93l/3p/P
OVnNjwgK0+VwOD90OJz//Zf+UaW8UjP4X81Y+hf3GvmpT0zgV1jwgbzjyTPr
xbAy7LWa4ZUb9hXAHClZP9uTa97y5X/mXyar1+cVlbW2WfSePOPmqEg3HC81
eqNmljeu6D4Fx/O2kb9MPdDpfnObhRfJc3wLty340WbJO/IR52eLf2Bc3rlC
zfye+nJVJ1g1nCyO2mU8+3ebxXnkHtE5YUd/tVlWQe47WHkl4lublQZv1Uz4
6KzCJY1t5jiRL+c8upn6pc2KV+SM6rfFjpo2a9qr1MyZ6wezM+sQL588zOAs
7zvGhcFky6Q5F1fUI94NZI736rA5MFfvnZp58SO080mcLxhMVj+2/mRRi3in
k52zViWWY1y2nqwQTo68hniUOWRHF9PUG5+RT7tKNSPNSVuUz7ZZOoV89ldn
w0SMK2LJdg87rHr5CfEfI4fvMZ//DuO8J2Tf+uVmXWF5YJWaiR0/cHQpfk+1
jlxSZrQxFedzs8mylwVzVTheoCSHJCkfO8Din+S03EGv4nE8Z+17NXPNgSP9
pUY9ZJGXhRzpvwXjogfk1fnGkc3ViP87+eX1pj9ncbzCqlrNtHAtuxXj/iT3
yBU5I55vR37k38jGjxLuXcHvq/rW0PV01pUFavPtQ655FxTmifzKisi1D7fk
JsPKenKEl67sLK7PsfigZs5NSelojOvzvcgTGvsX/PsV8YrJ3IrWv/S/I591
ZFnrBq+CBuSz10c1M8T8hv2lJtTDOLLp2WSzu6gvyTLyH6Oe3YWoF/lu8siJ
JsW1OF9g+knNPLeJ4mXh98UC8uUrMptfOF4WTj7d/2X/QsSjTPv0n9/jXCe7
h1ec4OL3pKPVaubkPNlCHYwrFpK9t8bnTYI1yeQkeeKKDzDvKnl1ZicTRjv/
asjXMqyG52E+qUJZmo/P+p75+w/yu4NceTSYG4r5K7hE9k48PfuJTtv8FleR
NZoj4YXt28zf+lnNfCg+sWeKbptFF8ivrVe2V2J+SlVkWf+Ks/fRHxSdain+
HZa9k/D7GmeynfJ1pS+uL8klc89+uToO15O/Iddd9k5dAqs61FG/CQtgAmDu
MPLrbRXXsn8i3tnkjA1zHCa3Qz8rJ+db7rh1Uw/9rP0Xmh8HizibMc4fSv7a
ffsSjQHin0k+NXFlzboO6GcJ5F7/Loyeivvl6Wpoftwsn2aPcaED2dbY9okf
rieZRhZsu1UVhOPlErKf61M9C20/O0EuVceeuoZ4xbb1asa/PlYvG+OyyeRh
QeaCfG0/iyGPWVng06DtZ8fIKtN+Xoth/mMy78Pf6ZdhhfCrmkn30zX8geep
iSLfUmXNm6ntx0fI30VrAsTIt/Ah+aJ4edAExCtpJr8sejnGRh/5jWxQM0tj
E8SmHbFeZJJLnHr//GGIeij5r2VN5Ma7qnY2XZB/3jc1M6Xp4vtwI+T3IDnq
++wrr7siv3fJ+dYtXJNuqI8GsrVwTsel3DZr+jSqmSfXW8a5YpznTa5yWbXU
ujvqQUPem95wwL8H4u3dpGaEoVfC1uH6gvHkGeEF22SwOILsOTvrszOux6kj
b+nYe91iXI9v9p368dXoTWsQv8iDfGaLetJgjEuXkis2Ha+bpI131/f//J7Q
5Afd/1j3TE5n5HMsueWQRftxuH/5YnJIacP7jThelUqu6RW4djeuzy0g+x/Y
W+MBy9ybqT842un543zlArJpc4bXHsTHSSaLbOYNHWWM+K+Q92Wmsp3x/ETV
5AO9Jrk6d0I+//qpZh4bfk4cj3rnbSdnx3f8kIx4hflkafuVtyK187GSbCSs
7pOunY+Gv9TM1Iog9i3qXbCFzC/TN01D/YjPk1XGXVaHatfnt+RCWcp+uXY+
dvxN9f90YFwsxjnO5COJiWsH1KBfnCN/O227/Phz1PNrsv767KLQl6hn/T9q
5t/XwxLWPEI9O5IFfqYGBSXob7PIg97njfXB+aqXZHFh2XDdN+hv7Vpovgf1
6jIU80UwhFzvKg04j/VRPIO8dFiwjod2PsaTLVtuV35CPvg6rWomc275Aj9Y
ZE+2HFM4ZzPyJ51K9rWrsJ+B/qCII+c+izpXg3xrjpPllrLmUjwvySAOyxi2
y6puQj3Jg8jPVJvmXkX9q6LJ1jMvdDLH8dyj5Ft/hx9eivoQPCL/zvO0jcC4
MkCHZUxyb+rkYj5wosi7nieNj+iJ+A+Te7amOufDolLypgHXRu/qjfh/kB/V
9H1T2Af1sUaXZbafP1nFYFx4iDxn24QHp3mI/z5516sR/NE4Xt5Ivnit2MYO
4ypLPZZxWbHkyi0r1EcG+Z6HgeulgajvYnJqwq9/e9gi/q/k007LWxMGI94J
7Vgm64n5+J185PM2uSGgZM9GG+TzC3k3f1vwLDvEa96eZZbX/nCb6IB4PckX
eC7tw+wR73Ly4BP/+h2CubXkl6xtkAXiEfTUZ5m8rrf3NOD6YoacGT7Lexbu
X7aEXLp0ybA/fRHvTnLEMYNO9qbIZ48OLMPsWiBejvkqHUMujDTgibH+KBaR
o93szpRg/mtSyH7q9Ef9LBH/NfKNS68bLvVHPt0MWGalNMvdeADyGUZ+dUOa
L0c+uVJyhr/9Tst+iPc9eePehW8DB+H5/9WRZW7eOXDrBe6Hv41sWzDKW4jj
RRfJ3VakCceaI77OnVhGvtv7kg3qQ7iZXBFwKWYP+rskj1wuiTsRhPuRV5AL
B+SYGGNcZdCZZeqyLQODzBCfE9mHbaz8/352lhx5uuCTI+aL8hX5aMWtumqY
o2/IMoqV1yeFY/7w+eQ9WadkJli/RMHkp//8eVCiXY/1utD1bPa1Rmj712Cy
cUDxUwb5lUwn28oyRe0tEO96suEOp67rUa8CjhHLBKt7ZczGuNiOPL6r3dQh
+H3ZFDJ/+66SGG3/iiULet6JqNLGe5ysNIk36454pDZdWWakQ+MnPsYVgeSi
nLyuPzG/NevI57+tqfXQrmfZ5N6+n9OrtflWksOqop7Za9c3fy7L6D1stF2J
fsBdSzb+3DHpMupRkEUe0+fr1hmoH/ED8vPGmh3heP6y7+TxXzJOlA7F85Z1
Y5kDGeazb2A+Se+R49iO+Z2HId5v5KirR5fPd0G8fY1ZRu3ZVf7NHfk8QJ7R
5UuS3mjks4hcYhH+3GgM4q0nH0xVGh1yQ7wW3VlGevbYE7EA8XqRB+7r9DgC
11PeIu+qrmlUeyKfX8jFbEbLLRzP79WD5uOUhH8+43qiceRh3PHZb/H70mXk
w1FDiyKckM/P5Bh945DTw5FPUxOWSTfnJMdgPkkE5KaycyNPYv7Kw8n5aU5x
CzGuSiN7ZPWMy0f/Enc3ZZlVixfNlKNfyEaTW8q+xNihPykXkte8Tes8Gb/H
SSEv0U3wtxqB+K+Sqzdwr5rifhWuPVnmZO3w0d1wP5pQss8S26+FOJ63g3zY
8e838zC/hZfISkPd9yMQr6SKfH28846T2vk/34xl/sT92t0f8Qm2kmulTo36
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0.6723056593799358}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0.704056248452418, 
      1.3390680299020616`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0.6723056593799358}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0.704056248452418, 
      1.3390680299020616`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"QQQ\"", "\"PSQ\"", "\"QQQ & PSQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.667991573469858*^9, 3.667991601747154*^9}, 
   3.6679916987293463`*^9, 3.6679917384635825`*^9, 3.6679923008219547`*^9, 
   3.667992741053709*^9, 3.66799278597853*^9, 3.6679930187919855`*^9, 
   3.6679932425873165`*^9, 3.66799458738249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66799120257469*^9, 3.6679912061668863`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
yiQa
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
scnj/5xdJAY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
JfWfW4n1TtiviX3Ji2IvVTI4H2THkufe2LklD+sN9zTZhS/5Edq7/31OTnRc
qrq6BfX1tpIyf3e7Bjli/eKs/2OVlbx/byL/SXKZ++9POVjP0p6SFfdGL+Ze
R/4f5LCVL7qeYz/tt9aa7j/r1vmlWL/4x8mbclMaTO4hfxHZ3bKoQ+8h8jeT
79vZ+vji/ZCtx5EybZWxR/Txfph1lNw8L1MzZxX2aw/Jka21ar9xvsOSkWMK
GLMXntiv6djQz2vcaTTG+zHPnSz9VeFmgfNO2X3ySZ2m65moj8E38um8wP1R
eL/0G2YrZQ5oFMX2YH/JZ8jntfpP692vCSLIOknlazqw34vWspMy7YWl/3vV
u7+cSObvUG+26n1fXk5eK7xafR7nuaz95LGq9zYJcb6QNniclLFKbtF0xf5S
6Ey+oX1KLxPXy0LJwRrNhnp43zNII+v8pWI/GuPBL5+sEjlcd+kgvM872tP6
/b79oz7eT9hLyJeeuZ51x/dzU8gq8eY2Tb3nETfIVeYPLXN6zwM/ku9HVJ7/
F++HHN54+r6VLW+UJ6KeSWTnqw8/ZHsg/1XygLLmrPTe858q8o4pm09n4LxG
pupA88nXzcgK84G/i+w1yGyQM/ZjgivkUPE1y59Yz8XvyG11W2c47ER+ZUfa
z/F5T8LQT7kc8qndgpJC9GPRJXK5aX59WRDqW0nOn63FL4nGeO47gd7vLJsC
UvD9PEtyPNeKLXLGeA4ip8/lGB9zQH3Lybt1Vs9+HIn6spykjE+SoUfvesg3
J+d2qu3irEH+WeRI/4A+Z7CeibeQtezLm2dgPY7uIo/0PqgxMADjw8SZ5uu5
CarfjyC/Pznc3mHiIfQb1iayXuHFl7sskf8M+dfIpEsWNphvRi60foR4bQvp
j/HhQz7+dNf00k+N8vwbyeNLBJ5pJsh/ijzlt0PVUEPkf0bu2uQQF9zb77xc
qb4vYoIHGaG+MeT8gfWZ+j3y74vOIh+5F+JogvU8q5gccjf7pCvuV9RKnq88
PZCD58NbM/HP+DTkjhyD+maSl1/2WX1fB/kfk393aeV7YT8ja/rju4O1vduR
X3cSzTe37Rv2TUJ9j5Bfd5cPa7JCfR+QDb+mKPugn7O/k3/k6qV2D0a93bg0
Xqv7bK79If8+1n0yR2HFx4HKqGcD2WVllccVM+QdykiZ5//86D6I9SKNS36k
fCbBGvtT4QryGsm2TTu2o55fyQ+tR7h+fIJ6ak6m+TvBJnTuZeR1JXePtfB4
eBd5l5H17d45fDmAvPvIr5pT7It65xvbjfY/aSrdPujHIify7urOd+fxPsUK
JUd6fz2Qi/8fwkkl31k2+nIn5j/vFjks58med3g/lDm4S5k9zJMNOegHBovJ
JUq+MwToT37J5HTR7cTEROS/Ti5Uqxo2A/fHDfGg97GjP5Ku4fwmejf5Uqng
fEbvecn/yNajC4XD8f4p+kB+VD/VYDX6edrOKVJmq6uIc6kG9ROQWTMTqypw
viR7S/Z96l53Bv3PQGmqlPEc9+n9YwP0X2vytOlmS9Jx/i2+SE6MPaioOBvn
Z2/IQ/NSlULC0M8Upv05//C7O2sJ+pkF2dSjjn8f5/VZgeTflcsicuahf/WQ
9zUVjsg5gP5l5knjKflnEfss+tdM8tDOpeWesehfm8li25IgRSesB7/JPop9
9U1W431+zHTq9+1notwnIa/fHw9qnb17KvLGkdPqU4u34HyGm0MWudVaXv2E
+o2eIWVWfDbvMxHnBSwfsoqKfvk1G/TfDeSJR4dtX4D1gJdNth63t88FjJe0
EnLeBOtR3ljvDGZ40X7npup6m97zyHVk++1vHG45Iv8JsvKDgZqtzsj/hCwa
l7KiBp+LW8gc2YFDj1H/rGPeNH/Pezu643xW9IjctyzbpBbnM6wmcsKPcWV5
OH/gjPCh/RJPzTgH5yPCw+Qjgig7lTw8/3/JD2wP5/6N81eDRjL/ESf3oxjj
U9uXxoti5v4YjBf+ZPJgiyG1wTgfYt8jx41z/22A8zqulHzf0cbZG/un6CF+
VO+BvtU7e/vVJPIQwUy1TLzficLJlZ5jtYLR73j15LLI9SuP/ZL3izQNf+of
DadGGaLfCF3IYe6+55IGIH8YeaN2o6LlBKwX6eT8Q10C7ffynxcMCpAyh9nn
Kx9J5RZPIK/++SwwGf2HvZRsqNvqf6RE/jl3L3lF5rF+Dk/Qb2+SyyJOzW0u
Rf9ymCllFjveTVK5IzdnEfltRcTK3Zfl5u0hJwwxqZv3FPmvkcM8prSUvWic
9H9GGRTt
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.473056457139303}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.473056457139303}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"IYE\"", "\"DDG\"", "\"IYE & DDG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6679912082661467`*^9, 3.6679913584070516`*^9, 
  3.667991610999242*^9, 3.667991710441745*^9, 3.6679917530968895`*^9, 
  3.667992304488558*^9, 3.6679927416637716`*^9, 3.6679927866504116`*^9, 
  3.667993022761154*^9, 3.667993246306513*^9, 3.6679945880711555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<UUP\>\"", ",", "\"\<UDN\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667991288072156*^9, 3.667991292332436*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVmXlUU1cXxcMkKAJRBJXJWJV5CJRBJskDlVIQwlAUJ6KoiBOptRUVNNpq
VVSi2FqrSJyoWofUAbVKGxVs0Zam2loVgTAokIcQUZyV73DPH986WXupv3Vv
Xvbb79xzb+LI2bkpc40FAsFLI4Gg72946XbU6jn8pyEK/hBWAItXWIIYS1op
a+c+0HMdy9bYlpkzFigpi38GjkqwkSTYMJa1AEfs3JFV5cBYaV2n54pHlS7q
tmcs2gp8frbVhdlWjKXngYvCHoK6+ljRCGx94LrNgeuM1Zb1eq635iqIsS6o
nozLzwIv2VmXu7OOsaq+nlxPa9Gg5+xi3v2u62As+JCyphZ4/uiW8g3PGBvM
dGRcJKYsnQq8JrsRhH6/oiw0adRzmVfugRhLfBrJuHwy8Pr/7o/9/Ab6XdtI
7kf7I2WZZxO5f2Ua8Ezl3kzlXvS/Gjg3SwVC/0eAp4gOlq07g/5vN5E81MnN
5H50q5ppPZQBd3m/7RPzr20m+chfUxasaCEsPghcn/GyIeMl+v+TsvIFcIzp
FqfbJuzzNCMfknpT3ABeNnPtnqL+jNXPgC3DSlos7BjrXB7puaQRttIRtug3
7hGZr/oN+OwxZW3tMKzfJ4/I+wVOrWRcPLGV1LNM3kquZ+ik80XD2/Sc+TqR
xToR1m8MZcXiNlLv6l2UJfbt5H7lknYyrlrQTj5fuxP463ajje1G6P/XdpKf
MlJP8tVk68nzNGyn46LLevJ8pY/0pD51c3hSb8IintSj5CJwW2FVcOe/WA/N
PH3+Wzro8y/vIONKXQf5PM2Ax6QeDYHAU5J1ZWcMuL7O0HF13WNy/zrzTtJP
hAGdtJ9Np6y930nyFZh1kfzFfl3kecsygNd856L4zgXz/hL4du7J4+NcsR6M
DYSl3sCaFh8Q1kM6cGDMqWnLQrAeFMC94kiBfyT6P0bH5R5P9Jzt5YqOzUFY
D6nAGx2iQOi/APiy90/NM0LR/xE6Lr5F36+RdpPrG1YC58WGg9D/4W7yfulf
3cSf4lU3uZ4w7ykZlxwAlhQkgND/H8CsPWWi/+fAlSf/5hsy0L/oGeSl4o/n
ZmG+pcDatiUgzLcaWHdpKQj9PwU2e6Pz8s5B/849hEUf9ZD5OgMwe1wK9Ov4
HO4vPh+EficAb7UTnZ14BP3mUhZ0Ah/54AoI8xz2Qs99Eu+fn38R/Ua/IOPK
RcAdrpOqeirR77d0XGr3krAi6iW5njoH2Ouz6WbR/6D/Yjpf+Avwv81Jb4fc
xTwjXpH52nmUBduB7cSZEbNa0f8l4BzzrvnmXej/IbDz6TXjm82fsDyzXsN6
4LZMEpoyFm0DjlheYjfRjrH0AvCrpYNAjBVNdL564BtYX0si/ZdEMpYUAsvK
LWeVWzKWn3tD5qsagA34Yv77v4X7TX0PQv+BwGe37tk63ZbNV54G/k7xGoT5
PgBuK7VqL7VC//3e6Tn3Sw0grAd/ytJpwDrnxyDM9x6w6u86EOZr+h7WR0++
VeUzrA/f9yQf+ZT35H5U696T+xEb9eq5urly010vMV+vXnJ/yk96SX6aNcDu
HU4eHU7o/yjwxclRIMzXXcBzldsflMjSMN8UYJ9yTVrrR4x1+cChBlj9MxgL
fwC+uDEfhPn/DRx3bRaIsTbJiOeMXHNBjAUrjcj7xYeA8yIWr4hYzFhWAxw8
tnF6Tg7m/5LOFy035rk/bN8dblqG9bEfmB13MtH/TeATiQ3/rMlG/z3GxI9u
hAncT+u7tGEbMN99wP6lK0GY7+/Am2w+BaH/bmDTer7ueBb6jTXluXJt7wOj
jZhnFfB4zzfOr5Zinl3APU42zom70K+DGc8NafLuVB9Cv+OBE447uq4qRr9L
gL8451Py6Bzm+RjYaPJxEOY5tB+5npwD5pauBqHfhcD9jxSB0O83wNXTFCDM
c4g5z33KbwJhnuPMSb6a+cCsHFXofwfwJslJEPqvAGbxXsE8wy14znnOpOcB
VZjnXOC4MQ9A6F8JvDok8fD8O+i3BbjfSKlPyl18/ln9ea7k7cIvbjZjnlv7
k3HZeeCJizMX72tFf5YDeO7hjT2/7LbtZvltBs7wcJ7q4cxYcRa45ut9PRdc
Gavrgb+tOFXRGcJYZ2HJc8Ot4x2s4xkLPwS2/udEkFkwY9VPlLW1wD67b/ab
H8NY0G8gzyXfDU25G8pYLAbeMToOxFg2FXiBz0wQY5GJFc89Lnh1PeFT9OsD
HOTYYa3PQr+TgY+xF/pdC+xWmJB4+R/GEoE1z4XZ/wliLPcEXskKFP2mAS9l
Gw76XQ287syvIPR7FLh1XKS1vIqx0s2GzNckA0eWDBy66CvGhlXAQQkeNo77
0X9Z3/xTq0HoXwvs98Av3eoC5pko5Ln1CyMyw85iniuA9c8vgtD/QeDT3jdB
6P9P4O7Ykj4x/y+AF8zcA8L8VIN4rlRudX3/N+j3BrDrVJvEwl3o9xkw246O
oF+XwTxXf9mpX+chzLME+N3asP+kpzHP3waT+bong0l+QidbnitwyJjcrkW/
E4H7mU5ruHUL86wEXjn7AQjz7ALuzrvfJ/b8hw/hOasNq1rTnqL/GOCw2AHh
sQOeMv+LgdfMqCjbNoGxqIOy1N6O5yzZgZCxQgJc9u9YxSE1Y/UCYO0Jqxf1
3zDW7QRmy7masdzWnuc6l3r9zh1krIoEtnntFOJ1mLE2G/hOR/WpSxxjwQ7g
aUlbQIzFl4FZO4xjrAkbynP2Fnu77tgyNswBTk/70W/UKPRfBBxStHWmxg79
XwTurdzn+twV/TcDR1d7xlR7MhbOHgbXC73XZZ7MWLIF2PjkFJOTU9B/OXDh
rqkg9K8DPu92vH5KIGPZpuE817daHawxzzPDSX6aOuDbgZNA6Nfcgedmmvcf
e0eBfgMcyP2q1cCxlZa5PcWY533g2vLFIPRr5gjjxTVLKtPRrx+w9fkLrevF
6DcDeHnt3n0Dx2Cedx1JvmJjJ54zj/3VNy8W/XtTVqY7kTw1CuBbJsLbJkLM
sxe4qm1j6XkB5unhzHMTpAtGjGjCek51puuvwJmsH+ERZ1L/KlcX0g+0Uhcy
LlgFrK/KB2E9H3Yh60/2lwu5vmHSCNKvRHnA7Ot8EfaHA8CTD9QV3J6L6/EP
YPv0msiv09H/c2DPxkQQrrfPReTz5aUi0k9U1cCvqytA6P8pcFm3T82ocvTv
MpLko7kO/Gte0aOjQ7EeDMAri4evKh6O9eD4Ac9dFQ+8Jh6IeU8Azs3I/3az
KdbDNeCaBUd/CB2J9dAJfGpZ4p3Dd9DvsFHk8+XRo0g/VS0C7tLMsO9+iHny
wD8XnARhnnajST9SRgGffrMVhP5zRtO8i0eT/qcYPAb6Vbvj5AvFmGfEGNJP
dfOAP89+kxj8GdbD9jFkv5FcAg7IygVhnqGuPMe6WR7mOQc4OlsNQv/bgLPL
XLb9V4b+L7iS/qlsAg7YeRyE9TDLDc4nvcP/qtmO9VDoRupNcQ54QdFdEPpv
cKP720Z3krfqtDvJU/vAnfRngbkHef5ifw9S75pTwDfXdt1Y24V53gNefixz
X20r+jX15LkvW96ua3mLfn09Sf0opniS9Sr8z5Osf4mRF88l3trstt8Y+4OX
F+lXqk+AX7MX+l9D58vee5H9RenuzXObg3Qg9J/iTd5vyPcm1xf9ADyg5j0I
8xzjQ/YfXZIP9b/Sh9S35JAPuV95jQ/pR4JJvlDffV8XXmG+yynL9vvS88VN
X/I8NT2+ZL+ULvMjz0uxDzj6u8cg9P878FX2gw/Wc7cfPV84i6G/j36//pMN
WB97xOR8p60C3helrZJPwfowiEk9ih38SX3LxvuTejFc9Sf9VfTYn6xH6dAA
4kfBBZDzjXphAMlDPuRD2s/GUdbO/5CctwTFwB6Dt3gO3oJ5Dgqk/SE8kMw3
zA0k/UCkBD7hr98gmI1+fw4k968bG0T6kTALuOp8fOmGa9gftlKWnw+i/huD
SL8Ty4JJP5RtDibXV54NpuuxPpj0c4NFCO0PX4eQz1P/FELuT1cL3LRsNwj9
9xtL8pGIgUfc7ZzQfznme3Is6YeCe8AfKBeC0L9JKDnfy3xCSX7KycC7y3K+
L8vBfO+EkutLBWHk+grPMNJP1Wlh5H51q8NIP5O/C6P9zi2crBdtcjjpF4L8
cLJexGXhpH9oRkeQ/mpIjCCfJ1oRQfqH9CDwNpfvsx8Pwn73J/DH8X0v7BcJ
keR8I/kCeJpLEgj7hYqOq24A32QLAs+fz4CL2yJB2O8+G0fOf8oS4PT1bX5p
MjwP/UbZ8GQceb/IKYqMq78HjnmdDcJ+Vwm8hy1Y9N9Fx+UxEp5j/z2Ri3le
Bd7RdzxYhee3DuDenlpXtzno154j85USjvQ/zQJg4wJHkwJHzLOdI+dfhW00
GVdHRpP9R5cdTZ6vcEc02a9UwhjyedqwGHI+F8ylLC6KIc9DdjGG7FeGkPFk
vmj2eHoe2kLHFeXAp2dYnJlhgc8/cwLd7zZNIPuF6gxlbR3wz30/f7ljfhsm
kvO0Rj2Rnt/vAzvcinK8FYX+zGJpvfrFkv1KdwI4Za9v6l5fzO8ucNSgk/Oi
g9Gv8UdkXO4NbNkbDkK/6R8RP7Je4HV2YV/ahaFfjzgyX5MaR65vKIgj328U
b+NI/mrXj3nujddYEPqVfky+3whXAW+e51w4zxn9Hv6YXE87Kp74EyTGk/Ul
zosn6112IJ7sX8o/4sl+LIpP4LlxNXFDS65g//o8gZznFKUJ5PyvrgZutRJY
R23Een2aQL+/750E52f3qG8zfsP6vD6J7H+CJ3Rc7JhIfh/Q7AY2TqgHYb+6
lkjOP6JO4JrQRT9YtKDfYUlkXBGdRL4vCa8kkfOPhE8i9S23k5J6VkUBB1S1
g9B/jpT0U1mblJw3lYOTye8zmohk0r8N85LJeVm0HbgiyGuX6UHM0yaF7Je6
0BSSh3BOCjnfSLYBN8ZMb4qZjvvFBeD6wgazimzMNySV7EfiWank9xxZYSp5
Xspzqf9/3v8DJDYk9g==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
C7b8d4RZXQ5+O3JvxwmbmHVmLXiub/QK2IVZ6AFmj79EZtUpcDCsFqcmMGtL
wKYzXRz7LGEWmFrwnMu1Rb1HbWAWiy3I+WQTwOV7vwS8GMosMmnJc8l5rnOP
uGFeV3Bahv70TT/MOxZ8LbfMsvaunuVdA86u8/ecHc8sEbTiuad/XxEs2cYs
7wVeY9u4omBWjQJPCN0ZnX2SWbsKPPOBrGpfGrMgC9xmflHS+l3Myu6teW7j
mIqzmVnMmjCwYcILd2hwdr9Xgut3GQ5+f8S2izLAlroJv+a0xPza1uR6uhAh
sXA52HHCppLUDMyfJqT574JPimy3C55h/now386pi6WOWaZqw3MDV+bF9qzC
vIVgi73p1Q7vMO9n8ABPk+iya8yGjpbEihRLkkd9Ezwk7z5/PQ/z1oG37t11
47MW89q35bltO751HfI35h1Krb0Gbp/12qhzFNazllpsa8Vzi4ISC5/4Yv7B
4KfGHv8mtsf80eCg5fmh97IrWT2rqKXW7XiuYKL7I24+s0IC/uJx+EqKDbN6
LvhxB+srN1yYdTvBd+fI3w/Rf2D1bGvNc4KziyUbWrDtKj9q7Sxwut3M9mu3
MguSwEJhp4jn/ZjFF8At/L8fl8cxawbY8FzOK5MvZo+YDVHg6N8+HYrzMX8i
+Mp07eK6G5j/HHi5wmxPwQnM/xrMhuNRZmFke55rTD8+hlmSAL5b9jusl4xZ
fhbsPG7LicCFmF8HjjN+YnM0lVm2yZbnxs1atpu/yqw8Y0vzltmS8xuadSC/
T+QOrjxVPCinC9ZTDZ4iFqSkdcB6FjfuH9vGoWUY5m1qx3Pmj8zf+MzBvL3B
4Z0L4g/sw7zj7cjvEzxv3H72waW5a7CexvYkj8zFnmxXjgFXxDa+UGN+BbiX
rGdo/W2s5x/w6usXM1s9xXr2dIB+dZx3XibAfo4Am4d61t73xn7+B1x25vlC
4UTs50wH0o+qbh15rufsm7UZTtjP0o5ku2Al2Lbd4ztjVmM/p4OdnNWK5uOw
n++D40MCrL+F4HgLdiTXF8U4kv2lqeCshY0fPHA8FoHrwhtnfMz/Fbzycbv+
mhwcb0tFPGdi6ajwiMb54QAY3r3Kj3XH/LfBiVsmrk+2w/yfwDmNyx1XzN+x
E8/dzFy/zq8G63kDfJhNcNgPhk6k3iK7zqSfpUM6k/7SXe1M+k9YAz55qGr9
fFPM274Lz3V8911+SYx5B4HrN2bL9nbEvPPBv6/due/FYz/wXUi9ZO2ciJX+
YKddqhH+i3F+mwNmr9f+WO8d4Fm3YTU2DOtp2ZXn8t3GpjcZjfX07Ur2180E
yxKOlkpjsR+2dyX3Q3IeHPTl3YTI9VhP725kvhNEdSP9It4Gfragi+yaB+bP
60bzV4BHVg/LP90L+2Fad5JPuqU7OZ8ipzupj/ol+Hy3c/DKhOMrvgfZrjrd
g4wHbWkPcr8FzXrC+uyKdZzVC6x3H/CruD9WMRZYz5PgA+UhWW812A8vepLz
iZr0Iv0hdQM3fo2LV+L4G9eLjF/hM/BnnyGRwYtwfjBy5rma366f1OmY3xl8
S/W+YusOzD/amZxfu9qZzB+y3+BS/xFNXd7i/NDDBdYfb4/Ymmixn8NdSL8a
YsF9Uho/2GD+wy7k/OqurrCeZH+wn0PBH87FvI5ahflXgFdfdDSbuhLzH3Il
86n8nis5vyDYjeeaGL8e+DgX67vMjcz3soNu5P4p77jR8fgF3Dxwd4joJdZ3
SW+e2zlpba9fRVjf/b3J/VHfAovTy6cMrsP8H8HzTYvzN7XDfnYQk/lGtRc8
8XycV2Uh9vN1MVnvCAxiMt+JO/Thuf9a9miyqjX2cwA4jE3AWN8Cul1U3Yf0
t9TGHdbf8Rnei8yxnzl3klc9z530r9zKg/SjaqAHWR9oZ3vQ+WyHBxnPyjZ9
iTU+fcl4MswAS+bF+hR6Yl4l2H9xh9Ll2zFvPj1e178fub5wOriSfSDFfthK
Lc/tR/O/6kfut1jmSZ5Pss2eZH9ltiepr6ac2mDmReZXxUYv+rw75UXqryvx
Is8HoWl/Mh9JxOCPI1LqfodhfU+A2eeKKVjfF+DGtw/7adgPJt5kvSxzBdcn
hhsFLcf8Y73Jek/01JucXyoYQPpR0WsAeV6qRw0g40G3agBZ/8l/DSDPf1V3
H/I80ob5kPlIEOtDnm/iDB8yfjROvmR9Zgjxpc+/5b5kPpCm+ZL5THEXfDp5
59f8bjhfjPTjuYy2jV8ssD/+Bq/OWTPrpAjzq/zIektVCF4RM7fBchTm/0yP
ly0eyHNbvELe7bLC+SIF3I59QMP8N8H9H55LUJhh/jqwb+Pn9d6Y396f5+49
kZ1a0RTH23/gwaM2tJjzk62Hddf8yfpXWAsuHusqnv4N18uDJTwXFW1jIXnP
LCgAJy2ZMbrvK2ZxlYScT2bN8VxtTd2pMAOzUsKR9bRmLkfWs9JK8Prvnst+
BGI92w7iuUGTnI61H4t5/cAXOtpFpR/AfpgFXuwTsenvjZg3iW5XCQeT62kH
DCbvC4IZYC/2A7EfEgeT9wXZOTD7/BSC9fQKgPf5p2ozz5lYz8gAcv+lCXS7
4mwAfV5MHUKfF5vAk/vv94tYinnPDCHrZ20ZuPZr44DC+71hKM9NX5pzrJbD
+qmHkvW4oXgo6T9R00CSR9o7kNRbdxz8I2bSg8qBWL/ngaQfJcbDeM7+dxm8
kWNel2GkH1VjhpH9ZX/odmXP4cSaCPCt3cMHlffHvP8MJ/2m+Dmc9Ku62why
vE46ghwvXDmCjBdJ+gj6/tYliOQThID7JKc6vPHB+x0TRJ/HqUHkeassCqLv
b0EjyfpCunQkmW8VB0aS+Vt9eyRZf+s+jSTzv2pfMJ2vbgST+UdQF0zmJ7Fd
CHm/1OwJIf1uuBpC1i+iGmpp+1BixaBQ8v4ovBJK39/4UDI+5O2kpJ9U/lIy
v2rnSOn75wcpqa/SMozMvxrfMDKfG2aGkeenaHsYmf/VrcPJ+lPnHU7uhzAq
nNRbsi2cPF/keeHkeS7wiiDrc/G0CHK8bEsEed4qcyL+n+9/XVQztw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
RuB5Fup3Z5k70/fML4IlDmQLE9N8M+ST+5HzO78ONcT6opSRyy+krmvhvt9a
yH/dK6/O4d7X+1uzjLG6R6QX9jPFdHJmq3tTa59gPYskz8rallJWgPX2JPlS
3+jsayqsZ31saH1aeKzRoAjrmdhGp523nrxKFSxeno31LI08aGuQwYmbWH8f
ks9tuV776j/Mh6k9WMapaFxKbD72gzXkwsbydZpryJ9Cdpi937+LAvkLybtb
2K0l/yJ/HTnknv/4m6ewn0UIWObLtJ2n511AfY+Q6xZkPuDjepLvkP+LWXQ9
7h7yV5Nl5c0WvPvIb2PLMid7Ob4b/RL1zCPHZl+d2Qb7iVZLZr0nX1yN71eB
VU+W+T5wgCoR+6l4HNmqQ9Z8GfZz9S0y/8veITE4nl9BNsj36PYa/Yss7Fjm
YtAZg80PkNedvLSXmZ0T8iUv/uVjY5t3FaOeLHlM2qSMILRLuvZimeOfxlqe
ysV8diN7TCiZeQj1VIaSZRNXT/BEPbV7ya9ytNV6uD+yzr3JsvxTrjmo5yiy
0eC1D52vI38wOc3R+/rcdOTfQ273OE3T/xzyXyO/ePN+nmkG6unSh9aT7Igl
XTNRz0Cyn1Xc1au438Ld5KI/hTlXlMifRW6e5RreDXnk78kv2j2K+Yr5Igjo
S+vf/lxbb7SL/yF3HmbjlXob+S+SPy/P8bFH/RRvyQmn+l8X3UU9t/ej+TVz
aA5TiHpmkM8dyw5rwHxVvSaHvbA+WnUHeQ37s8yI9IiAU+hPOIj8LcJtVyXq
qzxPtqzad6TmIer5kjxsV86393geBK0HsExNiuP1gqfI60SuuOun+Yr3Zdks
ctRA05gXeH/iPycvX3vDawje10V69vR++cj26FqcL7Unn9dsGvXuOfLPIC+6
Yu/89jHyR5H94uZvjXqBejaTQ6I3RX5Hfnk/B3rfOHnRfDjmv9LnlxstjEJw
vHYD+UOI04BAzEfBCfL6nQPHZWA8RW9Hmq+mzw1NYbUXeXL6wqMzuO/PdeTd
k67Yf+byp5I9EnaOfo/+pA/IYT7CjKmYv7ypTrRex4bF/sB6I1xNPucdeSMc
90NylOxRdEB+EPNFfo+cpIn5ORT3W1lLXn24j2Vb3F/xyoEsE7PxTGYirk+W
RI41jDdvz82HAvJsnzHhR/E8qL+Rry09NaoF851vLaT9ycUvbzbmb/IhsodV
uP+CRNQ3l3w8YljMkFTk15LPpQVkumA9EloOYplOS2979MlCfg/y6YJl5nO4
5+0/8s/3Y2cV3kB9v5L5T2/kX8b5YvPBLHPzfKcN1ThfxpAnR7nOf3AL+ReR
g23t6tqjP6npEFrPHLNDV11F3jFk7ZcZA6LxPKlCyHym0b/+MvLuJY/5udCQ
h/VSbjKUZQo+hsZ8Pot6jiRP5nXYthTrpTaIbN3j1Urr88grJ3suql95/TTy
XiW309SeycZ6oB7hTO9fLflbcpGHv4B8dZrX+DNYP0S7dC297Kyb/x1ZtcKi
tt0V1FMyjGUWR5fa+15CPXeQB4iccq9gPZFnDtOpr7KE3PPtkpjlOF9rNJze
T54ILbddRD23kT1/VGWH4XxFOtlOIso0wX6hLiZPX2LiMwX14BuMoOfZrv/p
UlyvSEhOiLyeY5SM+p77Zbe4lUwK6vuSvLZM4WxzGPlbubCMWu/nhmHxyO9I
Prl2r+HxJOSfSe69fs6hy4dQ32cuOv2Lea4sYxg5PWbkEeQfQLaxPBS0DO0K
X/LcJFn2J1yPeiM5rsl1jD/uv7SJfLtXaeRR1Ce570h6fhzMbizF+qnyJkf2
8rH/iOeHt4Fs9toisxrrrfA4+e6jzV5Pcbyy1yiaHzeVvYxg7TSyJGq3+Bme
H8Fastvqu9me2D/Fx8jbs7MtTLE/ye6T7fbF553kfo/wHM0yp+rOsr2wHohW
kS0bOnVahfVRmkwuWTn75YnXyH+XbFQZMCH7GfLXkIO/2T70xnokWTGG5vOd
qLoGrEfyRLL6TOs9u/H7gzKfHL503Ko4fM9qq8iDVka8e4D1VdDdjWVGaxO2
m2A9VhwkB/ayv+PE7d+3yYfGJVxzxPn8SrLw+MbiM7B0rIhlus5cHyrC+bz/
yMWPHXMucL+3fiELBEf+nYN8EjOG9tv9IaPu4PcAuYjs0cMhqgjrgzKM/Im1
dIhF/cSfyX+Nz2vOw3om6+JO9Tzj6N8W65liNPmpyxLxOTzv6oVkI+nQxX/k
IW8sub9J0wZf9J/MH6sznsqVXO/s/LKe2/+CyINrJxgsw34njCGLGn35Pbj9
5Qq554w9znzsp9rhHnQ/VtRUV2E8wXxy9gOnlTNxvninbrvsEjl8lMXwDrBo
3jiWeVK1beNLrO/Sv8k8wdvlZzE/ky+Q/b6a5h5Fu+oNeXCxNFDC7W9bx9P3
/PIuOZGPUD8FWX/q/aNb8fuD9hW5uvuOfQOxXwraTKD7uSXYyxnzXTyQfLx8
d6cb3P5wlqx68XqkCfrnvyBPODBG7oT+RfoTaf4fsrY1h6UO5BIjwYQQzKdk
P7KZ2ySTcO79rIU8o4fNjY0YX95/ks7xyunkY2+KtqXj/UEbSTYz7cK/h/ku
+0leuUav+Sj2U0WfySzzwLn78HiMrxaTrWpULfnYP/nryfkpPoZSXI8obbJO
fyq7KTr5eNPIgU1NL1NRb+Ea8vGHf1zWYv2XpJAzW9ZHJp5A/kKytCs7YTPW
R8EUT3p/EPVITcJ6Ko4gi276vgjg1q8jZP6QXao3WO8Ud8jnHp9Vtd2H/NVk
cXHDyvCDqN/hqXQ9r9fN90J/qjxygbR3waeTyFtFztlfFlaIPEKrabTelY8M
Wn8M9TxAlhSzmTZ4P9XeIvvpn52pj/VdUEE+aOCy8im3/1p46bTL3Mmv4h6s
moP9mH+TnCPs5PgR652IJZdYZ70s4PazrmKab3ckl9dw660bOcA8fVhb7n04
lJxdmmeQhf4ln8juHm/th6J+8s7eLNP4YPUNc1yvchTZN92+2Rj7qzaY/Mfo
ns4/sf4L9pAF7Spm2aFeik4+9Hw93dnT/ijq6UKWh8as/g7zA8l9NGcmCuKQ
fzd5hX9mz0nbkT+LXBNx7f3pbajv8OkssyOGt4qVo74B5NYLrr4cFov8/5At
/5y6rTIB+S+Slxak2PodqHT7HxUSi6I=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0.7545305797595792}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0.7774907749077491, 
      1.2366946778711483`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0.7545305797595792}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0.7774907749077491, 
      1.2366946778711483`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UUP\"", "\"UDN\"", "\"UUP & UDN\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667991297966751*^9, 3.6679913620862384`*^9, 
  3.66799161214859*^9, 3.6679917140941796`*^9, 3.6679917538489523`*^9, 
  3.667992308174162*^9, 3.667992745954899*^9, 3.667992790266041*^9, 
  3.667993027165257*^9, 3.6679932470508213`*^9, 3.667994592428915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66799130926239*^9, 3.6679913120026073`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
K8uKIOuv/PP//D9QgvpV
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8KeEHf2/3sJ+KIn9v3z/A3GbOQg=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6047808*^9, 0}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.688573220164193}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6047808*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6047808*^9, 3.6677664*^9}, {0, 1.688573220164193}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6679913171641865`*^9, 3.667991366470523*^9, 
  3.6679916159086084`*^9, 3.667991714738222*^9, 3.6679917575303917`*^9, 
  3.6679923118317456`*^9, 3.6679927471773357`*^9, 3.667992790955432*^9, 
  3.6679930316380672`*^9, 3.667993250770827*^9, 3.667994593860427*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"BTALChart", "[", 
   RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "Today"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"BTALChart", "[", 
   RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "Today"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
  3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
  3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
  3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
  3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
  3.667989983816139*^9, 3.6679899846396537`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2mdYE2kXBuCIIootYm+Yta0KQlRsKJgBAcEWe1vXuPYeV/0sqMS2doy9
rCWAIAJqREXEFrtYx14QDUXFBDCiIvbv7Jw/8/hj97qvCcmTM++8Le9vf03v
N9ZJoVB8oP/893/6p5+y1yb8kv6960o2bUWLFrRxoskm+IwYfGZMN8d/tmwi
K17VCa41QrLjDFqVh9a6RdmE/h8KHhxeLdlqJKd4nHo0epJk5Sm05hU5OfJD
zFh3yfoq0TZh/B9JHetUlWzqhFankjPmz2kdulGyLhttrBgDtrQnR4se4dcO
cX4d2vCSHBVafc6odMnm8vtsQmj5Nge27OX8bcmqcPOIv2I4/5/kPUk9u41e
yPlXkueOML5dOFCyWDYWrGgdC/VUDyf7zooIOLyb8y+PhfoZD5Ov3N4VVLsD
19crDqwdQi505Affckj3y7CELHbVz97hwvmTyNlrxWvjSqTr1kfky/qdpSec
k6wfuN8mjHPML9x5m9tDBNlP3zyx3W5uDwfItSOmbVQUSFY8QKt/kp3ub4q7
s0GyZUE82BFHPlOg8dnbWLLqLrmerrWwJ1Sy9ls8fJ6h6QGbMG2as9h+jmTN
bbS+hOwd8MRkshVKeRslwPcXe5LH+vxvku9L6bruBvnO+dQ1979INn4iD2g6
+oiLKNnSMNEmaAJP93X25ryhiZh3FnniXb/dHT0km4vIposZ4+415HrWT7IJ
ffvdce3oL1kZQnbt675ysi/nn5EE31f/L75eUfcgvL+6G1o3jXzO8uDZtOOc
f/tB+HzLBfISbZJ3p9pcT+EQ1nMy2rwFbT1HTnzRKnxKdc5vQ5smHAaLG9GK
M4fh++qqmsGO9eTnTR+W9y2S8qvS0NpcM3w/Q+UjNiE3ZqT94U7J5o7kqcmK
no9WSNacQOuzyA2Fj+86x3F7qJBsEzxjldOi90gW26EVOnJC9a+FfsO4ni/I
1rLbUx/35vZQ7ijY0QatGnEU/l67gnyqcaV4/UTJVudjNmFezQbXuxgkK9Xk
Gl/aLZkRyPmHofXLyMvGd+4Xn1Yg5T9E/rKpXf+4stJ1davjYN1gcohzwGFN
nvR642Jy8Ge3/X834PyJaMdDsvscy+hK+dLrDQNSwOZFaGs8WnkfrflBrnMz
vbnwULIYfgKsiEOrRbTuK/n46apvA0dz/iapYFUMeZzfo2UZKZK1t8hjJgW8
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
9SLL1v+GIWjl45Yw/9WU8gDrPdCmgR4w3xQjyLL5ve4n2tjcE2zph3Ys8IT+
U7Wf/KLLGM8Dm7k/a9rKLqz1Mu5Wjuf+rA9Ztn5Xzm8F459mH1p/uxU8v4pe
XmD1HC+Y7+qiyGlDn9YLOMz5b6Atn9DaWd5gwx6ybD1lvuYN80lrkTfOJxqo
7YJ728tvpmbw+PYvOTUg7Mu9ijzfuUzuEvfR3SWHxzcHWXaeRl23NcyndN3I
bRv/28c/hMe3C+SUuTWn7uvH41tBa5hfaGu1sQsTXFyrus7g8U0gF/jkXZhS
is+fTG4D46G+elu7sPCtWV/RjfP6k0uWl+3xpDOPxxPQik1oY1UfqIelM9nZ
1ijd34fzjiU/nyguf+rEeY0+8HnaNB+YH1o7trMLN5u8H/LwINdzdDuYj2rW
kU+9rOp5dwjPL0+QgwqT194N4vMyWeRrgV4JHfryeR5de6rnqBVh7cw8311N
zt75S/S5yPPLY+SB77b6tV/N88sX5LVZPi7iIp5flutgl58fMqzoAHnNR8h3
77zZFHWJ82eQQ84Ht416zPnLdoTXa9Rk2XpcPITXFU87QvtQl+4E769rRdau
/HdR+WVc/8Hkltuyxj64z/V91Anak1bhC/UztCSn9x2R7Fyf28MA8lBxaP79
15x/Efn6sDM34z7w8/aDHNgkQhGzhtvH753tQuU2We3Lb+P8fTvD/FqxgLx4
8/7EJ805fxxZdl7G0qSLXaj0v+fJ8fu5v+jdBeZDqnlk2f6ANqYLrpdudYH5
h7Knn12+n6/5H1pvQpuu+8H6XPyI1s30h/Wwcbc/XLdc9Yf1u+M9XlfV7wrr
Z/NOcouM51kzc7m/u9QV55vvyBtuDBYrH+W8gRqw4gJana+Bv9fVFLB/0wi4
vp9Elp0f0r5FG6oFwHzY7BcA/YN1PFl2/kq5kbzoaO5335vcHpSBdvl5MtE3
ENqjYiz5U/Lf+8olcHtYT5adB9SdJMvOzzk6dIPrqr/Q2rXdoD0aUtCakUHQ
f+hXBeH682gQrJ/FTLTxn2D4fhYzWXbezvGM7DmqRpFTJK+XnUNo/hOZNqdn
JT4P6k2WnZ+1HiTfbbL6lHkMn1d9Qp7hsSQhbCifV3XqbpefX9V7kr8mV3DJ
1fF520Hk7KTl+gWRfD71F1l2XtbYItQuP79q6U9eV37yw0NmPl+7kKztrMm7
9i+fr/1Ofi2O2Z91js+nNguzC6FL6sZ6pXFeLXlEaEZY91TOG06u6ZrZKuse
540lq0snuXnd4vO1jXvQ/b67+/5Xkc/X9ibPzvu57M/O76X7PZd8aWiFrJL6
knXR5KDrU1JDbnD+m+TNqk3DvpSXrqt69LQLBv/8r8UTJGtnk98vGzCy5VjJ
hr3ksUENaiZMk2xOJztV0lYvjpRs/UD28DbVSOwu2bSrF9Vvw96UTXbOe4Uc
7+Sb9i2B877vBd9PXa+3Xbi6Xbwb/J7ruYOc7zTzdfXTXM+L5D2uff6p9onP
AxeStz3RhFhL+P7X7kN59/rWqVaO8wb0gfooz5PjwxulbL7M9bSTE9PexGXv
4PtfQ2sXhiVVqx02he9/V/II+5Ny2zWcfyJ5ye3RdX415faQR+6/xb7xlxvX
060vzRePLhxZcynn70LeNt/fWb2Y848jj087ND99Jeff8J8fbvZJ9uD2UKWf
XSiO9BQXeXN76ESu8uFY/NZ5nH8MOb/BUNOPPzl/JLnOmJVPaoVx/lTyw9F9
kn525Pp26G8XFuwa+OxGC67vKPKVgcdCI+pz/jX94fkwHie3zF+6Lmemo+v/
ARLDxcw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XdczW8bB/CGrEol2uq0CI1TNETjW2SlKZI0jfaQlBQnkqJURkooTRU5
aEo6ImkP0kKHxi/npI2S8bt8L/94/nie5/06Oj597uu+v4Osi6/VAS4ODo5J
+K8//wv/8fNKZRH4f8cM4L/SEv91CwMc52/rm8hHOt49jUXsP8S54fb06B8z
LoGPEuOnzwiSn49VgLd8OSGQ3Uh+ThkCawY7i94fIW2x+BaL0NkusPl7LWlm
PHi2/uiOSPz7BMvB6nUrI+8tIm04AM7XkNy3gCDtJ5DOIpTbYw/cMcO868DX
bwguP7yRNLUU7FASLvahhvx+p4/gWcuXPr9kMD9fBovInPIetMPPGVpg5T0a
jJDLpMecwM31IXVV3aRpveDFWmVuk79I0xdksogrCukuD1aS38dcA1b5KFJt
qYz5HcAcPItdJPQwfxTY49VgapUm9jk3i0XIHuH7cMGSNIc6WPip1PCZvZh/
L1hi9sayZi3STmfA9qkl7L37MP898KaF8x52nCVNUc1mEQ3ZK/STLpK2sAV3
97rtFL9NmnYKPF96q254OWn6HfCR4ENi/vcw/xuw2RVBnd0V2K9NDovgdDj6
XyUD+z0JVjOMvSP0GfPngjeZzc1xmzNO5n8NVujlVZoaxfy/wNZnN1d8Eic/
Z4TeZhFl3AXnstFj2eBUfrnmcRnSlFbw3V3FS7x/Y/5ZsMzAvqw3E5hfMZdF
tCY5PFuF32/YBKbtN6XILiB/3m8a3OZw+lLTMOaVy2MRO17/rG38gXlNwdwK
KSWuT7DPevCDorv9P9uxzy/g6SrxNSZPSTNk8lkEa0TWQ+cMzvNWcOztJu5T
+dj3EfAo03a07gP2OfGvmVJ3YH8s0xHSKsJ52Aw+5hTS1ZSA+f3BB90LuKza
sO8U8HOvbD7zEpwHibuQbzRqiV0n9rkRbH5N7pr/d8zvc/ef3yc+CRwaN75S
dSfmrwLLOItFJTtjn0QBi7ivzP6dgvNJ8wQz5YQWeOKfp18B33z8ZKApDPNX
gk1jPk4lJmJ+Flh2e/81KvaR5naPRbwO78mfvoH9XgTbPZqyn3MN81f8cXLM
47cpmFeIziLCDIa4H9din3HgIi+lM4Yfsc9H4LYvOi72nOR6WvSDk1+H7hjn
Ik1bdB/mz8op0kifNF0HTFWfHpAwJG1YAqZrXTT4boHz8AGcp3sv0AE/T+N9
wCJy4suPFW4n3aIJvl2RE/nFFefXCfzOptPgvSfp+Pfg8arPnglHcH7nP2QR
3x6Y1grj52MaYAULln+5Hc7vPnAAd2XAuQOY/yxYSPCp1VYP0kyeQvjzaqda
L9mTFqT+a0M78Hd7w+oKR8wfAXbMfWGy/BLmLwBL6hj61V8jTVUpYhHBA21q
ay+TdtoNHjgsn3crBPOHg4VGbR/IemH+fPDyvdKKIaGYvx0ss8xTIs4X+91Z
/E9e+gmwpdnL1qAgzH8bzPxdvz7KCfO/An/6yn/DQg7z/wRLdIvktAhjv8dL
YD5OPK94/w3nIRscNhLqto4f87eALZu13Gxwfzt9By+UP9bHxPMhXqEU8hg+
35GphP1mgI03ak5vF8N+G8H/+SWrDbXiPH8DX6dKXdf4ux9ly1iEv9RCc/4h
nOft4Ij19Y27u3F+p8ArD4iJdv89z6QfsYi08ZqSQiGch61ghVs2/PqimDcA
vI9GfNjz9zwbB/M4FndtNMY+Jcv/mSeKCbjxpm7oiD/m9QPLZX8NFDqIfV/7
83llupSIH/Yp/hjmXSNbZDga+zQGD/9a5fLlBs6DN1hrZIOdUhvOw1WwfsUa
0dN12PdTsHi+l3F+Hs6DYQWLcO5Siai4gn16gDMfijYpnMf8l8HdXJJZK09g
/idgPTHLEec4zP8J/LKtenEpzhP90BMW8cv3tznTBechAVwrv2+9VCTmfwxW
r5SX7A3H/INg48Z1LudtMb9gJYs49ezpQSp+H0cc+JDeyeZT1thvGbic+LG8
G68HTn1g/mlXvvnymJ+fAft/wyurFPx+hjb4kuJ4zPGb2G8xWL/x+LaTdOyX
CTZIuVWchb8PfeFTFrFi3mynTxPmXwsWLxiZGRjG/I5g05+Lq/t5J8h+34HN
aK6xSnykW+ZVwc/zv7dkLSfNoQFWXBgWlytImmoPPnHN++tcCmmnSPC60R9h
Opqkx+Y8YxEfONa7ZWwgTVEDTwi9OnDOhrTFHrDPE0FzXX3StNPgW+ee7Zul
kqbf/fPzzt5dkvjzhsrPWcQTo8rLUaak/XaB3Ut9nzzQw/y05/98f0se2LFX
fVxDAvO3g7kqO9RKbUnHW1eziKjJ8orTe0gzwsBCoUFG380xfw44977tmaRA
zN8GpkZ57leOxfw//ny+to54c4s0M+QFfF/N83TFBNKCWeAmhd+FLZGYvxl8
7Nq999+DMP8M2Cr4aT3lJuaXr2ERb1sVAqaLsN90sMGhbVVr7mO/DeCzSV7V
kQ8w/1dwQ2BJq+oTzLvtJYsode7l4SzHPmvBaxiDUbEF2OckuFw4Kr8vGfMu
q4U8nrs57dGCW8C/1t/e6xOBeQ+D1XjfUTzKsM+xP39+5GVFcjX2KVnHInYe
l7vgXIh5N4Hf0bx2XTuBeX3Bm+pT+Gd8MG8y+Hf5VWd/NEWsHq5XhWWbu85j
n0bgxTeLYytDMb8X2OW2tlVMI+ZPBJ9a/Fb1Rw3mZ4CvOoy3T/ZhnwYN0Mex
F7O1P7FPd/BUsrSX//xJMu8T8F5Znl4tWdLUIfAxsatlExTSjIONcL8TK6K8
HD0WD+78kuRmpU3aYgC8OIFuooLfRxNogv0wl1rmNI+04AWw0u05bUYz2F8p
+Mcx+3JRUfJzv49gPtGCaCUx0ml8zSyCYUSvtJMk3aIFblm6V/yOEmmnIrD3
9eemHv9hf73g/EbqjhVSmHdBC5yXHmI9Z7Qw7xqwycL71rJU0hSHln++nzm3
lUVkCC5rerwS86qDL70vWDaqTNpwL3iD9bvm4jmY98yfz1M1htqv43rPaWMR
8oq9HgfO4Hqrgp1ZSTtv4fw72YJjV/stbw3AvKfAH3Oj9fqzcH/dAb/8mnZ5
OBrXe/UrmJ+zmjeXyeB624AX8zH9rhvgep8EB6mct2Ssw/XOBcs6McM34/4R
fA3m6DiSwcT9kWb1mkW4+Z9rzXuE8xoKrk6OuiM/ivlzwA3G3n7R45i/Fdyh
rjF6cSH2PQuWZtn2HVPE/jLbWcSjl3e5dq3G9W8CzxpzUzvwz9OmwVynvA6m
rCBNl3sDz393znhxy2Gft8CBrz+fVdXDPuvBQXcklS3X4/p/Aac8Gfa6gm6R
6WAR7YZXLnva4LxuA5eetN805kw6/iV4rR21jtcA138CHHzpTqBpBK6/VCeL
WHbAJ/VVFObfDNYMkkjdfBnz+4OX3rajuCfiPIyCvX95WFVewnmQ6ILre1BE
70wI5t8Inpba+MosFPP7gF8UHw533Ij5k7r+mT+qaDdcH6UKhDldsU8CvPv5
8FfvSMzvCdaUvmpc74n5r3T/k3esEsy++lTLJxD71e+BefKgXn/thP26gemH
aYmOwZj/ItiIMqsTuRPzV4BfCGVqiG7D/P+Bf9mGp/m6YL8H3sJ6VWU8Ej+P
/caDozRYm0zuYP5H4IUmavyyFZi/H+xuqdDtV4z5F72D9f/ZNFWD/VBiwZV8
xf75xthvCfj0tlXXOGwx/wfw3a+cWXqxmJ/3PezfcwyWuALm1wSvsum1+fIN
z69CMKXdaLW2NPb7Htw/4X5zGNe7ZX4vi5Cy7+u6EID514Dtc97TTmMeRg9Y
jFNd9T/8/cZ4mLBfXCkPM9MxLxUs4Dit2Yvrb2EHHg/TqFtwC/NGgDXlBa+8
CcI+uT/A89atjiOpZ7FPFfCmra97B27iPOwGl4p2qn64i3nDwRqHtlA9CjBv
PlhUvnGWmoN9rvoI98MTiRfa6NjnTnBnkebZCZxfxglwZAA34YR5x26D1865
dGjuDcz/Cqxx23l1RCb2adkHz+sRuY7H2rHP42CdHWXPeLoxfzb42pfpmvGn
mL8FfKLlOyPqCub/Dg5dQ48ezsY+j/XDelQL6LiU4TxkgLX6XsjGJGP+RnC+
rq5h6zPM/w38NcI3Q6YF88sOwPPdXsG6I/3YZx1YdWTo/VPuKTLvFNj69XVe
bg7STOlBeP65u2XbSQnSglvB9WeJg3VypNNqwJZv2PJ3lUi3jIO99tKsOZaT
5pD6D55H3Dv2+FJJU03Ad87+alCwIu3kB3aSNt0w15P02AjYL2LPd0c/0hTx
Idi/r2pnh9AWxuBO9bOVJQ6kad7gAENZx4Z1mP8qWG/3Ur0rW0kbinxiETbS
RtNvd5D2MwRfyNZxNrfH/B5g42XrJBNOYf7L4Ma24u6AKMxfCWaLVHTJXCId
r8eC/Urpnz6VQJpxCHz2BO16nT/mTwAv6/MLOhyN+R+DtdJt+O6dwfyDYOHV
vGKDcdjvfjaLmH/esV8zFvuNAzMmnOu86Ji/DJwUv1KssQjz94Evim/dxGzG
PmOGWYTHsTVj1hXYZzG4YSd1LzUF8zLBCqIJUp0PMO/Cz/A8Y2UayLyBedeC
uV3cz8hlYZ8PwXyGE3srK7HPd5//+fuZ80ZYRFeA/hOvWsyrAU69f1hqPAbz
2oNPlp3bXViFfXaD52aMCFWVYp88o//mVwPbJXWoF/Zg/j3g5/7PZ6bR8afB
QxeDZGbw+yhcYyyi711Zrkw19qkMrs6RMTQpwPy7wOt80+8tuYf5aeDPnQs1
T5tg/jxwa2eacI4W9rlyHM7XidIzc/7OgzU4/I0V3/GVmD8MXNB+Yb7Yasx/
Gyx9xERUXgDzt4FP/gg8fX4b9msxAX03Ra9J3oP9hoCLdyfL7sZ5p2SBfSpT
5l0IxPzN4IHVzZJbL2D+mYl/5yF4kkWITO8u316G/aaDOd7L18++xvwNYJXw
DwvW92H+r+APOQ6ubROYnzIF95/xv8TDWNhvKthf1pmWwfOF7LcWPDXqoii3
gDRjEvxFb0fy7FzSY8u+QB/PC2/MnUOasgXcEiymvkeYNHMMXNPp9fO2IGlB
ya9wfji+5izkJ224CSx2453zEP59fr7g4zte14lLk+YYAZec5t4pgz9PFfsG
z3+OHJWznzGvEVjdvuqrAhfm9QKHPuUrtJ6PeRPBedcU1zGHsM+l0/D3BT1i
dfRjnwZg44WetqswD90dfFc8ys1rCea/BL5vZF2rpo75n4DVjb45mCqTTtsw
A/c/loY/fPHvbzkIFloRbJKNfXMkgHNE1XJP4fdTy8H2iWYmMcWYfwAstXTL
07tMnAfX7yziyL7B2qk3OA8XwEUXVj389BLzl4LVOA4NNdIw/0fwt3Adixvh
OM98s/D8a1zT5FaO83AePEUZuaDx93woAtcR15v2ueI89IIPb+P3yX6C87Dg
B4uYx8dfbGWD+deCmZnbzYbEcb89AKtu993gVI3Xi7fgVxxFqpqNeL2b+5NF
lGlzZg/l4fVOHZxByYlMxOuTxd6ff85DnlccH/F61wVOTqwU8BbGeZ7zi0U8
7HRdpH8M86uCM36e5Jixxvy24Ih1yS1B8Zj/FPhB4ejx73h+UDl/s4js8wc6
7t3HfleDJx0UegJGML8N+G3egYd7BnE/ngR/DRDfkI3zMpYL5q3NzVlnQpqm
xMEmOHq6lDW24nxYgbdNt57fpoXzEQqWK5WbSbTF+cgBN92xkwnywfluBY+a
fXqaFIDzYc7JJoRVzS59iMD5DgG7Vk+YbzmH85EJfpT3xWk3fu7UBG62Tzod
i5/HT4M1PBXX/Xce91sQF5uIOBQ+4R5H2uIW2DifYbzlHuavB+8PpBY6ZGP+
L2B+lYv5onTML8PNJlz0+6obGnH/3QR/Ec+qOfoO5/sleH5CLMO9C/NPgLUd
qvge/Yd5N8+B/CJc0x09uN+qwVXaxyWmCrHPUbD3nLbDvZ2YV4KHTbC4p06E
jGDejeBWVpjdxiHM6wNmLlWYEzCOfX4Gp29a9XaoHvsUncsm+u8rjVJeYl4C
rLuRw/ox9p3mOfefvlqugK36z3D64P51WjIP+lmQPqnEh33qg2OEn36dwP3H
cAPbOmg4Psb1HrsIVtr7k0prwfwV4J8RG1SMMS99/Xw2ES8he1KA6yvZ5wHw
EyGV+XkLSAvGgzWWiElqLiTt1w9OejDWd1CKNIfrAjbxIveHF6cCaWosWLCx
YctVHtJOJeDr19Q0snF9GLwL2UTs6ZRjuXXY3zlwWwDv608HsL9CcM4HH1VL
Dcz3Hlx2dyhgNBDXez4vm9ixb+GgVwf2uwb8/Gjh+pt52N998MzrfJHVJ7G/
HvAprcGzdF+c17l8bKJronlFnBmuPxVcFc9KuSqF/dqBtR1dVINdsS9ufjax
OKXpqCL+vIUKWFTieEgnrg9tN3jdxTzHnreYNxy8ylUva/UTXG+ORWyCMzIy
Zi2uv98q8JuJko7r4Zh3JzjYW4LBuR7zngAPyep91PfGvLngGw27+jcq4Xqv
EGAToalbNGw9sU9LcD49oSfjEa73cbDmrIJdYBbmzwYfUnC0OYj7waIF/GXY
6yUb14NpJgjzvD6EawznXfAY2KhaTl1+DPNngN0UE/YfmMT8jWDf9nX1vivJ
9U379ufzXYFBdYa43mlCbOLiWodUxlbS8XVgrpZA+vZtpBlT4MWnHrTrmJAe
k17MJtJc6/f4uZGm3QCLn+xqTD1Eml4DFk6pGGQF4XyOg9/5e6bMC8D5lBL+
s16WN/W8SBuagNu7UrTotqRbnoMvrDUxbwrFeR0F6zk38qkewHkVX8ImSi83
tHHtwPzG4NUFDp2ENeb3BksdHORj4v6gDIOX/idbpitB2kJkKZsg7ohS/HG9
aYZgj+gmHbf7OA8e4JeLvCy4p7Hvy2D5/mDLyHbsU1iETagVHFVaS8E+9cCM
uJwf+wQw/yGRf/JwXATrOrqPqK3D/I/B7txasYc8sV9dUTaxolvytI4T9rsf
bPEqKWc+rg8lDjyy8FVu/DDOQxnYp0BceE0v5u8DE0dNlvLg54IuYmxikXrI
jlAq9hsD3i16V7/jF+YvBju/ugS31TjPTLB3iZf8st+4n6LFYd4WUIPnKWKf
D8HZXq+b54pg3nfg9iVNvdI4T2PzJNhEdOp+DW0jzKsBruJLqjF3xnmggzcP
fpg5sBnnoRtcFJyqa26F88AjySYkfl+Rn8Q+DNXAsTW7VCw88PzaAxY4VrB/
hxL22Qk2aQ6TlLXHPrmk2MSsxdN95jY4D8rgcdPs1kP+mH8X2GxA/+Xbk5if
Bm4iph10Y3EefoO/71nisy4Q53nlMrh+HRzhop3FvGHgytBHL7S0MO9tsAmF
x/gtznPacmk2sfWbr4huBK6/hfQ/fXAcB7ua8r95ugrzZoGfcW8qOUBg3mbw
vOzOPrcY7HOHDJvgvlcs+9YP+wwGa7bbtt5xxLzpYJFg3jXPcV5oDWDtwcHP
tOvY91fwpRcPZ1+kY5+BFDah2L6vuqYQ+0wFh/90YL1/gPlrwWkTjFM1BZh/
EmzpUMqiV2J+aVk28dFVILPmPvb3AmwtaZRggb//2Bi4xCgt4n0u5pWUg+/f
n5FvlYF5N4GdNpuLWWL/zGfgy4HKr3nPY58j4P6Vw3aWZzCvmDyb4K0Oarp6
GfMagXd/2rPzuSvm9QLXz5gFTuzBPtlgT6HNe6twfZyWKrCJzMAVzDFNXH8D
cGlagqZbCOZ3B8ve9awr+Nv3JfCsX7Dpib99LlaE/fH5CDMf55W+AXzYttNw
IZ5vzINgobxJXwtcH8EEsIZY8yr+O5i/HFz/hHfD1ovY57rlbII+9e5c3z3s
cz+4Itd8iwmuB/UCeMusupzgOcxfCi4VCVxlEIz5P4I75hlEL8fzlOK8gk3o
pFuPnMf9bHEeHDvptskGr/e0IvDvQSXVOG3M3wvOdClRTdPAPqOU2ETKEeqM
ihz2+QC8dFdeTfQmzPsWnPjBpmf5IF7P5q1kE2t7UkS24/WFqg72zJlo4sLv
Z9wDU+i+3uG4f8a6wD+vZnCUXcC8c1bB/ZWzdm8j9m2hCg70jo+glGNeW7BC
hqpzLc6bYAdYwHCei/Az7JNzNcxfY6C5NfbrtxpMvzxTmH4L89uAYwTlouaE
Y/6TYF+fvGxj/H2cfoFL8q5LiOP9TrySMtyPulWol7pjfivwp3vt16gJmD8U
/PCeT3Acrh8lB3xLWIOzLhr7VFRhE3YdWZ+tj+I8mIM7Du0SEMXzSzAEfKH+
ZDXHCcyfCa5MGkvtMcP8TeBb8/Rr+o1xHnaowvyxVTYU4X6gBoE/Gdd12+3G
/LfAm0cX6hx3wPz1/37O+AIuPRpDV8PrqcURNbjfkuOkEdg37Sb4pmnIyujj
mP8l+Iz/I5kFmIc5Aabzurk0vsHrxzIqnP8Znx3DVfH6kAJem5tkoIrvE1qq
wWbzomiL+PF5bQxcGHbTUq4Nn4ck1OH+ms1TO2OD15ON4DDdLrbBLrzfqQJ/
tjHPlF6F9zufwfquRuUH8f2WhagGm2iImX9AeRifNwnwRq6Nz7jG8HnTE3y6
3y+BeROfz5asYRPdxxZFn5PHvPpgNcftLSr4vqbFDVxTvezd+mnMewnsHik5
lobP9/FCa2G9Fu4Ju/kD78fXgy1ebu46aYB5D4BffHwjw8b7fUo8WGbvSMQV
F9x/j8C5n7yWyeD7CqaOJlx/n/fITSpgn67guOs3tnq8x+fLWPDvK652y/F5
268EPKVz791bfJ+U9gEsTqOYLEBTnbTYxKtz9VmyG/D58hy4iOPTmZUG+HxZ
CE4/u1SiNxXzvweP8Mg3Z93F5/v52mzivK+jeBn+frSz4DbH3JCd9ni/cx8s
bnZQNAmfP5g94EJWdpHuUcw/VwfOP2PhvrYcvL+kgntjZY1l8/H+twDctOKW
9z58vuPoAq/3zrzgGIvnBfc6NsFzVVN3+DDOgwq4eUP4y/U12P9usGsfk32Z
if2+AYd9DNPY1Yf9cujCvHGN2Srj/TptFfj0kwDhwDLMvxPc1OCu5C6K83wC
nJfat+cQ3g/4/QR3PCxdbofnedqK9Wyi701H684NeF5Ygt8JVG1fEob7MRTs
W/2QXX0M92M2+LOTy4sZvD4wFDbA8xItTe9pJp4XZmDjnpuv44rwvDgG1qoR
yv789/qXAZ78QHFRuIn7sRHMx0OlSaXgeWGqxyaOv9bskcT7W8Oj4GCfrGCb
w5g/DWzYsqmkYi/mrwOf52WXv+HF/FPg0MYbHUEN2G+APjxPFn1z3SmL58UN
sNADOy+NZZi/Bixc8TB6Dl5PxsbBn5MLpxfh30eRMmATXo7y0b8j8by4Bo5x
XVPjQsN+n4MF4jQeiUdh/lGw5psMORO8X/IzNoR+PBkfP+L9FUcVuEBt7WEW
Xh+ow2Bx8YqCJ3ieO4kQbCLZzLg3/O/9miG4bXP3AD/mZ3iAa43vC5+Lwz4/
gYMuilrE4HlHEzZiE1lbBgJm8Lyn64E7oqf9bohj3kNgTiW3Sm28fxS8CHYI
4srfgs9faYLGcL+x7PcSVzz/WnTBx7I8BhcLYf4D4B0tmqvK8f6DGgd+v8u+
3ZUP85eB3TJtX7bj/hjT3gj3/wwexQR8XqC4gCMTPSu2zsf8MeBqqXIVOTx/
acXgr+2/bxdtxPV33MQmrG59ZhXg9dUvGryDz5bhfATX/yG4S1flVMZ2XP93
4AnH3N/nFmN/kSZwnmgvUol9hs+bdPCpwIOJMzgfY91g1SQPq0uRmI9nM5sY
lb6n54DvEy3UwIEraRw2Nfh++i74ioDA8uQGfF/WCVZcUT4/7hueZ1xb2IT0
y1h9Ov57g58y+PfOXawU/Pm0XWAd7y9DHvh+z+k3WLJNrsoW32/Hr9zKJnoi
+Ftj8H0fwxoskRMl6oTvw8fCwFcOc4SdTcPz6wf4sNnWwkILvB4s3wbn8eSK
T7evYl4LcMFwY+hW/PcYwePgAZkjE4f/vt/LArP5VJ7ozOD1QX47m9gzEc69
BX8fDjNwgXe1XGwinr/BYLnLRJ/i3/en6WCjhwujjuL7y/gGsFTykJEpvl+n
bDeF9fuvakgZ3y9aBILfLk5uC0DTUsEDcTOZc/B9Pb0WnGXU/1CnAd9PToJt
lViuxWuxv+s74Pedf7xrDv57RssLcBJPSPrYB8w7Dl6/RVmTF9eHKmkGz/O+
nFkx+O8hjGSw8ecV3ckiuP7PwLy77up64vWaMgJuOD4q0Yzv4y3EzGH9N0ea
563G89YIPNQyeVBdBq8HT8EF4rsDaqewTzZ44qz/+QE83/2WWrCJkx+H/eLx
fWGaAVjAk7NL9RbuL3ewUYxis8ZDPK+G/vz5k7Pi6SV4PVhsCXl5VVeOhuD8
bgCXb9Z+JJaI+Q+Ci9XzPp29hvObAHZRHhSvwfcddAEr2E8pH3ddxOdh5jrw
eLRThxdeTwT3g7dkXDnczY377QLYc5X+xZQVuN9KwYmMLNkBPdz/2tZwHvKv
tP97vlCdwYz3ah1D+HzndB68dVa72BTP1/gisJ/a8so6ia8G/wNqKPwj
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KcFH8D/Pw2K77jpuxpD7lu174P6SA98z/LmSG+4vZ4MP/UmY2nwrPr+38NRx
fu1u+j2vxn729aT7s5ngBJ9uRctb4f4swZM8v8ib9SD7eVWfHmQ/po/oQfZf
Ajm4VVSQe0USzr8rPcj+TtPbi+w3+VO9yPWItnmR/b70shd53lOUUgslPWG+
u059ePYt7nc3g/95XpdfBOdFrn9zfR7mL+lJ9sd681467vapuTs7WWE9N/Yi
+1vl+V5kf68pBheWBGu1KzG/WW94fusnPzxoGO4nhOB2PondvgTifudsb7I/
4L3oTfZPwgbeZP8kcfUm93P5WG8yPwVPvcl+UMzzIfsLWRdw/16i8UP7Yv7R
PmR+aFb6kPVW+tuHzGdFxz46zn7qmU/hF3G9GAnueP1Pme1SnI+x4G1ZByZf
X4DzMQmsLryQOnMrzrcOfXVcnNORyDYjcL0YDo5tM8JZ0B/Xi2jwl6PJwqhh
OB8TwTuSrS7eHonz8T41f1g/uL7AcYYnJFbfJeD51357zI7F/Ip+ZP1T3AVz
0ewPQFj+L/3ofjjKl6wH8kO+dL27DZ6Scebj3DmYvwacIDJPnbMI8zv0h/2G
4c9HwnC9OAD2EI7ymD8N63sTvOrSEPu8cMz/Caz1HF3WejLm9RfB/sTw65ZQ
rOd18Hfv4y4t52M9P4CH7f4ys10vXN9sOVJvuYgj65VqFkfqJa7iyPlkzf3I
fkbZz4+uzzP8yHjzd/rR+x/fn9zv1T7+ZH/Ii/An9yPhDn9yv5Nk+pN+1vcK
IPtRwZQAUn/xVnCfoOwF1+Iwf3oA6VfR5AHk/iaNG0DqrUgbQPpF/XoA2T/I
NwSS+71KGUjy6F8Gkvu5wHSgjpu11fAAjfPNfSBZ/zVnqPnPB5L3LSLjQTpO
Iq2aYrcI17Nug8h6owgZRN5/SP6C/3m/Ke88GJ4nkpI+XyjE9WsU+J/3v/oV
g+n9oB4sjj4YfXU73g9chpDjGvEQkoe/HOww8aHdglBcf08MIe8f1E5DYf0y
/PlmIa5fw8Gt8p60K+iJ6++yoeR6JMeGkvVeXgD+WvPmv9wl+P5h6DByPeLF
4PgjftJJ+Zj/CLUyH/zP7zc0n8GnTCpO8g9i/Q4G6bizgQXjl3jj/exWEBkv
Xg2470HDAyGut/bDyf1VtX84ed+hvwE2/DWxewWOfzX4+Jpp+SW3cPxbjtBx
d0Irj4hicb31AysNv/6Mw/tBLjjEyDCgOP66EeR5UWojJuuRor+Yzq9IMd2f
vReT5xu59Ugyn1R9R5L7gX46uJPhdZsZ5o8fSfdnTYPJflPjHUzWE/60YDK/
RNuDyfyWZgST9Y7XaxRZD4Xho8h6J9kCXuw/G3ZkmP/SqP/vZ/8HPtjqtQ==

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Y3xYww1oP6zzeYI29kv8eLJdo85bB7yflD8km0zupWyP9x05KXndIkXHWz3v
E8MMJczy86OGTsX+m2tN7reu4nDzTPRbSB5t7+OTOwH9fiWbu12Qjsd+mKM+
VcJYFT3Kdh6E/Ax5laprrKsZ8m8ii3Isdwc34/1syDS6P3ZkcO169uOzyEMd
P/0+gv12+Xqy+35OryH90PcxcrrHs/C56uhzoJGEUfca5meG/axwBjkloSnh
2STk9SS/iljdoofvZ0eTm70uvX1qjL5vk0+Yuzjp4f1IZGZMv0fv6qdvFuhz
LVllbMOhfQaYD5Hkb7NNAmzx/ODlkPs5K7xomIr878jd5fGRi3F9A66JhKk6
FzZGRwV9hpMHexl1rGEhfyY5OZinvQefF74lu+S5fTmI9w+psqmEKR3Qpf2A
gz7DyCnbfyo+wvNScJPcS+s6rw33t+g1OXVM0mVFrN8sJTPa33pNNj/Q83w2
IFs2fl/8CPvR8jTy5RXbgouxP5CrJU/iDojyxf7JQH66hNmRPyQ0Ac9/7mRy
YMinOXw836Od/rl6fZQl5j+7ilzcazuzBO8jHDlzCSN2joj2uIH8E8mZ0xx/
5GF/JFhK3uPiELUB+1NREPnQ2BHcc1g/eH/IXSMDK05gf8sfN0PCtJsmZjdh
f1/uSN5/WLwnA/tZuUByzeP7bE3sfw2SyUU3ew2IxP0vHD1TwkSsCiuZ17Ne
LCR/mzPhdb97yL+TfPxc/aRKHOdcIset/Zp7B58PeUo+9vTksLnYn7PmW9D9
HduoNqmnX38ya/W5D0WhyM8nt0V9ld+D5wm/mFzovMSpoed53Ua+fWtS49Se
96Gts6i/yf4Fk/H56HNkhUkRU6LxeeFjMktNY+BB9CdtIX/Xzd3ejfWDrW0p
YU4dZtdOSEe/Z8jRn1muC7Eeih6QDbq3Wp7LRP5m8t86r4fr8H7Bm2NFz9fx
/mOyevbvheQ8FYOvuT379yay8Zxbt5oxHtyhDB3/c8o/JhF5rch9dniFqiC/
cCM5Nb/IvagQfX4hy3/qDLHvWd8Gz5YwtX2nXq7B9QQW5PBweUkd5o/Ii5yr
9urpc3w/K5Z8dP3tIdPwPsBnzaH5Ud3WX4jj5ebksNzrR4LuIr8n+cNx03ur
3yB/FPn9yrNPkx8g/y3y0nXqBr/wPJOaWtN6y/LdbpGCPt3JOZ2XCuJ68h8h
b3X6U/Wr5/0pm9w/8/zxOZi/VqttJMwbzYyS+Zh/vMPkTyXPrpQ2IG8GWW2f
n7X5C+StI188YSCfloX+Ds6l9cpOuOwlnj9CAdk7vfvLqZ73zVdk98TbnsV4
XrIVbSVMWlWmy0s8rzlTyEPeTF9c1/O+eZ087UypNLHn/b2G7JCSUOuN56dV
bzt6/zb3KTiM+cWbRO6Sv/nTEt/PX07+L/JuaivWE+7ff+c7Xk6I7nkeT7Cn
8Qp81DcBzwvhEvLSmp3+YdgPSfeQvy/nTx2P9+uQLnLqgOrJDtg/CcbOo/XA
fMRjCfKIOGSl+Mr3dngfY+0mdx8fz5qI32uVRFY95L1+2nv0N8qB7qd3UZtG
fMB4LyQP0muoaP+M8Q4gt/qPdY/6gvwXyQ/uzWDXY/yjS8k1b+6WXcR8ZDvM
lzBfYqtbBmI94Gwnfyz5obEI60HIeXLSxohV1TgueEKuHDfM4xTeF0Wt5EK9
h3cEOM4/u0DCTFzwn10pnt/lj8hsBRd9f8x3uRby+JT9hv7PkFdrIa2/Chvy
NtShz7iF//49YAHXCfml98lLDYK4+fj97G/kqRM1bla3IK/GIgmTsZWb+Vaz
VZZ3Nrnvc7vhQ3+izwLyteI7Q6bg+lYS8sILkzQ9lGTn89Q4NN9sQ6y/diK/
JdlE7yvvvRT5N5Ddr1u3nW5Cn5/JG8K3VnEa0ecgR9rf1C970Psv8s8kT3h3
e3ViP9n1pevIqv6T0q8MlJkdQ/4QYnH5zgCZBQMW037vRNgxZVWZRdPJIfdU
hHv1ZWZ5kM9wd/T1NpTZ6ih5tu3arFoz5M8lm8T+/ug7Q2Y50yW0/i61jG8w
ldlgDXnOMD9W5hSZuRHk/1jvcrutZI7OIj/9b9lYJ9tWy/8B69obqA==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTPv/B/Cxl8iUrbSYsiWqyS6pOcm+jZ3IHWXL1ti3YiJCaEj2ZZB9
Gyn7Migiy3BDqIxdM2hCC1l+r+s1vz++94977/Nx5pxe5/15fz5nmXELixw4
rqJIJPqKf/33X/yjnLLLKPB/zYH4l2bj/1qvgw8/eTSrpOJfqyM0RqHX9sF9
srldlwjn5M5wCqbNl+DHyTPs7WnJBzgzJtu94u/C/yy3320UnrVu1fj7z782
qOHjmek2ub/+WnwBnhLk2jGFn5e9hZ3jre5G0Mpae4yC7bhvk8//+GtNR1j3
pfdgjz9/LT0L27wNst9c8teKV3BZJ3u3KmV/ra6x1yioV7yceaj8r3Xt4Oib
cz3iS//arIAffqq5JJXHV72A7+Wc8NZzf611slEIsLL3FfPzhtbwoEryaSHc
Lh4NH3SOTWvynflXwP6fu45z5+f1VfcZBcni21N68PMiX/hr7LK5AvNKR8Ju
j2JuPLXkXwZXTd6WOIXHU5+AT3fUNg9mvSTe+43Cg/hbM0Zxu3w4HHvBqlI7
1le1BA737NhyN89XexRWrn3t88ZS/8ewfOxPV3daOeSAUUhrrl1toDWL4eST
ro9fs776Q7D0ea99PdkPomz4S633lW9yfKS/4Uy7+89sKrE/og7i87WqNUmq
wP7YD0fZT9w/jtslD+DMxYpJc9gv8nK4ZJXzVUt/qZocMgruq5UZA/n3Zffg
z42iVu/ndmUZ3E1f55KG2zXuh42Cb7TVqr7Mo+8DnynMHhXL8VRkwV9bn903
l/VQF8N97rxcMoH10zU8gn4cfqBn+Vf2Q0941eVeTsUcL8ksuNuT9YlF/Lz2
y//a4HzUKFxp7lFpaDH7oTsctDRyRUER80+HD7w/ez2L/aDcBpf/qPck/Rv7
ocExo/Bx0uTWj7i/NBhu3cUrpIh5FdPgwIK2h5Z9Yf7NcJp98kSjkfmvwaef
BeyuaGI/CMeNwqOYpt4D37MfJsMVwjYWNKO1SfCL8Joaf37ecAWW71t+3Ooj
8xvhzI72xd15fpqJJ4yCftOw65P5ef16uPLGDTZun5n/EuxuXmpOZh6FndYo
XL70Jb1tIeuZAFdV+MVNZH7JefhuvZlVVvJ85W9gu9aqrExaZXvSKLSX7581
j+On7QBfKJr1fR/7X3YGPuy9oqAVrXwJp3QoDt9g6V+bFKOQ32v0oY2WfmgL
t0uqGeHA/hEp4CLXNsqatDofrp5ozLzIftVZnTIKjfvfHPLLsr61gpOWxAzW
WOZfKKzKeTx1DT8vj4Pru145GEQbqqTi82McU+exP8VS+LZk56ZGlvUtBJY3
O57x//0cC7cOfOOSyvmhOQ5faFTrvW/lv5Z6pRmF2c6FxW85/xTDYFVE0cYM
S/4YuPfGqe2s+fd0R+BOnX27VbPMv0dwy1eB/TvRqsGnUa/omAabub92Edy+
sOKM09zfcBBOnhIYd531FP8LO6cHzPPi+Mh+wcYW40OHsr/1C88Yha2G+dGK
T+yH/XBK3JHLE7ldqofTS2pdUbFfFD9gU9rdIRM439SNz6Iet1ZvfcL5INkL
764zqGu0mf1xFz78NnfrWEs/l8Jxuf1+a9lvWrdzyNPNpkd79q+hNzxwyv7D
ngXsh2+wrvr0pBPcrnc9j/WwS/1pfuxPUU+4SpvDi9P596QzYXOtN3btaF0R
/LnugZtRlvXB6YJROLavfbNWlvWhG3wqcLazF/tVroTX1VDn7eV8V22Fo3cP
f3qI80nseBHXyxstC3NYX1kX2O9tisiF46OcCj/0ud3Urwr7YRN88+mWa3bs
B/1VuNnZ8YsbWfpBdgnzqbndzqEcP/UkuM+NA1MnWK53G+DHTss86vLvmy/D
DYzjpvdnP0oK4JCpTe/3tVzvJlw2CpWGJ5idLde7dfDgC0lDTvF44ouwIfv5
KAnPV/YOruZ37NgNjp9SfMUohI3JHqvkdlECXGyc2r62pR/OwdJVPYedtawX
r+GIn0vz33G81DV1RuH8vzZTW/Hv69rDoVN6xFy11Pc07Lq6ovsMnq/KAHs0
73ekgJ/XVr9qFEqd7l0JtczHNnD4hJRwM+sp/gcuvPlA62zF+ubBSusfGwJo
fbVrRmFFz9DEkupcL1rBxviUnOxqnI+j4E/6zg18uF2xHK5YP+iQaw3Ot8rX
jcL+gIMzs2vyeucDy14+2d5TzPViBHzDye9GL25XLYUjm1zue5j7a4/BTSOF
o2pul7VMx/wJaTzXpRb7Yyhcf8GEeaP4eY0K3hdTt8U3Hl9/GK5cPK/DVp6P
6BH8q2T0uHhuVw/KQB67AS2LaF00nHZ6gmNLW+Y/AA+dOCX+lz3zP4QHRLbq
5lqP+X/C3ca4im7XZ30X3DAKq+9UP6isy/rug4++WO9irsP89/+zy/Dkpzye
8js8rdFs02fur2l0E/O/xm6HXCfWdw9c4Ulr3XxH1vcOPNC2+827DZi/BJ6+
cHjUHmfm7ZVpFO7YHW58mvurbsH3GuX1bMrPa7/CcXYbCxYwv8HlFj4femHP
S1rcAw6e/N58uTbzzoDdu5kaybi/3gxXfHTS9jiPL3K6jfvlQOtSMfNJu8I3
+lhX9OT5KSLhlUlZocMt9d4Cv1tzK64OLXHIwngGj97WkPWRB8HVQuMur+P+
qinwU739xoE8P+1GuDy98eYXzGPQwV8ylA3yXFnPwDuYP95+31wbsZ4RsHBh
48CZjZn3MmzXKXbcEw/m/QB32piQXp3Wjb9rFDLk96OTm7GearhEdrDmupbM
9xZutDn0/H4eX1XrHs5/ZpmjrAnrtxYO6N5KJXVn/c7Cqh7LNzrzeMpXcMmw
woL+TZmvxn2jMPluypwAbte3g2WJmwet92T90uBVwYtPbOb5qV/AHe22brfs
r7PW43r2fLWkBT9vbg2vN02329uc9R2t/5/jG6o+MAqtfH/aOHG72Bd2nXM8
NpXnLxsJd/j+dZHJjXmXwXWS5qd8Yz+IKj/E/cy2IQ06cfyk3vC7Dqd9tNyu
GA6nN3qzqgHnj3oJ3O3xxX4P7Zj3KJxzfceCbM5feYt/MZ/Sv2ddsFyPh8Bp
v7dJf3F90i6GZ/la6W1pwyF4aHSl2BZcD8TZ8JGIjFpR7BfNwGzMp28LC9qx
n/RR8IFd7f6Zw/4RHYA7pmRX+sP+kT6ArWJb7/GRMH857NjJKiuZ4ytJfoT7
4QLH/R9o+T3Yql/u8Z8cD1UZPLbKuckKbte6PzYKif65Lhss478bvrm6epUW
rK8yC86c5zbMn+OhKYafVVg1d7Rl/Bs+wfXy4u4rxRxPUS9475bEax28WM9M
eKtX3VJHfl73Bb4UsuZcbV+Ov3MOnu+6TOs3rDXzd4cdekt/2bVl/unwyzGl
2++2YT0L4dS1OY8tFjd4iuufj43fFR/mD4aTwpd3q8PjK6fBGT9e1Iq09O9m
eEf7MElLzi9p/We4XjWZ+LFeC9ZTgG8+LDTN5/7qyfDArsuFZpxPuiR4Uexx
v4qtmP8KXMuta9lenq8q4DnWv0/vAo6wHtqJ8PS1jQ86M59hPfwtfv7kpayv
+BLcsWpYx96sj+w9nH39Qat73F8/LtcovFG32tKEeURqeJr75SkT2zH/ebjy
oZmjYzoy/xt4SuHy+f92YH7bPNwft2rrMcCb9V0DOyV7vL/C85efgffmXxy9
kX9f9RL2su79or2U+W3yMX4Ha5h6sX8MbeH6p2+Gx3P9V6bCLyPH+o1wYX3z
4cyS4MK27Ce91QusJxV+efzD+opawyfGNg30sdTzORy+9tXe1ayPuYoB63Fu
5MBNln6QwnO2zcoczTzyENjbWJZ3i/VXxcLb3QNv5bBe4kovkTfwwYjaPF+Z
F5xz/9aHM5Z+GAYvqe2mbsfja2Lg5Of1djVhP+mPwMYRbY6s4PEVnq9Qf5VI
doLb1YPh6x/Gyu0t+RfBH6/1mjTb0s8HYbnXoZaZzCv5F87z93+Qy+3aAa+x
vrhtqRvix3ouhKPGhZ8r7sT8++E90aaeSRxfmR7+OCOk3Ir1Uf6An6tWvbhg
6Yf5b3C/0+1u8B7OF+leuN0l0eY0fl5xF/aU1Ki6rD3zl8LxYaWDKrJfdG5v
jcJIT5f3Xp1Zz9vwsnu9JI+DmPcb/GvMq+DdAvO6vjMKba1LUw3dmLcn/KeO
i+pkd9bzJrzdz/Fy356sZxHcPPr1kFJuFzm/x/Xk6vltsb2YtxussHk4+7Sc
eZXwhwcpW6OHsp6f4R1jR//rOYz1dPyA/U05GencLu8CRwW8anZkEPNPhV36
rByZ35v5N8Fb03xNDv1Zz3oFGM8zLdut599TymCHkKHxbtxfMwm2/zTu0ZYR
zL8Bzmpiuzw+hPmvwJkrHkxfPZr17GzE/X7NcRUuh7KeE+A6ioWmtkOYfx38
ctoRXRqPJ7kIN004HbiIx5O/g+d+OV+x6yjWd6wJ64X72w8fuV2cAO+ftvbX
yjDmPwerFqWI34Yz/2t4zC9RWeFE1nP1R4z//ZtHB41lPU/DnbpIbhiZT22A
bwjv1k/i8XTVP+F+Kcj736B/mLcN7GqdvL+jgvU89d/29RHZ+TyeNg9+GvW0
MIH7G6p9Ngr9TSVymwnM2wq+lPY59jbzy0bB3tpTd46PYz2fwYfHLcr/h/lF
VQqNgm3evgHm8czvA49f8Hjzs0nMPwKW7x9gOBDB/Ethf6cHtaKYR1LRjPur
3Wved+T+8pawR8+pZ+eMYf6hsP7TtNwVPB+tCha1yTn0lv1nOAw7txfb9OnB
ejYvMgo/O0Vc+dmP/TAIznIof1i9K/NHw2EOjgOe0qKDcNSRH4vyApn/Ieye
3ka7gf2nk3/B81KvhOTpPJ55AawRKy826cP8+2CPgE29Hdh/8vvwNG2P7neG
M/93+PKiYofN7H/xvK/orxOjzP15PrI98LRRFXo25/kr78B9pt48tZP105TA
Hs5Os3RTmV/yzSgkpMQsSprM+u6Cbww5oc6ezvregvtHbTpeoGT+r3Bql9sl
KtrsUoz1yerJlpG0pAfc57dLachM1tMMf/Zx+z2MFjuVGIU2Xwer8nh8WVd4
a+LUCqW0MhJeGtckZvxs1vMzLHrrvW3iDNbToRT3Z6UmtyGWvEHwguzQG5Mi
mXcKPK+KZ2UvHk+3EW6z6cliZ56/vG4Zxn/fi3fXOD9UgbBdQV7HLjy+NgIe
7L25sp8lfyL87fdc2x3zmf8yPFLUaIFqHuvp/90o3PJ+cf7tNNZzPHwn+nId
Tx5ftA4uO57etQHzSC/A637+rrON80/xFp6S/aFLJY6XOfwHnh+f30pcaOnn
tXBi8eIRs9m/8rP/eeuGY7YDmf8VnFt+vlDCftHWKDcKgfY6/1SuR7J4OChs
9c3N/HvKNDjMzTv/D/tR8wJ2GHL7yUFu11v/NAo731+s05/9L2oDD17kOugj
r0fqFPiDLrF4L6/fulx45NNgxwTaXPWXUdjQ2bHkAu8fJL5wg6IWP97zfks+
EpZlVw7tbbn/eQpL5+acOs77E3Hl31gfqpzfVcT5IPOGy132/CwNZv7h8Miv
zcrfDGD+JXCHVRfyH3J9kVb4g/WyzvPvS3g9ULSAZ7cdcPg966keArtvr54V
y/VGtxjWNcg8d5T9YT4EVyzv+6sRx1flITIJm8IPniymtQNh3cwOrWIs/REF
h0e6tPm9kPkPwJ43bLsXqpj/Aew9OzBCFcP69q9gEjq/zlM1Wc76LoDX2z7q
8JSWJsPGXTnd4mOZ/x7c49mBh+Xcri6D54+ZduxgHOs7t6JJKA/tUlBnBeu7
G541v2k37Vrmz4JLNCkX3q5m/mI4xK/Wj/oJzN+wkklw+3PS8DWJ9d0J342/
6DprK+ubCRc1/Vrj+ibm/wLX732uWLadebtXNgk7I455/NjMembAe0TpLr5q
1rMQtq4waJYHt0saVDEJHUI7/ijh/vJgeKzdJufltGoafC8j8XjmDtbzE3x1
ySNTBeaT1a9qElae96o3cwPzCnCzBz2OTljEvJNh/w7rGv1k/fRJcPPq8oWX
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
v5dtWMLjma/BI2ZsntOAz5OST/DapJ6TX/L5TF6/Fa6HW+amuXZhfgGuO/Di
9VRaOxkumL7DbTbfjyrrtEa/dO0wZGFf5g2A+4cXen3j+0T9RHhFkePrKL5P
FCXC06aKJ2r5vKm2a2MSBrSZfXU436foOsHt9vl5uTOfeRw80NRS/5TPqxI1
PHRVr3uVeD7y8/CYwDpNCvk+0tChrUk4+aFrzDM+T4rD4ZeSawc6+7Mf1sAD
8y+9yeD7V+UZeJ197epZfH+qeQk3Pt07YIzlfaqinUnIUgfEXWS9FatgsVdW
UZID86fCQa4fgzWW5+N8uMPPc9+W8v2v2ao9rv/uvU+O5/tTVRz8Jutoy7V8
XtWehIvejHr2lM+3huewrdfEujmW939VO5iEGie9tpTzfYFMCs9LOne0L+9v
9cdh56CdTh9p0VP47crR0ZP5fkhaqSOeJ4MiTct4PIUX3HDi3lEn+bygHgYH
dhgfZT2H9X0M1y51Ml3h85Bc5IfxbKZN9uTzr8oTtvvUU3GX72O0g+GBY4We
c/i8a1gEBwW3rzGP98/KX3Du/bTrSt4vaZp1Qn2Cn7wJ4nqmHwDPO6vJ78/1
TBQFb1unWzNoC/Pvhz3f5NXcxOcFXWN/PC9bdfjejPc75n6wqO3erwm8Hkvm
ww41Wu+qzfs9+V7YZVtt11jOV9Vd+HBLJy8R57e4T2dcD8qlEQd5fNkcOKfp
wxVduT4rNbDq/IP4vby/09yG6yUH7h7G5yv9N7j3seAvPyzvp2YG4Pw2blw3
hfNZvQPWnM4PHknrbsJ7+nTV7eD9nrkIdgrN3e9OS5wDTULkyHjjNt7vabfC
D6M/+/RlPQzp8PtvpkaLWC9xIVy37N2tiG3M20WGesucrcN5vRFdg4c0vR50
gceXfoQNJ7edbGa5/6kn4H5h6Io4X96fqmVwpR2t6+7i85puEmx153lJO8vz
ewF87kmqbw3L9a52EObLudkHJvN6pe0MH72yrbwTn9cME+CbU3aNbMP+EK+H
eyTXtHnN9zMacResnwOsGm5n/fR+8Oup64N38/lRNA4OPTPq377sJ2kCrIhb
nrOTz3OKc/BHp4RRv/k8b24fjPuHSvc2r+D7HUkY/Nxjwqd3fD6Vr4ZP7u5z
SsW8qtPwxH8yWjfk84jsn66oz7L2RWaOl3Jl1/+ej3833cPz1ZyC65w46v+R
72f0efD46lucT/H46uXdsD4s/fNjGd9367TwldBFD/wt7/uewffL6/1T1fJ9
RpXuuB/8Emu7zvJ9pw88KCY1w5rfDxqOweHfFuZYvk8U58CDy15vWMTvf2QV
e5iEZrIKZXn8/YayJTw96YZjjuX7zqHwjtTlLcfx9yaKP/ChGy9W+fL7bHXz
nrgfnqxsMtPy++BB8Kthhw+s4O9lzNHwm/iZQh9+v6f6Ca/JiD9rbfm9S9Ne
JqF5n7jSXK6HBjkcOdBtkye3ixfCfhO8r9S1/D5jH5xxsEerQ7ze6Bv1xt+7
IA0fSYv6wS4eOVu+83jSeXCltv71XPj9o2IP7N04/NlWft+vvgPb9JyyYih/
zyPp3Qfj6bcxbLnl90az4eSw89Ub8fdRql3w8RcN8k7x92DaW3Bu0wxR+8f8
vdRXeFjdzyP/4ff7mu19cf5JykoKy/fzN+B344yyEP5+QlQEt8w64mDHPFKn
fvDiojkPaN0WePHJJMdRluvBdfiN8pRS4Pejks9wQr4+sCHfn8od+mP/BRf7
v+X3jaog2KA4sOcXx1t89b/taw5lOLMfZCa4nveIO1JeP5V15SbhbvuPAXGW
972BsHGedYWKvL7oI+DxHl07nrC8L/0Aly3e4vOeVtsPwP3B/e814nl91vnD
KYfKvN0s31+Mh9/mtTtcid+nSdbBmWuajP5p+X6o1kDcz1Zt6HjG8v1QR7j2
5ZI193g9Eo+Fc5fbpFXl9zmytfCUN4pqAXwfrzwLDzvaLNTW8j6n/SD0Uyvb
bIcFrO8YOORny8aduD4o4uEl99qdn2y5nqXB5StMfR5NNQf+H5Vt/Ao=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.4226259068709657`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.4226259068709657`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BTAL\"", "\"SPY\"", "\"SH\"", "\"BTAL & SPY\"", "\"SH & SPY\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6679366397690153`*^9, 3.6679367516068416`*^9, 3.6679368593411646`*^9, 
   3.667936970922141*^9, 3.6679370012599287`*^9, 3.6679370989355893`*^9, {
   3.667937301643483*^9, 3.667937329121683*^9}, {3.6679374044328537`*^9, 
   3.667937417822565*^9}, 3.6679375710827637`*^9, 3.6679391073697505`*^9, 
   3.6679900261512504`*^9, 3.667990737274878*^9, {3.6679910297008114`*^9, 
   3.6679910546273875`*^9}, 3.6679911084009924`*^9, 3.667991370645297*^9, 
   3.6679916200646744`*^9, 3.6679917189037895`*^9, 3.667991761806107*^9, 
   3.66799231597868*^9, 3.667992751396487*^9, 3.6679927950963516`*^9, 
   3.6679930328373065`*^9, 3.6679932518651276`*^9, 3.667994597998305*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2mdYE2kXBuCIIootYm+Yta0KQlRsKJgBAcEWe1vXuPYeV/0sqMS2doy9
rCWAIAJqREXEFrtYx14QDUXFBDCiIvbv7Jw/8/hj97qvCcmTM++8Le9vf03v
N9ZJoVB8oP/893/6p5+y1yb8kv6960o2bUWLFrRxoskm+IwYfGZMN8d/tmwi
K17VCa41QrLjDFqVh9a6RdmE/h8KHhxeLdlqJKd4nHo0epJk5Sm05hU5OfJD
zFh3yfoq0TZh/B9JHetUlWzqhFankjPmz2kdulGyLhttrBgDtrQnR4se4dcO
cX4d2vCSHBVafc6odMnm8vtsQmj5Nge27OX8bcmqcPOIv2I4/5/kPUk9u41e
yPlXkueOML5dOFCyWDYWrGgdC/VUDyf7zooIOLyb8y+PhfoZD5Ov3N4VVLsD
19crDqwdQi505Affckj3y7CELHbVz97hwvmTyNlrxWvjSqTr1kfky/qdpSec
k6wfuN8mjHPML9x5m9tDBNlP3zyx3W5uDwfItSOmbVQUSFY8QKt/kp3ub4q7
s0GyZUE82BFHPlOg8dnbWLLqLrmerrWwJ1Sy9ls8fJ6h6QGbMG2as9h+jmTN
bbS+hOwd8MRkshVKeRslwPcXe5LH+vxvku9L6bruBvnO+dQ1979INn4iD2g6
+oiLKNnSMNEmaAJP93X25ryhiZh3FnniXb/dHT0km4vIposZ4+415HrWT7IJ
ffvdce3oL1kZQnbt675ysi/nn5EE31f/L75eUfcgvL+6G1o3jXzO8uDZtOOc
f/tB+HzLBfISbZJ3p9pcT+EQ1nMy2rwFbT1HTnzRKnxKdc5vQ5smHAaLG9GK
M4fh++qqmsGO9eTnTR+W9y2S8qvS0NpcM3w/Q+UjNiE3ZqT94U7J5o7kqcmK
no9WSNacQOuzyA2Fj+86x3F7qJBsEzxjldOi90gW26EVOnJC9a+FfsO4ni/I
1rLbUx/35vZQ7ijY0QatGnEU/l67gnyqcaV4/UTJVudjNmFezQbXuxgkK9Xk
Gl/aLZkRyPmHofXLyMvGd+4Xn1Yg5T9E/rKpXf+4stJ1davjYN1gcohzwGFN
nvR642Jy8Ge3/X834PyJaMdDsvscy+hK+dLrDQNSwOZFaGs8WnkfrflBrnMz
vbnwULIYfgKsiEOrRbTuK/n46apvA0dz/iapYFUMeZzfo2UZKZK1t8hjJgW8
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
9SLL1v+GIWjl45Yw/9WU8gDrPdCmgR4w3xQjyLL5ve4n2tjcE2zph3Ys8IT+
U7Wf/KLLGM8Dm7k/a9rKLqz1Mu5Wjuf+rA9Ztn5Xzm8F459mH1p/uxU8v4pe
XmD1HC+Y7+qiyGlDn9YLOMz5b6Atn9DaWd5gwx6ybD1lvuYN80lrkTfOJxqo
7YJ728tvpmbw+PYvOTUg7Mu9ijzfuUzuEvfR3SWHxzcHWXaeRl23NcyndN3I
bRv/28c/hMe3C+SUuTWn7uvH41tBa5hfaGu1sQsTXFyrus7g8U0gF/jkXZhS
is+fTG4D46G+elu7sPCtWV/RjfP6k0uWl+3xpDOPxxPQik1oY1UfqIelM9nZ
1ijd34fzjiU/nyguf+rEeY0+8HnaNB+YH1o7trMLN5u8H/LwINdzdDuYj2rW
kU+9rOp5dwjPL0+QgwqT194N4vMyWeRrgV4JHfryeR5de6rnqBVh7cw8311N
zt75S/S5yPPLY+SB77b6tV/N88sX5LVZPi7iIp5flutgl58fMqzoAHnNR8h3
77zZFHWJ82eQQ84Ht416zPnLdoTXa9Rk2XpcPITXFU87QvtQl+4E769rRdau
/HdR+WVc/8Hkltuyxj64z/V91Anak1bhC/UztCSn9x2R7Fyf28MA8lBxaP79
15x/Efn6sDM34z7w8/aDHNgkQhGzhtvH753tQuU2We3Lb+P8fTvD/FqxgLx4
8/7EJ805fxxZdl7G0qSLXaj0v+fJ8fu5v+jdBeZDqnlk2f6ANqYLrpdudYH5
h7Knn12+n6/5H1pvQpuu+8H6XPyI1s30h/Wwcbc/XLdc9Yf1u+M9XlfV7wrr
Z/NOcouM51kzc7m/u9QV55vvyBtuDBYrH+W8gRqw4gJana+Bv9fVFLB/0wi4
vp9Elp0f0r5FG6oFwHzY7BcA/YN1PFl2/kq5kbzoaO5335vcHpSBdvl5MtE3
ENqjYiz5U/Lf+8olcHtYT5adB9SdJMvOzzk6dIPrqr/Q2rXdoD0aUtCakUHQ
f+hXBeH682gQrJ/FTLTxn2D4fhYzWXbezvGM7DmqRpFTJK+XnUNo/hOZNqdn
JT4P6k2WnZ+1HiTfbbL6lHkMn1d9Qp7hsSQhbCifV3XqbpefX9V7kr8mV3DJ
1fF520Hk7KTl+gWRfD71F1l2XtbYItQuP79q6U9eV37yw0NmPl+7kKztrMm7
9i+fr/1Ofi2O2Z91js+nNguzC6FL6sZ6pXFeLXlEaEZY91TOG06u6ZrZKuse
540lq0snuXnd4vO1jXvQ/b67+/5Xkc/X9ibPzvu57M/O76X7PZd8aWiFrJL6
knXR5KDrU1JDbnD+m+TNqk3DvpSXrqt69LQLBv/8r8UTJGtnk98vGzCy5VjJ
hr3ksUENaiZMk2xOJztV0lYvjpRs/UD28DbVSOwu2bSrF9Vvw96UTXbOe4Uc
7+Sb9i2B877vBd9PXa+3Xbi6Xbwb/J7ruYOc7zTzdfXTXM+L5D2uff6p9onP
AxeStz3RhFhL+P7X7kN59/rWqVaO8wb0gfooz5PjwxulbL7M9bSTE9PexGXv
4PtfQ2sXhiVVqx02he9/V/II+5Ny2zWcfyJ5ye3RdX415faQR+6/xb7xlxvX
060vzRePLhxZcynn70LeNt/fWb2Y848jj087ND99Jeff8J8fbvZJ9uD2UKWf
XSiO9BQXeXN76ESu8uFY/NZ5nH8MOb/BUNOPPzl/JLnOmJVPaoVx/lTyw9F9
kn525Pp26G8XFuwa+OxGC67vKPKVgcdCI+pz/jX94fkwHie3zF+6Lmemo+v/
ARLDxcw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ysApXxLOvIf3/z9LDBSL
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV12lcTP/fBvBKki0jEe0ptCgttKCaUwrZkjYJFZEWJUsoSsqSpEXkh0qo
7GMpsrQQ0kIUKkulRWZUUykkdX/+5/Lk9gDv18yZuc51Pt/vOaPqGWDvJSYi
ItJNf/3vX/oT6JfKZ/BfoQX9lXaCHJbDK7ouxrqigDxTyr89fxjruE1pfOae
jd2fDnnWBYnk1mjr2x4mrIWPyFYrDA//N4W1SivZR6RF0XAqazvpc3xm4MmJ
kWLTWdfHkVODvoifxOucB+Qqef0hS2ay5jaTZ2do3DA3Yh04Jp3PFL9Ym3hb
F3lNyf+lh08w0mGtd49cL31ryNV5rN2/kPMeKBaWrkX+Uef5TMXgWydLY+Q3
Ih82V3bZo4n87uRrz584fcPx4XVkLeti3XEbWfOGX+AzHalSLjVeyG9Irlyj
WlK7AfnXkKeqzD/4ZQ3yHyIf7ZOb4oHPq5C4yGeci1PTtjmzFtEn73zJT5LH
+/VWkRMYm2J+OPJHkV/mJ3yZEoL8N8hpCm1/ZuxDv7oZfCZHSmbfocPo14Xs
WemxY8Ab+SPIZ/oXRkrgeN5Vsr/B260uQcj/jrw1U2260Rb065jJZ+4OrDx7
Mxj9hpGtlM7WXNmB/JfIZeO3TJU9hvxV5KAeg9t3YpB/gHxMNV9N+gj6Dc3i
M7oHHYpLDqLfDPK4gFLOuc3I/5r8OcNyfOF65P9Dljr++m7SNuSfcon6sDzz
tmkT+nxJznp1wcdwJ/L+Io+waDdNtUXeyZf5zPaCv0zJSeRdTHYzfPhWxQJ9
lpLNlbSkMheizx6ytW5kTL0h8ipf4TPHg16MXjYDeReSH39x1G7C/KlsI0vM
GJqx2Al9dpHr2+MHnB3Qp8JVPjNZPNF4hg3mYT556kWbEAPMO3cLefSHjial
Rch/muy+SOFOryn6lLvGZ7x7CvRkcD5688hDb2cE9a5C/s1ko9suI8dhvcQl
kzVsLOfKj0b+x+Sf98UT2wY72D6Z6zRvLwPuzR+FPn3/5wkBUQexfnlJ5N+y
zztXYz3V55Pf71n3V2088vPJlvu+B6hORL/eN/jMG0P7XQuxvisSyFmTx8jN
QB6RR+S8+Ge3XLEfuI/l0bzuHZZftgB9HiP7LGD0q/G6yn3yJGt/LRH0ZddE
Dpqa5exmhbxSN/mMoY9r6WrMM8+EXO4m8z3EH33eJY8199SNxzwHNpDHOH6a
qvNvfkfe4jOi5uryPbuRdxZZevP6ZzbbkdedHKHvKP5hMfr8TM6evDU0yQ59
St7mM7cEvuFqXOQ3IMc0RB23m4/8q8nrJZgyYxfkP0jOOdro0If9on7oHT4z
x+NV7h7ML0ePXBXYdYOL/YLrSv57KnpFoA/yR5K9VEJl52G/SrtObln9Vlo5
DPOgk81nror/fXL23/7gTN6XM4Ox8kX+feT3L47Iu2P9FFwh30sJbnyI44Vv
yZ7m+88o4fvCHXJof3JSCwgPQL97yZ2S5vxVocifRb4b9kCatxX5K8n9Dh5T
XqMv7l/y+gct201w/SpC7tL+vnCzg6Ml+s0gz378y9UQ79erICeumT3V/9/+
3Ee+cSLMWsoc+dXv8ZnuzGDO0iXo9zz5c1uwxoZ16Lf83v/mzztGBNcn/Cd5
1CP+uqvon6eay2fSP3ybf9Ue+ReR4xc5HhmK70v7Qf7xN0CiAcdXKN2n+0/y
LONJuD4iC8nCDOvshVjPelvJDpo5mX1Y7wWd5JHJu5JL3NGn/AM+w10hvVzU
DXltyNblYRu1sZ/bBZIjLOocn7ki73/knhdDAj/jfDiTHvKZ6d9LLpktR59W
ZBP+0vH/Pj/Qn2yv39eah+uXdpLc3b8iLzEC+QvJcZUp3BTs/+7cR/R5HjXT
dmL/jfMhv350qO51JPIfJ4/gmpTtxP1DmEfm7K5ULkpE/m9kjaBNZmui0OfG
PFpPrhfKPuP+UR9PvnrzXv1HvJ/zkNyrcehYbwLyt5Dt5sX6SmP9BXLyab96
kqEVjDwix8gSg/u6orA+9HLJ+u1NTyTRl3sj+WvXWqcOvB43uoDPiCkmKvph
/RYYk7un+mz8eRT95pANVOJ9NLHfh9eTtxkP/6B5GvlHFPIZRiYtdVoO8s8k
r7PrUBZ5gvxryf2nCz6+q0O/n8hfFnpGDP+Gfoc95jO5furP078jvwF5oktU
kl4L8ruRz/UYR/QLkf8A+cXCsj0h3ehX/Amfud+bGOIh2sn2O4Pc03bG6fhQ
1nYryRJ5urq6Q1iH7ydrKTuaHOpH/mvk6At5h0J60e/0Ipq3Pfc/yfShXyfy
er3KwAY4LZxcP/YZfz5ccZl8s0qtbW8p8r8l573d4RPQhn5XPOUztott9nb8
QL97yPY12rFvfyF/JvmE6WXlygnI/4Z8aPiNZalKyN9Pnq/8lOerxrp+9zM+
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
PjU76ffGT5sip7OYhxVkj6HuH6ajj4o95Og15iWjopA/i/xQsX5CZwjyvyFz
5VO2vjuCfu26aL5k+jvVTqLf3WSFexoj2pKQ/yK56Jf41Uc3kf8VWfpM7j77
XOT/TZYRsZy4pQT97uzmM+Xuv/2NGtBvOlmho3bi/hbkL/v/Tusldz36k5r0
HflVflD/ikXhap3oN5Vs5RR75O439PuCrLB3aHEB3l/QTXbfZJYZwUd+xR56
vXn3Q+2vyL+AXFjWF76xC30Kyd67JSJn/UFe+V76/XfkTPkifD7Xmhzq/FHB
ToC8AeR1eg6Oe/vQZzt5Kke9wm0AfU78yWcenB32+JgQeS3JBxtO784a2s3m
9SN7afRcnj2EdcEJsnS3flFeN/oc/4vP/Pj6QevUO/RpQZ6w+NCubHwebxP5
jMa9sk3/8ieSg9Yk7elAHk4e+d6brXH5yJM29zefMV8X9OoC+qvYQI4SjpfY
3Yr88WS+h7vXQ0k2j94DcmRjqnZaGfI3k3UfHHn1G8cL1/XxGeXU4K7lOF4l
lmxdvTlYphf575HbnUavM69C/i/k/2aPKHv/AflH/aH9w//2rle4PtwjZG1Z
heSx//rNJg8PnVwifgn568hbCz7tGzaKzVcxvJ/PZEbENb3A+0VmkrPT/nT1
38U83CJHT/ygvOgy5uEj2bRm7LHFWB9Cib+0/4uXJZ9IRH598q0fUe869iH/
KvKbF2fz92O91NeQq54VeotfRb/iA3zmbdiD17KYN64uWUvdw7X+I/K7kFdk
B+XVjmTzpkWQa3bL7jdUR7+ig/T7d3OiwaHJrN21ySZCySZ3G8yHI/nv0ob0
eAPMRxj5ZvQ161dzWAsvkc0Wjw54vIJ1uIaIgOkxmnK90Y01z568P7nGNtqL
dX0o2V7+rWKyD2tOJrnN9ozPgu2sua/JYypiZh4JQr/LRAVMX7dfV9ge1iK7
ycvTK4ebHUT+C+SCBSeWisPuL8nNkSFOsReQ/xf5+YnHXJdrrFWCxQRMw/Uw
mW/nWdudI+8a09xtfhn5S8lvHpYOVb+C/D3kh7l/FJ2zkV95iIDx9bB28X/A
OjCFHDtBI/L5M/RbTD5iFjph5Wvk7yLP0nrudKENeeeLC5gaZ+HDgpE/2D6f
kqt+dSbO+Yo+O8g5H687anUir9xQAfPS/3Z+80/knUceaD5l8/wD8m4mB853
8kx6gz7byLmbDVpq69CnrISAubxkWU9yB/Iy5IjNvZ8PZSKvL7nXMzPv4i3k
TSJv1F9gV4DPc5cZJmDuybw8nByNPs3JPnHejn9dMA/e5IKrz6Ml0J8wgVy2
pWfZiR/I/4gsd7BBPEaMPV/eHEkBU+wdZDdChHW9F1nbTf/rQ7yfE0ceceb4
w1Ccb2ATucYkVl/PgH2/yLrhAkbTb3Jhoj5rvaPk+OzAcn0F1u53yRM1o4Ii
/iDfyBECRubi4AWDf9c7mnxwoDtj6A70d4d83fKZqb87rvdnstSYl3+qME/1
kiMFTLXrpYEvg8hnSOY80PRVFKC/m+RVfKubv3+hvw9kfocgdvlxzKvEKAFz
U1nTy2g/rr8emTvbuX/hRfTrSh5rnO4w7AX6GjJawKh/al4R3IC8OuRAq2OW
S3OR15lcFiPsH96NvPvIdYX278RU2fPnikgJmMf+Hd+FtqwDtciDd4XK1k+Q
14GsLVkdNQzHV+wlj1jl25zFQb+XyEtPr1Y6iPOJmzaGzseiWezJb/S5nNz/
OyTmliz7fmEIWanQf24m8qpkkPU7a0Xe9yN/BVnueLlnUA36XMoRMB1Ldrzf
j/nk7CIbNT15ug7fzz1PXqwq6jwoj/zl5NDdY+9YMazTfpIjuI0tY1bjeqeN
pevxS1mlaAPruBLyyFgzlZW+WF8/yNUnU28fDkFeJWkBsyfN4bVuFOvws2S1
SJ3oMDvM53Ny+VTjY+vRX30neXN5WV2nNWuOwjjaD57NsW9egbw2ZMOQ3BPH
17OuKCIfHligFBmBPjvIfoX2fzqCMK+TZATMbVXrI/LI625FHvusVkRzN/L7
k73nvgw54cBa5Ts54dWoDKk1rO0mjBcwlhsU7/WqID+XfNk06bCDFPL7kEvy
bR291ZD/OHn45WsTV41Hn+MmCJjkb1ctWszRpxl53mIjnuw85N9IjtpVlKKF
8xFJIFf3yL4fvQn5H5JP3K2967cX/c6WFTDvPPYXDgSj3/Vkb7NpP0f7If8x
sp+e9O62ucifS+aG5kbfmYX8jeQvO/d/nzcG/XpOFDBOPwab7Gai3xjyJSa9
PngC8ueQ3yxuHH5uKPLXkx/mOd58Ogx9Hp4kYIL3rXOSm4w+b5PHhDqHn8T+
UPCJLO2/TsxKHXmHydHxJS+7dmkjrwH5erF/Xb4m+uSRI07vzAjB+qqvJaeW
a1b/xfxzhsoLmK1CJ8t905F3Btlry3eDHXrIu5JsPm9wi8Rf7AfV5L4/flnZ
yKsnpiBgisZXZV6YiPzTyfZXvo/L1kJ+J7LDw2enLY2RP5zsUiYhVApHn4Pk
8KZFvhme6FNTUcDYfPs7JXg58u4hi44alXUN38fJIk/eddS3dSz6m6okYKL3
nmJ8cT4VdmQfh9RlCVXIG0KOnDf+pFUJ9q+LZMOiKdtie7F/vSJf9ruRrzsN
fS5RFjCechzNNfbocyf5Z3/78dVWyJtO7lKb3DUJ6yu8jPx2rV3JOcwjr/f/
m7tdRcB8TJmT3cdFn6nkIcLBGUvNkP8Fud0j6H2QBfJ3kxWiZXYabMH8KqnS
fnpjfYOME/p7RrZys80wmIG8QvKxsqjt472QV36ygPl1RKrPH/uLnTX5/JCc
HyYL0ecT8uOO738tXNFnO3l6Du/eoWXIO1FNwLSa7rA8vxJ5LcnDdOpcBMiX
5kee8PrpgR5cTz0Buaicu+E31qf7eHUB41Y8M24H9sM4C3Jkil67DdZDwSay
TPtTSR1T5E9U/99+mPw5RRF9Sk+h9fW8zvQdri9vLrnc7dfFln/7wQayfa3J
4Hgd5I8n36mbu7oI58t9QN6hVrhzGc6vwnSqgNGZ9bhUayv6XE9O4l342LYd
+WPJR014PQHYL9zvkRfY/KxvNET+L+QdV7T/hiKfisc0AXNhTOUZu5e4Pxwh
p0Tf//gb94fwbHLaQQUb5t/6qyPfd/h1rRLHBx7SEDCz5y14KIL1lnaLXLB2
qmg0rmfFR3LeRGFudQ/md5imgDnnEjfTdRzy6pMN/xS1crCfF9wgBy2wyuaE
oc8a8v1JfcdzsJ+piGvRvAjrGC/cP+x0yZkHvzUFZ6JvF7JrlOosuVr0+Z6s
7fL7Q3wH+hTVFjAHvo7s8m1Dfm3yMrX8e2+fIr8jOUzSdYZ5DfKHkQNc0jkv
itDnAPmmRX/i0Sz0qTGdXt9U9/AOji+wJ7f/5tkmv0H+UHJdrNsGsXrkzyS3
puzqT6lAn1N0KK++nHXIfczDMnL/lWehTteRfzf5+/ZJFddeIP8Fcqf6Iokt
Ccj/klx0eahmcjLmYYku7W/TpO5Y5qPfYPLzOmmt2SeQ/xzZJdhIZ90V5C8l
dxSfkf10Efl7yHJb2jNl8Lrdthn0vHf4uLrdc/SbQq6fon36M8wrJqeXzhOP
fIL8XeQhZu93LMd65yjq0Xq5XZZigf027TQ5OdN7OS8OzztPyWJJ01O+7MZ8
CMnLx4bHeMggv5y+gNF4d4sngfl3n0f+tsmob8gc9PuYPCrTVe0y1qtKG/lj
o7zG9zzMs6yBgMkfMEi7jvUbzpDd/mo8VJmC/L5k74Wr28bj+SdQxpDu/59H
SQrwvJNmTn6UJ9o5Dc/LFd5kf81A7be4X4kkkhNXt2SeM0KfY2cKGD0ppbrH
WM8Fc8inXEY97sXzjNCLnMxsEh/mjLxx5Iaf1QOj3dD3fXLmi8H96//dL0xm
CZjjCT0f1+N5g7OO7BLbZHke+zf3KHlu6zXdQfQTeJd89Zzsk1js52kN5PaY
CB0nPK/ruRsJmD93NOO68fvDPZqcPi7L704Tni/vkE1KX+e1/Ls/fybfGlmR
a6iB/JLG/9s/7e78RL7wg+SJJw69EMV+zrtJjmz8UDsd+2/9B7LcYMeIpRuR
X8JEwOzcMlWxDc9bXD3yK7dkyUU+6Pc6Wezugcu8Pei3hjw46VzVmZ3IP8SU
nu+l9XnFeJ501yHbmS+y04xH/87kCWvyPnbfQr/vyJzCuIDcUvQrMlvAPJvz
5fyUQuTXIkdcuzL+CN7PcyCPyDRVONuK/HvJJSflV1qO6GH7/Us+W/kky9uA
ddq0OQLGdPWjcMe5rCuWkwdaXSZkmrMWCSXPGeHnpWXCWi+D/OKs6xSHiawL
1OfSfO/hMLEzWAuXktWlmLFGs1ir7CJfm2Sop2TG2u48udZVW95TnXV4OfnB
+avbmqVZcxabCZjRmgbq8/7tdzvIASLMKpcWzEca2fJC9fvhXzAfJWSboZ3j
YurQ/w+yR+T9959Po9+t5rQ/yuaPl3iLfs+SmzVXFKS9xHw8J+88f31exBjk
7yRn7MrYIUAeFQULATP+wXXfpXqsef+RI9+YRv4H1xeRyxdqBPThfDgd5JTY
agsGDrTiChhBhNMcHU30+Zi8xNUriFFBn9/J1zqXlyjPZ+0+gaF5tkyNPzSd
dRyXbC8s7T3ai7w+5LFVcUY9dujzG9lPfYt+Lxd9jrMUMJLHs0MUfZDXjCzh
f1Kx5F/ejeRWnruG6kzkTSBXxzN/ZwzBPHCs6Hn4aWnJgamYh9nk3jkZQdWG
yO9F1rxm2lPkhvzHyKnXrEQycX3dc8kdCZMVfouhT+N5NI+9pZfEVdGnJ/mR
RsBgtDHyx5B5N4donca8hOeQv7r0T/mLfNy11vT7ZkjAyxtz0Odh8t1dk4u2
BiDvbXKKnKnDzhXI+4nMGRUb3zsN/R2wof1H631lSTP645Fzf2o593ViP6gl
J8zKavqNeVMZOp/uV3/6l0RdxnqbQR51riH1EO5P9dfI26ZYNB3F/ZJTTT6w
xuO1Hj6fK7ZAwMSqrTL/fgDzOp184JBs/rkHmFcnsths0dtPNmM+B8k797gf
vo3fj3GaC2keVocZn8DzUcEK8prfW1u08Xwu3EO2NGrzefMK67+fXJYTru36
b/1PtaXfTxZmHxuxX9TbkT3VdjSex/MGJ4Qs5XpJrvAO8l4k/4qKv5XWjfWj
toiefzT7GrQGsH8tJeeuTspIw/OG3k5y6+Ya62X4fvd08oa6iOvTMpC/jBz1
2Tj6uAv6XLSY1vM3kfMleH61205+tz0wLn0p8qeSkw/bqpbj/sB7QZ51W9Ti
HPbT+m6yTtZAwPtt6O/MEnqeU+v8FhqNvM/ICdbnuubwkLeT3Ps0iyeThrzy
SwXMZ38d48P30Ocp8smgeR9q8PwifEI2mlSS0YTXVdrJA90iM3OrkXfiMgEj
vmDN7dBB5LUkt6vPvdOG/YZTSJaOSAo89Ah9CsielttPGo7GvI63o/uh/9eF
538ivwV5796RXikfkH8T+bFgSvPRf322knNk8q4N3kSf0ssFDD9H9JMBXi+Y
S465/mXSd+x/wg1k106fweIG5I8nRy5Vzb8jQJ9j7AWMrod6iwaub70pudw9
pvrXBKz/9WTl50uP9mO9c2PJInURV27IIf89clVnmrKTLNa/8Qq6X354oPNQ
Aevfg+zhFeW2GPuZ+xGy3nH9gRoNrL9sct2mKGkP/R6L/wNdKRNN
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTO3DBvCxtCmJSBIKRUmN7GtzSPZMSso6KFtkKFu27GtMqeyMsm+N
JTtlLyUVepKkZJ2RpkXKUu/1dvXP7/nD4/s5M+dc57rvc59zhvWMheP864tE
ojL88f//x3/y+UfVAv+qdcEfymjYKt/baGd18f87PREeHOH1NuFvrRVzlWph
zPZ1U+P/1TpxDzxANku2gdbehc3M1hstoa2+wg7Pj2eV8PvSZsfUQu7AWNUD
7j9fAdvPWbZvEreb3Ia1hqecenG75BNs2GDB5d/cn7xJjFo4285/6Cda2Rd2
zzg5Sv271uIbsPlyizXLaNkHOEwrufiggvmNYtXC7O4xBak/mb8XPLFHt0/X
fzG/DI4wMfo1lp8PfQ8/8u3rerOs1iqD42phnf0cv3B+P787PGhugWaqlvmn
wrPbZYVe4OclW+GrrxwqncvZp+4JtWBjbXjShttF3eAZUcf75pUy/yQ4oqao
ZWkJ82+C/074+6TueIo42KS43x7PP+zX8STG4/vQP5U8X6kPPLNZmFsNt4eu
h0f3XPntCrerzsPFF0ZLdnN7fhascs+Ye6yG/Y4/pRa2ix/6dmX/yrXwlCW2
ZmLOj/QzcGJMrNqlXq1Fr+AjNqezwrldXA33dsrY8ad+rRNXnVYLrvLppr8a
1Fp7EjbqtTjKjNutMuCOv7a+3cjjS//Asu1dh37l+IbanMF4dxyz/0fdfEiD
NWtK/rXn8eSVcP7f8Cud6/K2P6sWVg8s1gupyzsa/i2JdOvF+SVLgR1bvZHJ
ef6Kn/Dh252jBlZxPrQ7pxaGht8JO/aD82EEXLDyddlb9m8VDJdeTtUz4P5U
pfC46FfBbel8y/NqQRGpqGfB+WMyDE77LsqM5f4ki+BcD48Odtyf/CBsdG9K
1RzOH5HFBbUw74LTmVjOF7ErHG3QJvEm88kC4bxOs3KCOX8U++DRF3eOMlUz
/4P/9y7LYzEf2adwEfPFqH0Xt3z2GQAHFl2e1uMT80fBSa4h7tPp/AQ4qoXq
1u8vzK+G/74eULCT+1fOicN68G2C095vnM8R8I8nGfIZGua/Cz8uGGzxm9tl
TVVqYcWTDOOPRexzN/xXJyay4jv7vAVry9JC5xYz70e4cU+vzqY8/1DjS2rh
WpbeoIscX1Uf+K1tsHccx1dyHXZfM+fTJM4neQE8Z3rD3985P5WGl9XC5lPz
Djo35HzoCT9vMvNZs7r5K4PzTYOkIvaryIPNY0/1+sH5kah/Bccv1D1+kHm0
zrCrZsme25XMPwWO2OW2xpD7k2658j/Hz9e5qhZa6e00taVNxLBXkf5qPeaV
TIQLnbanrmc++Ua4zfCJuUn6zH8RPnTOJ/YtLe4aj/ViXKjXxEa1lk2AHaXx
By7o1VqxDn6tWnr2sy6vv3Ow/sJqwYDf176G9/f/lhSlU+tQr2tqYXzjhu92
8fuqNfARKys7MfeffxpuqjV7MJ7fN3kJl820Ly/gfJf8gyt6D/jaqu56W3ld
LSi3bDy9ndev6CTcOdFkR5u69SEdXuc7Q+HB8ZT9hidWbY4eyPNXdLyhFtrO
u786h/msYuHlBYvyPjOf9Dl8LeDXU/O69fkXXBC6rnQdx0tlfVMtHNUmijN4
vPxRcMgPqxHJHC9lOWx3bZv7rbq8bW/h/qK77E8s1yfRCNhsfEhcJo8vDoKP
6Kd8tKATS2CPtDFT3xqwz9a31YK8ZIjbZSPmdYO3xk76tZyWyuGqo0tPXKRD
D8DfPW49PWLIPlvdUQsvI/ZEutOSIXDUnkMrvxtzPiyA39zqafy+OefDXnit
Y9ddI82Y/z7cwHiKqozbZZK7yL9eWV9hyj7nwS2L7PPimzF/JNzwVk6HSBPm
vwdbprSJGtCC+b/BNdVWE1O4P9Xse2pBGjknviedHw5PfjM5OagV89+BT0od
loeZM/9nOOlao+xfTZnfJAHrQ8svNl2YV7Qbbu78ujqXxxffhL8EK502cvxl
hXD1r3bZwzkeisaJWG+GO7ufYx+JveGYh9snPOH5SK/B2Rb7JbEt2W8+LG0f
udK9Ln+j+2ph54So1pdbM38PuGmAkNTGivmnwYdOrl4xrAv7fQe39v/XrMqR
/eo9UAubzj8KHkuLnGHBf9Z5VWfmnwz/yN/3K53fl22GvaZ0jh7enf02fIjr
Ibv0Tldn9usEC98+Djnfg/l94e9Hwxb+5udDN8C6EREBqm7MfwG2rS9Yd+R2
icMjrN+R16970XJv+N7x4l9HuH9lKJz134Zj7+n0s/DHImmbx+2Z/zXcyjoq
KsGB/Xo+Vgsf2hj0HUwnrn78P9u1p+BngWW2/3ozfyZsnnireWZf5v8Lz9k9
6nrP/uw35AnWJ8Nt4tbMb3ICXv8y7cN7J+Z/Ac/T2vTpwD7lVfCeFNXT4b2Y
v8NTtbCxm//V2f3Ybwzc+0/HK9kD2W8q/MMy5GS6hPkr4Dn7/zQNHMa8I5PU
woF1G0/5jmGfyfCIGZ3rDRnBPsvgsc3WlbwbzrxtkjH+Zs3u7OZ2k+HweJsb
CRncLlkMZ2VnrR0vZZ9auKj/FqcGXuyz9TOs16ue3jHxZN6hcPOU880qBeZd
CH9qskrZaAjz7ofHmcw8NHow+zRPUQtq0wltdJhfOhh2Sn0dHOLK/PPhQW6b
T7XzYP5oeP0r6/vjeX75ibBrwp2Fsgns0yUV83uH9X+7Z7DPuXDrRWtU32jR
Pfhvvf2i8/7M+xW+W9x1yFJuT5z1XC28y/gc3Xo6+1TA/c6s+HB7LvN9ggtd
ZlzpPo35mqSpBQvP8HqOPuxvF6zU0Q0+yz4kN+ApOh0qB01hvg9wy7Vdk2fL
mM/oBZ5n/OcNS5nMfnvBs7MfHJVw/7J4+Frzdlbu7F/xHv6Qu/ecZV1eg3SM
97R3Ny7NZ97ucPOZOhs60lZT4X89azo99mNfuhlqwaDgrfjNAubtBt+vCLyx
Ts68k+BVM9oGLOZ2+SZ4Y0Oftqbe7K9hJtaXLjc/V49mf46w023bnxNomQ+8
+fTjtHiOv2I9/F/h/Z1t2EfieVhi/rM8mOcj7fIS623UiMsX+7DP8bDbiWsB
s1043mthl167Gn/m/M8/Az8ZoEgurpuvr2Dt9XpX/k1kn+Ne4f5a/WFzGvtL
XwWv3f3V8ArPR3QK/q3zcUVYIPNnwPHm95xCljL/H7hil7KXOIT9HX+N97sT
Z5beX8u8abB03rRpXsuYtxIuTfsdsGgl87bPUgtTzySYm69in8fgho1U791D
2WcKPPhYtfgt96f8CXcf+m5xJzq93X9qYdLuTaP9tjDvSNghI+zt1I3sMwle
bDTxZBPuP7EUTpY51xhu5/hbZquFrsP67fcOY/5h8F95sDyEli6ChwhDHodx
//nF8FK3Ue5tt7FPizd4Hx6yTxy0nvld4XsLpiy+v5n5A+FdLdZfHMS+lPtg
q6dKO8O6PlvmqAX/wDdhbdmPTIAbG+wQauryB8A/Jg87EM7zTYyCo42GO+fy
eNoEeNCApF7FQex30FuM72l5fCtef6o5sFmVMuIR53d+BHx3SS/1G15fJndh
owNlO2byepR8gQtTUs9YcX6k++eqhb57KiSZvL5FCnh/4ZxnnsHMfwu+Yb74
b0Fd/o+wtcKtcZeFzG/8DuOjG/TxMOevVRhcntp0aATXK+l1+J/bB43InfkL
4C9b8fDI46kM83B9390Ve3gQ8/eE766P3jWz7n52FS4t+Ku/iPcTZR785+ra
Ly4DmF//PdZT8Y+m70Yyf3d4VbOtu79xvU58Cxd1y+7Vi+ulVidfLYw0b2k7
zpd5xbDxjX2ha+quv4nwntbD+nWYxLwbYducBf2W1l1fDQowXzNE86pGsc+u
8NHrLr4tuP7LJ8DvezVZGcv1V7kOfvp71j8X7i/9HJzu2NfUkuMhs/+A8bt1
tnoDx0vhBY8d0npV0FjmXwPXqDSeI3k87Wm4Xar1g/m01Uv495Id9W35eZVH
IZ6vbbxSorge5q+Eo3z92ldzfTU5CfucdvSXc32VpMOlX64MC+F6JP8NDwoe
OPU0+xGt+KgW9lasvfCZ4yWOhf0fLejvybyy53APsxmdwmcx/y+4Wj+n/xCu
L4nWn9TCiZV5/u+WsM9n8KuVU930NjFvOby+YOv1F1wP8tt+xviV7nzzpu76
GwEfsMwpW7yVfT6FB3tnxy/g9ZpeAifN/x3Tm9ejyPILfGOq2awdzOsG/95Z
5pMUzbxyeKK2pqndUfb5A86dqxvc6DD7bPUV+Xr2mOqo5HwYAhceinPfw8+H
LoA3b5944XsE8++F/9o1+ajayz7NvuH4aweNuMrjySXwvl7nX/fex/zz4JGu
oYVy7i898tv/HE+UAHulzyr9QSsGqtWCply+cPsx9jkbjk/dItnA7dpw+EeG
Q7bzaea/A6u3jwq8fob5P8PKF3s+O6vYr59GLVw0sKsfepn97oa3rix+/j6B
+W/CHp+ndy14yPyFcPKAXvUXpLHPnd9x/jveHuiaxD6vwVMuV31xv8a8+XA7
nYlzxt9n3kZFamGlsHVJzG3m7QE7dTn29Nhj9nkFDpzyrqniOft8B89/o790
fTLz6v1QC3EhkVv78fgmzrD649WwgFvMOxmOnDQq/lQm+8yBVzp89biezj51
irF+XbScWv8N8zvBRmVlF+w+Mr8vfD65X+H5AubfACtXH/WTvGWf9bW4HqTR
CQ3esU8H2P7lkWNXs5nfG97/fJ/WLY/5Q+Gq8vo5H+8x/1l41Gjn8hY8f7ld
Cd7fBndbW/iA88ETDhPU5c+vM/9q+MdAwyEzaNFpuLP9iJiZV5g/E+5o32eC
xR32Ky1VC6eW5ASNeMJ+Q+BL807f/s5+rU7AZt6nNvi/Yv4XsDSgtfwQzye0
Cr4cqf3ak32YLC/D+h4Wk/e5mP3GwL5PEgYkVTF/6v9aWQEbdy1ptPgv81uV
4309yShiVA37PQrH99yekdawpLbfZLjUUJb3T7fWiWVwY7vdrRNobZufeP7e
r0qo0Km11XBYvaQ6oIVRrfO18NyCvC1Kk1qbtK7AeI36IWzl5yVDYduJRi3W
8XjyhfDjrXMvNOD3RT/gWaE+ls35fbH5L6yHnWZata5Xa9lg2DLw5ZQnTZh3
Pvz7qsMun8bMG/3rf44nbVGJ5/cETbhOBft0gV0qPtn6NqjdrpoLS8PrXXTm
+eXvgQd0k+bcbcb892DjwFX68U1rrRxQpRZyvj/vKq5f6/RZsP+aSaH9qzkf
wuGTHQyP2DKf+Db8vPPHw1M07PsTHLFtWcn5P5wPM3+rhfy5D8ZFVHI+7IIn
Zw8xfs3xkt6AZS+Xx3Xn/A/9AP/taPG+8QfOZ6M/aqGZfvK3orr5sANOz2x7
O7WI8yEeXnDl8ViXLM6H9/DWkdYjvcs4Hwz+4vtlww//5PUn6gFbWxz4JeF8
VlyGjY3/u3D2AOdzLpw9OfZZ5kHm1/2Hz9vff98/nPm7wZ/S5YUWvB9IJ8G6
znEd9fn5/Ddw2OWmrx3iOJ8bVmM9+bP7z9X/mN8Rri9vXuH+gvl9YK8C01bD
PjH/ejgkUH3Zn/nF9WrUwgtZ9bVMWtYFtlgxrXeAMefHeNgqccjQ8Lr5vBbO
m26XMasR5/MZ2O7dy3sTO9Q6tLNIIxTNM7+20ZbzYxx8bXSierg158cq+KHf
Jp1F7Tk/TsFmsa7t1nTi/M6AX63IMj9ow/kxtp5GmL825vX7LpzfIfDv9wkn
/nXj/DgOP942zH9VD87vNDhwQP+PVQOYvxJ225Uec3Ywr7dl9TVCbgvhRg63
S4/Btu6ful4Zyfwp8MJzozrZ8vOqn/CRERXXHbk9v10DjdDhQ3zJ9zG8/o7A
Y0WzPb9P4vxOgiM77Gt7axrzl8KJl0SH4gKYd1hDjRA80fhdj2D2+RiuXGLw
xGEq+yyG/RJvTz/mz7wWOvh8owPX1sxlXlf4u1fZbac5zBsIV2RqDqymTYrg
jqVDs19OZJ8tdZHPdPsCfxnzCnC+9b2mNQLzBsAj3nj6lfD80qPgFp5nS6t6
ss/mehphoFnW62scL8Ug+LG83sYnXB8S58DZITOtOnG8tRHwjRep7e5Lmf8u
7Dao0Wtd5lH119cIS28bJPvwfPP9YfX6mpstJzC/Av6kfjla4cO8H+HJ42Qu
J2Zx/GcaaITzm8rT9GlxGCz9dNyygp+XXYf9wpwaug1lPsNGGiHufJyuyIX9
bYdHn8icmlU3X6/COl45M8IMmS8Pvr5hlV0Yzzdf31AjHMiZp7/Elfm6w0Ye
Y65V92Z/l2D/B+kH3Tuyv7ewydGDF4Jpka6RRrizt2x+eSvmFcP7h9b7/Ifr
n2wi/Lf44bdyM/bVoDHmW+6M4dM5/6Vd4f8s04a/d2TeCfDAdnGzt7Bf1Tq4
XIiaFeHF8RYZa4ThIQrBaRz7s4dXjngXV9COeb1gW7+VLwa2ZN418Nk+d3t0
smPeM7DlHx9pJfMqOjXRCNV9PRWPuT3RA35o4LHGtz/HeyXsLi1dfLYv85+E
jXNHBPwdwfzpcEzDrAVzB7FPdxONsDoj94J9H/a5AnZ8uVTWYDzzx8LOA1bv
jZjM/M/hwddMnn1fzPy/4I/eFbeabmR/yqaYX4HaGuPNzPsMNpieoizeyrzl
8Fbd6JmlEczbtplGyLObc9D4GPs8DLe2upu9NoZ9PoXLsw5mjjnOvCVwUY97
Zo2OMq+lKfovudX3zBnmdYM/L16Su03JPh/Brwt/N/K/wj6L4aQLuZ2T+Hlx
q+Ya4WmOsD2Zn5cNgVVnKhaf5/EUC+DKnrIvdmHs8ztcHRQupDK/1KwF5ufR
CWtOcj0JlcAzxanZg3l9q+bBM6boDj0wn/kj4eJzoje3/NinqZlGmHOlTZtR
a9jnQHhdgPJE+Drmnw2nJvWf1yyK+SPgiC0nM5btY/478Oq0DT4WJ9hvv5Ya
4U3Zvwan2afWD84I3KkSH2D+3XCl4YWrWXXr1024wvCl37sZzF8IPws/8zRz
HvudYa4R4iMcLk5nHslOWFn2TTOR5yu/Bh+3OnfNid9X5sNN5hZpnGnZtlYa
YWTe4fBOQezzCtxq1SsL34XM+w5eYJ++4cta5tWz0AgFfi0fbt3JvM7wQ7nr
zI+R7FMFJzu08M3czT5z4MkFk+I3b2NendboxyWpcVQ08zrBkzc/6r1yD/P6
wumn9AojOX9F2bChq8N723D2Wd9SI+h9OGt9eT/zO8C+kfW7T2W/Cm+4+8xL
L09fYP5QOM2r5b6nz9hnDeyi3+6Q+DH7tGujETY5Cs/q32fe1fDrrF2OkQrm
PQ2XLQztZ3qe/dm2xfk929T5XBzHXwqPO9P0oA/7EK2Es10WZdasZt4TsGfb
seG+25n3Bexr2CGzbv5qx7TD+hew223kIfa5HFZ65AriuvkbA/u9TnXps5d5
U2G9qt3jh8az74r/tWSJFe537pLFOffY51H42JSiu+fuMH8yPHLT+nsO3J5e
BudO00YtTmb+ttZYn0aFlox8wv6ewKWbhEvL2adWC6v66wQ5pjNv6/aYr+ZK
g9EpzDsULinPe+V6l30+hLPzbXoeZt8mP2Cby61amfP4EvMOuF7t41aIuF0+
GPbpEZKxl+uBcj6s+KKuqeLxxRp4Z1p1iC+vL1mLjhqhbZOlwV6cfwoXeJrj
2BSzy8w/Fw70uhr09irz74Fjwq64XuD6FdrMRiOYN51nZMn9qQbAl0fEiXvW
rWezYNPFH27u4npkEg7LE3POGnI+SW7Dnr7bg17V9dnXFs8Hi1Z9uJPGPv1g
4/vrolJeMP8u2N/xT7nrI+a/Aef0qrE3TWT+D3BMUJZwVcV+p3fC+c8f9qgf
55N0B2wz3DVsHtfz0HjYq/fo/mFcf1TvYY9JAemGvL7kWzvj+azPzq8def0o
L8OLJw7eO5rzKT0Xzplbv4db3fWmZ6cRTtb4e/aRM283uHyBSWMnXs+JcfAR
27eHO3G+ad/AZS/STmgfMG9De42wXtZtgzXHU+oIPwlKnjzjI/P6wDP6tntm
oFda2+d/8I/kDx1aG9daUq+LRljVxGL9gMa1lneBezvGTEopYf7x8IupNi7T
vzH/Wjglv0Lvaib7rIYzL67enJ3APjs7aIT2Rjk2c18y/zg4cn3Jtgc5zL8K
Pr7K2tn7M/Ofgs+XzFFlFbJPm64aof8O+7vNczkfxsKVkx4cP5LN+RACV3S+
9qGJmvPhOGzkPSZlFMdXngb/ahnvfZXri2iMI/Llye2i37LfZXCkeoS4G+eP
7Bg8z6SjsiGvP0UKPKBULVKy38SfcEZ984i1df0GO+H+OCzob9F/7PcIHH9u
wdWHvB5VSfDbXNsA/brrsRR+dStprT/Xc5M2Ylx/Ce+DJ/D5TnkQnrJX3SI6
h+9rj+HeA6skWa/5vqaFXSWhmdP5fiG26KYRJi7c7TGVzx8yV/h2YWqf+3y+
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
1Ed28PuKeHhg5rSzr+H/A8zUDy0=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.7297657129596495`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.7297657129596495`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BTAL\"", "\"QQQ\"", "\"PSQ\"", "\"BTAL & QQQ\"", "\"PSQ & QQQ\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6679366397690153`*^9, 3.6679367516068416`*^9, 3.6679368593411646`*^9, 
   3.667936970922141*^9, 3.6679370012599287`*^9, 3.6679370989355893`*^9, {
   3.667937301643483*^9, 3.667937329121683*^9}, {3.6679374044328537`*^9, 
   3.667937417822565*^9}, 3.6679375710827637`*^9, 3.6679391073697505`*^9, 
   3.6679900261512504`*^9, 3.667990737274878*^9, {3.6679910297008114`*^9, 
   3.6679910546273875`*^9}, 3.6679911084009924`*^9, 3.667991370645297*^9, 
   3.6679916200646744`*^9, 3.6679917189037895`*^9, 3.667991761806107*^9, 
   3.66799231597868*^9, 3.667992751396487*^9, 3.6679927950963516`*^9, 
   3.6679930328373065`*^9, 3.6679932518651276`*^9, 3.6679946051364183`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.667937039730649*^9, 3.6679370458548574`*^9}, 
   3.667937563023834*^9, {3.6679390384723988`*^9, 3.6679390621543503`*^9}}]
},
WindowSize->{1474, 812},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2985, 79, 153, "Input"],
Cell[CellGroupData[{
Cell[3568, 103, 1537, 29, 73, "Input"],
Cell[5108, 134, 39320, 718, 410, "Output"],
Cell[44431, 854, 40748, 740, 410, "Output"]
}, Open  ]],
Cell[85194, 1597, 525, 15, 53, "Input"],
Cell[CellGroupData[{
Cell[85744, 1616, 137, 3, 32, "Input"],
Cell[85884, 1621, 37129, 685, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123050, 2311, 207, 4, 32, "Input"],
Cell[123260, 2317, 36425, 673, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159722, 2995, 204, 4, 32, "Input"],
Cell[159929, 3001, 37729, 695, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197695, 3701, 205, 4, 32, "Input"],
Cell[197903, 3707, 38633, 710, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236573, 4422, 204, 4, 32, "Input"],
Cell[236780, 4428, 38140, 702, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274957, 5135, 203, 4, 32, "Input"],
Cell[275163, 5141, 35255, 654, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310455, 5800, 204, 4, 32, "Input"],
Cell[310662, 5806, 37000, 682, 422, "Output"]
}, Open  ]],
Cell[347677, 6491, 5130, 134, 253, "Input"],
Cell[CellGroupData[{
Cell[352832, 6629, 991, 22, 73, "Input"],
Cell[353826, 6653, 73148, 1307, 422, "Output"],
Cell[426977, 7962, 74003, 1322, 422, "Output"]
}, Open  ]],
Cell[500995, 9287, 601, 16, 58, "Input"]
}
]
*)

