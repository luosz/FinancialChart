(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    323802,       6138]
NotebookOptionsPosition[    322347,       6088]
NotebookOutlinePosition[    322724,       6104]
CellTagsIndexPosition[    322681,       6101]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"2", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"end", "=", "Today"}]}], "Input",
 CellChangeTimes->{3.668865213943282*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{"\"Tue 5 Apr 2016\""}],RowBox[{"DateObject", "[", 
     RowBox[{"{", 
       RowBox[{"2016", ",", "4", ",", "5"}], "}"}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{{3.668865216155445*^9, 3.6688652244696302`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"chart1", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<USO\>\"", ",", "\"\<DNO\>\"", ",", "start", ",", "end"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<UCO\>\"", ",", "\"\<SCO\>\"", ",", "start", ",", "end"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart3", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<UWTI\>\"", ",", "\"\<DWTI\>\"", ",", "start", ",", "end"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9, {3.668032724636281*^9, 3.6680327747307005`*^9}, 
   3.668032842681288*^9, {3.668032886551777*^9, 3.6680329055850186`*^9}, {
   3.668078288605977*^9, 3.668078304671023*^9}, {3.66807873300231*^9, 
   3.6680787607888904`*^9}, {3.668079398596377*^9, 3.6680794079436197`*^9}, {
   3.6681123583237514`*^9, 3.6681123663217044`*^9}, 3.6681124067766967`*^9, 
   3.668865148002112*^9, {3.668865210375526*^9, 3.6688652109191256`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
LhYvZOar/6/e0n/1avULzKfsCvdztexO1U4039r15+9htDTb9efveQn2rw68
9H1yr6klmjdiEU2lLK6epaqGFliApcvfHqAWoUU+i36+fzzHfg2DDbPOexr1
VmJeMzf4fm0l2X4a6OJl4LDsv1L9Zz7DvHvBTll3m71W4vGEg+AxgU8cPQyw
LjZeDN+nPNw25xIeX8oHb97pNjrbhuSNAtv4nmzcPwm/D+8SuGjXjw2flNES
Q3d4HseJDGpf4udZHuC0Kp2KDY54fG7Ef/W/SmI6I/F4AVnuP9830UlP3X++
/+PnOe6/wftdE0dXFIWf5+8Abx1hmmzS8BTzZ4CDCs/t3a6NFj8Bd1m0j0rg
oqU94BnO//PLWo/9EKUtgXnsftqf7IWWPAZH9Nne0BjA47O6wPOnD+8QJ5K8
eh40NTfm11Afc3Txnx6MfPIH4N4oK44+jcfjdIIHpvSZ7fIgecd70lQtpTnW
cDSuF87zZJyPfR98yKmk5HEx1nk02PDu1EecaeT6a/Np6vCqD6ZNIeT6O/MZ
8yPZxGf0P6Cdz5jHJA0vRr3YEbx8Rp1qYRtavgG8VNqrOCaPzG8y+FZ0Xkh5
P1qsvvTn+x+Z39lLGdefHQROo4c8F/aReTgGVrSKubsmDe8PQT7Y3/SA7v09
aJb9MpoK3B08aUsOmhsIps89v/T6DLn/45cx898G7x8ZNFP7Hrmf/L1/vg+g
hbHejPtLfBMcyS6cNtac5G3wZuZVWU7//7+HkX4eBpN/T5I4/x/+oPy1
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 3.25584934670313}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 3.25584934670313}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"USO\"", "\"DNO\"", "\"USO & DNO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.668865224885637*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Hk8VP0XB/BBoSRTkSXLRPtmUloQc6O0ySDKklQkpOaXVktNpdKCEa1U
IzvFUFkqIoSyjEolZCJLc5URhVL9Tuc+/aE/nnq/zvd+5zPnnvudmWfytj22
HtI0Gu27FI3292/4wwhtEhPUPyVm8B92Dlj94tWvlmFo7gewZkWU1M9KtEDh
vZjwa1q29GwJWmQInjRUt2x9PppzD6zUZBQoNYTmvweLXs98VvkDLZRvFhPK
I6ty7VR6/pq2AByfGeSwdgm6sAH8KidMnrsULRkpEhNMn4uHzDLxegYTTLtS
Ku3Kp/I6gWVDJ8psrqDyBoOfvJntFueMpst8EBN7tB1i83zRrLnDzdkI7ih0
rDulQeU9Bq6sdRl3uK0b86aBzwVrb00YhXW3WS1iwqVu1QbnKqzzNoA1vpzX
nPcCXXgEvCNaQhatwfWSZLDr69yfRkwq/0tw6gFzmzAG1U+bVjHxNGk8e7YV
1c8AsM5Z8deVOVT+RHBaQ5nqVSGVXwj+VfZ+/Ot0Kv8PsMeO/ll+DWja4Y9i
InqrY1PiSOwfMw6sH6PNvKyLdqsCm6bb+naEonn9YBuXR9nnL1P9n9wmJmQe
dRjmPURzn4HPqO1zGnMbLegD1870tztthhZpt4uJjGq3yBh/NH01mLkoJkdC
oPll4FnE2pweNbSwp33Y/aVpdogJJ0sXr2kaVN6VHcPzcsATb65h3VlIzcOX
jmH5GOqdYuJTwYSVNVVotjl43wG/1rIyKr8v2F/mbPuUiK+Y/zLYvUyh81Qo
mjXxk5jol6o1OpiK5rDAhxc91z10DM33BstPzB96EoUWRoHT58+tS0tD0x6D
XWQsbjbXoXnLxGKivPzIuu5cdKGneNh6SYR42HrGI/D6c6GfOs+g2e3g1FHR
VxwvoEXupJgISzi72Ws/mh4OrutQH2viT+XPAysmnlmUo0jlbwU/FkUJu9qo
fp7vEhPtzD+81y+pfmaDH+RKR12rpO6/COzPz49XcaPu/+jPYsJxRfzHWdFU
vxeCG9Ivh/p/oJ6vu2B66qBZugI1D02fhz2PIrkvYuJDXGfo4dHUPBiAjeyO
9hHBaJYLuKhlnX2nOzUP78B/5r7kFhZR8zCyW0wMLjnOLbpC5dfvHnZ/3Ry7
h80b7wT4vdzdY1N2UfMgLRETPKWgZtkN1DzMkQybL64DeETvlQCZVOr544LX
ek/+PEWbyp8Kju1tir70C59nzsweMTHZcatx9wrqfLADr5Zpi9Xups6HIHBR
xwN6QCSalgzO3nb99ekeNPMFOEKma3lLB3U+sL+KCZLHKh07hjof/MHfVFz/
SKVjnZEAnhzmNLTsPppdAy6JOepxa9wXzD8I9r2YkWR3C00/1Av3t2Tjp6Xt
n7G/t8AuSgKhiQ+aUwneseXV6g/X0fzv4Iftb/02/kYLGX1iouahxvTuF2i3
m+DGfQs4F++ieRXghKbozDEkurC3b9jrSbS+iYmdJZvoXVaYh7EK/KNiyq3Q
n2iRBPzw2IY769bjevqk7/B8PdMLaIjEOmsFONiauF9tiObsAQdWRwa/iMD1
tC/g6ZbhTi7z0Uy1fjFhsGOWZsrXLsy7HLwgWq+pfyuatwtMN7W9Mk6bynsJ
bOskFxEagnW2yoCY2GyREnHuHZprBq5XMONHjsTXF3gNDHt9USRY9stcHV8S
19MLhl/PNxkUE0mBp/sGlqCFO8CnQ1KPKsehaRHghnf3O42jqPwPwdddvnDp
llS/28D65SbnNtVR/dz+Q0y0hbvOIA9Q/QwDLyMtHWKiqPy54PmeM6ot9Kj8
LWD5/HhPFX+0YMxPuP/+/BEH/Ens7znwdNUR9nwJmnMfbMl6d/blNzHmbwZ7
X0+ryVuKFo4aEhNdsRpZv2s6Mf9C8LPDy+d5/kTzssBVLYt+70xBFzaCl28/
tcmhuh3zy/4SE2KFaNNNgWjGfHDJttNH5Rd1YH5ncK55V/7DfWhRPTjlzPYq
w/lo+ojfYsKifLTO1iNo1jywslj9npE77sfZBD4e8NyywQjr/ONg/TCLhIJB
rDOl/sB5enyyRlw42m02+O7YY3IzX6J59mBV9ljdqQfx+sKjYK//ab8XlFD5
U8Cll7msjQlo7gwaSejEMzMC97dhf23BAX/Ovfhf6UfMHwhudvj6O/kq1ulJ
YL7pHaUpc9GsWnCJ5zejaHe00FqKJOSCUxeo1uD1NH9wY8LsgoUdaGY8eMVi
H5eIc2i3anBvRYaVlWMr5h8AM3/Ft3yRxTrjoDRJTLvD9VrzCuvsWLDuIZW7
OQZo7nNwzGbnit6laME38PFPD5tmt6FFOjIkEd2709LBGffj3AB/+NZEXOzA
Or8cPKHg/JP53S2Y/yv4hF36lopiNNNyBEnUGz9LsF7ZjP0sBetmjgnJ8xVh
P7vBjq9Xyvb/eo95NUaSRFhImHeMHK5nW4DVpwSHq+3FOnc3WDZvoat2YBP2
8zNYa5uzSo9iA/ZTVRber9Rsc49CNIcAF8UHhMqn1GNeH7Dac58f3hvfYt6L
4A3SW+IeC19jP5XlSEJzlDnXvPcV9tMUXCdbfXKEZx3m3wm+0fvO5FooWnIB
3OjAHeXhiesZ+eByT09m8yXcT2AsTxJzBkrmqyViXeQBjl5a5WpVidfTeeBn
snZ+zz9infMRLGv454ilNZq2fRRJdEQZ+5d6vsR+hoKzWnpVGK5otxzwDcWs
bSFn0IUKo8n/vk+8wP6dBR9YMi5Lv1qI/bsHHqun8Nz8cTXmew8epJ/2YVyv
wXzyCiRRq1S+RVYf19MXgHPnK+swuVjnZ4LH9XdXHwmsxP41gG1ivZwYs6ow
r+wYkog/c5xINcH1TOaYYevdnMBjv4wb/c0a6wwZRZJYNbpV9ZM91tlzwZZ8
ycW1B3E/7kbwjaci6fSpWBccA2/Yv97VueMZ3m/aWHiePCpXXPNDc2aB8+M/
emw89xzzbgCHeLxmzNhTgXmPgL87FPfcyULTUsDUeYuvx5uuRBKKeWqrE0WY
r9AGrDw+0SDqei3e7wClf/OI/WMkgllOqrOU3bFfbCH4fvZbdedJuF60nk4S
J/P5H3bcQtMPg2WfKJWkLcH1rDjwGyW14/VtuB+nCiy+rm5mHYV1fj9YmFDX
tJON17vxx5EEW8ExqOgKmvcMfE7RzqPsFq4v7AMH2j3bR2xBS7THD7t/3Ovg
nxl708eQ+H4FZWCbXZyrtQ/Qop7xw94/XXMCSShtGnH+wjzMx1oJTigIkB5M
QwtLwNbSR1QXNqJp3X9dFezQtou6/+rKJNHQyltfwcY8bubgXcSlxT29WOf5
gt2b5bPlw6l+doHnVqr43riPZk9UGXZ/uCxw0mbPFW2D1Dx4g1ebNb5dXIr3
WxQFfmwuTDavx/vLmTARnq904+773uXYz2VgX57guPyiMszvCV43oahx73Fq
Hi6AN92d+nHBCawzH4HDXKal0Y7g9YVGqiSRFm36PP8irpe4gxekvDXcfhPN
CAenDNmG1FpiHnYeeKVP/6shOXw/3FbwmpRqp7o4nFf6NjWS+NYl3EN/Rc3z
ebVh+3OywU857l5N1dQ8i8CnIno0P2ei3c6ok8SDaNnYKlfcn3cXfNB3tN+R
ZdQ8NIE5a/YN+TOwfxI5DZIold3bYSbB/jEMNIblEwg0hu0neqcx7Hmlj5xE
EqKojeHLZHD+WPrgtVOvBvw+gOY4gqNu60Ya26Npb8EJZQ47T+1EM6U1yf9+
j1PzMAdM/X5H8xzAXtVxWo6+uL6QqznsevYf8PfrUTYhE9HcmVpw3m97WT6X
gRbYgQvsky1rqqjnLwg8rzLF0G47nof0ZLBj6ow0w7Vo/jRtkmCMn7yiSgct
ZIM37dcXtzegaQHgm8vT9N4MoJkJYP7t6wn73lDPYw04OCSJobYA6xIrHZJ4
P8tDkT8FzTik8+/zkDqPb4HrlW6vCYtEcyvBNw/Gf5y6Ey34Dj6z21O3YQOa
tZ9BEnfXtV/ON0FzboINbez9pV9S50MFWNk04+J4Pcwj7AVPePVown4LKr/2
ZJLIFBa9DX9F9fMpeEblboXieup8kIDl+zNXfD2OZkzSJYktnTZZv2Ko82wF
WH8g60ptJ9XPYvAVxYNLBv5Q59kXcFP6p7Hel6m8anoksfm0dRgzmZqH5eCh
jM3ZFflU3l1gC+kvY3LnUPNAgvWaCtL++3xyU5kC87vkwd7pKdT5ZgZmK3+N
PrMZ9y/0Ao+i9U3J0qX6HQnueuF+LDSPmofxU6FfRpsnTQ2j5sEEXDPTqdmg
mMq/A3xLcfXZpUlU/giwcxUhaG2n5vkh+PGxzFQrO6qfS6eRRBVZ9mdSODXP
7uChE78mmE+g5iEM/OLdwS0Z16h5yAU7K8yukWZR+VvAQXZ+hkuN0Iyt0+H+
1hSeFOym+nsOzGbZmtLlqfz3wYV7wpM6TuPzJmgG98m6zp8ySH0+hMwgiVSd
XaFHW/G84GeBJwT/tH/2HS1sBJ/iDczwllDnmdzMYeuZ88HWi+Zs/++8KcwA
N6j+shWx0ZJ6sJT37t7x3WjGiFkwz0p91ut8cD/2PPAenvSIARLPQ+4mcDm5
7O6Vx2j6G/CHmD+vL7fh+cmSmk0SxQU//b4cxTpnNjjymnVWec1TzG8P5sr0
a7E3oIVHwRtjexPjBkuxn7/BEwKHqj27S7CfM+bAebNqYnTLSawX2oKXFHeb
/4jE6yWB4FZjUj14AZqRBCbl1GM0ivB6wdS58H2I977W+3/FOA/WYM+e6odW
T9F0f7CV5s8bWuZoVjz44u6WhcpvnmD+arCv/sATFTU0zWoe7Ff65kKeCM08
CJYLaJa7JyzC/LFgm9Wky9tKNO85mC1pvrWJhi78Bi7MTvWJeVKI/d2nTxKu
sTX7Jh5Fc2+Abe82vd+fhhaUg19H9j5JCyrA/F/B1O9/NF2LCfe/x9XTd1M+
9jcabLL9UNAqpQfY31JwekGKjXMHmiYB/0nk5Hwzf4j5NebD59eFvurOifh6
bhbgyuxq0yodfH+SJ2A5PZ3ixADsJ+Mz2PvuS5nODHw/bFUDklD1+/GGvQrX
cwkwY9KD7Rc/ogU+Bv/OM6qfygtI4p1BqbWJPppvCr5WQPYHDuHrC3eClwVd
lRvXgvvTIsHJM6St1i6h+jluIUmo+CU7bL2A6wuNwYcOxEWslMa6xGPh3/OK
Mdj9Dvdn8MA/NvYJSkLR7Afgxpic2npFXC9aYgjz3tpSkyuLdfp2sFpy75Wb
OVhnhYKvfRjxa9YVfD1ODjgkLkfX4BOa/8Hw7/ffkpA9C3E9020RPC/VrSOl
d1D9PAt20+pbYNGB5t0DK2z9vuqoKjUP78F2sb90695gXSK/mPzv/5dinXsa
fCqtcOrTarQgExwR8rx3FY+a54a/9ZoX2v2zqXmWXUISbV3ZauPs8X6xmGCi
Q/986By0MB38ueHXTfsj1DzXgwvW5X763Urll1kK87dYIXbxIDXPc8FevAe/
lyrjet5GcFF5Y/KcdVR/X4MtJIo2qo7UPNCMSMKns7JkkQ6Vfxb4Wu/H3Oc+
1DxvAE8La5x9OwEtOgI2NKv85TWF6u8v8Oz+xftFix5jf6cbQz4jC4+UbTjv
QhvjYc8TLRBcW/ue1VGH1zMTjf+d51R/p5iQxGXF6oO0qdR8rAffM5Jt1PSi
8h8G2+4ase3UTip/HFiv+4anMJZ6HqvAqpeKnJXmoenrlsF5l9BvE5SO+VgH
wOtTfWwW16I5fHAq98Xz42sxL/8ZWOXS3Egn7iPM3wdOdtlts20JPn9ufqbw
ff6gU3NSOtZ518FPVR0zNktjvbAM3GFV5Ng7Ay3pASdy51XENePzzNA0g/P4
nQPpfwctuAZWL9ayURmN60Ul4FaLiAn+K3F/ejeYc9Q3vyIczTFnwedTqblP
sgqupz0B++lfWF2cgPsxu8ALTc0Ig/tot4kEnD/raN2PHuZiXhbx7/MnD/N6
g6VuqizYm4x19ifw9O4o8kbxfeznhOUkMWCyiHktFC1YBo45mB20aypa5Ake
R3urZHT6Hua9AFZPXqER7nsX+0k3hzx8AxPf82ihEfgNp1Du1gpcT/MA3y6L
uDDxaxbmDwcPNNT0XJqKdssDCz27Clb3Z2I/F1uQxNWD4wNC89CMbRbD6uzz
4OWaM60ao/H1uNnggDSW/b4mNGvLCvj+yArdyY/A/TlnwOsGP1zdk0TlvQve
EGsdXxKKdWET+Jb47YoT7WjeqZX/zit0oQD88I7/VD0Rle8deHpxXdcPZQHm
G2lJElo3pRqzqtMxnz7Yv9qPfkQFLboDvh63P5D+KhX79xbMLC7qu7wJzZJe
BZ/PLYq+Ok0pmHcO2G0/QxAThnW+A9jgcuLAC5Vk7NcfcL75nER330TMO3M1
/L7VlmN4j07AvHbgrm9nt3rFYV0SBLYIWhBWsAf34w6Bs0dmat3xwLpg2hq4
P73siAd83F/EBmfvUHURVGEeegB4VUfFeOMHtzFvAljd0GfjomC0UG/tv+8f
eD1tPTijzPDit824P/PQ2mHv1+3W2r/f97mxYj3cn1cJVr2Z97rvexL2c+06
mOdjSfM09+P17P3g3PqLkzt14zH/TbCU9aVH523jMH8F2DSIDKFdQYt6wc6p
ep81G3E9P8YKft/JkZ+dd6KFT8FtOUr1mdG4P60HvLl5t76zFJV30nqS6Pn9
IKnlJNXPq2BPW8Mf7HmYT1IMvif0aNjNwjrjC3h5xzHFoBY0W80a8gmGfoQ/
wP24y62H3Q96EXgosfLexLe4H4sEnzjq6+q7F/vHUWGThGTL5Pa2z2i+2XAL
vcDvap+tClZPw352gpXnGI/Lj72D/RxvA78PlVbWGk/GeqEJeEb77dTWXKxL
doAjI1QkWkpoRgTYxonXxOxAC5RsSaL6rI6/nT7eX9FScKX9q8Uqo3E/ujt4
cvJ83TmZuJ4VBlbQaAh+1piB+XPBafe1xhZx0LTFdnC/Tzq5myvi88LcCv62
xYuMK8W62znww5GDuj7LqPz3wd5aBvlCEb4+23UDfF6mrD97IgvNDQFrmUZf
z9iBeQRZ4IL6pmmJP3C+RI3guA+SEeUN1PMmZw/f1zwXlsjVUP08CY5ZrmSq
uCvJ7P8+Zfmk
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XtcTN3XAPBRSpIMXVSoUSSFRiqSak6JKEwiKpcRueTSuKWIhsitniY8
T1JqVCLXIT2FYhTdS0W6qEzokTnRUEkXeZe1f+8f+cfn+1n77LPOOvusvYeJ
vgHL/RQYDMaPIQzGn7/hDyuyUUb9xj/tDmBuJthgtFu4TcvXPxY0g+drMt/3
+KHFI5pklLV08tYJ+9BSK3Cf5Ld+bAia/wC83mRLHlcdLWoCjxHWMQ6PQFeo
vJNRqda94fZNX/6YMQuc8j5kX0MSWvJ2sOVKUhlVUp/HoI7h9Sw2OMlG6b3P
FTTXGyyzu+h0w5vkexzsc7y92UAHn4ep2Az3q/mdIhiC5kwH62u7zT4tJ/mu
At96fqAoMxrjoqPgTS8+6jz8gK64CS4RFL2sEqN5pu9llMtq5j5xJ1q4Anz8
gHWOZRtacgRco/ZwEm2Gll8HO22+mDDVC816BeYZylLmB6HF7h9kVEdwZFGH
Hlp66MOg52GmgtdZbJksn4TmVIDv6O/pnbyR5N8LtnA0u/pTA80I/iijghc8
UV5YhvVjJ4PDzcwMRkeheWXgQ51Wi8fWt2H+3eCQdqvYgnK0ZGKLjHreUdir
dQotKAYfFGXNzkhAizvB5eZPBOtdcD6p/n/wvk9uuKpOY5y5CJw4/9i9TEeM
iwrASRd/5+keQVd8A2+avGbrLFfy/sd/klEnjc12PQsj+S4AJ53/PaZ4D8mX
Dx5X5tp5zJOsh69g9YV1OYG78X4s3VYZJT9zMtNnOZrrBDa7e/ue+UqS/05w
Xo+zrqE+jfnHDDZH+7OMMn1kevTsDxnWkwPOG3Au3j0V4yJ/8MjlnpFVY9AV
F8C5NwozR33F8Yyn4D1Pct7X3UUL7WQyqnHs5TU6jWjJFnDSz0CNCy1oeTRY
lNLDsLiBZmWD92/I8lw6Dufn/gcOXJN1dWAUWrqJllF/66je0jVHM6PoQflx
HoKX3969RlSM5n8Aewxp36WgjM/PjmiTUcPvNN28Mh7N+xfs6brD4IUpef9S
cHFEnhrdQN6/6hcZNc9CK1L/AFpu+WXQ9yhIB3t+2/3V0wstbvwy6HuXDvsK
30PNbbW7HhhnWoDXfNw881IozsdZA45dpRopuI+uqAfvyeI8L9NFM5TaZZTX
pc+CGm+Svzk4Z4T7yRmKJH+v9kHrUxgGvh7euXJkLFkPCnIZpSl99dI1n6yH
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
WE/0YayX6ARYvy69ICdSk/N/RwcsUw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt2HtcTPkbB/Ap3YUJJQmTUEgmQtloTqGEmpIuJKFSSENCUobNrahBLIVG
ucUiRbVJZlPulFu5VLog5nSZLkqR9vE8u3/8dt+v7/ec+fSc73m+3/MzWhnq
FqDM4XA6lDic3/+Gf3gHK+UM/afCFv5HmAN+9ezDko1kcQ141suTrZ29zb+d
0bdKzsQ/FTYe/4Wungo+XrH4adIPtOgGOMWqsylRCa+XVoE3ucw/N4fuV6rx
Qc5YcsdEWyujOVPAkTq+DypU0LL34COJgUZbVNEK1Wo5c8yr8/vyVrw/jw9+
bvmgrW8LWrgE/ONy7ejMDrQ4Bqw4YeyaVY/m9qmRM3ZaZW0RTWjBRHD0uJ82
vz5RXk/wzDTdvJV1aOlO8PHHPN0TH9Gll8GK2X0e9q9F+42vlTMvjpl9VK1B
S9zBJZk16yw+oGXRv8eNFkbnVKMVF8FiTdXHJRWU/yX43d7ctAxyhmudnJH5
v7U8947qGQkenJ49+CT9Pvc8+N2myPE6lE9QCnYvH8INpvuLusHR6gejQunv
4UR8lDNvYnL9nBrQ/DRwq8WNOyPllP8pePvFkIFt3ZS/EzzA3fNPBT1PmdEn
OfNp6oIpRfS8xY/A94KEHYH0fDPawbnM20E5lKd6xGc543tY57OxgvLOA4u9
lkkW/F/P++DIfvNP/CqneraA9zzKzx9K9eIY1suZ0+828NSpHvy5YE7gaeuf
7ymvCHx2tyivieYrmsCxy18lbmqneg79ImdWxJQb9dDzF9qDtZyd8v9fL+IQ
sLn4WJcBF9dTxl9g45We3fP7owV6XyHPpKyoqoFokQDcaND5p35fWr9rwHtH
3jDSG0DrNxG87+6+N946tH7vgJ02uDp+1kNLZsrlzNJLgbdvD6L1vBrM8dzU
PIOuVxwCl62pdtmui+blg1WqNmk9oN8Tfga3Jt8KN+uHrvZn5UzDm/tDI9XQ
3ARwctjpiG3qlP8fcPb2Qn/1NloPdeCgFdoaTV+ongca5Ix8b1Ogyf/rNxsc
UJVr3PP/+q0GfwgcOSHuGT1/rUY5s6XKfEJeGdXbEjyRV3b/SybVMwt8K3Vy
jncurYdKMN8swn/PBVoP6k1yJi3BdrDrDVoPk8FBxZP7DSii9esDju//Itm0
gNbDO7BVbNvKC/T7HNVmOTNWrVMw8R7lnwR+MDt/f2AJ5fcGH3Isllyg6yV/
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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 7.8529516000328465`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 7.8529516000328465`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UCO\"", "\"SCO\"", "\"UCO & SCO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.668865225432565*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
kevgvF9yavTXC9hf4TFwVMmVqmrRXvP/Aym8ytQ=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
CPIcPFt8TRfrJUwEX5iQ6PJloibnfy2eb7M=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 15.436619507042254`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 15.436619507042254`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UWTI\"", "\"DWTI\"", "\"UWTI & DWTI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9, 3.668864550334702*^9, 
   3.668865153180951*^9, {3.6688652166710143`*^9, 3.6688652258175983`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<USO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UCO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UWTI.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart3"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.668079430448698*^9, 3.668079543661236*^9}, 
   3.6680816042267323`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"chart1", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<DGLD\>\"", ",", "\"\<UGLD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6688645395246763`*^9, 3.6688645435645914`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Xk8VP33APBBKD1FiygVKXsyQpLKXJHQYolQ3xqhQsukBaGm0IKQtBPZ
kshYotIiWxGZEloQkjQ3DBWl5Hf6nN8fef54nuf9+lzXce75nM+5M3O27rHz
EGUwGAMiDMbf/8I/SqebBRT+r9AE/mVTCPaLOxyurN3719w28Eqz6fETfvb8
NW98i4BaNVARludB3GoAFp7uysjcR8zJB1+p4K1Q7uj+68QWcI7lBSdDV3I/
/tj3Aso6Rm9oxIeYoQdO9VoyZ/VX4uJ3YDd+XFKSDolHKN4qoCoT473O2BEr
McGluzZdYbpgvC7guSJWAY4TiLkh4HX543ToXeR+MmJtAkr9Z8ALdiUxSxu8
LdMu9sBzYs4GsGnrg8ePFcnPJx4FP8lJeX9vEzH/JviEq/LvkWvkerZmu4By
ynA7vp1P/t7o9eBVepPVO3qIiw+Dp2cu9JWagfGngwunpa55qIrx14Hzvj2X
r9Mi5tl+EFAq1bEv826R+7cGgL3eGJ1V/ozxp4ET0kReZjIwfj74kaLp8uWt
GP8QeL3ovIjmT5hP/w4Bxd6RppnwmpiZDN7/q3FyWhXGXwPusSrWTvtJHD0I
rqT+JgDzP+ejgNoUlj+1/ws+/yrwF0ZqTKEQ4/0GvvcquPqGcR+Jd3angGrI
O9v91IVYxhLsZBfvmhVDnPgELKLyfOh3EzG/D9yq3zt9Zg0xY+YnAcVjxIVU
txIzV4K7126s+p8vMZsD3nEnWKXoILGwB8xK8xIk+RErTe8SUAc/uHB8ZhPb
rACvLm643KFMzN0Fvhz6afnPyxj/BbDe7c6DUn7ErGmfBVSBvVDQk03MYYHf
nwgwSLuN9eAFtvPpymo4hvUQC74+X6/9wytS34xH4HVl60Wb24mjlwkElHNn
/1F2GXHxdrDEuTf/BWcRC8+Axz4tKLiQS6x0H2yVvt/P+SWxTSfY4vjVFbsb
iVvdaQGlwTI+2vf7C8lvFPiB3jyzexPJOusuuDKlMHOZIjHnA9gv99G4wAhi
ZsQXAaVo1aZx4DIxuwBc8enHt/oYjLcVXFfhMP8xA+OV6hZQzfezg5e5kd8n
1B9tbh74uufhI1M3Yz9oBu8Lz37GXor1K9kjoAYntubk9ZN1mYXg4wN6DwU7
MN5N4Jodwl9Nk8g6/y247anZkto/mE/xXgFlq7HzCNuWrDN1wMPtbq/MXIjZ
zuCS4q6Ce6ZYv8FgactbD67qknUlUSHUn7557L0NxDbzwZqaQ6IX44m5juCY
lQda7IYwfi54pEih7bEQ488Az7+sbNWshftLo09AGS4ThtamEifag62Sl+zR
CMJ+FtQ36vcz0sHiaa1HMwsx/y/BJ7dtEmcOYn5t+uH+TdeFy6TI9cJD4M43
U4aie7EeUsGZy0STUsuxHmrBFgcuPDerIeb+BK8biKy3Xo359fsqoPYqnAhR
uEXMSgJv7Zpu3vAO+3H111H5ShwAm2S1ymVhf+IrfRNQqiK3EpOw/7MTwJHt
08Uk5xBHV4L3vhFpuVeL/eEreEbGgB2zhlg46zvU49XJx2otiJVWgdOn9buF
HcB8Cr+P2j8yCgMCalq5d9GBjbj/zMEXz/fkKafi/tsDntrgw0zwIGb0gI1V
Gsd2fSFmyg8KqKQ/mQcftmO8puB1LygDFyWy36N3gr0qex4x9xMXnwef1Xi4
sPcH9gfZHwKqZW7IkbRa7A8m4EdmMkbGD4h5nmA5gVGBz+J+Ev9ZcEBuyqk6
JrHMQ3D0Sbl7PueJE5f+/Pt8m7cYpxPzt4GffWrer21IzDgD9vQYHKcbScws
Ak94emVRryMx+yP4jK+MuWUEsdBtSEBFbUvNqMPrlSLBYz5k+nf1EdvcAQ8f
smu6eJ2Y2w4+phcX/TabmPffLzhvnG6u1Sz4SvIbDg7UHElwGSDrnNvgpVap
Yh8rMf73YIecgS4m/n38cb+hH8wI9nyrjPHr/x61Hp0Lvm+WOaW3EvPbBJ54
yHLeuVLszxLDsL+5PT8U9mB/1gWvSHsu3euN+d8I1md1WbedwPPjDXhPwi2J
OHU8P8b8gX73KEIxUpaYtQCslBoSe3EzMccJ/MlRY799EZ4vx/6Mep5MkRGY
LywXq57rx/NDCzxPVf6gvQDrwwGcrm+lG8Qjf0/xEXBIclmj4nKSL+EN8K2A
HrbHyW8kv+oMmnLaEharySfm2YF1tEYs91URtwaCO+ecYXBmDJD4r4Pjh1Xr
G8cQs16Apf+8euaqS67nrxOhqZHdEs8ykr+T/B4CTzmyI2vmA7LOTAHfnX0/
boMoWWc/B1t0LV50vYesR/8AS7uPTTN2J/Eq+YrSVFJm02/vKGKba+Dd9cEH
S6SJuc/AWofVWDmPiHnfwU2fmekn1IlbFcVo6pFoeMzbFqyPq2BtucVlCYNY
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
z/05
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tPofKS/1fQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 1.5242674220582237`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 1.5242674220582237`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DGLD\"", "\"UGLD\"", "\"DGLD & UGLD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.668864553971403*^9, 3.6688651553291597`*^9, {3.6688652180749407`*^9, 
   3.66886522633328*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"btal", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
   3.667995156778397*^9, 3.667995177356733*^9}, {3.6681116088383703`*^9, 
   3.668111643226673*^9}, 3.6681123691444373`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
PHM=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2HlcTG0fBvBRSrZMq0QLkbRvWmiZo2xRpkhSaSJLpJK1kMlSQrslhLKk
LImkJIkorRJPtkq2MJOMIrven3P55/XHw/dzzsxc57rvc5/7PCMXhnosluJw
OD19OJy/f9Mf7fgWEYN/ShzpP/xC8nqbfYWvBrMWviDLlUR2pEmxzhvYKmLO
OTlJXFs//nXbeHJtnKtaNo6HXSZ/K3tX1FeZdUYr+d6Sk85DdFk3yD0XMa3a
0pEHHFlzLMg/DcqM6u1Ylz0jm+bIHXluwFoi0yZipilGz7TWYq1tSnYxGHBx
xXDknU/+aalibTgGebeTVTNHfx3kxJor/ULEzHmsbKrpw5pnRLaq89r01g95
vciSkpyJO4ORN5qcdd7KIHYJ8p4ld2x4L70QnxfovxQxO+7f3/doAeukOeSY
PlvlnvsifxS5478hsoFJyJ9NTg99x8/difwPyH5tf8I8hOjT/ZWIsbXzuHUo
gHXbRvL2PU1GsxcifxZZ2SvvYzjy8hrIe7u2OhkFIv8PspOWTCuzEn1GvBYx
oWdD90uFsDY9QX7WM7FtP84X1JHnl9+80y8I+b+Sb1vUpingeNnINyJGb3yA
7np/9FlNzj3d4tMXzvtMTuvXpHAIedo020VMeJBP3XT0x51O1q4r15Hbij4r
ybqu3y1SN6DPT2TbCv9cZjfyjngrYvjRhUqNON90CtnnooFS7j7kDSNfHlwg
CIlCn53kcbetGv9sRJ/D3okYkfv0wPYIzAcn8qdFl35peCH/SnLGxAEmmrje
vAPkqMNDbZtxvTzV9/R7Nd05QzejTx65QvJnlUsk8i8nW238NtpvF/LvJfc9
a3zyJMaXc4Mc6CPr1w0n2Yto/qjxg54koM+l5OKa3Z47kVeSTI65V1l5Zw/y
l5A/fW5M/BaH/O3k6nLJlXeb0G+gWMSoxQyR7sBxbiK5etL7Ex7oj3eV/ML4
8NbUUOR/RX58KC1PA/PLdE+HiNnlFe6+PRp9XiH31P/edvkI8raRXzfsqjl6
HHkHfBAxA5IcQlIzkdeSvHCMsLc5A33mk+O6SnWWXkSfLeQ/cvqGBlnI269T
xLTVPt2yHedzzcnzpjdb5GA8eb5k4UT78/NOoM+n5NEhCQ17cD5H5iPNR6ck
q2zkMTUhp3U9VelNRH5vcr5NpP3Dg8i/jbw92XL1/TT0KSURMd5jGzbPy0Gf
huQV0j8Lhx9F/rnkzVMzj5VjvPKEZBdf25NNy5H/DPmQ1/qbD8PQ57hPdD+t
Ky3u/rc+zCYzQwKaArEeNGz+f3OyyXdbJuQoeiJ/I1n+6TjeV6wnZfwuEbPv
me6SSny/JJJcVhph8Q33r/Yp8rqT+0Rh65H/Htn33fkjOzC/hd/JwhuWTlsx
P7kbukXMh5D6Lyax6Pc42UrH3Gkm5ktYLXnNz4L6TszHjB7yPMf7/mtSkF/7
s4j5Ubb13WXMb8Exsm5e9/WvmH9JVeRiU+uXGeuQv5uc/No9chHuZ4nGFxEz
UGuH4AjO155G/vXkZcydHehTQq4v+U9GFvcvd3jP/x3nTSarV1W2a8Ugbyh5
R+m87uhU9NlJTvWPDzuF6zFV+ypiblZcj9DG+YJJ5JH1B7RVtiBvMFnF6U/H
TvRRtp8cwdm2k4vx46t8o/xKB+dK0L/QkazQHe3hi3x5QWTf8I2LD/27/1LJ
pn5Sx6fhfG4peVZKcn4y7ucMu+/0/BAw6ZrI07CELKiOUj2J8eMkk798WiL9
4N/9eI38m9H6pbYG+d+QFeL0HUVY/ySLfoiYhxpqIUtwPdoJ5ENFNRbp25C/
iOx7R2w5FeMlfEkWqltMCkNfeYN+0voVvqBPMMaXt5u8xvOLQf4B9FtA1m3U
aD26Avmfkx0y22rdryF//18iZjZvUMiRC8hvSda7/zxItwz9XiKX1kYnVjSi
32Zy2ty1ikvvI7/sbxETn5mpYd2A/GZkoaXd4tp65PchBx+fYv6sAP0+IXfV
Tp4hVYV++/6h8+Myfjk+Qn5jsu++26VnHiP/PHLZOdfsF2+RfytZT2XkvfVf
0W+fXhGTFD3FSqkH/RqQ03kjlVZ+QX5PsprAZp3/O+TfQs41MFgd0Iv8OeS7
3XP+FP1Gv3ocMXPuuWdKrtQntl8P8ucpR/lTlFm3bSK/th3nt9iINfc0uZmf
5pg/kjXvPvleTuN1C33WDbP6iJldyqFGl81ZcyLJ1SNcHs02ZG16klyULC5f
NYq1oJ4sO6gjRs+UddI3ctXFqjWZ41hrr5cSM/mfbesCJ7LmZ5I7HSxk23G+
sIZcnHJA3OOA/F/IJbP93EyskV9LWsysmeBx6xHDOuwoedrEkHtRJqwz7pKX
1X1097RC/i6y992zc5RnIO/UvmJGcdy1IT0C1mV3yJzBUiXrYMlHcmhMbfvg
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

         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 1.3478748809129162`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 1.3478748809129162`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> D\
ynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9, 
   3.6679966014622297`*^9, 3.668024110181718*^9, 3.668031049318376*^9, {
   3.668032804112906*^9, 3.6680328286320314`*^9}, 3.6680328691426263`*^9, 
   3.6680329226453495`*^9, 3.668034039959835*^9, 3.6680783426206446`*^9, 
   3.6680785187740164`*^9, 3.6680795586876087`*^9, 3.6680816296349354`*^9, 
   3.6680817354333153`*^9, 3.668110915434724*^9, 3.66811167458549*^9, 
   3.668112417986598*^9, 3.668864555204123*^9, 3.668865155964558*^9, {
   3.6688652185436354`*^9, 3.668865226795666*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euo", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6680300623170033`*^9, 3.668030065558288*^9}, {
   3.668111631132517*^9, 3.668111631960491*^9}, 3.668112371394373*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
1Q==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcjGsbB/BpRToZS1qQEe1p7yha5intaCpK1pEWW8yxlCQGOY4kg+zU
VJbIYcpOVJZSB41dWUoqzKOaSMrWe3Vf/7z3+eM97/fzzPKb67nu676fzqio
ZaExqhwOp1OFw+n9N/zD2/5aweD/VXrC/wgu9drqRl5IWVuvxW/Bt7YE9M3b
SCzr/0bBuLU7ZzUIieudwdYNGzrPxxCLzoN12/nJtUXE0je05X3rFIwZ56tx
3zPEHEew9aVbofOPEpe+BOd6jNbtrCJWatQrGPWG9MenLxHz7MDD8wcUOJ8k
FswAb82b8/bGQcybCpbMGDvQcCcxV+2tgrlsGy2RpxDzx76lvl8UATaxOlce
uQzzbgAbPr4/ZcsizFvwlvp9QssG6vdLpoLHD+9gnIwx/zpw+cJnL4PHY/58
cOHqPcJVWzD/Y/DKohGxje+xniHvFEx03sIbFz9hPZPBDsXTthfpkvvBPQ6+
oOduUs8l5svB127ZzgsYTCz6TpuT1EjZLg986nzylWH6xML74KyQq5MjRhJL
voEjdRVnpA7EpaOaFMw+J5V8PYZYXAUe6fYy+YwHsawDHNJl12/eVOJ6o2YF
M3vm55UmkzFvANguaMfoV67E0opm6vXydrDOWLMnYm/MO/y9gqnp0Xr9LQTz
+oJb1m9u/WGOeUXgc8cTrvVzJla2giuV4c5V4cQ8gw8KZobCqn/wX9i/3uAX
GRNXjErA/PFgvZHGz5YKMf8+sEpk9u+mpVjPoR+p6yL+R+rzpIs+0vkzwYNr
DLgKH8xf8pH6/RJ3hYLZ9tDTLcwf6xlHW7kTbJV9+P3ycZi/WEF9nqAZHLO6
wDDGCusbzSoY95F63Qk6WN8d4FH/5jSlGmL+Kyz1etE7lvo+u/RPVL2FFz9R
91dS/4l6f6lWC3Vd6dRCvV98roW6v7LXYKnpz5MaczBvn1YFE7xlUXbaaszr
0ErdD/4s8KOGkHGXV2A9a+nrHI02BeO3qLA78CDmtwXf1qmaNyIb80eCb0Q9
Nzl/GPNvAq9/1H0ztgjrqapUMEmmfbb8Oov1tAZHCVPPrryB+cPBhRnBAoO7
mF9Mu/4UuLNqZFv1eaynRbuCWXrLZ5jrJeyHMHDm8Fo3syeYPwUsXX8on72H
+fPBscfTV3W/wPyPwM3XFvvlXsH6Cj5Tr1euAbf9GxsgeYb5j32m3i+o/kx9
n7gbXNAwa4jsDtZ39Rfq9fxc8BGdpx667Zj/HnhbRu9AbCf5O8F34hYK1XSI
5bwO6O8LQd+NTImF2eDYHquVdX7Ekkqww6MBKeHhxKVfwG2amv4JPsTKEV8V
zJICI5l/IDHPHxydEaPVbwlxvRI83epo1sQVxNxhnQqmq4sTGB1FzPcBnyjS
8ahmiUXLwOd05Sd3NxJzWsHSPdP27/jjM6mn/jdYPzqdT382Y14vcM3S6P82
qJDrkiW0S/eCczSHq8Z+JK8X6HbBPCtwWuTSSiz2BN8ekxpSVkcsWwh+J5x7
f5kReX/9bvDsqqD5Z39i/htg3REXZhg7ketSt24FwxMnlDdbE8tjwQGBD0MK
TIg5O8FJveN/Lua/BjbvfLBIew2xsAn8vkdzV+0JYuX873D/UmzGZkuJeRng
xgy+ufo9YsFlsCfZUInFDeBIZk7Gh3PEMu0fsH8Of9bez/ILqe828MgFwTM7
S8h10QXwy8M+pkPPYv46cOGvfI+8RMzf7yf1/RwncI3V+mLPx1jfIvCoGt07
9w5hfV+Bw/YsDl1fiPk1fymYDUUGwyrcMb89ePqHGztUfTD/THCna9LryGis
bw19nav+W8GQ9ttAzLcBW/7Hrbh6GfNP/019n3QjeFmftzF/HcP6qvRAP5a9
yP6UhvW1AhcLF52KE2H+aeCcW39+GX0N86/voX6f8iS4K26GS+tAUj+xOYf9
/3rKQsFX/b09E9WI69eClYE5u844EnNPgKs7swoG/IP1fwiuSTW6ZuJFLA9W
YZl3CQbXB88l5qwBJ4Umx/rYE9sdBWccnlmvEUYsfKBCfb6kC5z+6GtiQF9i
XqIqyxToPPzyzZdYkKNK5RP/B/Y4avn86G/sj6/g8gL1ggk/sf4j1VhmX0Z4
w5dl5PWiLDXq86R31ah88s/g5unHJaVDMa+fOsuYn/s4syqIuPQO2KisNfKV
DbGyDZxutSfBNhHzGmqwzMR1v+Nzz2DeiWBdx2WB5Ssx71Iwx8ummi3DeraA
PR/1d3A9jfXU02QZtTHXcvcnYV4GHJXelVHsiXkXg3l77S6mxWPePeCm93Wm
ivFYzyF9WKbwau8BCevpAXZgFi6u18D8C8AT0tWWnN+J+XeBzbW3zpBdxfzX
wS+LenSvtmE/TOjLMp/Kzl1/r8B+iAHfddisflG/g+SXgFW1M8flaxOLGsGC
8XNfTBpKzJnfj2X6/85w3WtBbLcdvD0y4eGtMcTCS+AWw7Di+5HEpf214P4Z
zjlwp4BYkAbujGkpzmkiFp8Ht/g76UX1+UryvQHrf5D/fuJBXN+3P8vsHjb6
lzyOmOsIDi2rs69wIJYWgv3mGJWrjieWvwS35jzW9U8g5mhqQ38usyuLiyG2
swOHrvtuvFm9k+SdAT61u/GhyThintofLJMQe7f2sA+xYCyYU7dAX2sksTgC
/KJ8UtpA9W8k7wbwPosxsjtSYj5Hh2Xi3mSmf4wlFlmCi+IvLxj9nrxfOhX8
TdVcs9SLXJevA0cW9r6AmHMSvC2+dwMnlpgNgPxvtp5tH0JcGgKurC6Z/GQV
+TxlMnhp7hlH72eY/zg49PmBUYtXYH45eGPyXe+xw8n766dwqc/jJoFfaU8T
7DXC/HngwauOGBT9ifnvg/0DDAdNu4L5v4HdyILC+kkHsky3YfBfsrPEkiqw
FazeqDvEpR1g6Rz1sq8s5jUaBOvx4JO5p19gPY+ABSXLL67RxHpWgBstejdM
cr2+HXy67I711UZi7vDBkDemY8ra7ZjXF5yb3jQs7QDW8zZYxzjwlU0e1rMN
3BzRJlh0itjOYAisL1nvAaqL5PcG74/Q6D9jCrEkHvyoxcZWa0g3qecn8KaS
+XBCIBYM1YX1cnmKUe1dYjEfnOSXtfSL5DvJvwi82bcRVjBxfSY4eaD687Mv
iUWDh7JMcL7KFnEksdQdnNnbfr7E8rih1PdxdoEvuDzRftZObFcM9ti0u+3M
COLS8XosUyI7YO2/mORXRoOLXg2M+HcvMW8HWN7bLrHEgivgZc0B65JvE4vf
gS8YG45wKCTmRumzTOKsXOOcgeTz+eng2vlbHtvOIxZdBPeeZkZNI5bW61Of
J9xqwDJpm1KcS5KwnucMqN9T+hos8vy4dp4jsbKPIVVPngNYd3HivIuqWE8Z
OO3zs9EBFljPWnCBb43Whyfk9VyNYTDfXCpt32RjXltwyzuVJkcXzBsJ3mFs
8t1CDev5AjyrZOni2bOwnqrDWcbp6+D6/fOJhdZg812hK58sIpaEg0PUdFTO
dZDfUyoeTv1eQQ84trcdT2A9LUbA/X1qfdzIj1gWBp4l0E15fBrXXwq49GCd
21FLXH/5YLGWam04n1hqasQyZlMuWRxei/0sAF+3MIAnfOznZLCWpZrBm1Nk
PdgdAy+x/1C55Duux2qwWuzHv1InkNcrJ49kGUfyQE/MWw3WqTz12t+JWJAL
1ljHfb0yH9fjPfCQyxvNO6KJZZ1g0dWnWY7exPxVPNgf/ghckXWPWJQN9hgy
XsVkKeav5NHr8Qv4oarju0uZmN9oFFyHp0FRX6xnOZjTHx6npdi/SrDq2rx5
5muxf4cZs8youXVvlEFYbx9w7eT777bxiOtvgSMrzPK1o7F/W8FtTUuF4mic
D/qjqfko8hpNzRfpEnDX84VRSzfgfGBHU/NLqDsG5vXJf/rUPsb55gmumNP9
7tcBnG8Lx1Cfr9w9hppX4kEmLGO/ad/4exVYTzdwW3r1vINfcb7Fgrd6Nij+
3obzbSe4iXGeV74Q630NvCc3LzwolVjuasoyMyszR0dKiDnRptT9tssAa23K
1bttQCy8bErNe0mDKbW/8OaZsYxFbO+GhfvFNjOq38QXwLUdY5uOFeJ8rjOj
5q/oH3PqurQIHAyrweUF3v9X5tT+yOljwTKrfT84/JJjXntwtcv9NT8CcH87
C95+6Kj0bDP2bw24eODnuNdvMa+6JcvMPtn7ByLsBxvw3maPnE3Lcf1Nt6Tm
H/c5eLVa7wmMmK9iBb937f5UO0tikRX4sd0Qj0lexNJpYPXMqnv6HzH/erDf
3Ccq3d1Yz99W1HqSmFuzTL7Li4gvhzB/KFhkYbv9+mfMv9aa+j7eCfq6zGQs
7B/DLHcUDMB+DgZrtCz873cE5l8zlpon/KPgwk3Lp1eYYf4H4PydieE1WsSc
yTYs8yOnusryHtY30Yba/4Q5NlR/SP4D75OnFtbZY/6vNtT6Eay0ZZls39fT
NNZjP2SBK5uS3FdfxPx3ban7V//ZltrvuSPsoF+Cew+QuN4OgYcmau35HYXn
tTvgGtmug/G38LymBPOGTcy8PBvnm6E9y9xpcVhjdgPX40R7at4pb9pT65PX
Ah5xKsWyYQP2s54Dy5xMvh7rXIXrkXGgzjeyxeAwjeS1PTzs5yGO1PqVeoDn
e7ZUrHuN62+BI73+doNndIRWnArB+TDQCZ4fZPlTZ8fhfJgA9owYyY07jHlj
nKj1zpOA3S08LjxqJb9fcBX8x6HKjef/xvng4gz7U2U2J6QB6znfmcrL3w7W
j7BsmdOK8+2SM3U+k751puaTnfBP6jwnTANv36yQ9T+O+c+DjdRGWNxVYv43
f1LnV2XfcdTnibeMo+63rHAcnf8leIOxhY/fv5hf04VlVFz66im343yzAxun
a8ETBdb3DPhi5zF3hS3Wtwas7WWZ+kAP86u5wvl62YSsuZdIvYRjXanzuSTC
lT7PP3Ol7o+AM54634stwa1zWjU1/TH/VLCbZ9fRBFvs53Xjqf1L9Ascn7bl
buhCnHdmE+D8pC0cmyHCeREygZoXnLXg0JawgQPO43o8PoGah6Vj3CDP2o1V
/L9xXkwBQ/P7tt3GeZcEjj10NuWEC867PDdq/xPfB58qmQ5PEDgvJrnD/rY/
rnHuaZwXCeCc3Oz+NrU4L6Tu1OulVeA7s9IXFMYTyzvcqfOgcIUH7Af7l5dF
/Mbz3BGwVnhil4k1nucqwOmFcyRhZnieawdnzdrnc7IE591wT5inp1KLiy3I
ddlB8J+xtQHLPInrb9PXuW3gkdKI5c2T8fzmzYfzXourtmosnt9ugsvfad+0
SsPz2yc+dd4TDmVgHp6w900JwvMbn6HqX7qIoeat4CM4Z+UNOEFjPQd7wf14
OqrS9CvOB3cv6nmuPg78YOeSpLeX8fy2CyyS78h4vgn7getN3U/5eG9qHnNi
vOn9b4c3tf8Ir4Ddfg7a66SC56FxE6n386ImUvNckE5fF18EbyuPmqiSj/Nh
rg/dv1vBI0rHGf59E/Oe86H6Tf7ah9pPJH/7Uv1XKgM7uXS31u7EfLW+1PMF
T8OPqo/AFpx68mRWWSXW718/6vmL+wL8rcTrW8oQ7FdVf6r+Imt/Ko80HMyZ
clMz8wHuZz3gQPnBxdVPcT+zCIB54/LOiW3B+x0G7ib/OQTXVwpY68CsPgtm
4P3+GUB9v8w0EPaftCMbvf7A/VgA1uJf77uRxfudHEj1E/8YWC++8ZWqLa6f
0UEs46Cln+nbiPd7ShC9H68G7/nhNc3+C87f3CBqHkruBVHnRV7QJJa59mPc
atccnF+rJlHzUZwNdjh041ixE86vSnCR7EhijC7O3y9ge8uuCc3TcT84PJk6
v8vLwbN3f9+m+xLnbftk6nxsN2wK9bxeemAKtd8rb4FPG8ZYScOwP1vBFiUp
u5dPx/uvH0y9XuwVTPUntyyYOm/x2WDqfCTSFVDzVOoJjol/YDx4G/brQvAP
f7t7E2djP3wAF5VHxPULx34YFALPnwIt6csZ2A9uYJXe/5w6F/PHhlD15e0M
ofZP2YBQ6rxR7xpKnZe50aHUfs/PCKX2K9FlcHfZ2eVVfKzvuDDoZ2Oj3r9w
k/rOA1cnF211X439sA3s2DH7aG4e9sOFMPr+z5lKnR/E/4DjV95/ccYc8xaB
xR1+iqIe/PvZK/DulTd/XHyGfz/rMw2eL+tmTxh0H/9+thk8ynFxT37VV8//
AWNmHWE=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Hk8VOsfB/AhsrQYFBKiJMkyocUSc6gsqSgUdWuoVFJp36iptAmNrX1B
kRaSZIlKu7TN9WtPmhTVnDAkS6l+3zsf/3T/uPe+X2fOmc/5nOd5zmNMQpdP
W6DI4XDaFDic//5L/xjHv5Uy+F+ZK/3Lt4j8e0XYs3tqcgvfk6NrmwrHwnm9
aqTMm67woxX4vGQU+W6Dpl+dptyRBWQV7YVnm9TlTqv522LVd1LmoY5/v1Jc
j2NHjr/tIfFTkbv8DTk8652ojSu3TFkiZYQzB/WLx/nGPHJPdY53U0/kDSbL
vL7+2QILY8j57e8e6CjJze3xnr4v7MHEdGW5+VbkstSf5+Lw+cgZ5O/X7hgY
I3/aVnLo2i88AY6Lz5HP/xyzMgH5BBa1UqZgmHrj5L5yi/zJApmt17feyL+Z
7KzoPfNAd/5s8r25sy4f6YP8//vvuOTmk3xcP8/vg5TpevBdKQfnSzaRT8zt
beSMz3OzyII+HGkV7p8vJh8uyT+ep4D8P/42Z8NHKWN4pmrcWlyfd5Kckt6x
+J0q8j8ih0cox13tgfztZI8px5xD8X3lJnVSpv6tecmxfuizkhxWwtNc0wt5
W8neJvUhPdCvxKheyhgcu/2/Lnw/14vc28IsME/WJO/zXv1fnxc3k8Pd9/X0
wP1yDD5JmeAmsUoYjvMmkhtd+/CKm+TnCyLJC0e75WQros9G8spZttLd2uhz
wGcp4/jSIOCBMcaDO3mjxfA99kOQfyn5bn/etbA/8uvlHSC/PB34rRH98HW+
UJ64DaN1cP1IPrnXyt++O7vHbzi5b4tCmlGH/HxxCllcJc06/UVuznVy1wtH
3d3oRzROKmW0k9//MML4Ll9Ivlvx4doujB9ZItlyrulwm9/y843LyLEPxebT
u8dzPTlsrN1skxb5ccl8Vsp8vuchHIXrc/eRPY73W+6J6/NLyF+2H9pT3D3/
PpDLZoR6zsX85MV9pXzq582//kSfheQdWju7tnXKLZKQpwfylos/yF2u3vDX
cZl9w1/nCy+RtdXCUpx+oM+35I3B86vXoz+JSqOU8TF3/LiuS36ca0v+EeDZ
mYnz+bPJ1lFjVOdjvIhfk0dW8bIO4nyOcpOUefe4riUG45FnQ9Y0sllvjvsX
BJFTvA5cDMT4EW0nD34p3dEHNlaUSZk5XpZrzqJvX0vy+AVa6UU4XxhIPncr
f/MsXD9P+N/nOwvcbuO45Cw5QV/Cr+teH4Y30/1OvfBaG9dPm07O2rSBjdVH
/miypVWwSYMO8meT95VXqbQaIH8Veeqkm5Ge3fPLt4Wep9IajU6sH7KN5NiJ
gf417RgPmWSZzwE/R6wfvk/IC1MUt+iiL2En2bpJv3gPzueu/0bj9d/8RdZ6
GA8Z5I7jY73a8X2RD8lNczbx1wxG/jZy3APF4GXIJzZulTLTWr6ZRZmj3xPk
Edqtd3tjvRDdJ/tfKl/3DnnKv5EvPXL6ZzmOywy/S5l16WcWOXWvb57ktMX7
BnZqoU8ZOWX05L72WE+4A9ukjNTon1Iz5OdPID9/vEN3PvqMXE42KBlR3joA
fTaSG7b/OzxwEPrUa5cygUN+GcYZIq8bOVY2030qPi+KIGetXh3sboK8+8m7
chPGHdRFn/07pIxqsO6YyO71zZV8ZGqM4TzcX95ispnP01OXYUkyedWqnKsC
zDfuNbKLxRY2YSD6dO6UMpeDVUpu4nriMHLtxYS3m3Cck0g+UDpqWBnWI14p
Oe5G4PUcPA9BHbm3fsuZ88PR57wfUuZ42v1v/XDcOIE8e5MsMmoo8heTk2wq
V0nskL+WnDHj5jR7I+Tv/VPKFNvOfaGL4/y9ZP0cBQ9pf/R7mWxy3iFoNvpJ
e0ceKYmOD8XzEKt1SZmahUpb63E9jj35rmdRFYvvF+WTp0/6wa3H8yqvJl/Y
ZmJojfVX1vOXlFnUjzt6FfowHklWqZtfsAHzw3cWuSHEO30F8khekXNH+Hr6
aaBfpd9SZtsjC9kqK+S3Jnu6nzhjbYb8M8mZmmlZynjeadvIjgOHPq1HXzyF
P1LGocN4xSlcXzCCrOMy9+t55BUFkIPUTve+i77Lt5DVMuwOBnfnP0Oe41mp
qjQC/ZpzWEbp12ztC/bodxr5scOB1jbkkUSR9yeqmsrQN/c0OSj57Mf1E5D/
X7L9t3vKEbbod6oCy/wpCFmiy0e/G8ma/zjE3rBG/lNkz4UhCwfDgscKf11f
1EHu4dXo026BftcpskzfooqSrJHoN508z9nPfrcl8j8gV1/c3WWKvHnfyWfN
2qv1cFwyqAfLcHRCLBWd0O9xcmXCh9P56Cetghyc+j2+tDt/C/msep2C2AZ5
PZRYJnWleWYM8pTfIef4XFDZhTyyJnJRztBK1XHIq6/MMuErDQdIxiPveLLr
oqWCJTguXEYuDqna1Inj3AZyRfbn282j0aduT7q/ogCtfDyPSIbc0VawfAy+
L20JeWiWlkQb40ecSs6zG3Yncxj67KfCMseO/zAej8+LXMicO+b9enSvF4vI
zknRI/0mIn8S+cqlOmMRnpfxVfLxHyo2q1zQp5Mqy3z13rzQBf1JFpAruUrj
Dnsiv4hsaqqRaApHfiT7lK5+3+aD5z9PjWV0StUyvXGcF08eYvfz/HoP5C0i
fw7g5Z2fjny91FlmbGupcdxS9BdLli4xsbVZj/4KyOVBtkVThchXQ17VRxI6
axfyqfaivL+H+NYlI58dOTPKpKxuJ/q7SH7Kcff+uhv9vSFfaxs6dtZ+5O3Z
m+6/xnLtgETk5ZFTLa41xuUibzD5VoD0oOF19NWjD8sMd51tGHQXea3I+Sc1
H/coRd4Z5KCL3F/1Dci7ldzaOeRhuHGz/Hlz+rLMriCxw4m+ckdakPc4peup
vEdef/Lcmqjb/XvKj4s3k4eY6Q2d8xt5z5DPJHvPd1eQHxcN02AZdZVT1SUd
6NOPbPrHvTjuMZ73JvLFP6GfGmqRP4tck3jhnE13fjE5SeXSTU4L+pzCZRm9
kuSO0Eb0uYGsfCg1ZzGO80+SX6REJ0T/wPN/RLb2b3bJfIH87eSP7OXqc6/Q
X5omy8S5NNwZ9Qzjs/I/W1yzKobLW8lFP9WZte+Q10iLZYzcZmbceYs+j5G9
PgydEdPd5z1y5rn4A9FfkLeZfKiDGXhcgrwG2iyjVfR+/8le6Hsi+YLCNb21
WujzNjkjNdXnYn+5OU3kmOthIjMc5w3oxzJ3YlyHmPHkFriTVecXvilzQd9L
ybc/dozIWCu38VdyjMVgr9+r5fbV6c8y7StE/GV5cgv55KDSFLuoZrnzwsm7
T7Qe9RfLLUkhWx+Z/rmoV4u8T20dlnGbpLF0W438eNo4sta+jAT+C+RfSN5U
klb1bCnyJ5FvWs4tvl+C/GXkrqm1NQUr5S531KXxu+D94VxXuWXzyYaqtRtO
eyL/PvKkpaXLJoxD/hJy4J4ldY8Dkf8DuaH/kSU3psjNDdWj9WhKxg2dJeg3
jnyrSdMqPgbjuZC85XG76hch8kvI9t/XVz+dhj73DGAZjX828JOd0eclcl1h
fdL4Rcj7llylnK19eA3yqujT+vxyeLFfOvLakms+5Hz/fAl95pH3jZ4tUStH
n6/JRwYtz515GnmVB7IMr8NmWXIq8tqQG2/dcFHD84oMIl91O9rmHoo+X5KP
lq/d+30z+lQ0YJl+DQoaXbgfgSX59JykJUu2In8geePvMKPHc5FfSNYK2fm/
1+jL9w+57bYuP8kdfQ43pOevunfsU3Pkn05Wf9rpfQnzSRJNdhowMHbcc4zn
bPKOKS0Hd7zB/DIzYhnhHaumwV+xnvmS52UWZyRh/nA2kXtm2k7rysd6lkk2
usOv16jEfHxC9uiqm2+A+SmbPIjeV9Yry30xn4zXk/XW337eH/PZN4MskqyI
5uVhPj4kt58Z4TPzOOZjG9nm6PPotBSsD2uMWebBljOj/a5gfThBVjodvz0G
60/afbLRCjVbCeaz+Bu5NEez4RXMMTJhmR+eq9rW9kGfd8k5j0xd5jliPMjI
K60bYtwwP40HDmaZRK1lmvkm6HsCOTm+3el6P4yHW2TXzyYXrdE3t5GsH/So
58Bq5NUbwjIGfZWiRl1CXjeycH+BxfWryBtBrtg/KaAK6zOPJTuGjH/6LQd9
9jdlGYlmcx0HfYtcyTnmCk2cdKxvi8m1gWmSxTguSyaPyV0edO4y+tQaSuvf
qOrDd86jT2fyQ9HIOwElGA9h5KTdqZp70Tc3kdzzdp2OM953/FLyPscthSaH
0aeDGcvYptpa/DiKPueTP02tc7K/j/wJ5MnnNsRG4X0mKCaXbT5ovhYW1ZKv
hkVMfFCB8RAyjGUW/yqumYJ+fPeSN3WWf67B+0V4mVy5zn/Hi3rkf0ce99vj
+ACMx8jd5iyTxnhNc8T4SssnV6Rwzu9rRd5q8vWUPWc7PiCvynCWWdB5atvV
ZuQdSXaveOblgfzlF8jG4QtqHNrQ5ytyTJPa74XfkVfJgmWaNms3LMT709ea
HDjsg9q2QZh/M8nufV+/OWqF8fCC/PyT/aeJMF9hBM1vt+ATfLw/IkeQN497
8jgB7+u0APLOo9tP98L3ibeQTyV9HlyI96/gN/k5V2bMr0Kf5pYss752wklb
zN/yaWS39rjODzhfFkW2e5q06IwaxvNpcsKN2FGb2tHnUCtaX4Xhs1L/YDxM
JTuLh6zIwPjmbiQ/y/dJvY/5wj9FPho33PpCD+R/TO73bfXr9l/od7I1rZ/L
qr2DWfS7jrzIJ2tyL7w/BenkZZE9PJoxPkUPyKGTUjnK15D/O7nnusoBlY8w
Hlbb0PsxQrHWB/crPE721kp+8wHzPa+CvLpv8TLpTeRvIesdspibmo3xbMhj
mfMai+cpR2F8HCGLjuzgB2K/LL5DNnuske0fiPwysvoj1Yit+DxPfyT1L5Z6
Zaci/3jytGjz+bmn0O9NcmPrusummB/GDWS7oKyY5zuQX9eWnldN+CPhQeRn
yDvP3QvQLUT+JeTC1oTlEdgPRvazo7+XRA0lhzEf01zIRtc8XVIw38SLyFM6
NUN9sN/kJJNTzdo+5q5Bn5r2LCP7x7C5bSP6dCLXtXIK4vcg7wKySHprvXA7
8orIo4epS3YFI+8V8uBpzwat7t7/jh3FMpGcz/oRh9DnPHJEWdWSlWexPsST
zUX315xG3sgiMldboiQUIf97ctCYpZFdWL95gtEskzVhwEkujgtiyZOmpyeO
3Iv8BeTstozVOkeQv4b806AlNuIY8quOofkpVHvGw/WEu8hmk/Q3uXS/Ly6S
Z2YnjDaMRv43ZNmLBwkRccjfcyytdzarVn3B/fN5ZB+Xi9pH8PeBOJf85Gzt
lJTF6PcVOdYv+nWBAPl7OLDM/LJQu6FeyG9FbjUa72wagvwzyFPVXqmPxfnG
z8nHK/pqTFuOfjmOtJ6bB97kLkN+C3LtUuWrG+A8f7LhSMvGkjPIv/k/6x+e
sfk2+v1Frjx4pc+MYvQ7zIllmpcs6kjEei72I1/4YHXFuXu9iyInPIvTfoT5
xMsiT2zLzSjpXu9Mnenv6SX2T51voN8p5P8tL92z7l/k30A+d0KvlzvWU9+T
5Mu2EwYkYf8ufET2T9Yy/DQA64XPOJZ5VW1+qq8u1ou1ZEfFKPXRQ7FepJE7
PMrWm2B/nFZJXpy/1mCFEvafreS0+H1F0TguWOVC7/cA4f8CbbAfOka+sqBF
/ZMT3t/3yKGy1ePPY78nayZ/Ujq5IVAf652BK8tEzUz9t94B+6HD5NUZkzXu
8vH+vk0u0uiMyMf7n9tEbhXfjgifiLzufNqPfv/ZWe+D/dtNMre65YHCLOzf
vpJvPclOvo79u0CHYZkJYdITx7EfE/HJoWK9lLNYn8rDycyKvm+tatDnF/Kw
9TkD3aToU9uNZUJqu7bVPcV4GEd2rB0UbH8O42EheXOC7fUBeF7cJPIo6ZGP
2/D+T+O60/6lvcNwewHGgyP5j7aFudUdjIcFZKULVeWV+PuMt4/8+pDQwwrv
T0EJeeJ+yzJLrLeyMeNpv+EQ8GPfPYyHUHK9s/eTk1ivfePIemOOXPmNPMJC
skNrD6/l2N/w505gGbHQ7kkI1vvIPeRrnmoZV9FH2iXyzuf+CrNg8Vtyl2SO
wR/sT0U7J7LMnJ7528zq0F8eWTQnZMIavK9kr8nplbL7hXifGyt70N+z7tX6
/mXIZ0OudtxtWlmO/nLIG6rb9/Ffo7+X5ArLZRW9sB/lK3rS35eKBc+GPkRe
S/KUUjvvo3geaYFkyTPe1YXIK/hDTsx+NnYZ5qdouBfL+CUO2VD4AHmnk+Pj
R2uwuJ4smpyf6arvgf2osMvrr+/PM/NmGV2vLWcc8H0SX/KtK06XP+J87iZy
wdmGGx64H34mOdIs79Eg7B/FQybR/Nzb1uzT/bynkMvY8ToOeB689WSj2Ld3
V+P3DkEG+VfvaP/C7vXrIVl12knfwpXoc5IP7WcLpyZZLkKfa8gK/+5OScXv
PcIT5M3SJwFi/H6Xd5+sOqhn9ib8/iP5RrbueDxhtx/6OzqZ+k12uBYUibx3
yYqBDrVhq5G3mVzB/Fi8q/v9O3AKy0xn5/Q/sgJ9HiJbfAp0vY/1X3aL3O6e
l5CO97NxI/msUkxnOt5XvnpTaf0NMForwO8xQjeymZbCbKML6PMGOcr5H+Wy
W+iTJb9wcrhRAUf296V+uwon38d6meZKbuTFN0VkIv9i8p6Xs07UIo/gM7m8
dkKiOr5PpOVH++FqT7Vc7KfLncm5Nz0mamK/IAsjG3omVt5fgPyJZDeHnd5b
8T7K05jGMpyCXHUp+pA4kM8dHGapuRb555P1tN3Kn/gifwJ5a/n1GKkz8heT
+wdGHNJ1R79jprOMYLtgQcok9BtCNm3rfSQXv5cJ9pL3xO7ckY73negyeXLC
qqaIuehzjj/LFJ/47BEUhD53k63DmzVS8bzz8v3/+z3j4bdV+P1TUk3ur2y/
VQ+/j3JVAlhm7hUFk4mm6HMH+d1088Evhslc/w8/BuzM
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 1.6786344908769866`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 1.6786344908769866`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680300670903735`*^9, {3.668032821463683*^9, 3.6680328418687954`*^9}, 
   3.668032879070866*^9, 3.668032929583929*^9, 3.668034068744912*^9, 
   3.6680783651426744`*^9, 3.6680785301828213`*^9, 3.668079567034998*^9, 
   3.668081644195116*^9, 3.6680817488791685`*^9, 3.668110928922552*^9, 
   3.668111678434035*^9, 3.6681124217779565`*^9, 3.6688645564349017`*^9, 
   3.668865156480183*^9, {3.6688652190216856`*^9, 3.6688652272644167`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<btal.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "btal"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<euo.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "euo"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6681116553181944`*^9, 3.6681116650122952`*^9}, 
   3.66811237640305*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<JGBT\>\"", ",", "\"\<JGBD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668025228046261*^9, 3.6680252311869135`*^9}, 
   3.6681123743627853`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2WdcU2cbBvAAIqhVI7JnFGWPgCAIIjlAUVQ0DPcKQ9w2b92iGLHWhRoE
9yBuba3GhRtjq+BCU6rFCUEckCMQhuIo+t4896fbL/7+QsJ1rnM/z3MivVJ/
SpxqLBAIPhoJBO1/wx/Rxpd67jv70xAJll4AG0dteNbSxdBuRRV43vn7Rvl9
mdVdKvScX6pbxnpzZl0wuHy/9VC+nr1efg68yfuHGT5aZlUFuMxJsNWonFlr
XqnnVr+Jrrhxn1nQD5ztusWcq2LWPAefe9NtbI2Evb/BVKfnEvf+/m+tDbNI
DJ5zenOCsx+zdLyO5FP8Ai6x+jXIuoa9n9CkSs9F/1wqjnNnX5f4gmewgMzy
MVXk9aqV9Ova38EBh05LVlgyy7xe6bnBWwMWfvNgViaDF7SOebE2gFmTBf75
UfO2f/wx/7FXNP8/4Pidc93mi7DPhGo95zr+hGmBHfaZCY5b2LmqyJlZeKSa
/DyJFpxwtWyWZ2/M/6WaXJ9gyWuSR3zwNXm9rPQ1uR5l62uST9PrDcmjuAue
u2X61QpXzNsCziut8xnUD/M6v9VzG++ol90Ox7xx4Jya8h7msdhnCf26tvEt
6Ufg+I7kE8dSy+TvyPUZ6t+RfkR2NcTS6Bry/oo51OrtNbRP61piuQQck3Rk
dycnzD+TWptfS+6f4Hot6UsZoad9TtOT6zfk6sl8i66Cfyuak3ptMOZ/S61L
54mFm6kll8Bfl0oevJ2B+aupxTnv9dzB1t6jTx3GPguplTpqTec6YkMQ2JJd
MPZ5Flxqaz99Ygr2+RJ87GV+638JmNesnlgYCGbjOB3zTgQ7zQ9LT5iDfT6j
Fpg2EIv9weWRVyatGY/5x1ErV1GLjA3EUh9wQw/Lb8XpmH802DEv5bNyEeZX
UOt+o5Z7Nuq5xqSCJ1fkOA9J4HpxeF7HnzD/crDFbI1JRhbmP0a/X1wGtpW3
nX2+APuVNpHvNywFd4ubWKRehvkPgwN/qfIT5mD+h9SKz9TCxc3EkgPglLdm
W3flY/771KqP1FpRC7GsgFp5h1rTTG1w+kAsGkKtM4DbJtgNODoF8zp8JJb8
CA5d61y5ehXm/YlaUA+efGjZ5cNrsU/bVmJZVCvpVzmbWrONWmr1iVgRSa2e
Qa3LoxYWUasGfibWZlALcqnFV6hlb6gNaV+IRZuopRepFa+o1T98JZZsoJaf
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
1KIl1NKD1IrSgeTzh3B4BP08spBarqJW3aXWtkSQ65PNG0Ss3DuI9KcpAWfb
H3jctRHzN4IHlXwd0OER5neM5LnB9Xtg4rDfXZHkfuhugislQzf9ug3zN0SS
9SSPlpD3E/wJjr4Xql9yD/t8LyGfB2XWHM/d9f8Su+Mz5pVw5P5oZoKnaD48
nFuOfdaCYXPrdOUE9tkzCs7HRVtGyE9i3gjwgEPbW0aUYd5pUaR/4Rbwxt6O
/T9XYp/CaPL5UhsWTeZTMBWcarzyt7RqzL+ZWnYJPGFv7vpLj7HPkBieK+g+
5YpxG/aZCs5hDWD+HLDpxO/vFzo1sfyF4M4r0gJ9XJglU36E/bDH/frO0czy
deCSOUP+Z9ONWXUW/Df7wMysfUmt/DWWWKOmNjyjFpkOJpb6U+v+AM/y7K3a
9AL7ezKYXK/EeAic950SN7kkY16fISS/ajTYo/D3JqsQZtl3cIdMt+xCd8zr
GQf7U/rP6y1lmDcJnPRhTk8+AvMup1b8B27/38Vjq5nVbkNhv3/aPfReKOaV
DiV5hJngwJfDayRi7PcwGA53bste7M91GDwPiIva5DeYBSPAa8Z7/HHlOrN4
MZg9PtVg/gPg9qeNhKuY/z5YO7f9N5TNrM9hw2GeZ+5qVCUySxeAI0TTmoMW
MysKwO/T8td0Gc2svgO2L75ct3Uys64ZzI7DccyqPfE8d3Na+4LAvMXgVSHt
/4J5G8GTHDJy3l7EvA4jeK7+yO0Kfx32uROsX5W+c2kF9vkX+M6s6LlaLd7/
ejD7dYQY89qOhOdb9gslzBsFLiqwCHa6xCy8Aa4/7JIqSGWW8OALe7KMyiOZ
5VZSnlvgaZ48eRfmjwRv/2XSvz6BzNoZ4Pyosq8hbsyyGvCH9cHL+49kVlok
8Nyoput587OZNQPBM02Ez1NdmA0Z4PTvZV517th3LrW6eyLPBVwIc7Wah30O
AD/KDX93bxjmTwd/OWH48WoZ5t+USO6f/GIiySsISeK59qerlfHM4hTw+MDY
Wb0TWlj+DeDaog4xq0KYlefBuvN+kxTrmKWTk2HeG8+WVu5gVqwFx3RoT4R5
z4A3hCbtMP2CeV+Ap9ilrCvIxLxmo2C9ffwvWr8E+1wNvrVqxT+uHi2R/wfG
XS0h
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
XA35tWhV9T5Yz1iw2MuniMkTO/4PIU0m4A==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0.7830798238560035}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0.8070913946569348, 
      1.2873228106755628`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0.7830798238560035}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0.8070913946569348, 
      1.2873228106755628`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"JGBT\"", "\"JGBD\"", "\"JGBT & JGBD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680252337025223`*^9, {3.668031059959094*^9, 3.6680310640966015`*^9}, {
   3.668032816869893*^9, 3.668032833933844*^9}, 3.6680328714675937`*^9, 
   3.668032928110566*^9, 3.6680340567214584`*^9, 3.668078350073217*^9, 
   3.668078522638321*^9, 3.6680795594343996`*^9, 3.6680816341974983`*^9, 
   3.668081742856388*^9, 3.668110919950199*^9, 3.668111680071972*^9, 
   3.6681124225088577`*^9, 3.6688645576692224`*^9, 3.6688651569645605`*^9, {
   3.6688652195216813`*^9, 3.6688652278232803`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TQQQ\>\"", ",", "\"\<SQQQ\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66802991472351*^9, 3.6680299654683013`*^9}, 
   3.668112378900997*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTOsbAPCptNkqQruxFqFEt5XmqFTWaVMhQmm5lpCKpESJqGkhieoX
RUKJUgrZVUpxo1ANSplDRkWU9Hs8z1/8ce/9fs6Zcx7Ped7nXe6E9VsdvCQ5
HM53CQ7nz7/hD/dok4ih/xRbwD/418EW5q8Lvbajw9+Cs6ZoPJq36Osf5w9r
FjHWZQUm2hu+/LHQEOyaaGMfu6jzj/2vgcNsT+/P/YHOaAbn/Htibq0N3l8r
1yJilFI0AvgW+HzOHPDNBmYwmEGXvwZnrPgZUZKOFksLRUy2ReuR4XL4fq4+
eOSBW+XO8RTvSvC1+t3mUSPxevgBcOvru0HXzfC6otRbeJ97hYajD5o3E7yt
PGn6pAdofxdwXO4QrjWLztgHFib8Zzx+FD6vNhcsceO+4NAvvO4x/Z2ISbOL
yfY1xesCJ3ByU757WxzFvxccLfUy7J4vxX8e/E3/1M21q9Dc5+CgJMOAJUfQ
+fbvIV6jPcqVK/F5whBwU2hg5GRPtGI2uDl5/uLuCWheLfi6qOFLeBnF3weW
Pe58xX04XufsaoV8y4zra/NF658Ba58JtfxpjPaoBp9YNTF5WyHF3wv2XW9r
LPiMLp/QJmKGqA7p2u7UhfmsBDeMCMsrHtKN8faAmZV2Ny6+wOtCrQ8ixmrC
Hu0oY7yuaAf+Mv/jGMO56IxHYGVuwdef2ujar+ASOZueR1w0R6NdxOiU9Psf
c0LrLwT3PVL6uKYe7eEP7i24auip3YP57ATLWQmfyWuhuaodIsZp20vvQ2Zo
viW4rk7klj4HHb4Z3C/lxVt9keJPBv/MclvSVoPmjf0oYuo/2I44+RbtzwOr
jO1treqg+P3AkZ8zpE9Z4/Nqk8BTEh7UBM5Gc26D1Uq3FepaoQXzRCKm67rY
/LMdutxb9Fd84nhw3xMTldyTFH8ZuNWH2aCQQ/F/AMu5FzonN6GFnqyIOfni
hqGu9DfMbxy4ocexuaIEzSsBm800s/d4ivZ//8cbmxtOmH7HfB75JGLcJ+RZ
dkihPYrA53f2VwVY4P0CIZhrXjIx4ga6fOhnETNgY63fF4kWzwX39R6ZlteG
Dr8Kfm+7I6adj8/LbwLbFY/fNnMMWijbKWJWLDV4YuyMVjQAV26ReaO+jeJd
DV7o4+33LgCv174Cj47TGTvEA82R/iJiLDUX7iuqo/j1wO232iPHWfRi/G7g
qmovF5PpaMF+cOkFD37MW7yfKykWMQY2vOCbHWj+DHB/y8hg8yp0+ArwcLnc
U/JK+Pv8cLDGzZin5jkYn/ACeKTOroDZvpTPaV9FzCOFQ3t2NKIzHMEXRX3v
Q1aga0PBngUrf3CXojnnwW7ZZ3RTVND6z8C/5437VhpD+eV3iZitXZp6d79Q
fneD+35Nsql5h+ZmgS9OHr2s6QTF/xS8PnnSfJUuiv8nuL2E7/ODwfgVg7tF
zO5tgs/v69C8TPCFkTuudJv+wPif/O2M7+Dmmlvb/lmDruX2iBiepMKjS4Fo
j3TwsqPdH3aXoQUV4MpLyWFKz9Dl3eCfw3lpFWSx5jcRM7Tjzf23xWiuLThr
7bzFHKmfmE/xtz/j1201zxitqP5dxDwcn/V8SwXez7MGvzpadc+2kOLdCk6M
rVk7dRzez+kE5/3bMy7aCK2v0itizt26ceH8SYp3Abhr2u/qshl4XbAJbNTc
aHtVG11+HOzADc03v4v388f8EDGn/VIHDkuhwy3AL4f4Gz7IQef7giN29iYW
PUYLE8FpApevW+0p/lvggp7l2cMs0RnmP0WM/sTXEYGJlM+NYPum3M8PVqM5
8eBhGh9n9U+l+EvB8yI2xVvEUj23gS9Fy7erLqd8bugTMSF5lQlm9L24sWBv
8xGRC+wp/mLwk2e/Aly18ffh78AVpm+OBk2meh7eL2IMb17b/vkF1UMMuKOr
+4v+JbR/IfhE0Sd3qUtYTxkt4Ck1pfWuv/B6rfwvEfNUU2vNgUoaj3PBbrmm
dsVjqF8UgO2vSDRPUqX+9gYcIdF2Zu9E6m8yAyImpfDYWq9r2D+5s8EZB0JK
vnmh+avA+3qLfHg61N8awVMfV5ekylB/G/Ib4rl0fDAhF9/PmwXW7uZWpduj
/V3B6olxZS9WYLwZEeC935zW2ArR+hKDImbT+OXOy3spv7rg/65dn7VbnurD
efCv+i4PA/d1Fn4a2Ur5zwF7GhowRSK8P1yHwzK/i8olR+v1YX4dwMGRNWH1
7VTfe8BzX3N5mmTFc+Cq5447vo/H+3l14GGDz9f6KqBrl0uwTI6m2tSHjmjO
bnBRwYx9dYlo/bPg2NeBt8xL0B414KdWs/mySv0Y/w9wU6Nl7ih7NDdIkmUs
HbWeHFdA8/8HfpVY0iKdiw6vkvzr/vxv4MbYiXc/XEILx0uxjH/8fv3fQrR/
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
IZvaOrGczh8iwam5Rp0v1w1Y/B/3NNop
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Pxk83XnwFJYZjvMKwD7vg91t9+H15LMc6P9//8Jx1hrwHJ2Bv5ZEorn7wSXW
x2lhP7QgH+xoqm7y5xden7PaEfLuaf40VoU8/71gyZbsil+GOC7KA58cNzFP
R4SWfHRU6E/h7nk09WN84eLnyeR5i8HxXfNW7aog+d6DNUSPiiJ9sV9YA5wU
9iPcqU4K+zPpJSeF9Y751klh/nKU5tPUmzXtlHo4Wc+mgMtvXjoqKcLjRV7g
jN2XSizVyX73D3hoGcs8rZ2svxOdaUo4OWjaQmMcL3Z3VlgP5THgdTHeF8Nv
4PUEv8HfGz3735WQ9ctoAbyPzoi6nceQvFxwzD9LarWVyX49GmystPjQgC9k
/coEO7Seq6Gtyfo1biH0w5+7wROGk/XLBaxtn68jFpL1ayu4YWtPyO0esn5l
gI8eibHZ9ZPszx6Doy/ceMC+RL5/LlwE+2NGudI3BnmfhYNHFVWWtbugBeng
jOUnFtjKyffPB+B4jSL1KX3k+2cn+O6FhTsSr5PvmycW09RLm+ZD3Hdkf1a+
WHF/3gEmfx8jefVcaCrB5/zU0Ylkv3vURWG/IL8H3qzyZOPP7WQ/2QYe36WU
MLmSPH9dV5riyst82kaQetuBS+K7hwZPJM+/xFVhf8+hwSHVrMsvg8j+bASX
/v/vHWR/ZstVWJ8lgeBMH28X/TiyXjWBvVe8DTFuRgs1l9DU00s7NH9Ekv2Z
Nfi6+oaOQ4PJ/iwAbHz2xMlho8n74iB4neH5/B1t2N9iDTf6/7/3oKVzwEdd
xuqfr0Iz/dwU1kNOEtj10Ijgn4vQ/JvguSW/RpWboBmz3GE+J7C/a3aQ94EP
ODTx1r1bJWT+J4Lnzra88poi6+11cO3vxuLoOWjuKg94Hz9Zv9zTEy1IAAt/
nbyc6Irni3M9FNYD6Ye/40PH7F5vgGaqeML+xigvtohP5n882Ha15rIn4he2
/wGSIAAv
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zrA/bFXwUbHD+/fT4FL5jdncSmPG/wODVw39
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.6048348000000005`*^9, 0}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 2.2388112903357036`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6048348000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6058176*^9, 3.6687168*^9}, {0, 2.2388112903357036`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TQQQ\"", "\"SQQQ\"", "\"TQQQ & SQQQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.668029922314522*^9, 3.668029966891885*^9}, {
   3.6680328177136507`*^9, 3.668032837720002*^9}, 3.668032875289584*^9, 
   3.668032928798088*^9, 3.668034061143282*^9, 3.6680783575774946`*^9, 
   3.6680785234351854`*^9, 3.6680795632476196`*^9, 3.668081635791247*^9, 
   3.6680817474814653`*^9, 3.668110924402893*^9, 3.6681116810497675`*^9, 
   3.6681124233230357`*^9, 3.668864558949147*^9, 3.6688651574489326`*^9, {
   3.668865220000208*^9, 3.668865228292084*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9, 3.6680310240717154`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart2", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
   3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
   3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
   3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
   3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
   3.667989983816139*^9, 3.6679899846396537`*^9}, {3.6680328189012156`*^9, 
   3.6680328236945057`*^9}, 3.668032854896698*^9, {3.668032892840277*^9, 
   3.6680329128159447`*^9}, {3.668081685682143*^9, 3.668081688494714*^9}, {
   3.6681123817767186`*^9, 3.668112402824794*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.6680817833225226`*^9}]
},
WindowSize->{1282, 797},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3208, 82, 173, "Input"],
Cell[CellGroupData[{
Cell[3791, 106, 339, 10, 53, "Input"],
Cell[4133, 118, 280, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4450, 129, 1912, 31, 73, "Input"],
Cell[6365, 162, 39070, 715, 422, "Output"],
Cell[45438, 879, 39809, 728, 433, "Output"],
Cell[85250, 1609, 39595, 724, 425, "Output"]
}, Open  ]],
Cell[124860, 2336, 753, 20, 73, "Input"],
Cell[125616, 2358, 844, 22, 93, "Input"],
Cell[CellGroupData[{
Cell[126485, 2384, 207, 4, 32, "Input"],
Cell[126695, 2390, 38053, 701, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164785, 3096, 359, 7, 32, "Input"],
Cell[165147, 3105, 37045, 683, 425, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202229, 3793, 302, 6, 32, "Input"],
Cell[202534, 3801, 37093, 684, 422, "Output"]
}, Open  ]],
Cell[239642, 4488, 559, 15, 53, "Input"],
Cell[CellGroupData[{
Cell[240226, 4507, 233, 5, 32, "Input"],
Cell[240462, 4514, 34888, 649, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275387, 5168, 230, 5, 32, "Input"],
Cell[275620, 5175, 39641, 725, 422, "Output"]
}, Open  ]],
Cell[315276, 5903, 5203, 135, 253, "Input"],
Cell[320482, 6040, 1334, 29, 93, "Input"],
Cell[321819, 6071, 524, 15, 53, "Input"]
}
]
*)

