(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    295816,       5484]
NotebookOptionsPosition[    294768,       5446]
NotebookOutlinePosition[    295145,       5462]
CellTagsIndexPosition[    295102,       5459]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"chart1", "=", 
     RowBox[{"HedgeChart", "[", 
      RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"chart2", "=", 
     RowBox[{"HedgeChart", "[", 
      RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}],
       "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}],
       ",", 
      RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}],
       ",", 
      RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9, {3.668032724636281*^9, 3.6680327747307005`*^9}, 
   3.668032842681288*^9, {3.668032886551777*^9, 3.6680329055850186`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
  3.667995156778397*^9, 3.667995177356733*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
bzufrO2sybv2L5+3/U5+LY7an3WOz6s2C7MLoYvqxnqlcV4teVhoRlj3VM4b
Sa7pmtkq6x7njSWrSye5ed3i87aNe9D9vrvz/leRz9v2Is/M+7nkz87vpfs9
m3xpcIWskvqSdXvJQdcnpYbc4Pw3yRtVG4Z8KS9dV/UItwsG//yvxeMka2eS
3y/pN7zlaMmG3eTRQQ1qJkyRbE4nO1XSVi+Olmz9QPbwNtVI7C7ZtKMn1W/d
7pQNds57hRzv5Jv2LYHzvu8J309dr5dduLpVvBv8nuu5jZzvNP119dNcz4vk
Xa69/6n2ic8HF5K3PNGEWEv4/tfuTXl3+9apVo7zBvSG+ijPk+MjG6VsvMz1
tJMT097EZW/j+19DaxeGJFWrHTaJ739X8jD7k3JbNZx/PHnR7ZF1fjXl9pBH
7rvJvv6XG9fTLYLmi0fnD6+5mPN3IW+Z6++sXsj5x5DHph2am76c86/7zw83
+iR7cHuo0scuFEd7igu8uT10Ilf5cCx+8xzOP4qc32Cw6cefnD+aXGfU8ie1
wjh/KvnhyN5JPztyfTv0tQvzdvR/dqMF13cE+Ur/Y6FR9Tn/qr7wfBiPk1vm
L16TM93R9f+19sG4
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
T38MrV5G8xKg0ylgfj3xGDqd5iV+EVy8t8Fs3XHKH/T/FkuBQ+pOc63o74Oc
p7Cjv+BsIv09sNCpC/u1id52Wjeo311wa+Trob30+zST4NCpdrtXZVH+avjw
D91Vl+5Q/p/wWmfvmTJ51O+Or3ie3ZXLcaT7iZsA37zWwz9eRfkr4BbH6zfb
ain/N1g39j3vA81njWa3gNkzZVyDDvXBuwAXGVU8Y4qo3zL4s3DOsdEFlP8r
HD5T5tcTul9Eo3sETMfS6Ccn6POaVrB78q7Uj9XUpwjOqytQn0zzrDjq2/8d
586Do+r37lMmB/jD/vY9Myc3Up/t8N8E36WH6fpzVL4LmG8Gb/TSKyivBRxT
bfwjqz/vBthzpFPSHPq+wpjv//6+O3iCTTr1OeIH1ielue9LblOf5rDVqt6i
T3R/pnvDT49tzkik9av5OLzOxjZ9Nd1figVw3LGK+kT6fPycn+hDplP5BuWp
8YTPJ6ySiaP1SCwKlv3zX1h3MeXPg09/Sc25nE35P8LzVZoPtNBx0dpezOPl
Uo+19P2aR+Es50/nc+m4Uw48euvBwni6n0PewTa1w+sHUD/pCr/wPrpk9unA
/vUhAg4+dv/cvVfU7204bbDpFzWav/gmOOFW4giHP5R/4G8BM+KL4RKZNso/
E165KHbNmJ/U7034zO6TbrrSnWy/DfCuZa/v/5ZhLZL+I2CUuL+/7ZZirakH
e4WHLn4vwdppBZwoOazcoIP6fQUXvP3ddG8Ae1xRqg/76YiTk2+osOZOgyUS
B9bNV2Md4AqPDTr+NUOXdXwovDMjdQIzhzVH/K+AOdTxtDxpNmveZPhI5tlT
zqas+Yth0/3P3Eo5lH/Pv8//8Fb+ZU35r8CC9ytM0+xYh0wSEzJM4J/Qec6s
051hPdco9wVrWDcHwl5S6zbzAin/Zbi97cSDHj/K/wTe0PX87qEdrGscxYWM
n/eF5NGhrMV2wb45hzLbd1H+RHiFxI1e042UvwpOtW39eYa+n/8Drgu2/xO4
lfrdLiFkzEcfbtlziPq9CM/R+fJInL4/5DHsFp7RInaU8vfAKqOfndYPp/xj
JIVMzoF8D4No6vc87DfWw7o1hPothau6T5bpHqD8XXB4yzKLc3GUd4GUkJE9
dSbQJ4P6LIK9/LTl69Opzw7YNene/lW3KK/agH+/76lY7h3KOxdu3sbJzzlD
ef3gd/sPxT6h81H8AjcGXD677xr1qSwtZEKz4lS9UykvA7/W2vY3gvqLXw8b
Fo36476P8p6EK6+krb94mfpUkhEyCv6tS/Z4U59mcLDC/ucj11F+L3jyDJPs
9/T9omj4Voz4kO1NlD8fXh6oeSX9E/U5W1bIcIJWbA8WUp8esMPQ3MGjOyk/
H/Y8sWView/l/QCfW5Ag36TdxV7/tQOFjEW+lrrtVNacSPi+jc99gxGsednw
xUQjbuY3yicvh3nw1yt9n0b9HYaHecWFRZyk/jLheE+DEdsvUr5G2CI1ZEJx
IeWTlRcyVr7619PGsN+vqA/7ppRN9B3MOj4DXu3dkPnAmHVNPazn08zxqaV5
lVYQMlcP5mXHPaPrz4GXK8laVdL58JbDVkULHVcxrDUlB2HePmx56D6PtdNU
WPZrmqMnnV/IUrhZLmh4JJ1/+l54ZlFqgvh81lyxwUKmt1lhrdQ21gG6MO/v
hdQcDuV1ge/c1HKvWEx5g+EPJVuTNbyp3yuw3UDud28j1vyJQ4RMdeWTkc6G
rAsXwjfbtE0KlrMW7YYt4qvupA2i/Mlwb2x3RCKdn1MNPGvdysecn9SngyI+
r75RbsZfut474eafdpv9NCj/JfjOF23pVkXKXwmrzzSrclWm/N/hfO45+dZh
1F/8UCHTtW9Ym6IS5S2HLSYPkStTp7zdsN7qqXWp9H0ijWFCZsLhyMRT8tTn
OfhDeEyMznO6/iVw82jtkGF0vZo74bsTm6oZOq6oPlzIvE3iKdgV0/01HzbZ
2nNiM813zSN4vXjjS6P3dP074BFSSVnd9XT9VZXQr5ymt9hjur8sYZWO/Rve
vKb7yxdenvtVaW0y3T9tcMtw+6V7btL8jhyB+6NNq/0mrSchXLhd4+L7jsOU
3weu2aD7ZyWtL80n4PC81SOt4ul+Gj5SyGjPqyu4RvMdbwonz7S26s6i/Otg
h2+f83qbKX80XKu1vtC/ivLfhXuCPdc+a6f7y0QZ65+9oOPwD7r/3WGFI0XB
d6gPzWNwjS5P8ayI8ufCyfnx2YqfKf97eIfv+gm+j6hfNxUho6pa+biN+uMe
gRstgqwPNFD+LFhJKcSi4QXlb4ZN2t2+1NDneYdUhcygArNJ82ne+LfgC/vf
BiRTnsI38Cz9OMkndD1FMmpCpjTxbURYKeWdAUsNFQzmV1Kf6XBM3ZGlIlp/
m1/DahrWutuLKO+AUUJGY7DheXe6ntzpsFHe9LSMGsq7DDYrjt5bW0B91sFy
Su4eT+h6ciTU8X0rDDLtrlL+KbCe5cGUx/Q84C+B98a5McZ0vQpD4Bft4j37
66jPv/DChGGiLvp8iM5orPe6nc4K9PvSF8HLV8v9tI2mv6cFwVtKbL2O8yl/
Cuw3e5/iuCDqU1tDyDxtX33MbA/NgxNsdcxgdKM95d8Nr5DT7Pi+hPInwZsD
RaEp9LzlVcMCubM/Tc9Tv/ZjcH+mcztnU1+aO2Dl7Wqmo/MpfwL8qS5rtF82
5a+AfyoX5OqdovzfYHE/j9PH6HnE3aopZEbpSrnMiqV+L/y/48vgZdsm5kvT
/VHzFd7bovEsg66fmMZYIaMjpdjsR8cLi2HjnQ4zEvZTXhF8b6K63FR6vmqO
GofrPy20Ro2eF07zYJXUIFEY3W/ND+GSFPGfhv19tsOhnBGnN9F+gasyXsi4
ZzwIuEf7gwALWPF5TUeSP+XdADfkNbfLulKfQnjaisgDpxZTnyO0hEyulPOF
b4toHszh+Z9ynmeupfze8COv/Ns2tH8SHYdTYt7fEl9FfQ6bIGR+b3xl39e/
H5sDX/IYbRi0mvJ7wg0p2cnB6yl/FFy2a9n4mjDKnwf/1Dzzq4fy1xhrCxmh
QsS4WZHUpzvsnaJ78DqdL+co/GvqfSdf2l/wcuDisacc+ZaU/x3stjJMO8+W
+l0zEf0G3uP3alO/EXDrWsnUvtGU/zYcWBW05KcH5W+Cu2c28cPp/AIOTsL5
v5W1G0X7v/ib8OmH01bo0fWqaYD3x3yuNKU8YjI6QiZ6wJqNUWcprx7sNnfP
9Uu0PyhMg/1k+hTDaT5Fr+BtueW14QmUV0pXyAzcJW1QTfPmNA3+EZExrad/
fl3hpsVTts26Qn2+hA/cSD88guaPKz4Zz0eDuplmNM8Bk2G9X62PziZR/sWw
z+ffj01pfajZA998Lunfvx7w+uDIJS65t29Tn5OmYH9kX/pHivYbhc6wW0TG
e6OPlD8Q1ivxtB/VSvkvw+WqbueUPlCfE6b+e94NvTyenk/NjrBkbGTovhLK
vws+ud22U52eh9xEeFHOn588Wh8DqmDnd+1aBbQ+i9lPw3quXl75kJ4PnO3w
/rCLS9/Sfo93Ebasz3noKUPP68fw6WcuMZ1S9Lzuge9PCnp/i/Y7TlumC5n/
wnqTVUbT8/o8PH+TwdnoSbT/KYVrrbe/E01n3dwFf5ic+SRjHO3XRnMwP62l
0zeL0/4hFnbXzfly7D71WwSXn7ETNW6j/CJ42fNFKxTpOEdND+uhxL5T56kv
3lzYt3OjrTz1I3oA2yS5njen563mF5iR31+WROupk/IMIfN1davu2+M0Hwy8
0kWy4fID6n893DZp7bKDm6lPJX303X2/aDKtT/Fm8FMHRfl1/e8TXrBUZGTv
G9rvix2HbT2b5q2ieecPnYnzM5zw+sUJmofZ8FiJ1vE6NN8iD9jlu8GJ2zSP
mnxYV6eodz49f53uwNe+tA6sped9s5EB1ivtvoNbaJ4U18JKGjJDrWl/z42E
N/7trb5M++2AbPjHAzXpA3T949/CVa6BBrfoeczhzRIyhyeo93b193kYlnDJ
LpjcRvkzYc9L6XK1kjQPjXBsRduYjfQ+IJI1xPNMf+iE3zQvIQfghasizy2g
/Xh6Bqxqe+zgkKE0D/Xw5TcmnHdTaB6kjYRM38sri7tpv87lwCdWW0R9m0j7
4Rsw96y0KteU9sOv4NMC26pZXHrfkDTG+9pbeYNSHdp/ToVVkx50rJxN87wU
ls28EDBjFe2HX8CSv6fvrPeieRYzETJLnQep3fCj/LqwjVPC49xNlN8FDrcd
1zksmvIHw/xanYJmK9oP/4HTtqfsNPKleZ44G9fPcbiWtiflXwjXjtkr2b2U
8gfCD4uGzjFcSPmT4d+3y5dN6N/Pa80RMrsPBr+8SvlFDrCuS+0vE7qfNHfC
F+7qcZjJlP8SLNmtfft2//1YCfdMODgpkPYjinam6Me5+1BA/3qxDZZUnKtl
8ormIx6u3/XUxqqF5qMcjpPcWX2U5qumG9aMiNzRTPs73mYz7DeOhqV+lKV+
z8GbXGxfz6Z5KCyBp8fNOryT3gdEnbDWvN9yBvQ+oaluLmRu/Fw/9V3/enEW
PrXEZehifer3Eaw6dXNHly7NRwfs/vW0cg3NQ4AlV8h8HvBm5iF63xJ7AA+L
1t+RSN/HaYOnaIY8kaF54Y1khMy+KRHWZcMpLxce+W7poIpeyusDT6rk+OZQ
/06f4XPTdB6P0KM+h1tgvRJE8YLsKa8p7BRXb72a3u+a18GudwOyCvvnORrW
vmB/5k7/+52ipZApNM65IEHvjzUmlv+e785rSl0pvwf8yWb4gphgyn8Mjtk4
jm+6m/Lnwi8cPnSYLqM+DecKma1Pz8/q7p9nN/jyMLuwKPp5pyPw9NBNHmUR
lD/r3/GMlevHHKb7a/U8zB//msLLKOrzEFx1prDnfCLlvQX7ZITJd8ZS3jfw
cpd1sdqh1F/4fKwPfr4bXvrTvKbDH5ZO0r5Bnxe9hqVTZ9pvou/THLBAyDw+
P19C8gTlmw5rHPR473OU+rsO+/zYa7DmLvVXB4/7HGq9/ybllbDC+qCS7GBz
ifJOgVc13PxzOZPyLoGDvetsTVKor7+wwtimTLNKyqtjLWTePR51ad4xyrsI
NmlQeqWVTnmD4JHnxs09V0d9/Ybbtb/M7iyn661tg/1PyN6KpFbK6wSHtho7
3XhDeXfDD8dutBTvpbxJcF/rWTtTna9sf+Nt8fxfFqR5xZC1mIPtv+ff9Lav
lqw5O+Bek0zJkLWseQlwlEqxyc1FrPkVcOmCjLvS3qw1be3QzwuZ6oSdrJ22
woud7289sJp1yAV49ZyOLi9H1ull8MCpW1yn0u9r/gr7SR7/GuDEOj7OXsjU
nfoYWEGuKbb/9z76c0HUKsrbCXcN6XruG0p5Rzlg/z+1YPjUXawLz8Dlmx0n
jgpnLXoIP1pWOOpqJOVth1Nfln67dJ7yqjjifSuiN/hRBeW1gLcNCR60I561
4n3YM78lsOAka64Q9vp24MSVTNYBI5wwf1ylad8zKL85bNQnme2XS/m9YXnR
3QlzCqnPVtgpIcnufS31OWyhkDnyrqy0pJ3yz4G3MN93HP1J+T3hN/uaMqKk
u9n8UXCrd/GAlb3U5xBnrDdRhgnFfdSnMVzZftxuwED284rusNcob51PGqy5
R+EXvuUPa2azDsiBnS7JNhVyWIsZLhIyMnIZj65OZs1ZA7/0cFqQqM6aFwFP
mv/aqFibNf823LgoyjFXr9v8fx6UIKE=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5718556500000005`*^9, 0}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 1.5111176336135697`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 1.5111176336135697`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9, 
   3.6679966014622297`*^9, 3.668024110181718*^9, 3.668031049318376*^9, {
   3.668032804112906*^9, 3.6680328286320314`*^9}, 3.6680328691426263`*^9, 
   3.6680329226453495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<USO\>\"", ",", "\"\<DNO\>\"", ",", "start", ",", "Today"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<UCO\>\"", ",", "\"\<SCO\>\"", ",", "start", ",", "Today"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.668028168429677*^9, 3.668028171553153*^9}, {
  3.6680296664260244`*^9, 3.6680296669844313`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WD9LW5hIx2WVPMy/523ux23gHXbND6fGcD8b7lHef3i9eALT7dGG+5lNK7Ow
/11hI/tsXt9awX70/If72RCY3+9RvzMsg49Ybx8/nhd+wt1OqELuviJr3T3N
v98Hk/UDPUXzi2UJHE79kvvxEVhq3Q584/mhWevy+qV+bvwTvvO22ouwzWRp
GNx56vWqF4t4vjgM17a+zg2g9UJ9F7bsiPVr9ojnh+A2+PwH415nN7J8QZvy
eiCrDsDxymDja7ufFP9teE6Z4/uEFLK+GK7ZytNZIvlF+Q1ti99PsrvoHy+y
5h+47HSI3+qn9HndTfhGwNbKnk6YfRB/ATxxd8eqSS3J0oZy9GO3NUcmDSNH
74G7IJvjO9tYbbgBN1kQ/mr2ezouscAnOu2a9z6LLG/gZRaUYV/0F9bR96l6
wJtjmrSbt4byYbkG63Xth/Sdx/PbR/ifnmufN+lIx5V1vbHePba8+RjP85sA
j//stdy/E+d/GtxhTsehbc/w+la7nVmQBf6VtjeVHO0H8/sCni9DYH205I7H
C16ft8Ip1w9U+mMaHdfWbG/+/TyB1+cucFZ6n+qlGzjeifCN5DpDvpZwvFqY
n0/zvJkED/VdsGFmINdD5w5mgS73dDouHQ9HPi/bmBpDVmyER9N6z/NmAmxz
9p/blf14vsiBfznNiM8sps/LVR0xn+x2fHV1Lx1XretYvn/h+M/Bmlerulnq
c/wv4OnjlPVtOnD8VTqZfz/v5HyuhoWLQsiyiZzP03Bu4/pFrZx4/smCfXr9
cV8/meeLyp0xv9H7Mp7f5LAk4Un+1b08v53qLJrHJZmdy+d7jr+ij1lo3ce6
4+H7sbWP6H7VDvMRzTOyxzAt5+GcX4mv6HprPGD9e/dnIQL9frrBsOt8df9q
tTj/4XDJtK0XL6zj/P6A822HNj1ag+6n6BZdsL+lF+g8vw2A90WdNo3ZxfWx
BHam5+kcfyz86KlDbtYY7hduXUX9w9IfDoh5mBgzi+NfBNsV+3q4tub4D8Gb
e8c+dczj+NPhpQfvLXYP5X4R1M0s/JngNn3zee4X82F+XsjxR8OjB/tsMARz
/LdgY41f6SnedH8ZimDtKKc177P4fpvrV74/5X6xDz4dO/TTgw/cL1LhMfvG
7q5xmmzJh13o722oX8hcu2MesG6XPMi63bDGNeyaYx593ngdlssmzfzWiiz9
DI/OWxsXVJusDlCYhVL7G49eZZAl12B+Hkfnk3+A39N8Q1Y5C+bf7+epf2gV
sKNp3uDOI+m4fio8pe/eU7ZV6bjyPbyh6Rf70zbUjzRO/tg/nPj6vxl1yLpu
/qJ+ZZzs/3ueiiRLt8BV6O99yNHSAOxnna1PBLm/+cJ7XA+8s5tLlkyEH7U0
tD9aowL1t01w2LPs8V/nk1UX4exB/yW3PEq2dOqBeff2tNSt+8mycbD1ry0G
hJCVG+DjbX/JR2o5/guwx4HQ6QUryIoxPXF9Wi3S3qtHn1evhfeFLx0rLOd4
z8KBU84f9HKl44ZsmN5ff6bj2she6GeBX5K7lJH1Ojgmf0/pr2Uc3zO41eO2
t4fOrkjx2fZGf6r/p9elF2RlW9h9+kWHKOdKlL+T8MbMu9/nNLKl/D2F90XW
jTUEkxUV+uD8k9/InFaR1Z5wsJAVEC4nRw+FMazKbDpUpnz9gv9WNGj5Np+s
bdnXLIyqMcFOorGjeAfBh/1H90s/RcctS+GJ8+LbhT6geDTf4anhwxymzqfj
uuaB2I+UnrUb25++z6iEr86KXb87mz4vXQwPf7PYKe8y/X6KGHhhSPrYgway
4Y9+ZmFyzy5aL1f6eUl/uOxihRXObnR++UK4593LJ1K86Xyqg7D65kZdjdNk
7R14XaIm+F1z+nlZvyCzsKa/vbbxHbJyHtx0fM32OwvpfJr9Qb/79S76fXVp
8Euty9iG48jGQnjm1owBxwLo89F7g81C+26Lv9zqQTb8F/y7H3+l75fkw/NK
Lo8J9KDvk7v0F10P/S54Gj2wo89b/oXdS2a9CdvM8X6Cpx56kRsfxPHW+xP3
x+LErOA0zrc/fOaK2+WIe5zPq7B0gmxP4yCywgxfovWT8qmuo8T9uKD7zypx
5OjucHjniAsLj3C+p8C37g6bu+wN3z/vYP+0efn7vnP91hqA9TNhTmLEPTqu
7wpPGuu/cnc2HbdMGlC+f+X7azPc55ffm5CrfP87DkR/Tx1eHB9Ex40+8HH1
xq9V4sjSCQNFn1dEwZoZXetk1yarEweWz598/3caZBYu1G5zS92eLB8LRzW6
8rq4KVm1HtZ2mvNn/l2O/zz8sHXVURM+2ij+D5y55wo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tNn/H0s1Dq4=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5718556500000005`*^9, 0}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 2.9501652533039646`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 2.9501652533039646`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"USO\"", "\"DNO\"", "\"USO & DNO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.668028176793793*^9, 3.668029684768551*^9, {3.668030912507657*^9, 
   3.6680309532759237`*^9}, {3.668031053005909*^9, 3.668031086880267*^9}, {
   3.6680328093239975`*^9, 3.6680328324106693`*^9}, 3.6680328699207163`*^9, 
   3.668032926329316*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fbTxt+H/MqcG2w==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5718556500000005`*^9, 0}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 6.140351042924455}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 6.140351042924455}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UCO\"", "\"SCO\"", "\"UCO & SCO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.668028176793793*^9, 3.668029684768551*^9, {3.668030912507657*^9, 
   3.6680309532759237`*^9}, {3.668031053005909*^9, 3.668031086880267*^9}, {
   3.6680328093239975`*^9, 3.6680328324106693`*^9}, 3.6680328699207163`*^9, 
   3.6680329273293095`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<JGBT\>\"", ",", "\"\<JGBD\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668025228046261*^9, 3.6680252311869135`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
bVa8bzGL+yonzwsWkrTjOK9Xd4vQ3vPbpzO7OG802TxvYELdRM47H635RQ6h
2XEvh+dnix4WISqoqOer2ZxX2QPySOeSaxRNmhMSz3n3kv/Q3byjiftr1pPm
66IMf3WlT+J49yEf2mlz9ZStaPkscuex2eldfESrUsknKv78t5zz3yJH05ed
32vFx2U9e1mELdKyS/tSRCsTyC/doyUXs0RrdpKDW1Rf47ZNtP4G+dqD4IRr
u0WbPpF9xQNItG57b7rf2T5z6DFX0cZr5LRJe8Z8l3Dej+R6zQM75Pzk+enS
xyKUO3ct3N5MfNywhWxXVLzkpbto62WyR+/ylfZ1Oe8H8oYrVYfaJXDeBn0t
gsuCqYta1v4s5o0gb7fLc11fLj4uvUielh/mFrZftMJCnryub/qWJaLV9ZQW
oXiyMC7WxPnDyWvLKv6ghvOPJ0dFBLbaOYH7LCa/d7A2km8Ura3Tj+6/oxd1
8LjO+TuQs67F7joew/njyLb1n/9vyCTOvx6trx1lET6saP9qbQb3GUJWfs5X
Zmo5fyx5mKTLyb8bitenWBsF46fOiIK8krbRND9ahuinJ/F8GEWe6vpuSPoW
8fWqv8kxhgtHzyaK1qaTX6e93/vs3ufw/wPHHwVL
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KNkv8cxQkpdsB/A7/vXbcfRPDP3/8f4PgFogcw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
mVz9ufqrY6pq0v8ABIMOzw==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0.7370591079162128}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0.7639362912400456, 
      1.3014799577167018`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0.7370591079162128}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0.7639362912400456, 
      1.3014799577167018`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"JGBT\"", "\"JGBD\"", "\"JGBT & JGBD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680252337025223`*^9, {3.668031059959094*^9, 3.6680310640966015`*^9}, {
   3.668032816869893*^9, 3.668032833933844*^9}, 3.6680328714675937`*^9, 
   3.668032928110566*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TQQQ\>\"", ",", "\"\<SQQQ\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66802991472351*^9, 3.6680299654683013`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Xk8lN0XAPCxRElMC1KpodXaFLKkzBORpRppkQjJKyRalCJN2lSKpEWR
oYRKDSVRMiEhMUVaZYiWGTIiW+J3Ovfz+6P3j/d9v5/7zDNnznPuufc+NDcF
rfKRptFoXfCvv/+Ff7jnk0UU+V+JJfxLwAef8rWYnK6GjvXjiig9y8fslzEd
f80/C06SbTSaMR3HJYXgxopvY5wDcJzxDXzsaIeBVxCaPS5FRKX9zpuheOPH
XwtjwXkefoVrtXCc/hDc6p15Y1oRmtUKjrn9as72F3j/YOVUEbX26v6p0mVo
rhnYKv+Aiu0TNPMB+KarmPUmFD/v2Qzu7ms9lL2ZxK94VUQpjml0L/6E389f
AKbfneFRHdWO8XuCk2LFsz2LcZzTCM44/v7gynt4P96oayJqX1j69qdOeD+h
ITg7f6p7qi2avhHsppj5aMFJNCsKfOiO+mkfX5JPuTQR5djeOe9rPZo2Dzy1
aU3xIeNOjH8D+B4t13/rHxz3PPJ33D3NqfkSjsfeAbP7hzVcTH9ifg2uiyiv
8+nn9+9Cs13AnGqHAJofmhMJbg+rbMrMQfNugXvnra0uTUEL68E+OvFGDT/R
wWvS4fmlv7KpGNGF+T0AZuZ5PwtYjhZkglUuuEmJtqNpdWA5W5U3NzzQzKG/
phzOnxaj+eEZIuqIW+jR+Dq05DrYN+hsCucrmvESbJM/9Gl2AJr9G3yhqpCr
ZozmzMwUUaNUT5z3no9mVYO3z75vUHwBHdwHnpgdyxvrSOLVuiGiJoe/Mdif
SOJ1BHOWybqajkF7Pgc/kN0UckkbHfsLLL61RquzEX8/f9pNEXW0LU+9bBZa
YgcuidHbdMKD5HsXOCXS7tT8Gfh53k/wI4bJIbNZaOGUWyLKvGvB0xUX8Xq6
LdigZ8Jzvy58fqzt/44HXwYn/lg1L9IaTZuUJaI+jF050qoMzbQGzz7UeeO5
CYl/G7jF1uXpqCQcj70I1rsTUZi8CO/PLwabGB3w2zmM9cOmbsPvCe+91RuK
5gSAGyQc3Xev0LxzYFp3cEPQMvy8sAhs5PVm1NO9aLoIzFmro9FxBM3dckdE
+bO9Sltb0YI48I9DuiVtX9G0QnDzkI6aOsmf51ieiFqv+yHhZTTJZwz4bemP
fLdEks8CcHDWH8sTXaR+W8DiOWnZK5eS56+UDfVTzwypCu3GeE3BljYfHh+/
g2blgav3/eorfosObgK/rGj7WlOC5o7OEVFlpX6KGd/RAmNwfon6y5BiNM0T
vIx2rq2TgY79BDbz7p2nYYPmj7wroiq2TAw89YrU73zw7LDYiihpHGe4gxeF
xbOmeqDZx8BeDu45V3LRwhH34POeeSftk9B0JnhZn+HoO2ISvys4SbPffO+Y
Xxj/YfCVy9na2dlo7m1w2waHhzZKPVgP+rkQn9OV6uBJaM914DRpm9lFuXh9
7EHwK0WHnt/n0PybYMuCiq1pjWjJa3D1jng1zlU0Z/V9ETV3Wsmq3qdoXgR4
6bRnFdFaeH9hBthGc6P/3c84Tq8FDzu9/XKmksT/B3ykLqEuLY/kNyxPRH19
MZWbk0ryex28KKRyWIr8XqYg75/8eA6AM1Ofpw07kvhnPBBRgaXVC5uL0Iyr
YM7tKuukUjT7BThAhmMp9MHPc3rBqmsVkndlkvrQzIf5+qvbsUMVrxc6gH19
5/MX5ZB66AYPr6RsAkbhuGBqgYhiWXy2YOSjaXbgt7OOe+96iWbuBFesnuNX
0Ery2Qm+W3k7Wfkm5kcy+aGIWunwVlYk3Yvx2oBTPqn36LfiODsY3OJvkvWq
Es25BB5e9K35cQOarv5IROmEKZ/1u4VmWYFHXG21vM7A+wUHgoU2o8OpATT3
AtjizeZMdUYfxv/k7+c7/rCOfMRxT1Yh9Ou3N5WUCtCx/uCmZalTtjxE8+PB
Q3nclz0H0ZLHYKvHu/fUjsb7Mb6DuXWau0p/4DjP97GIuhjQpmZZjhaeAV83
bmPej8Dr6Y/APiXS2mY70awv4BPTGtqSEkj89CLod1GBBYrGOE6LASs5p4uv
XcZxZj7YIT9SPnspqefP4Bx2D++NHDp2DB/qJXtmkkwgid8EfH+tuZteN5p9
n//P93OE4NlXgrKdmGiewhPIn8X4gTcy/Ri/Edi7TS9qUQCa7gF+UfzaXXxr
APPbAE6RiY3QqEML5IthnL+4sFSMps0HB/PcpSThaKYbeOxyt11+L9GeR8En
wrLWJLj+xvzKlkD/u1bpW7kFzZgLvv0i5kL8CTR7PThB9V6Q7S405xBYNmyE
Kc0WzcsC+1FbtJKt0Cy9UhH12F9/lZ8POngtOKTY/NTMQ2guB6z94uve37vR
ghvgUZoOZoqd+Htpr8FKhnOeUr0Yb6zzUxFVGl3FnVGP5u8Hq98/I/hBxiXp
YAW3VTNsOkj8r8B++ceDebMGMf5B8FjLBdk5LmjhvjLIl3nvzcEYvJ6eBh7e
yNTxsifx14C3Na6l5auT+PvBZ292MtvaSfzTn4mo2gSd8mcb8X7MVHCfWFGh
5DTaswocsUU2r0D+D8bfAx5elnnENxEtsS8XUdOGFy3jTxzCfFaAB25tkHv6
Dcd5XeAvvw582vMKLdSogH7SM3uQ/gVNXwZuPC0W+lWjWTvAY3VtshoD8H4C
yd/rt9nZa1WgaZMrYf1eqmfaWYBmLgW7Z+zZ0RePn/cMAofwmrT3riPxJoBl
vhvIZhiiGROfi6iTvFau0j00ewn4v40yHuMPozlbwav9x9T9iML7886D1b1W
+l9fghbywR8NfWqqdIcxn5ZVIspJOVpzQJXG+ptPP/D2ck7agylo2mPwT/1r
m39Yo5nfwPfKVxsdmYXm//cC9s/xzWqtdLQkFuzdM0Mh3QvNbgX/Cj/fvWoY
v4+jXC2iZr7nd313RNNPg0MLXEJKejE+1gOwvJ/uFaOnJL5mcLG6zwEZKRKf
Yg3sp6U6Ik9l4bhgAfhbv973tCG0Zy54bKZew+Y4vF9sI9jqQNRiM20S7ygB
nBc2LKv4eJzEawi227T1eVocmrERPKg1/buDLVoo9xL6B/3eptPX0PR54N8a
s+eoVaFZG8DmNpO8Nl9EBx8BJ7+bWM82w3hosq9ElOj41vA3bPK8DcADc26e
m74C7ekC7v18cw5nPXnekeBUnXSfw604zr8Ftn4RpD7pNpqtWwv5EjSqF6Zh
fXPWgMMTYnqljEm9HgD/pJVfHi8h8ysT/OzoQe3vo/Hz9DpwYXHNXrVrGB93
VR3sn+Sqpm0iz1sQDr60va8tOZM8/3SwWyVb9kshef4vwV6pC/LH6En9tedv
8MSnnHstpmjGtddQXxqfdGr3o9nVYK2FDsdfT0Zz+sD7tt/p2LABzdOqF1H9
0R8bvazRrBTwwfNiI/U4dPBzsL657Iymg2juL7DcO7GCzE60YNobEdXT/+tC
QyWaZg+uL+Jt/nwXHVsOTtMrrDnJRvN/gj3fn+/olpbG5z/lLeTDXzLlxRw0
wxYs73yt31wNzd4OLnoYcYv2Gj8v7ACHDyTl7v6Epk96B/FcOLsqJ43Ebw0u
SM684vWWxL8N7LKtNDFQlcR/EdyiLqFHPyL5VHsP5zOZvuQnBiSfFPhps1Nc
SxWJP+D9P7+ffw78e7yO7QjyfZKi9//fv+P9OIs/QL9WePSy7wyatwX8R+fJ
sE4+qec48NJoLdXlZL7TC8G0w7zglEtYD6yv4Bqdeznrasj88vkI67epk1Op
KamHWHCy/MET1er4/cwCMO3enadLLUj8LeDtB/X0DOvw+lilBhE1XXlfSMQg
1h/jFHjdolzDJCVSz3kN/9Q7pwks+1a45sAiEv/oT3D+HbPdxT6M9F9j8Et7
w3cFO7G+g++Bn1KRj5aq4Tj3EzhN3tY20QstGNkI+T/a3HTqCOm/hmCP9t2N
l4+T+fUBnNcobrthjr9XMkL4Tz9hMMExi8c9Sp2GZruCL/VaDvmOIPk+DD6R
cbjoeQSZXzJNImpO1hbni69IP9MHs8+aGHZxSD9bB05NLb97rpzMv4PgyC/b
lCtGkvl3Eyx8WlA14jvpZzrNcP7aXW6RYkDyuRosFfUp+8cUHOdHgB94J7o7
vsbvk2SAY4uL9azJ+sKoBb8a/pmjp4rX85w+i6gpH9UCFZaTeggDJxUfDa9d
Q+rh+uf/v78h/U0AHlrA1noYTOIfAKuVhgx7ypB62NsC9VdQtm/hBlLPV8Hn
L982sdVHe74AZ002/sRMJfH3gmmmngu+1pN+rNkK+6cJjCcnTEh/qASrW5pd
ndJA+kM32Dn6i8/HbDL/pn4RUecqVNtKx+D8pNuBrbIkP++PQnOfgaUXyovN
hkh/6AQfHLewdE8v6Q9Tvoqo7K9HxzLIfGfagEW324rVUtCewWC5k7JMrR+k
P/wApxwW6q9vJf1B/RucL0ZaLVGSksH+YAW2+dNuktyP45xA8KHL2ifi9qF5
F8ATPAYrpS+jWarfRZSuZn1l/C10MAs8pntu9dq7JH5/cOcZwcrDCnh/QTy4
pGK62cVeHKcVgfc1BbnpjMLx2EUi6CcyflvjlNB8X9E/8UnOgNcE3LXzc0Uz
HoEdc640t/uS+L+AU9aHOC9NQAs3i0WUpDth5I7HaHoMeOVJLyv1LbIYfz54
6uV+Hc9wdPBncHXcRU3VJjQzuk1E7VgiuJyXhfa8D/4aMXx13i8SrxBccjV9
XRm5H1+hXUQFDQq+bDNBS4zAy6s/LF19Bs25C3YPHqmu0IPmNYDn046slxSi
hfI/YP7u2b944gCaPh+8846ipG46idcNPPZVzIPXaiMwn+/BKkeeP1koi6aN
6ID5qv/yp1wQmjkXbBna8b7kNdpzPfgzJ0lepxgdewi82vX9ndb9aIa0BM5T
048NpR9Gs/XAM2f3xXduQXPWgtvrO58dvIHmccDesZzdp1xI/DfADROjzvhM
IfnU7hRR6a07C+uPoLnO4PoD+dWvFNCC/WBFGTXHUdJoWgbYJTtnKFuA+WW+
Ag9992a+sSD5Zf+E+Vny+V7lJZLffeCj68Zpck+jGWngvRFH3FLMSPw14DX2
ee7bT5H4+8FyHQ+G97xF00O74Hw++u7R6x5ymN9U8MAKN7s1xejgqn/N7QG/
b1fu2/kZLWB0w3lo13bZoAG0ZzL48LvB+cML5TG/FeDuxfKLbdhofhf4mdQH
gy5iicYvWM/iNwwlmaIZy8Bj1lWHWESghRKw8ZPQNywemj65R0R9j7F4rr0M
zVoK3rTh8TcLY3RwEHhZfYGb9hk07Qf4Scb8krN30MyJvXC+Z/hmmE9Bey4B
e19usQxOI/FuBceHacvlckm858HPxg5xfCk0W6VPRD1fyH9ldxp/L8cSfMZY
x2mrDo7z/MA6xZsfhtuS+M+CT6rkdH17RuJ/DI6rLnPdXIDmWvRD/3cpWB+q
ghb81/93vftZq96M96edAe+SKVUfSeJhPgRruGpEazBIvlvBmu8cVy55jZZ4
D4ioWdFRLhlP0IzT4BATgYfdGzT7AVhDoa45pIjUQzM4ZVli/pNHpJ4Vf0M9
6m7je20m9XASfP/Luh79RaQecsG0uzKWpx3xem4juHvH+MPHjpF6GDUI9XUn
LsOazBeaETjW/Pu7Py9Iv8gBq56/tqFIKI35/QhmFdYVRH1HS+T+iKgt1z4V
T41EM+aBRa0D1jtM0ewN4OobvrKdpJ8L34FnfMjTqyoi/U12SEQFarksNnLA
72cZgKcsFs7JI/0m2AUsbbG/Z2wbiT8SXJ9Ot9INxPiZUsMi6l1S2YqqSJJf
XXCQvDHP6TCpjzXD/9Q3/wB4V+XZ0XpepJ4zwdyr9p+E60ZifufQxBQjVEdR
7SKatwpcanLkrd4atDAcPMI/q/zAajQ9HXxvYv/G1uNo1kvw+NrMU+v3oQUr
pcTUsp+9RTEFaNo+8As/ybW8HjTzGljFbfrSBvVRGH812P1C5lLnrejYPnCz
UqpOWAaasUdaTOlkn9Ts90ezU8CGXeqsvkE057n0P9fzfoH7/T5vvjWMFk6T
EVOTdBOzM+cqYH6vgMtW5g/Qn6G55eCo8baqHg1owU/wCo26L7/8RmO8trJi
Kr8spDH/FZr/FNw0Q45Z9Ryvl3SAh03dXoaq4Dhj0ggx5TB76ofVq9Fsa7Bg
8Y1ST0s0ZxtYPL63f7I1mt4O3rLqdIVXFt6PpSYnplbua/92pYPES4H5sd7C
Byn4e7gB4BlnxpeGjCTxngM3FFeoaeiRfE6QF1Pl+gtbXvhjvmMXg38sCa2L
MSL1sAXcuTrA6sJOHJfEgW1c0rZFLcb7MQrBfYPX6THH0byFI8XUtrd+NWbl
aKEPmL28/On1o2h6LHjAlDPvXTyJtwXcq7Ur58lU/H0071Fi6rehw7fJDJLP
U+Beid2jyli83jMPvIP52ejtQ4yfP1pBTNkr6zmXHCHP+wT4qvza4GwPUq/3
wOV+1+9abyH97BN4flpdY+UKUq8jR4uprc21Xvey8fN0Q7CS1Wq9YyQ/3Gxw
QdjXEbv+I/X6Aewc6hgx2ovUq5wiPL/2XYWKUqRemeDhiFwvqTGkH7uCawpX
pFk2kvVAZsw/92Prg4vlisp2lJF414GDZ6ZprJlN8nkQrC4Xo9nlTJ43TUlM
Hdsk3zJ+KcmfDnjmMxetExb4ee5q8Apjh1UFL0n/jQCnWT/erxtJ4s0Eq3fv
c9P/Seb/bGUx5e32ctS4szjOdwLve+5e9mwx/n5JGLjwrr15kz6ZX9fBWUVa
n76/JfkWgLsHDn2K9yTzZwVdTCVm7nRrm0jyuRf83sBu5yFHEv9V8ILyGH/z
iyT+F+C4mTvsmEfxeXN7wcsldsd+myhi/rhjxdTj4zrrzjugYyvBh00O6d7x
R/O7wcoOGy0N36IlU8eB90cZ6/w3BvOZBD66OfTtt0No3jOwkD9rVchZtLAT
fJ/x/mHSWjR9yngx9fy4vnlDOZplAz68MUhh+ma0oBSsWlac3GmghPnsAM/p
jdw7no/jTPUJYmoPZ3phXADa0wpc4XjuUU40OjYQ/E17T3tgFMbLaANfG45e
8qgazVZVgf66sv+3/wIy/1nghao1WUqPSD34g4ubrj4yIv1BGA/O8M0MdWgl
+RyvKqZ8guyudbaRfC4C19xxNKubgPcX+P4d96i3yv6MpsWBA7JUjh2RJ/E/
Al9JeX8lPQXNN1cTU4rGq/iTN6Elm8EhVhtq8lTQjBhw5/1Wh2gl0r/ywQ8+
XLn/5DXGw/kMji929JaZSPrXpoli6lkTN3P/WPx+VjRYXUfjgpIhjgffB+cx
1rz1LyT9VgiW1mXM+U76iedxdTF1ab15lDAQr4+9C1ZKcMvcupz02wbw4xd2
jMddaIn8JDHlaqRW8iOU5Hs+uPSo38BMAZrHAxveOJq0KQEtfA9WLVdmRbqi
6SMmi6la08Ps3vck3rngSVq/TGyeoIPXg4NurxyYQfo/7S24Prf93rtUHGdK
T4H1Y3Dwfi2N1IMeuM+3oUx3L6mHteDdHrYhpbUk3xxwq2Pj9oQhrC/2MLhD
a+3BludojraGmPKjWQRFXkTznMGKc2d3qcmghfvByi6ZBcqXSPwZ4GUrHN2Z
xXh/7qypUN+5U84sbCD1zAZ7m4rV3+0g9RAG1vK8/trlDem/aeDL09ypB05k
PtaArbr/89m6gdTD8mlQL3ladyUjST2Egl9kq2/syCD1nAq+xTn/+Tmpb04V
uML0rt56FRJ/D7j9RKzyrQloVghDTMkZr9Zx3okOTgbfCt12WMYdza0Ae2u3
j/vohxZ0gS3OztuwsIXMx6maYmpnzcf6i9Vofhm4pr2mdlchiVcCrtPYkNeq
q4zxTtYSU11WvO/jO0m+l4LD5vK1FwSQfJaAk/2t5x+4g6b/AE9+rZpX50vi
nThdTFnSLxdp3CLxLgGrhc0rokuReLeCd/QvEIvLyPwSg9e1Kly/2UDyqTJD
TM3dUeuqnU/6myW4Q35g5+mPpB78wFuPC3z2yuH9JGfBVmYax1SsSH8bN1NM
lXxIXXHtA6lnC/AX68NXoh1Jf/sPnLvdjxZ4kvS3M2APnaceJqSeWA/B+kUt
KxtXkXyazYL6GCVrMEsJ80PbDE5R9454oolmngY/uzN1waZ0vN7zAfjXmx1z
aLvQsc1guu97Y6fPpB68ZsN+ZvDF++1lpD+cBN/4Jth+Vo3UQy7Y6+HB3J4b
JP5GsGaY9OfbZWR+Rc2B/ZPN7dQw0i+5OWDrcee/3sgi/ewjeM5Hk/bGRWT+
yWtDf6y1DbugTep3Hpgz76FTyVayXtwBRxc4CxOFpB7egd99SpWo7MP4GbI6
UE83ThgvTSb1YACOv6PNPPESfz/HBVweGLxx5FU65vMNeErRpfCcV2iWlK6Y
OmEqn9hQhg7WBY/YlnbyixmauwZsuE3ezngkWnAAnLEjWFtnNt7fcwisXfXV
YKUryeccvX/G+avA25TOJW3hoCXh4NwKZ8FVCanndPDJm2veJb9B82bqQ/xl
kQrx0WjhSnCtw4Ohwy5o+j4wx9bogIUCif8a+LKdqGLlCVLP1fr/zAfacgOY
D+us+ox3kHrYA3a5c2TYypLUQwo4XDRq5KlDJP7nYEb5+LebPcl8/GXwz/3Z
u+aKKdlz/61fZU/yewV8KDx1yYlK0h/KwWecqBH7FpD5+BOcn/IkKCGfrCca
TOi3W6Xakm3I/ucyODCHynH7j7xPeQoe2PvLdMRUcn6TgM2G3VPMdch+bdI8
MbVZSLNPHUPWF2uw27GuK2ZkvywpBu94FHKvjE72P+3gRkNbTmYlOX+qzRdT
qV6Go23TyP6NAht6Xaqbs4icjwLAc5VOHk4IJOf5CYbQn3j2WjnkfMJdDN79
e+iKURTZX24Bu3bo60s54TjtLPh60ndOVT4574w1gv3etqqYgQiy/10Ifh/h
vvzVJhKvD5jeYB5RUEv257FgBcs92Rlf0OwCsF0m+6JVCdmvmRrD/et30b1+
k/2aN7gz2qWk+zU5r50CB9s0904UooPzwNY5bGvf8yTfTeCjR+PWXP5DzvOe
C8TUvPCSQHNyHvU8Afb+WJk6NoG8n7oHDvUziXotR84Xn8BTr4eZO60n582R
JvD7nIMjr8WQfB4DP1x0a8yK2+S8lg2u7EkcvZpN4v8ANu81XrLjAYlfzlRM
mRqrPvpCnh+LCd75/Prcka7k/HMb7Djo8e1VHJr2zvSf58+UMYPz6ZyOAYtO
cj7SByfVX20rNib7jXXgT0+p0cujyfmtHtxtsupzgQJZ72jm8DxeWYsenSX7
Nx3wszLrxNlaaN5qsKvG428thWS/EWH+T38N/gPOmXd6Y4AZmjt7oZjadcvF
f18gWuAEDqjxnq0wAecrLRxcO35jfa0smnkd7LBHKmFrAukXMyyg37uf3Z26
FsclKyz+ni9+zjgagWbsBQvST1Ut4KDZV8FJ2W0h8hvQnBfg/WOzoj9vIf3O
cRH8vvbagHUleH/WbvDYSYP3Go+T+Lngp6u/HlX4j8RfCc5kPaQqw8n60g02
8hGE5WeT9W/nYjHVNuHPqiGyXsQmgc9W3/BzGyLr3zNwSdwz2oH7pN91gkX2
uYE3ikm/m2IJ5wfls/qM+Rgf7xL4Y/LOsgw6WlgKPjBBz1wgQ+LvAMt2F9RJ
FEl/tmJBvThnHRNMJvksBr9RKZeqkCL5bAMPa75nhYWhPVUp6McFAZWPDdCx
LPCK4lyVjvukv/mD1xfVZMb6kXx+Bx/7Oj3RYAHJ5/glsH9enKtzhJi3CGwY
4y7rJCL9zRe8z36KSbQr6c9x4At1GaXGRmT/RreC+nR9s7bpA9m/mYOjZp1J
4ZH9Ec0HPNoksmxGLunPMeCruy7pq3uT/pwP3qN6mlGTR85LJtawHxLYFc+N
I+v1JjD7ssHuw5qkP0eD59eNnzXwkuw/74MfTd24jP+E7B88loopFcaAcn4R
WS+Og2M0KQX38WS9uwu+YNW2bfdqUr8N4LhB+ezfOmR9OGojpnyDr7iNcybr
Mw98NaakTGccie892D5ljlmYE5lvI2zh/BQqZW78gJyf54JPpLcVVmqR83wW
WKg7TbPJhbx/egv21c0tm6GL85klvUxMLU6zezHhOHn/pwfeZJS7Y9kQeX+5
FpwtL3EtqiD9axg8vTJDza+J9C9tO9gvcafNvncbzXcGx2UoJwyS9++S/eDM
lkuV0lfxfpxBcBOP13IyDr+PN8senm9jpfUhE/I+lQ1OnWIfsp68r6eHgZeF
8T96rCXvK9PAsW6jfL5UkvP8dAfo7y8/7vFqJ++DV4BzWgJ+cLeQ932hYL0E
uwMH1Mj7vlRwf7yTzYYx6NgqcG1OPftiOfl7i4MjnJdsExkeTdKYzxCw16TQ
DCoTzUkGX/r1eJFiM5pXAV4p7mo/VY8WdoFvWiaPUL2G9+MmLod40ht0+T/J
3wPKwF2NRsmWPuT9bydY/tu8gqhU8veMyStgf/5w1HbaR5LPBHBft3eIawt5
/1sCVhqMslrGJ3/P+AFujnROaiP3Y09cCfNRfpqJpizJ9xKwSub+k5d7cJz+
BLxr1k3/yRtIPsXg2o4LxwojyHqmwhZTP1eE2nGOkPXMErwgstvCZRNZj/3A
aZ8Sg7QD0Z7fwMqzVKsa+8j7k3FOkJ/+7pbEtWQ9swAnZoyf11hO1rP/wM52
yqeas8n7nzNge7vFftZtZH+gvEpM3Z4w6/bOsWQ9MwOP21RF+Ywh69lmsKVo
vrc0eT/FOg1eGtUzd8IVdPADsKlj0HkJWc9pJs5i6gNrf637OLKeeYEvlts/
/ric7G9Ogp9fOqWckkX2E7lgkzMzHyTcHMX6H+FQVPs=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5718556500000005`*^9, 0}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 4.205758997864702}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 4.205758997864702}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TQQQ\"", "\"SQQQ\"", "\"TQQQ & SQQQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.668029922314522*^9, 3.668029966891885*^9}, {
   3.6680328177136507`*^9, 3.668032837720002*^9}, 3.668032875289584*^9, 
   3.668032928798088*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6680300623170033`*^9, 3.668030065558288*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTPv/B/BBJftYs0STbEUaLYjSnFS2YmRfG0LK0uC6RBg7CVPJvkyi
LGFKRdZBipImu0KDCjPUSBtu/N7n8/798X3fP+69z8eZmte8z/vzOe9zGuu5
of7zGwoEgh/wL/6/8I9q/wk9h/9r9IB/aTXg1LQvbRaLmJXBKj13IafDOlVv
Zk0MOHfliYsmXZiNN8GxTee8b2zPLPoM7rhi0dbzC5ilbeL03MYhH1qnHWXW
KcHHBnVSKmKZhdfBwunyWd+1zJJS8LQg04X+KczyVif1XPmyBaOmFzOrXMG9
dtU8rMhmFl8FR8Te9bc8ySz7AI6+u6ZBbNPvLH/zeD2XM2KVZYf1mH8gOEoR
+/nTYcwvAwf4v6rvep5ZUQxeenDXM+lZZnWTU3ouq2mN68cNmN8JfOW0qDg5
AvPPBj89OWXWus2Yfwe11uy0nhts79d44nVmwQDwvVb8B8b8M8A7gw5r7E1Z
XtlWcOzNDrmdD2H9L1GL+ieQ/NKp1IpN4GzfIn9lBeZPAmfOPLVt9FbM/wLc
dfawLqsCsL6TEvWcg//w055Tsb4bqLVnwWEt7ALdnDH/M7D/5+OLl3th/j/g
koYPNzo3xvqGn9Fzu5WzLU+Ksb4JZ8jrRQXgo9VOq572xPy/6XFFz7N6rjpi
zrJ2K7Gej8F1W+uHHG6EeevAXpsftubGYd7u5/Tcu5zzz9euwby+4O2nd217
MQj7IRfsq96oybiC9awGH/p14ILfAcxrdZ7YOAo88a1rqKOInQ/RP+DN4dl2
c5szqyvBs033fBJbMOssk6Def5Vu8TOYhSPAHbf3aR7iyixZBr4QtfPbsgXM
8iPg/LCYBk2mMgs6X9BzlzyKVE3nMIu9wIcrHNUtVmA/LAXP9WyVE9ge+/kg
uEH14YaaIsx/F9wo/mva1BdYT+6inuvgPfzHjYdYz0XgNuZ3hRG52A+xYM/n
q2afmYj9cBt8/UPcnZId2M96cK9XEt2bGVjfhZegHnZbtlqlYn2jwWVeFw+/
/xf74Sb49W67HyPDsd6t1eDCf5oMFGI996rp/nANHJbUPUuZV8HyllArWiaT
9ageDE6+5jeqLAr74UoyWX/y99SqZil6zkpl49wjH/O6UAtk1Mp34C/OpQt6
v8d6ml/Wc6fnFQz7WY/5HS+T/Uc06zJZv9Ltl0m/6ExT9ZxUdTXyrzX2g5ha
Mh1cNdO1uOcrzL8FbK5bAjsO5r9IXy+2T9NziW1sKqPqsL5TqJUbwT9aVTwY
7MVerzkPPjPRvJnHQmbjc3DfprPu57swKyamE6vXp5PPqzuTTvZP4dN00t+S
enBB79LUOH9m7dores60tOCxqQ/2cwJ4RU5ixvDNmF8LvnuXFYzl/wXunVf0
4egg7OceV4lF8eDn8xYceCZlluaBNe1uJbyci/lrwd/nHGuvGoX5rTP0XMYn
07rZvzD/GHBRfqvmNQasZ1UG7Ydu18j5Foy6RvpNvAJstLr6X+Vr7Ifv18j6
N3a5ruf+vT8cdiDM6wOWTDdNf2SDeeXUisNgeaH8W31HrGenG3qu9FynpY3H
YT2HgxvH2Gw6LsH9YQn49cRjgZ2vM6sOUGvvgPP7jTJ0ycR6Sm5CPdpN+JuS
hvUMAbetn9l2dCL2wz5w+uKYcZsfYv5b4N9uiauSkzD/F3BuRbb5l/tYz6Bb
cL0wqV7eNQ/7OQocu2Xn0K8vMf8NcMRMl3vfdJi/DGxzygJ2vEqWX3hbz53K
cWtj9QL7YS94cXIS7IDYDxngeYPOQXkw/0dwVopPr/RszN9CQ6wZpCHvL00H
n7Q0zN5WhPXVgd9GdfPxy8D8Te8Q65zB5Z2uuNj3ZvmEAeBHAy5Y73dhVr0F
69+4TPjVh1nb+C6sj4J8l7h/mAWOYPsN1l9cQ5nFM+lx2TbwqPCpMLEwG03u
6blZfyNFi+YxixzAjafvrwzdwCydBo5oZUgS+DErNt8j9VJfAFsMeVcdfhrr
2y9Tz/3cMymzYwr2x2Sw/4djp5OisD8U4JcJY+AKh/1xLpOsP8HzTLI+lRPu
w/X32JbAhCVY33XUxkSw51H947AY7I8n4JDQ7NVv1mH9/wN37Zm8a+RxrO+a
LLhej3/2vvQy9sdpsMFWEfzpBubPB0dOKYhcEYr5f4JnNq3sen4H5rfJJudL
fDKb9K/sUTbpR2VNNqmXcfQDYsXDB+T91T+odV0fkn4XjgQ3CgnoZdeenQ/J
cnC1SURunRX2gxH8b2T6j8NS7IcuOXpuw6f9zg0nYz94U8tCqZWHwFcvrl4o
dsV+6JhLjks9qRWLweOC+tZrZczq/WC7vXrLKhNmnYZa7vEI9iv+41hjPwdT
C26Bi/Zvgh0M834GLx/n0nqhP7NmQR6xUQnen7V04qERmK80j7yfotVjPZfk
5fFyyxOs3x5qyVXw8qMbek8qw/P9AazJXqHUP8bz3TyfWDuQWpYGHtTbV7LH
HOtXTK1poiU2OlGLZoOPFweHT3iL59usgKwP4YACcv4lMwrI+pdvLSD7hcDk
CazfRJ35rLZYv/7UsqnUyk1PSD9rksBeo902tdmD66fvUz1nuSrg1aV47NdJ
4IH85egg9uuGp2R/1p2lFj6jVvk/03M+kdZHbtdjPcOpBYnU4gKwkz5n1oym
mP83tejUc9Lv0sfUijpqdfcXpL8lceDHxX+e9RdjPXPBSbVVmgPDsD+rqbVW
L4kFo8EeE00qzJZhPR+AH1T19QgchOe/8iXpT6PlK3JcNAJc4xNacnov5l8G
LlkW+e7Vblw/FdTCzq/13Id7Q/pKYjC/Fzi1x4VQYSLmX0qPqw6CVXGr08+d
w36wKCSWceALroWvvS5i/kXguzs35XBHMX9sIfm8xtvgrU+Cc/LGYn2HFZHr
i3oh2C/j9ajBCzB/NLXwJrXkUxGpj3b+G2KBklp8DXzwH01jR0/MXwKuXx8J
d3CYv+VbPdfew7NfbQes727wT67Zxb7dsL5XwPK4j7Pyp2D+92Crzr57zNdg
/mbviHUu4Gez52tbHsf6poLnuLVsdHwu1vcdtda8mFjgRK0pojaa6mAeP5VU
3CgA84qppdN1pF6KLdTCRu9J/SX24CBYncEzMO8UcCG8unA/5t0I7ugQVue2
EfOeBwtC78EdN9bT7oOee9H8yubEg1jPieD1GUtPts3A/OvBsWE9hiVdxvxn
PpDfJ3oKTl1WC3fAWM/xH/VcQvPufR95Yz3Xgt9vnNQmxgbzJ1BLtB/pfPaL
WhBWQs6vOJ5algd2fX7sR69GmL+WWmNdSqzIKSXznbqqlMxzum5lei7Foc0S
aS7uZ6OoVdll5PXa72VkfhRYfiKvF/t8Ivu9TA5eGvDHq/tnnA/KqUWdPhNL
h1MrloDNn5sfGaPG/AeoJR2+kHlbLqFWhVBr91ELbn8h87PSXU+sCdKTz2OM
ohbdoJaWUevmGei8u9dA55sMavlHA5mvxJFfiWXp1EodtabpN2KjM7Xi8jc6
3779RufzxuVknhU6lpP5UzKznMyb2kJqgWkFub6KHSrI/CubVkHmTeXmCjKP
ihoayf2ytJ+RPI9RTAbn8vGnYX4F+N1tn1dDJ2P+c/T1ctvv8Hn55RWC/TCB
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
cn5luyaQ869M+x//H6XBBCU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Gka40/5plM7yn65vOot/43xgfJwc0n8AeGYdtRP06Kj/QTqLB0PEA6swzrvi
l8RJ5OfcByyfyfY9YH4p7z1g+UfzAzgNNwT5t+chi2f13Ycs/+m+PmTxY6z9
iO0H1c5H7PPaVGD1piMvlC6k9/MjqX6SXu/HfH91A8b2Lh3jUX/zMYtHU8Fj
dj+b1xOeb7sA18H8ht9XTwV+cOx1Z/clyJY84Kqmd0t9Y5DlHk+l8x+yqhPw
3o8lWywZgayd/JRdz7AR+DbWV2RltWdSf4CsEYAdsd8l/ROAh2O/i2xaD3wN
6z3tt0vA9TA/I+uCMqzCqYLg4JhdyMZxwJi+Ekj/GuAxDxo/bZdG+i9ksPVS
5QC3xwXF982Rz9n+lumBfy8et8LrBulPAp7Sr+eri3mk/zXwddywFM8VXrB8
plj5gtU79Wngi9NHd3dJJv2vXjA/jeVeWgXc/lNJfwDwMGwwyd+TwNjuJZK/
LzmbnTPZ88taANfoWEZ/8CD5mZHJ/LM5WqTzGrJCaWH+qwdZmL+6xcD7cH5B
fpZ6xeJD1fgVu7+2P/BEjff3omjSuwAYt+ss0nvoFXs+TcMs9vz6PsBDhrzM
LWxH+ucBV8F6SPr3Z7F4U6RnsXgxhmdbhdKll63bnkN+zslm6yWPz2b7QWXO
5vvxO2fZrNe8v9n9mq235s5rtj/1Ra9Z/jDVesPqjS7lDcufxk/AePkllM9q
vmX5Sx76luVXw4237PPm/LesPsi8clg/p+ycw/KXRpvD6qHtI/BuLEgUv9Xf
WQUL9veU34Lfsf5VNwm4eolvy6M2k/4NwEkt+nRJTSA/3XLZ+1pVLrueYXwu
178ul+Vn2aVc9vz69lZWP0xjOdtWW1n9U5y3suup31pZf2kZLbL8KF8lSv0w
6T8rss9rs0V2P+WK97weJ75n66u3vGffN5X9wN63+X9g39ed+MDW1/gC+Cme
v0hv6Y+8n2j+ka2Haghw7UXV14lJ5Ocz/r7MMY/1e8qmeaz/1AzMY/2AflEe
Ox8oStpY/6z2s7Hzl64fMH48lM4XOs6WgzZ2ftE2yGf9sKE38OiXv/NnDKX+
PDqf9b+y/fnsvKa8n8/OMyZ1Afu8bTbwcpzHkP69Bez76rQCdj/dtwJ2npDP
LGSfV+0CzsJ8TfpvF0r1l/R/AY4erSn78yLpV3yyCu8DOg/fnkP+7vjEzrf6
W5+keR+dnwuBMf150fm5xmfon75fG7XGh87PXT+zeYPF9pnNO+SeX+B8jfNE
mp+EAD9t+2hsuj/Nf6Z8YfMi2ccvbB6qdC+S1oPmUx2L2PxPP5GzKa5I8p/m
aVW/svmZrsNXNl8zRn1l82LL2q/SetE87eJXNn82tPtmFbbUKlEhZhfNp8YA
4/aII/2rv0nzAdJ/Dvgh+oXzMc2bb9K8g+Zro75bhbe/nabHRdJ8LfY7n6+d
+c7m9bos4Dxd/bnuS5CNLj/s/WE9nP+rlv9g83ztqR9SP0nz1kzg9dbLtRcq
aD5c5ie7v8z/p1R/6feDhJ9sXmx6DlwLDST9Tr+swlyML5pvN/vF5ovqwcAr
xu30kMnw85an/H25w282P1Q1Ae5nfn+zdSzpH/Cb3c+w8DebJytL/LEK2yZm
NXQQyN9Gf9g8Wt/3jzRPIv3z/7Dnsx34Yz9PV0b/dL4y8f/7aYwA3n/70WR3
J2TLXOC9TsNeJjVBlu8Dpnk4+X8P+POOcufFQPo9plcJkX4/6Y0smw387++M
Cwl+yMo9wJSPkDV3S7Dr678CD5neZr1vWWTFPyVF4UCXyVk/gpDVO0syfbpU
YPSrJOn/DCzDP9LvXUoU7t2Tl1syAlm7vRS7nuFmKabPXACM8e1Gers4iJTv
g5FN14Dzh/04fbAhsi0PeHZxQzWW9Ho42r8fR3o7AdN8lfROBsZwjSc/PwD/
3prcKnwd+VnNSbTXI9IrAD/YsGxLdmvSOwH4+K1Ya/Rw0rsemOYb5KdraVHA
ciKQn0HAtx4MWKVwJv3jgOsdvvu+KJr0rwHu1XJq1YUG0n8BGC93h/xs62xf
r1vkZyQwnQdJvx7Y0C1xTNwb0vsaGNvhD7T+o8qItB9/kZ8rgfu3aLA65xvp
PQ1s7Fn09+Z6+aivXFlRKDGq3c2jE5DVMcDl6016MHUrsu4kMObrM8jGl8At
rHETt+cgW5zLiTRPKluA+loAY7i+wPcNx4Hnd/TvHJuNbM4APlw+Z9pAN/y8
zMlFFNpOPD1d4YyshHOgsG1x+0etY5E1g1yk+yMrSpUX6Tx+DVndGBjr9R5k
XX/gHcX+RBai3gXl7eubi6ySVZCuh6xtWMHufxiyoQ/whxriiajNyOZ5Fezx
rUOWHQCm+Riyvn5Fkc5TfyGbwitK64F6bHOAcb4chO8r4oHp9zTSbwZ+syXl
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
kv5Tvf9P3/8Aij3g2g==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2ntcy/8eB/DpflGtUigy5ZZbUy7lUvsikWIuyTWjIhXlfq8huSSGcklY
bpFkckkhk5JyWySFWC6pjVo3/HI7b3vtj+P88Tu/52Nte33f3/fn9t2v6/yI
ycFaLBarif7x9//pf+IDxxUM/lXlQf+QScnpLkVGij/1fy1aJFYwKfrVkZVf
1ZbuJ+vobPm077faqlvkEI+MK8Nb1ebUkK3ZTrd+wnyLFAWzW9W9rJ+2+vPl
IvLckrCbR9qozb5BtmzzJ7lRT23eR3LxlocVS/5Tvz/S7ISCmclzOGVqoH5d
7EZWHi67n/ld/Tr3OpnRPma485fagnfkcfNuCb111X8vantSwXicnrBv+XPk
H0xOW+RS1KkG+QVk2ZLjEUMb1Ra+Jeemy7oH16ktMTylYGpWXrFP+qK23IW8
Y/UAxZDParMDyD6Mxwtbpdq87eRe39Mzn5arLdM7rWAqXc5/NFWozRpA1uEE
XFrcgvyzyJtK7LN3o/6CreQAE/3Hdi9R/4vkaXHVBcnZqG//MwomlpNy6hmu
hz+d/GeWz7S7Jci/mSxxvKaVjfpJ0sm/ffO3bStF/jJyedveZd0foL5+qQpm
l2O2ls1jtcXR5MbNE0OWf0D+c+Tg++UTvr1D/lKy+0nf6f2akP83udzj0Mql
ZajvhrP0/auurBn+AvU9Q+4484bLBznyl5C9q+q634b5P8jNbEezI/h+Yfdz
CuZ15eCkE6gH7zHZ7kLgkZU5yPud7P52g+ekZ8hrn6ZgIuubF4rvIq8PeW20
XWbQEfTDA/LhLddM4nG/RC3ktHlWsax85O1yXsHsnLE/+Psd5B1HHmtjGBhR
j7wryDMbu2mV16KejeSvjxzGeL5GPTulK5g+DluKbJCX7UXOVeVlPkM+3lIy
P8dSlKRC/iPkZzkndb3RfyybCwomw+OV2KgK9RxNvmQxnfURrwuWkL8WJXQb
Uoz8h8jLMrqn98tC/jyyuGfvXXtxv/hMhoKxiZ3y7VcF6hlG5vR3+vjjE/In
krlLWre2pCL/bXKM8778miL0s4IsKBJUdTyP+oZcpPvnFhTzTtMP+8geryyb
V+P6WbfI7aK9m7einwTmEgVz9vGlcsdHqOce8sGagZ2T0J+cHHL4n4MPuuci
7wdyXpZjrWM08ppeUjCnTn4eGXEbeV3JrT7L9q25hnpmkTm8wrE+l1DPKvIh
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
+8jCk5HXyrC/Zt8i+2ZXjHPFeOZ9Ig/MqGkUoh6y4Nc0frcG8KdjPLFEZCvD
k0k9sR5wc8iy4wvXmGO+FHwgy7NsVhzEfC8yraT9v3Ay1xX9zIknXx+gv9hW
089Z5CevErf4Yb8orCKLBluyuuP7JcZvFMyFXzGdPmP8yweRt3hzoltxfyKv
kDuk1WYbY34Xv/nXMoO3CuZbysLD2pp+diFHVlqMb9Kcf16RV9g5TByI+Vql
K6f12cYoay3+nsMlx/i6jJ2H9Y4/k3w2c33YRrxfGEPm1PXovBjzC1u7isbP
gPy1V3E9vH7kX7uGOj3B/Yn0J7NbvQLLcL/Fm8if7K8VcjV5z5MvzowyFuH6
Bb3f0fyoqjePw/gTTSWnf5pzMB79JY0i23XyvT8B/aU6S06bkrdzHuZzzjOy
9Zfsi/lYPyWT3tN8J1qw8gjyydeT83PetzzAesk+Qx7xdXfqDaxvPBm5utTB
e8Yh5G/916y1H2j/GzGhvudJ9MPJD//cb8Ej8od3MQuEmN9F38i1Domhd7Cf
lXb9qGAWiPmcRs35opgc2fqyvDoFeZvJX3MN/fN2Iq9dNe1/In73H70deceR
N75zd9Veg3oWVv/z97IGcnZM1ZvZWL9ZnT7RedFlysapOP9wx5BjZxgEPVqP
vJHkS75ld/JFqGcdWbp81IHBqAenY42CedNhR90ePC/gjyIvqKwcLsZ5ULiY
nOCnO0+4EfkPkj/WZbpf2oF6WtfS+ShxYsGnzagnjzzvceVZzl7kDyXbd7Xm
3sb1yBLIp0/NXLc7HPlvky2Su26tOop6jlAomIDm3IAS1Fe6kLxsdVP7IQeQ
fy9Zq+xux9/bkP8meXLE0m/9sV7wq8ln5u2MeY688iClgnGMXZLmexH13UPu
dbnBeznuJy+b3PZzdP90zf7hPflQcpRpm1jUc9dnBWNe7ihVbUI9r5EbnqQe
r8H5XCQnP4y1Wn98MfIaffnnddXAL/+8X3iZHLFxUWUJ6iWpJHsbHVauxXom
16+j80/In1vOy5HXmTzUpvjet2XIO5ucUX3LLxf3V/aSbHVStOUerpelW69g
KuMXTTXS9IMTef9Tx5fjtyL/DLLVtBT2efSbaAtZIg68dBP5OFoquv9VhW2E
uF/8vuSbwWNXbsDnC6eR2z0ZHBIShfxCcs/JYV0fr0P+NHKzqP7jrJWop2MD
nWeWdt4dLEQ/TCGXxcZ2LcR4k20k98+5mJmxD/nPknf2r/V6kYz8T8m91x7P
WIx6SfmNCmZGp5tx5/F5qnVk64uH4vImI/9p8uPfPyN08Tr/CXluz4ylDnOR
/z9y4uSMY4W4XvaaJrrf+3NPGOD7eSfIqRPWXFSg/pEPybJym/IV6D/xV/KK
oKqRPqivjNOsYPr6Tl18FPsTwXGy64DXveb7or5FZMPWcWb95iB/E7nHnRt9
micgf+cWylMw803YdOQfSx4j09U/Mwv1VJH15uwz95+NvLZfabz9SF+9dQry
epI39/JJXOqFvBHk3AD3s/FjUc868qi1aQlvYG6Hbwqm5o7Y8NdE5B1JrtZZ
+ueqO/KGkyWHnZ2z+ch7gOxUf4HzhEE9rb4rmGK/Gemj3FBPD/LJ5QVzvAai
HxaRL5wytXplj/z7yXS4uaHXCflzyU+/iN26DUI9h/9H5+22RwUveqKeC8g1
Bw2Fjvh81l5yUPzM+PbDkP8G2etZk47uAOT/SI55Oqr1kAvqGdhK5xHvy32i
u6Geu8n1bYYkn+yC/NfJT+8YrDIajvzvyPqHpw/tao38bX/Q+GnZec/NAfWN
I98QvJRU/qlT1/cqebHzhYx0O+R/Sz6V2GSQp438hj+pv70U57w7I/9AcnK2
XLwNfy/KJAfqFbcTW6G+r8lJDZmrfG2RX+8X9ZvPTBse6scZQP7tkt8zF9fD
n0Ue6t1+w9SOqG8F2cxLOWh7O9RX5zftJy2OzZ+CfuD1J589FuTwqAf6Yzr5
jrX74vbGyL+ZvGmlt3ELPp/b5o+CORfjJz1iivr2ISf9KGm62BX5/ciF3xNE
w/sjfzRZMmvIG6U58p8jrw7N5Sjao769WEqmeNk0k1J8v2QyuVmL+/yLBfJv
INvvPHB5Oq6XnUqeetU+/RjuL6+EnP5Am8m2QX0ntlEyjVd9kn3xOmsd2SQt
xHgivo97irylvcN4Tlvkf9zmn88XfScn9gwYeQifx1mtpWQWBrj9SsD7+Snk
F/6pJ3egX4QPyDNvnHm0GnklLWSL3YevneYgfxdtJd3vLhs/wZHHyPuknmV7
dVHf+2Stze328/G6rJF87WFkxjzUk+ulo2S6/kmu1ddDPQvIS965xI9Fv6jq
yUs3JNwPRj9ybHSVTGHfd087dEfe0eSAtisefMP9Ey4hG01xWXQT+dlfyKd4
Do/c8fm89npKRrbIf73MDHkZ8q67mziXOiBvGLnV7FKMiRbyJpL7dLt+P1QH
9WynT9ebYKrSwngRuZOHc0d8vo3XpSHksY+CRbe4yL+P/GfgJWUZ6su5Rda/
5nfkEsaLZJgB9ce7p8NLf6nHlzyYvGx+jmsJ+o8tIuv49F4wGv0V+YHsfr3q
ZRD6nxVoqGREowweuhminvHk5h9R+XcNkDeLfDo0Mc5IM96MjZSMc7NJ/sch
qN9O8rXRHhbDPFC/K+SZhxbsf43xI3lDjij5sCwPlhsYKxmDZR82jcN8zXYh
N1+yTx/kjfpdIkva9C+97IP6vSL3LRibcn4G8uq1VTJXXceYpGK94nLJNj4h
rp4LkXcmeah3w/kuWF852iZK5ue6X0v42P/x+5GLD8jiS7D+C/3J4f77o29q
9sObyPrtuh2/04D7zTJVMrmtVU6DcZ6L7E2+UBFn1nIQeaeS5ROn3J2heZ4a
RX5TdduuSfO87By5/fpWFzf8HiLqaUbX3z/6xGzN7wOTyE/L22Z93o37vZ4c
GzUsqwf2u5wz5PIWq/iMDcgvI9dYVu81wn5MPoGtZHheZg6NOG+z15KjVF7r
PPE67yS5nV0bz0TN712PyFc2/on/bw/yfyNPyFxRsRrrt0BsrmQEk/Zt5MUj
bzE5M21z/y7Y70ibyd/NP9zX3o+8dhZKpmhJobIA+0fhUbL43bgZvXEelBSS
7xeOaCrD8xl5A3nwC13jHNSP3clSyXg7+zeO1TyfHEM+scjstDvO77J88pwz
euYFON+x6snHnApnpeL3Bm7HdkpmdGuyaC1+bxWMIrOfDMm11MLvtYvJLtv2
v87tpjbnM7mt/6DKsTDf2krJPLb5L0/LR20hj7w0rVf05TV4XhZKtnwx9XzM
fPzenEBO6+d2MTFO7UhLa7pfL5yd3cPwe/IIctSrkNklwfj9eyFZXLuuvF8n
tVn7yCzjZwbpfLW5N8lOd/S0PtmpLR3anupzZ7GNAr8/q4LIuuHrfZ7jejh7
yM2SRRUV+D2Wn/33ddl5/6Ftkf89OXqZfVM1fq9mz+9Ar49WHtbtgN8/d5FH
17846+eI/NfI4073+tXcA/nlZFFNXXw2nhcKdnRUMt20yhdJUF/RZXJ/D4+G
t1bIW0kusy5jGXVRW6Vvo2RWvcnvXT0UeZ3Jb1irovZ5oZ6Sv6+XPth4fSLq
+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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5718556500000005`*^9, 0}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 1.4146825396825395`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5718556500000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5733312*^9, 3.6677664*^9}, {0, 1.4146825396825395`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680300670903735`*^9, {3.668032821463683*^9, 3.6680328418687954`*^9}, 
   3.668032879070866*^9, 3.668032929583929*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9, 3.6680310240717154`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"start", "=", 
    RowBox[{"DatePlus", "[", 
     RowBox[{"Today", ",", 
      RowBox[{"-", 
       RowBox[{"Quantity", "[", 
        RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"chart1", "=", 
    RowBox[{"BTALChart", "[", 
     RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"chart2", "=", 
    RowBox[{"BTALChart", "[", 
     RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
   3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
   3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
   3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
   3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
   3.667989983816139*^9, 3.6679899846396537`*^9}, {3.6680328189012156`*^9, 
   3.6680328236945057`*^9}, 3.668032854896698*^9, {3.668032892840277*^9, 
   3.6680329128159447`*^9}}]
},
WindowSize->{1474, 812},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.15 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3132, 81, 189, "Input"],
Cell[3693, 103, 2230, 46, 123, "Input"],
Cell[CellGroupData[{
Cell[5948, 153, 256, 5, 34, "Input"],
Cell[6207, 160, 45707, 825, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51951, 990, 396, 8, 57, "Input"],
Cell[52350, 1000, 48116, 865, 440, "Output"],
Cell[100469, 1867, 50013, 896, 452, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150519, 2768, 207, 4, 34, "Input"],
Cell[150729, 2774, 42335, 772, 440, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193101, 3551, 206, 4, 34, "Input"],
Cell[193310, 3557, 50054, 896, 452, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243401, 4458, 205, 4, 34, "Input"],
Cell[243609, 4464, 44310, 803, 440, "Output"]
}, Open  ]],
Cell[287934, 5270, 5203, 135, 277, "Input"],
Cell[293140, 5407, 1624, 37, 123, "Input"]
}
]
*)

