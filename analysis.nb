(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    349190,       6465]
NotebookOptionsPosition[    347963,       6423]
NotebookOutlinePosition[    348339,       6439]
CellTagsIndexPosition[    348296,       6436]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}, {3.668030898122348*^9, 
   3.668030948226341*^9}, {3.6680310032625923`*^9, 3.668031005842963*^9}, 
   3.6680782656897197`*^9, {3.668078488805176*^9, 3.6680784906802344`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<USO\>\"", ",", "\"\<DNO\>\"", ",", "start", ",", "end"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<UCO\>\"", ",", "\"\<SCO\>\"", ",", "start", ",", "end"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart3", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<UWTI\>\"", ",", "\"\<DWTI\>\"", ",", "start", ",", "end"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9, {3.668032724636281*^9, 3.6680327747307005`*^9}, 
   3.668032842681288*^9, {3.668032886551777*^9, 3.6680329055850186`*^9}, {
   3.668078288605977*^9, 3.668078304671023*^9}, {3.66807873300231*^9, 
   3.6680787607888904`*^9}, {3.668079398596377*^9, 3.6680794079436197`*^9}, {
   3.6681123583237514`*^9, 3.6681123663217044`*^9}, 3.6681124067766967`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlATG0XAPAhIkVjb5GmFJJqoshWcyNliWkhsrwjpCzJvmusWTMt9mho
oVSylKg0iBIpZa0wisqMMiUlhe90zueP+/3xfu/vfe7MnDn3PM9znjsZ+ax2
X9qRw+E0wD/a/x/+VySLUjD0ryoH+IfEX6pgxg5dvi/o27d2y8LB0xddHLyq
Bq3KAmv1TE461w/NqwGHtWTPXZJd125hrwsK5pGdY8WGWLRcAi5tnS9ufoXm
ZoAV/v6PPH6hBZ/B2+24vgOH4PsFal9UMHOfz3rxqRDHpWPAmdVOkZcaa9vN
Twc7upm3bfv7td2iCrBBmssyYwccl2hFK5g+S6cbeYbguGwUeHC1waI3xjiu
EoGfbVzfWFON4+IP4OjwGB9nVxxP0YhRMKGSvwGps9HykeDGlAQj194U/0Jw
3YIu6xefp/gPgG9FXKzLCkIXqccqmNaLF5Yx39Eca3BM6O9f5gfR/Hlgvp3e
pbgSfH/RvlhWfiRXwUt2eekddaP8WsYpmLNTM6NGBKKFc+JY4+Ld4EbVz9s7
ktApieB1ps3dnTah5a/Yrw+cdUnBePSe9oJviZYGgW9lByk3VVP88ZfY8b8A
yz6ftznCx+v5f8A+xu56N8RUH9svKxi788EHlGlUH3HgxD2NAp4/xf/8Mut+
ClvBNk80a2UVaLFpvILR7jx9XtIdyucz8JFxqXNTDCjen+CpRzLk6tuoHowT
WPkvmg4+/bH15p4uaNGTBFa+JT/AESFzupwJQ8sMryiYefx5L+5K0aopYL8N
P3Ijf6B568HqHtFJX9ZTPhvAzclqd6xnUj4HJLLi4zqDCw/aD500Gy1YA7bQ
XezwO5LiPwuOsEiMivmN5uglKZjRX8xSLDrgfONPAqeNGZIi00GLAsArVxmM
PqhG8/EUeOfJvr4/myn+++AV/uEbEk9TPplk1nwSrwCPWKleW9WT4j8Obumu
cUeTR/FnJ7Pi4yrAB537J0q3UD34XVUwg9SnVg+qRReFgSvqt/najcJ4OFng
V49eH98qpnh7psD92JW+a85LtOoYuOegpw4JD9C8O+DojA/WunVo4Sew2p85
pz6Nq8d4e1xTMDk+JrqLu6FT7MBRPprzRk9DC26BTWLPBVnOQQd+BMd+85/9
mEFLNa9DfWoIHXctQxfZgiU/B6cOuYTmiMAKn6ifA2+iJe/BwgUNtnEb0LKu
N2A+CYr/XD2IVo0AH9H74TfPDs1bAH5Z9edjmCtaGAyeeMNIt8kILe98U8EM
e59ofkAHzeWD1+VMjZtZgd9X4A3uG5nrEzOS4t8LTtQq31R9nuJPBgd//JzZ
YTOab5GqYDpEeZzqtgIt8gIHrthYuMqB4t+VysqX7Ao4+NKw1XObKP8vwZpF
Q8NkMyi/nmkKZsph4/H5PpTfneDPh86/nLqO4r+cxvr+3BKwrdlml4VnKf+/
wRNanR3HJlN+t91SMDv6On81CKf8xoGHfnrnKZ5M8ReBn9o09nIwoPh/gRf4
PS8rc6H4TdJhv2j4cdhqC+U3GpxXZjh+wVbKbwHY81XtHOlnir8Z/H5065BF
fyh+o9sKZn+uW8aaBxT/NPDsokyry7con43gXys29I1/Q/EOvMOuhylgzW6f
PvgVUbzrwBsXrOrrY9iA+awH2923OyGvpXrQz2C9njc5g/V5wsAMdrxnwAPd
fz2fVEn51M2E9Snn4T7NI5TPieDy9GdlASKqh1Vg+QnO0HGFFP9JsIXX5Rm7
D1D898CekSM0fy6mfAqyFEyb+cHzXc0on8vBM3OsawYNonqIAP82nbOB20r1
cBe8Y+OsDdG9KP4v4P6tT312dqJ8LrsL+6vE0zC4Ga+Xh4J3vvTesKMSzc0E
//zq8jhtLMVfBRblvipL1aX4udkKZm1CWky2BeX3WDZrnH+bPS6qBFcGXr4+
7AWtb91lCqbGJf7lnz4U/2iwz73Y61lKWi/SwA19XOIqWtBiOTj/7MiHmfno
lG73FIx0e9T83L8Uvw04NjW5q5GM4v8PfPBCi9OiPLT0HdiUJ+g26Qi6qMt9
iNdxi+8TV1rfRoCDhL//hvWn9Xk+uOnZMPWpA2i92w8eP78x3moi5bfTA1hv
JbPeTltI653VA9b7CeeCvQuTVz7WpPj3gCU9rH+U1tP6nAS22uzn8HoV7R/D
c2B+Xln4KGoO7R+zwfcnxdj4dqD1WQz+YPFev20brc8JYN6LvGmGLrS/vMxh
9QcSj4dwf+s5wduP0H694yFrv1BdAk/kxsnPj6b9uhjMf73K4Zo99Rtt4Fdd
sourR9D+sfURa7/kxoJzFxt+sOpO8Rc+Yu1XgS2PWP2IdFAu6/vxL4J9+6ly
75ugRU/Blq6HHQ3UKf4m8M6Vdv72Eop3ah6rnxA/Br/xzSm+p0b5/A7u65Pw
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
kZYL5fc32Er/+IGNBViP0iHjYH/60RL7cR26yA18s7uPYa8eVB/bwfHuCUPz
6vH1/LhxrPqUmYyH/jJPt9/8YVTPM8CXlunn2JtQ/FvAJbMuqO+eS/FHj2fN
Z3EBeN5AvEGY3+kTlExWvmzHpjqMR7BxAmt+B0rBQWMdr570ovjzwck9U+pc
TuD8LGoENy08qh/SHS1aZw/1WhlUYxKPlpwDrzw1ZVDrD5yfslzw+uW6Bq+7
4riqHlz5vLO533sc5w1wgP69/XFbETrlDLjuSJbR9V9oeQ7YzMbz+6ADtF58
c2B9XuBEAay3u6x5/n9pfbgvYL0f/yuYlge0qB+jZPa1OG/QaXuF8QoY1noi
Ww7e1b49N+C48Au43qdMkXP8JeaztyOcNyWa9TW70SkTwM/1ItVmTUXLl4GH
/+AYyVQvMN4wcIPr8pkzFqOl3IlKZk/VDibrKLpoLPh68fwBn/+gOUvBFfH5
805MQPOPga0fb4IdtQTjvw3Gx+8X0KrRk1jm+YBvxZXsKH+JFh4Bn1jXeURl
Jr6fOA0c5fTSPLsQLfjPScm8quu1dLoROvCgE+t66Q32eNE78JLz7T+woyX7
J0N+U2cv+GCHlqVMZsdXCh51rq4y+XwxxtfZWckcDVnRKXEcWmjl/K8fRsuT
nP/1888xf2/A9Pc9RRhvRxfol6wzdj3MQgcOBx+S9FqZ+xctne3y7/yBFv0F
Nz7Uz3rgVIjxmk1RMmGdNnZT936G8XqAtU3XXXoYjOOqHe3jPhVLo3vh54vb
wPT3lTieMniqkpmTMS3Ceh++v1wI5uQ/gxMxmrsN7Lu+/USKrxfEgsuTdMwL
HqKLBk1TMh93HTuSE4nXc2aAe/eYFzMyFN+fvxnM69X+H/B60cVp/86beL3k
6bR/5380b9p0WG9WtTdE+HrhBvBWOH2sNcLvJ44CmxzQWfTHrQDjfwzm44ER
Lf8OTrVtv0F4vTTSFeZ7+/IYiS56BL5+POVapDnFWw8e5bD7QM8qild/hpLR
Gn84wWsnWnZ6Bis+1QOwqnykbNZ4HOfVgfXkw85rx1C8OjOhXneeSu5mi9eL
HWeyPo97D/zu1KVjs8Pp/ivB276u3axdSve/rxD6D4H9ojwe5kvqIGTVT5G/
kJV/UY2QVY+SXm6scdl4sP1qbOAwfl/w5dr7dUk7qH5DwU5MyGs48mI+td3/
nf+ofse4s+4/dwkYH3dn47ggBHwkujzKOADnR2A6+M/39j/YRnNGeyiZiPaf
g8Vo/iKwxlW/Cyv8af4f9mDHnwpOfJWg1A8udvgfKiMRGw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fFxDrd9FU/B/kwvAvQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
r+FrqcqYuLiSyWvpfY2QgYfsflH8yYDeJ/nAynciZ9k7sS4+DfOqFap+2NH7
JM0eMiZhwPnVmbn0PskGdtztsCrgOr1PWgcbl+0ZnXGN3iedhEfn/KrWymTN
zYB/2Y02W7CO3idNU5Mxin1UN65JpfdJnvAPQ62EoL30PiwMrr6ttjOQri/8
CPPad51Qfsias6anjLFuXNv8sIHef4XCU6/vKXb9RHnvwgsNakOW1VO+3r1k
zIDZrfVGfb6x9TsCz/hy9cGqg6xFt+FzsdPMV71lLamEVx5yKn6fybparbeM
CdPZ2vjtJmsNM1g24rzhiPusxUmwl1H7rPIJzWz93sPX/dcP0evPmqPaR8ZE
vzqsv/oqez6PBwcnNajNGcQed1sGvxCvcVe8yB7nKvWFHV/UTFJijwuM4WXJ
X4Mnl1LeJbAVv+9enjJ7XLIXTluU89JzOms+p5+MWTpQcn+EgLXQEO7bM/dp
vT5r8UI473aONC6Q8u6BpeFDo8W+lDceTj/zbtj6S+znhY1VlzGRwVUrrtuw
znKGZ3Mq1m+i5yvfBcdNLzWUWlP+K7Dyj8Oh1+vY44Ji+BTvlr5ZMj1vRw0Z
UxumuHDtCXre/8Ij+1buLaihfo2FHeeN3zulH3s9YSFsrJKiEUj9Iv4Je8ty
LMOC6XmL+2M8d908WeRO/ZkHP3UccW1hIj3/Frhx/Mfehx5T3uEDZEyyTb90
jUZ633kedmxrOZVnQs//CbxunZ3CSiN6/t/gJO3ni1SqKa/uQBnjuv/QhG8G
7HH+zL8uyumZqMm6OBsOep5p9UeVNecrrB3bobZJSv06RFPGjDprfDY3gfLb
wR+z1/aaWUz5/eDZC4NUjypTPRtg9evpNUY/qZ6DB8kY95tj1rXrUz/w4Qu8
UT07JlH+9fDFPgM0J6yh/OHwfyXPm4amUj0HDsbzkQd4r1WkfrCGL2619d9m
T/2wFrY8fbus5i7lPwn3FVvlFo5lj/PSYX23YO20JuoHSy0Zo9TWaa91h7Xc
A074pjD6TTLlPw6fGDP2YNNSGn+pf/2gn3Eo9YfoA8y3nG+42p3G12ptGWNh
NqQzegXVNwQ+sl7rW+QZyp8CH6oevFNnDI2/alh+92a21kjWboeHyJgenM/H
VJOonrfg12OWXHzvSf1QAV+6EqI5OYf6ocdQGXOsxDlV6xnNVxPhPupWqeXn
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
d2DNr9v82lxapv8PVdoHHw==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5719434000000005`*^9, 0}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 2.9673220446601487`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 2.9673220446601487`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"USO\"", "\"DNO\"", "\"USO & DNO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124097363715`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
c8DWNRNvm/4PUsMG/w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
9Gj9HcIRrP8HavYhag==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5719434000000005`*^9, 0}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 6.212452381552495}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 6.212452381552495}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UCO\"", "\"SCO\"", "\"UCO & SCO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.668112410501789*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2HlcTN0bAPChRRRNWpRUI5Q2JknWmptSCEO2CCORsjTZsrwpQvYmJbum
0kYyUVpIQ0RRJhWRNCVLM8WUtCB+j+f8/HH98b6f7+ece+7Tc557lhnuE7hg
bV8Gg9EO//n7f/gnEcfJqD/476sTWOAvlFG7O38m+vz68tfiaLDjrmvr7lRg
u6IA7NfPaqKfV+tfsz6DbX3Yra3LWv6aOzheRpWZORR1MtBSAdh52qO36Wpo
5h1w1PX2ipOT8XnOB3DuquA3rGlovmaCjGrsNXtbsgj7CyeBY0PY1o6XZX/N
zgXvitjT8oj1+a95jWDRyJVx4sVogUaijApdU2dpl/kR458AXn3X3XlF6yeM
nwe20U5jdZ9Gh9WDlbf3GM8LwedF/a/IqKm/VZ/ySrBdagcWm7TsMjPE9zNX
gtnL9BcFnpJj/IfplqgmyaiYSxZDPmRh/AxbcPK2m/m+v7GdvRwclPNyWFFm
M8Z/EGy3eOve8EnYX3ADzPG6uUfnDsnvmGQZ9b2ly+1RN5q7FGyQYrN1fy46
bD84b8OFe+/8cb5E6WDbLTwjuRzbpS/B8Re9n0x4QfK7KAXyn/nbqPwyWhgK
Xq7WfUh3Kr5fkgau7980a3wwib8KnHg8euAJD+zP/g2+EnMtSV2X1Md/qTJK
obY36HUcWpEM7vfsbHjRADSrAuz/deYHR3VSHz/B9So1vzsGo8NGpcF89wwV
HG0j+SwHx8TbrxlpQOLt/usTPR8/jcB2oelVGaWWGu1RF0ny7QGeYsy43U9K
8vkUHFhZdMfSF9sF38Fuw51unV2NFptck1HXllpHcZegFTPBaRv7nJ1EYTys
bWA/dYcDyQX4flE72CTy1unr20k+h6XLqBmTWKr3b5B6dgMrSaYtu7GG1HMQ
2HPqKqUFtvj38y+ARdHvFq8Yh98PY+h1GRXyZdY+Byc02wV8oi4ruP4lmrcZ
rNK066V8Kfkez4KNwyMzv7rj+8QPwLN097uM4WD8XCpDRvUXXWtavpTkcwM4
KunNJOYWtOg0+N70NpFGLPkeC8HvBy7RePwR42XKwDFJ1I01IaQe1t+QUWMO
2Y+sqsb4JafAgwLyjv0aocD4C8B/Iv/b7qnehvFqiWRU4RW3d08Ht2M+I8Hn
AlZ2+5ZhOysffOBcWIViELZzm8Bmq2Z0+iz6hvEOypRRlUoXq7ZexXbRRHDv
eLOnSaexnZMDnsFWuTCuHM1vAB9Iubq8fBNaqH5TRg24dvGRRi1aYg9eFr22
zqC0A+Plgdmtl6a3f0YL3oFDi9gHG3XQYrVbMmrT5wunR/ihFePAdX2C02+M
w/FYK8C63Zy6SAaaGwF+1ck+90eO8UpVsmTUKv9si9EP0Uw2+Gz7g+pJTDRn
GXjM4py+ljfR/APg6c5VP38exPcJM+hm22TLqMEaek07Zfg+3hJwaxnr5gsO
WrAP/GX67THvnuJ44mvgj0tfHA9xI/mvBtvNWar9fQnJ78LbsP7maMW17UGL
9oJ7pp9Jn3QILU0F78/bdffMKHw/sxIc9NoyK3IHmtMLHiaY980/HC3ZkyOj
xtWWN462JflNBhupfgjcPojEL8mh/b28H+BLX7fXrPEg8Y/MlVGnmbeH3u8g
+U0EH7noWryrgeS3DLx+//PK+6u/Y/xd4CR1l+9meWjR8DwZFdC58ur1fHyf
dDbY8NSic0eyST47wP5hJTYJY7G/xDgf6v23xY3Xm0m8M8H5NbqS5drYzt4K
tlEJjR3q0In5bAPnfKxp+rAO2xWGd+D7OM+6nO2Pz7NmgG+8mdxtcgzN5YM7
PjTuXzyTxHse3HD0fE2rLpppcFdGdZX1YY/5Sep5OtidNVV62J3U8ybwUP0s
iWMxif8MWNbwPfeOJcn3fXDsAde29DmkHjgFMkrj9H195ULMryAA/ODyxdXi
CFIPMWDN8Pacyf1IPdwDjy+ovRTvgWY1gw/qjuYsZ5Pvze8e7G/Gzcl6fUk9
R4HzM28acCrw+2XeBf/IMQsfVU/q+SM4aAa3UPUKqWdmoYyaGfP09rZ4NCMS
PGJZo2SgN5qdV0jrz3sPZvZEjJ9xCscXDBTT6lfsAK7+Wlx2VIzt3NvgCfbB
4mf9sT1MCjabMbB05BZsFw24T/vepOPBvHnlbOl0Ev8qsFbQiCVB89DCOrDI
3E9fEY/rmaTfAxmVFTkpLOg1WZ/HgTf0O3U93xfXP7Y3+ESFIHr4VTTvEHit
+cgRg/jkPKRcJKO+XlS126iJ47HGgtdZsQPnVGE71wt8vOyAW6MrPh8WDj5Z
cOf4RDHZX66DZ9jr5O+bjeszx/ohbT/mLwZX//5muXMi2f/CHtLWd8lVsLvF
ktlDLMl+XQ0+mFHImmZEzhOej2RUhemplgGpZP8IAd83Vx6c9B7PM4oUcBI/
efOo8zg+6wV44/vjO6qayf7yCzzSr//h2ni0dHexjEpfyHLV+kbOQ0ngDI9A
04/2ZP9+Dt6fsfRasxaa3wO+Mzuh0sGTnOdGPIbneS4Wz03Q7ARw7EH3h3fX
YX/eM7CrhaK6yJjs353gzUXRx2wqcX9XzHoio2Zr7ej+UovvDyt5Qusv+gbW
SFcdxP9D9jujElhf5/fxau4l+5072CL2jL8lF+eDswXcqVCKUV5B9jsFWLlm
UbuNNZphWCqjgvvmDS4zIvu1ayltPnmBYOujb34UjkELzpXSz8f6T2n1xHV+
SosnbCN4rSHDiTudnN9iwS36btbho/B9UjHYx64hamcUmu/0TEb97vrkt88B
LfQH18wMvDbmHKnfe2BPj0i7eQ9IvJ/BpZ/KckTTsD7F68po4ykE4CfLVLIP
9SH1+gGseda2X4QuOU9olsP353jKarmczPfJv558qN4wAs3JBReMzR4vEaL5
jeBXjarHmYdwvoQaz2VUxKGMS0Mc0ZIJYFPPMvW4dHJeywYf2fGhcVMuOb/X
g2f1mfGkbRa2i/tLYL9PuDA1VEHq1U5Cex9rJbjI0C1x8gO0VLVCRqX6Nv/J
34n1wLQFT3et22ZVQb6v5eDksJeXTa3I+fIguJ94W5zKO/L9KL+A81R63Nlh
HeS8PgbcqOK0zd0Y+/OWvqCdTwX7wbtkrwqvPEeL08FvjfLmG60m53WrSlh/
l4WWPrhE8rmoknb/EYVW0uKRpoHH7Nbi6KWReq0Cz+H1PmwSkvleUEWbb8l/
YEFFl9r2bDL/KeDizW/uBMrJ/FeAzW8eUDvVF+ef9xMsHe85J9KIrFdXqmXU
Z+eu+m1WZL0tB0/TmzYyMhod1g3uHdKwYPRcst6avpRRd+Pe5+4wQHPiwb8u
TGoqsEbzn4JdB2awFytwfOF3sJ7Pze11K7FdYvJKRk0cnpD33gTNmAWu2FZm
ZTmV7AdPwKZSjlrRRrIftIODblfOvHUW2xXDauA+d3/J6vQAEr8bWJZ/qq/w
M5obBE6kNkW/9cP+0q/gor2JOwyCsJ059DWc72y/l3ktxvxwXMAuiwYmjfYh
5/XN4HLH0GNblqGFZ8GRJfX8zhayHwx5Q7tf8SiwXuGg4quq5Ly+Adyu/Pp8
6wy0+DR4gUvwBUkPuR8VgpU63R2ymRhPmGOtjLqcO9Pv8gHsL1oPtj4/wKqg
kHz/p8BrJn0Lf2VO4i8AhyjtXD3hHprzCSwfP/6p7BXZz9a+lVGMAcaOl3+Q
87rgLe17Z+e/pd83msCvquurnDnYXzCoDr4v3V32+6+Q/J4Af3Q6x3PyJfnN
AV+qmqCq6kDqowG86vXErKpcUh/q72j3Aan9O1o98bPe0fZz4Tuwx/5fi641
k/pQq5dRK1dfikr7SerDDnwvec4BuQuph1qwvUPIupYp5HyjIqXt7yw2eEKa
6plcH1LPy8CHIjL55ktIvAfAD/ffeLC0muRTqUFGDalxa//cTPJpA550btrb
QXVo/hLwzkF1nUdnkXreBz6+1mBRlgHJ9zXwlIFlN3/Yk+/LshHOn1dGbDhp
RvK5EDx3nWbOdAey/u4F+zxac11ejlakgtsuLF3ns4XkuxKss9z96no7tGj+
exn1elF0ZMsjtHQPWLNr30kzHjnfJIOrW8XmG06S71FCN/8H+I65e+xsb5LP
XU0yysC7X09FJZqdCB5VHpTSk0Xuc2XgZ+eDot/WkfNlFziuLjn4fAzJ//AP
MuqRQazScA1yvygFe2/d2L7lFjlPdoDjPad2JJmQ+Tf+CPWQ6mmpHkzuRzPB
GU7uG/QV5Dz2GFw02HpiupTMfxt4e4ap+eFaEu+wT7D+mPTIkvXIeXIGOLVq
yIHVbSRePnhol4/G/qGkHr6AY/fa/ZmTQ867Bp9h/bdJMexVJfeL6eDNC7Wr
BF3kPLkJPCAzI2dDEJ63RWfAGzf/eFYTTO4/es2wn4dsyNi4Hs3ngM8rza73
mEDO6wHgvPKuqAJ9cl6PAe9cpuoy253cNwqbafcTwTQZ1FucuKp3K7l/+oGf
JzYoB00h988ocNIfEy3/4+S+cRfc5lPhHvyLxP8RHBOrs2CHCrn/+Mpp9ydm
JNjOM0Bl4Rdy38gDm7Rr+h8fSe4b78Hi0f0+ZP0i+TzeAt+n6Wq1OWJyPr8N
Hh5w7VhOA5l/KfhXyoone7zI/A9ohfO7UvKWpuMk3+PBazkr5nl4ku/rFvh+
zN4RpifIelDXSvu9QNrvC3zfK6JcA86Q+h0HPqqas/KxE7lfeH+hzbfkzRfa
/YGh8lVGnePzZUVrSPxjwcVRtmYeJSR+L/DzwwnjtM1I/OHglWsSHUpsSD30
Vcgohe2nMh0d8nuENdjMXZvvcoXEvxhcU9e18b4aiT8MfPPSr5if1uT7uwpW
+XzQ1KqAnMcs2uA8diQgvGMbWR8822jnf0kI+HYo/9FjT7I/p4LNMnbeXXCZ
rMcv2mjjibntkM9bMR6mQ8j6sBtcHFAeyI7AdlYSmLuQs3h3KDmvPQe7TrNe
wNAh58medtrvb8yd32D9dOv9NfsHOf8kgPm1tZ5p1uR+8eyv6z/FfRaQ83kn
mB3gfnDjCBxPwuqQUd1Vet8vXsV2Xhw48cCe7YMOkPtFCdhu5TG9vn3J+ecb
eMyWnpQzUmxXGH2H84au2tj2RHIedgfnBaYMMC7H+KQKMHvlyPiMTnJeM+yU
UaeyBwQMVCLnc9dO2u9r/EBwwLdFtnsDyXntC1hD2Ghx8wU5r+l3yahPDcKb
2RnkPuHcRbsvCDaClzDT0jg95PfAWHDg85xA+R9s5+p20+5DYU7gNsVF48z5
5LzmD/74fXve5bPkfhENPhdyJj4qjcR/D9zUPL9auoHc16b20M6rknXgoMeq
c8TO2M6IAv984nVo3BFyH7oDzvX07PRhknx/AH/o2afy7hfJ55ofMup02pyf
CQ0knyfBdrPmnX+kQe5rueCIUy/2VQeQ+1Ej2N3Izs+rFy3S+An1GnMsJuEw
nq85x8DjnB36urmQ83s2+NHPObnR1/A8LqwH39Q53aRXgb+HS/r/klH5Upv1
b2o/YPzjwbVXredSw/H3dsFNsJJX0oCYQmwXvwW7JZ8f4uj1HuNX7ZVRRr+K
bV9po1m24NhBom3xD9Dc5eBwO8ODjTpNmN/X4NKMGecfPcZ2pvJvWL95Drlz
R2I7Zwz4iGZI0bykRox/KfjTul96y5Oxv3A/uCp8XqQRG83u80dGNS8wZ265
i/15VmCXjNmT/fWwXbAI3LB3R8fYZrQ4FNw509nCVYvEnwYeVRP54cwNfD5s
NENOHVQf0LfAvgHzuwDcO7BI56inFOP/D9w9eumbWj62M1PAUyMPaT9sxXZO
BfhGZsWFJj1sl8zrI6dsM7wmZyzFdsZu8OAPN21WpKLZV8Dk/IjmlYMlllcP
HOHXYfzd4J2/04tP5L3D/Ab3lVOenA3zok6jufHg4C//xQpGY/+wp2CdnMjc
mnFo0Xew46aI/b1XsL/URElODfo0f6XF83rM72Vwsc/tV5n3sF34BMy8OM2z
eNdbjL8dfMctNgI+OIzXTVlOxRkIY1b0qcZ8PgLnN03KMuC8xHx+Bd95yjhc
612F8Q5VgfcNPwf7MZrrAjZSri9Z9LYS490MTvrccnRW7QvMZyvYurhySPgF
CeZziOq/+ajAeCnw2P0WNTFB5RjvBvDC3s1v09WeYbynwX8Eoe5rRpZgPnX6
yamq0iVQz8WYT0dwssHmUGX9xxj/evD0xrB4D1O04hR4xYl83iCnRxh/ATgk
/KXum8dPMJ9T1OD5/o7z+kVgu3Qt+Ovptk29q/B5pgA8esinfYL32M5vAs9J
8L6dpI5mrOkvp5qXOaUqDhRhPk/QzcsBF2YFDypJRIvVB8ipK811XzTWPsD8
HQU7uGl/ri66h/nL+ts+Jv1qs9YdjO8deGulJayndzE+NXU5JQpNeMOaVoDx
2YFTZ/7W/FWK/YWZ4K5ltSGON3Mwf7VgaX7Rt6iCXIxXVUNOHdnqfMfSF/uz
2WD/EDPVVbXYn7dMg/Z+ltJAOXVgouC70RFs59qAN53duSEoBscLWwL+JOm3
8u5AbBftG/gvn9k434xBUL9aDlt0u7Iwf5ZgfnQA/4jVbYx3IXjrSe/t8Q9u
Ybx7wWuct3EWMLA/Iw38Ni7oZKgyvk9grimnuI3Dgs/Pw/jE88Hbvh2F+1Mh
zvcecPEfL+VKzTyMPxnc8GbEwuP12J8rAat9Ct+6PxfzJ53LlFOLjJ5PTbHE
55m7wHWFFV92mWF/TiL4motCR8cHx+OXgQ03zjw7rIPkuwvsvDMtZ3AZjscT
asH6kt2a6HoD51NQCn5sku9bZovzJ+4A/zp9YvrsE/i8wniwnBIcOTRqURaO
H3YJPDslIPPENpLPx4Np+ZW2DabFwxymLaemGJ2JUpdgPjkzwBlOjQbWPWjJ
QzC7hfGgvBifZ3wF32/qFydejPlkG+jIqZgrNUf9NuVj/NPBW26VSsLn4PiC
TWAtPVf4HvB5VosOrV64erpQv31drXv08H1hHF3a/IsCwC99C59sscD5lMaA
D2qbnp/yOxPzqa0np3I2J2qnCEWYz2lgq5oom3U1GRi/H1hYfuzIj2vYn3EK
rGU02jHF8gbGf5f+vHjyEFp/hS/49arMsqNiNCsS/PiNHL5PrDduHniYW+3U
yf4k/vfgIRoWwTYnb2J+ffTl1NMin7HvnqI5x/Vp4/Nv69PqVygFT+6dYKuV
geYdMZBTi2sY+0pDcHzBLfBQj2YH0xeYf3GdAe37UPQbKqfWryhO8s1Ds8aB
H9b3JNa0knyKwFdHCmB9xvGkb4bS5oepYiinOEtnLtG/hvPJGQsOzK15uuE2
1hvfy5BW34waQ/p60HeYnCodmu7/4QnOP896GL0eFoNb1PNHlHzG8cVhw2j1
w/0Dnjqtq02lndSzhZGc+qzwu3d7LLaLPMEnTsawphmR9SwEvKf/czgvkfUs
FTwiodWHWocWmhlD/idrlNbLsL+EC07zX8nvbMHvi7EHHJnREebghN8vOwlM
zn/Yn/fcmDaeYo4J7J8rlsB5HM3aaUL7XrkJYN7ctRpNdmQ9fmZCi0/UaUJb
PzjbWbTx+XHgG6ucd5sZ4t8rLAHvbt58IbUQLfkGljGfwHkV+zOMh8spRmZ9
6ooZZH0oBu8oHzYhVhX7KxTD/+1/ZD0zNJVTTdW6Xld2oLmupvT9ociU9vcz
v4Czznc42XWSePVH0PYLvjN4STev4WEcjifcCO73eIT24Vh8P1s+gl4PuiPl
lL35rYjaeHxe4AT2ttNOqdiN44v9wSYRF3rHXMf3K6JH0tbfsMGjaPUmmjqK
1i5dBy5SXv8nfyeaGTWKlh/OHfCGS4fWefWSfE4yo/Vn+JrR3s8+SW/n5ZrR
5kPQCC63/13etQ/NWm1O+z65x8xp9RuWDWb52CR4mJL1ud6c9n3zD4+W///3
NVwvhDfB3fabTL3N0ZK34GqXVet39iPrWT8L2nrItgVrt73UMqxGi2+A7xz5
vjPPi6xnr+ntLGVLOeXisfTYoWBc/7hjwHNL4j7N7Mb1MWwp2P9A/1dqyWjm
K8t/9Xwd89nHSk5d/vE2+1AfbOdbWf2rj2sY/yKrf+sFWhIKFmovc3219Crm
8zfY4mzFxqCYVMznaGs5pXA5o63jk4bxL7D+t1/j84r/wN27p7ybWIXPs1LA
FWxFpaYBPi8aZSOnjs2tWuX+OgnrYR74fXZ2d9rCZIx/t82//QXbOVfAtaFa
Yw42XsH4y8GuG3PlYecSMb9zxtDa2cHg3Y3HSn93JGD88XQLnoJ3HJm7O88r
HuP/DjY23dSw5J0Q87ttLOy/f4Z7OWSjwy6DlfyU2s+ysb/oydh/+b2E8beD
Yx9OlK+ORDON2P++z4uY3wvg7S0p4vLiM5jfR+ABjD5KlZrnMH4F+18+0eyh
tnBfOMsRV0/C9/NcwK3KrxaYGOPfq3hg+2//x3yxWsFTJ+gM9zbHv487ZJyc
WmVuWuvkhv3DKLBmZ5OGkiPmR7RhHG08vo4dzUJHO9rfK1kP7nmnyfaLxfEZ
0eBtSjMur9uC7QKt8bB/qbweUxeO8YqngJ+wrGK+TsV2xVrwuoDR8frdOD5L
AO5p5dZVhqG5+eCT926cGMXC/tKJ9rT3MdeAPRPWy54ORnNOgOe/P5F8dxm+
j58DLjipmfq4BC1sAFtOjkp7MRHHY/MmwPp3pM+Gsxokn0fBy694Sq4+Qguy
wIt+16s/1yb18A5s6lxTIk3FdoWag5zS7VRwLFyxPSwCbDnzxWKnERiPKBOs
kK/t6ijD/EprwYONz20qsUczVSfCfWLzue/r++J8cdjg7N9PolbnYn1LMsD6
2U8PTOwl+X0NVvnlsWdpXzRbaZKc8vuo5rldldSzDfjRw1tbWqaQel4C3i+6
9VV4Gc16Cd69W3PUf9YYL5cxWU6p+1Yv7POC1LMlOLR6YPTp03EY/8LJtPxI
94Lt9Nf/Dt50GfPbCzbSbZ1feJ/Us/kU2D93eTquj7qA8c8HH01cMVrbD59n
/AcufdPJDrVBs5PBp+136Ux5Q+pj5FTYPxWNSj8iSH7ngoN2jnS6tIvEvwvc
ZWLf8u97TAS/NFg4N8US4w0rA4v1Xsd/2Uu+N49pcF8cdtJkrQDj4+yYRouX
LwRf6DfzhO3R8xh/KTi/5vvkcIuzGH8HOGTO5ILg2FjM71ZHOTXmUovbkDXY
LrgEPqN2JX2CC7aLH4MHWH0dv2QTWtEG/qQ/at7bwWjWMCc59Wb23E3ur09j
fs+Dl9cZevM9sF36EFwdvcrS+RWuB8yv4K4kC2aBLb6PP50jp8bdGqt6dSH2
ZzwAK+2YXDSoAsdjt9DN06Pk1MotgffN1kdjvBzwApVnGjUlMRhvAFg+b+Qk
VSds5zaDA9ILHJ5fisR8ajvD/uRnbn5yNlo0DeztvHCh49qTGK8fuKHZt09P
yXGM9xSYcUfrxiz/o5hP5nSot/EFNuZOxzCfk8FWjUV2nj+xP2Mt2N72w4kn
D49g/JHgg+HvIi6qHcb488DK7cxz205HYD4dXGB+ejLXDfVFs3zAGjblHzUN
sD/3OPiT6fRLtfH4vrDbYFvDhOf2lWjOKlc5dfenQL9SE9/HPwIWHamSDuRh
u/AW2H5BfN6qPziepA4czzG30PHB/oJDM+SUasfXWTYUWiwCe69Uz/YwJfG9
AbsV6R0deCQc41Nxk1OZNwrc+nP2Y3xjwe5l7oIf1/Zh/q6D32sw6t1FIZi/
GjDrwnebwWn/Ybx93eWUHm+idMcoNN8anL41ynTPZuwvXAweesahVDh/F+br
D9hmuN6WzMs7MF6LmbD/yIYvWBG4DeP1BIu1ql6u7ROM8YbMpL0v7Bd437TU
Z7+m4PMis1lQHxMPLd8cjeNLueDcD3OWcYz3YLx7wGXbvKZlM8Mw3iTw9KsH
nZ9fCsX8jZgN66FM73DEFnyeMRfsc6aZO/bHdpzvneBBo/acqo3H8XgJs2nv
EzwDPxgfmJX9CeNlzfaQU188ZH7ur/F57naPf/ndgvHHgTVmHnQzfsnH+EvA
wy76qqh0oaXfwN0X1B8UJGB/4cU5NEuKwVa/d8eszsXxGW3gyBd/GrReYP7Y
hnPlVN8fa1pTNUg+z4E7I1Ky33tjvhRFYAe+wzOz9Vsx3i/0/lz9eXJqmbe1
UswOHD/MGTyiqGBG8Xg08z74zwNfpVApjseRz/v3PezE+dflQr30PhlYqYn5
ETqB5w1UTzO+ju0Sf7Drvea5ae9JPj+DN5TFV1IMnB/B4PlyKjxw954HD7Bd
PHU+rV2xDjwl8EmH3VCcP1YUWBEQtlvTGdtFmgvklK932CmTRKw/6SRw+p68
ZS8UpB58wZ2XXaP3qJF6OAlO28b4seku1js/F/xwbECzdQCa4eAJ5+epTzv7
dKLZq8Emid6Tx2ehecfAw9YxBu81wngE2eCkJcv1lAV7nf4HuIqdIw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
J93B9VqyEByf1bTrdReut8xI8NtpycnBv3GccxFcuzXsVW8N2U+egRUHa0f0
HcP9hDF/nJTyXCw8s/gGjrO3gIMkKuPONuI47wK4v3Pqa1sl3E8ET8B/XKzO
bxmP+4+4E2zyecXtCj7pfzaNl1J1dfdzRRVo/jlw3hsH6Tx70v+Ugx+uPLLV
YTH2L5J28EbhhmaNU2imIRv6216/6knTdDC/Z/651drDcKUu5vcB+7/+YwjG
LwM79um9UyobjPEPs5ZSVTllJt8SSfxO4PSxm40s72O+ZaXgGxPYdR47sR5Y
X8Hl7q1x7cMw31y9CVJqz7O/weIfZL+jwIfjXPPpWrz/ojVg9bqxhUNek353
8ER4Hu9W664h/YLQHkzef/F6lasmyvVLjBMT5epFMNAG+oOk0j02q0g9TAP/
LFF5/X0TjstWgldtoUuiHpF4BeAs5Ylzj8/CeLhF4CFh7TdU40h/PmWS9P/f
m0k9rwBzt5aOjf6N5hwBe2quPv29FOeH54NL3Oxsbo8g8TeB2QpvTzYK8Pex
ebZSarOZcl5NN47zYsGlTyd7t3wi/c8N8Mlvt4b7HyPvFw1gl9Z+x6PVSD2r
TYZ6/X1fzX8KyWc0eOATb20nW5LPXPD3Xv7KBatxv5fUgSMDrc+FfEQzVabA
+pP3Iicvj7wfscGhp2cNf6n0F9e3HHBs2u4NVxfh8854C3Z0Ec84OwXzxVaa
KqXW5sdMOWyP5lmBJdW172b9xvkCb/DsIjr09TmyXrwCT8K/X+B8LsMO8i8t
dtw9n6wXY8D1fVd3xPHx94g8/o1bHI0aMgot2Qne+7t+dc9Ukt/f4FT/E7PS
A0j/Yz5N+v/vvaQ+3MBWZTP5pfV4PUYUONG1ZZHpELwe+xJY+mvUzfkeOC4e
OR3267d29LoLaNkC8PojV09ERmO+WNvA7SpTIie8wd/DTQXL3PpoE0cSfwW4
H+4nGC9z3gyY/7u9s7yNrHcRYJZFnBunnNS3EOz5LvqE1JXE/xjss9DJNmIp
rkeVP8BOwVnq26W4/vA22kupuM++A2y/4u8TnAVf8c2pXGmM65G4DOwXMSXQ
5QXOl7WBnZf/9jroQPpPAwcpdXysbebtA2jRabDC5h9iWyWy3t0Hd63+3ZQ4
kvSf38HuSdldgSK8XvhMDryPGgsM6pPx/IxSsNneAZOmjcPj2a1gbSuPad1D
0TxdCvKTKjm3o5G8P3HAdle0wxxzSbyrwfp82jU2B8e5X8CbXZnx1a/J+qbj
KKUaVierNA/G9zfRDPC+x7G/Dx1GS4Id/1tvyPp2HOz5ozsxTAXXKyFzppQK
C9C6XhCE612lHdh24boIM2PyfrcSHOnbqs9gkPXtKPjxlpA/a3bj+scrBN/N
6Bg/+gFaNtlJSqmO2VMh/IFmLQdXBJYPNp6J5h4Gc4oiYuzW4/n5N53krsdZ
5gz9i1e6zKcL4wk/CD7rOLVzkTaOC6+DXXvdt34QkXjrwW079yfOmosWHHCR
UhF/5po2h6HFInALp6V8CJvEVwuePKMlbJH7UIxPeRa8fzldEaV26GN848EL
X3JuLSsehvnLBp8zHqfryTbG/L0BU0lixsJnaI7ibHieb4W8fcBhYbyWYJcq
+8nt2jgu9AL319Cmx6SaYL7+gi/Uxenm8E0x3tGuUD/Mxn4jx47CeBeBbdhv
FZZmjMB4d4Cb0o+m3yoZjvnqA5fOUL/rvwDPJzKbA+vnkapRJ24aYrxcsKOx
6S3FSzifuR3cWTHBS22uHsabBu5eqpE17Ti60nSulAp+9GzDmyADvN8LwL37
jVotJ+LvYW8Fnzu67mcxA/PFSwHb/NKoelqA+RI8Beecbju9aSdejzV3HtwP
7CcwHu5msEoR5+vkkRgv/zy4v96Gk5vP4+8TPQIv6Edvu9SO45IO8LZInnn0
RTxemDwf7meh26bpGejKh+ANuN5gPIy2+f99j8J42MMXQL1GSG+7T8f7J04C
J9k6rX71Cvdv2b0F/60HOM76BvZeufHOiWHk/g9dKKWGTTJ7e9oJ88N3BKum
PP+SF4xm3gUfVq0cXnwM64kjBQd8PJPVvhGfj/AhXCm1f2Ct0qw40j84gI1b
35gpfiH1GgJe7lV/yNcJn0/eZzDXbdTl1tXYLwgGuUH9r6xet570L+Lpbv+9
D+LzLwsCv7i+uabREeezjoGvu65K1O/C/kmk7Q7vq2sXFl3zw35JMhVc1v9s
zGTy/YcZ6C73fs+JA+ek2ho3BOJ6Fl4A1vJzNc56jmZMXiSl9LyKehyHoNkB
4CtDTg1aFYDmHQIrDxv65tsiPJ8gD2y79sPe7Hv9Of8DZlD8SQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
wnM=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5719434000000005`*^9, 0}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 10.584259178380453`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 10.584259178380453`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"UWTI\"", "\"DWTI\"", "\"UWTI & DWTI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680783200685997`*^9, {3.6680784958052273`*^9, 3.6680785105175867`*^9}, {
   3.668078734752289*^9, 3.668078761929488*^9}, 3.66807955050847*^9, 
   3.6680816133205843`*^9, 3.6680817247589808`*^9, 3.668110907872863*^9, 
   3.668111669301419*^9, 3.6681124141532664`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<USO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UCO.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<UWTI.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart3"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.668079430448698*^9, 3.668079543661236*^9}, 
   3.6680816042267323`*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"chart1", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"chart2", "=", 
    RowBox[{"HedgeChart", "[", 
     RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}], 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"btal", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
   3.667995156778397*^9, 3.667995177356733*^9}, {3.6681116088383703`*^9, 
   3.668111643226673*^9}, 3.6681123691444373`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
nGsFQyv/B4A3O7A=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTPsbB/ARiWwj+5a5totSg2xR5pRKCZN9ua5x7fu4+FlCY7v2jH25
liElFUZIso1d1mNfEtOCzFRGSPbfc8/zz/n4497X+3Wmmc8853u+23x/+2tq
n9FOCoWiiP7z3//pn2jZbRN+Sf/edSUbx5tsgs+wgWdGdXP8Z8sGsuJVneBa
wyQ7zqBVeWit2x6b0PdDwYPDKyVbjeQUj1OPRk6QrDyF1rwiJ0d/iBntLllf
Za9NGPtHUsc6VSWbOqHVqeSMubNah66XrMtGGyvGgC3tyXtFj8hrhzi/Dm14
Sd4TWn3WiHTJ5vL7bEJo+TYHNu3m/G3JqkjzsL9iOP+f5F1J4d1Gzuf8y8mz
hxnfzu8vWSwbC1a0joV6qoeSfWdEBRzeyfmXxkL9jIfJV27vCKrdgevrFQfW
DiIXOvKDbzmk+2VYRBa76mduc+H8SeTs1eK1MSXSdesj8mX99tLjzknW999v
E8Y45hZuvy3ZFEX20zdPbLdTsniAXDtqynpFgWTFA7T6J9np/oa4O+skW+bF
gx1x5DMFGp/djSWr7pLr6VoLu0Ila7/Fw+cZmh6wCVOmOIvtZ0nW3EbrS8je
AU9MJluhlLdRAnx/MZw82ud/E3xfStd1N8h3zqeuuv9FsvETuV/TkUdcRMmW
hok2QRN4OsLZm/OGJmLeGeTxd/12dvSQbC4imy5mjLnXkOtZP8kmRPS549rR
X7IyhOwa4b58oi/nn5YE31f/L75eUfcgvL+6G1o3hXzO8uDZlOOcf+tB+HzL
BfIibZJ3p9pcT+EQ1nMi2rwJbT1HTnzRKnJSdc5vQ5vGHQaL69GKM4fh++qq
msGOteTnTR+W9y2S8qvS0NpcM3w/Q+UjNiE3Zrj94XbJ5o7kycmK8EfLJGtO
oPVZ5IbCx3ed47g9VEi2CZ6xyil7d0kW26EVOnJC9a+FfkO4ni/I1rJbUx/3
4vZQ7ijY0QatGnYU/l67jHyqcaV4/XjJVudjNmFOzQbXuxgkK9XkGl/aLZoW
yPmHoPVLyEvGdu4Tn1Yg5T9E/rKhXd+4stJ1davjYN1AcohzwGFNnvR640Jy
8Ge3/X834PyJaMdDsvssy8hK+dLrDf1SwOYFaGs8WnkfrflBrnMzvbnwULIY
eQKsiEOrRbTuK/n46apvA0dy/iapYFUMeYzfoyUZKZK1t8ijJgS8qNCU28dn
tPm3kzZhYt7Nc/tvcf4eaNNHtOieBlaEkhMGfZqQOYHzTkdb3pMjdrfcM7uZ
ZEe9U9T/KS/vs77Kl/IGkxfvdLkyR8F59eToUk26WUuk64btZMFYKy+oFtez
zmn4e+p6wPrJ5OwGv2cEv5ds2oLXxfPkea2S8hMbcT01Z2zCm7TCSkF+XM8J
Z+C6ZSO5yL3C6sR2nP8sWvWWbFJ2+OFWjtvD2LOQ37oOrTyN1rxG65XnwIq1
5P5/nw3pnipZfZLcaNBit8TunD+H3Gbw2ItV1nD+ShabMMF9W9s51Th/BwvU
T5tiwfpaycGdKzd28+L8rufBVh/y1PS1U4Jacv2Hn4f7Zcokb0iqG5VUhduH
ywWwog25wcHVj1+05vbxB1r3D/nk2ti11T5JeRxlLsLnqbzR2sFow+KL0L7M
B8lnfXdcf1mBnzfPS2D9AHL6rtTuwWU4vwEtJqAVDy/B/TX2vQz33zIf7diP
Vt1Da7+jrXOv2IRb08Lf1djM7SOW7OP5bfxLd85/B63/cgXas6nxVfj+6r1o
3c2r8Hpj8VW4f46wa2BDOnlL1KGm8/ZIrzd/uAb3x9ognV6f2P52yA3O2z0d
2qfmb7ToIDfxqHVy7jNuz/Wug9VBaN1UtHEbWdgV7KiWzf1F7Rv0/oaC3jUX
S9YGkNv7tvz74Ftuz5PIiSP6L10QwPk34+utlhtQb33XmzYh0zA8vnss13M8
ufjXLd/Q9Zz3LLlKVJdboVGcN48cNO3Z5pzpki1jbtF4nT1je4+23H6NaO0r
8rIF12fUGsb5qtym+divodk19Vy/aLQmFa3PJr/++XZFbk/OV/EOzVeynALq
VOX6tieHvxs1O6o+1+84OeXytNKvfLl+L9GW8qJNyOr7oVftDpy3rQjvp/qT
nDh1yZrwSlyvsndpfvfAbdSr3zlva3LjETme4SrOOxStX0o+pR/nfySC61fm
HvZfXvegnrpBaOMitCWJPL99RZeeX+1SPT3uw/sb+qPNUWjrAbTyAdrU5wHU
W5xH3rIms1XYJM6/H62+S/a6/CshuTbn/4ZW7XtI87HA77mGHM57+yHUz1BC
jru0po+hWLpubvQIrNlD3nzxwJ56yZL1N9CmT+TJ7ZoPyDsuWWz4mD4vwqOg
1yHJijC08RraUkTuELhyda/zkh31n4BVIeR+KScvvrnG+aehre/QyrpPwZpu
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
UpVpCdZ6kWX7AYZBaOXjljAf1pTyAOs90Kb+HjD/FKPIsvm+7ifa2NwTbOmD
dszzhP5UtZ/8ossozwMbuX9r2sourPYy7lSO5f6tN1m2nlfObQXjoWYfWn+7
FTy/ip5eYPUsL5j/6vaQ0wY/rRdwmPPfQFs+obUzvMGGXWTZ+sp8zRvml9Yi
b5xfNFDbBfe2l99MzuDx7l9yakDYl3sVef5zmdwl7qO7Sw6Pdw6y7HyNum5r
mF/pupHbNv63t38Ij3cXyCmza07e14fHu4LWMN/Q1mpjF8a5uFZ1ncbjnUAu
8Mm7MKkUn0eZ2AbGR331tnZh/luzvqIb5/Unlywt2+NJZx6fx6EVG9DGqj5Q
D0tnsrOtUbq/D+cdTX4+Xlz61InzGn3g87RpPjBftHZsZxduNnk/6OFBrufI
djA/1awhn3pZ1fPuIJ5vniAHFSavvhvE52eyyNcCvRI6RPD5Hl17queIZWHt
zDz/XUnO3v5L9LnI881j5P7vNvu1X8nzzRfk1Vk+LuICnm+W62CXnycyLOsA
ec1HyHfvvNmw5xLnzyCHnA9uu+cx5y/bEV6vUZNl63PxEF5XPO0I7UNduhO8
v64VWbv83wXll3D9B5Jbbska/eA+1/dRJ2hPWoUv1M/QkpweMSzZuT63h37k
weLg/PuvOf8C8vUhZ27GfeDn7Qc5sEmUImYVt4/fO9uFym2y2pffwvkjOsN8
WzGPvHDj/sQnzTl/HFl2fsbSpItdqPS/58nx+7m/6NUF5keqOWTZfoE2pguu
n251gfmIMtzPLt/f1/wPrTehTdf9YL0ufkTrpvvD+ti40x+uW676w3re8R6v
q+p3hfW0eTu5RcbzrOm53N9d6orzz3fkdTcGipWPct5ADVhxAa3O18Df62oK
2L9pBFzvTyDLzhNp36IN1QJgfmz2C4D+wTqWLDuPpVxPXnA097vvTW4PykC7
/HyZ6BsI7VExmvwp+e995RK4Pawly84H6k6SZefpHB26wXXVX2jt6m7QHg0p
aM3wIOg/9CuCcD16NAjW02Im2vhPMHw/i5ksO3/neEb2HFGjyCma18/OITT/
iU6bFV6Jz4d6k2Xnaa0HyXebrDxlHsXnV5+Qp3ksSggbzOdXnbrb5edZ9Z7k
r8kVXHJ1fP52ADk7aal+XjSfV/1Flp2fNbYItcvPs1r6kteUn/jwkJnP284n
aztr8q79y+dtv5Nfi6P2Z53j86rNwuxC6KK6sV5pnFdLHhaaEdY9lfNGkmu6
ZrbKusd5Y8nq0kluXrf4vG3jHnS/7+68/1Xk87a9yDPzfi75s/N76X7PJl8a
XCGrpL5k3V5y0PVJqSE3OP9N8kbVhiFfykvXVT3C7YLBP/9r8TjJ2pnk90v6
DW85WrJhN3l0UIOaCVMkm9PJTpW01YujJVs/kD28TTUSu0s27ehJ9Vu3O2WD
nfNeIcc7+aZ9S+C873vC91PX62UXrm4V7wa/53puI+c7TX9d/TTX8yJ5l2vv
f6p94vPBheQtTzQh1hK+/7V7U97dvnWqleO8Ab2hPsrz5PjIRikbL3M97eTE
tDdx2dv4/tfQ2oUhSdVqh03i+9+VPMz+pNxWDecfT150e2SdX025PeSR+26y
r//lxvV0i6D54tH5w2su5vxdyFvm+jurF3L+MeSxaYfmpi/n/Ov+88ONPske
3B6q9LELxdGe4gJvbg+dyFU+HIvfPIfzjyLnNxhs+vEn548m1xm1/EmtMM6f
Sn44snfSz45c3w597cK8Hf2f3WjB9R1BvtL/WGhUfc6/qi88H8bj5Jb5i9fk
THd0/T9fJ7eP
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/o43OF/29R+xkqXzbwic+1Fi/nNxen/LhYPUAm02SNL7RiusZ3Gt4QOdp0OG
vMX5Jb2veYIcvb+dgd23iHXun0Lvb3fgxZsa/nyn9zXPZlh6H8NTmkHvn4Pf
4Xy2Zu8mu+H0/rkQDn1/2LpzMp3fs2HZO8OnWy+k8/s72H2Fj63vSjq/SzcK
mAOZl0f8ovddzgI49pNL8lsevW++hnuyLM+Op/ddkWSTgMlQLMs0oPdXJS4s
NezrPQt6vzSzhnt3n07VMaG8PnByr6TPml10XhdvxvvBjhHhvt70/jkXvq6q
2x/vS3mt4OQPhbZ/zlFeL9hG/FjthxDKmwr3puUudPahPme1CJitv57fLfan
Pi1gP47BWH26XnACPrq0yuviHcqfDCfmWMh/TKf8VXBsocmr4GvUp/l7nF+Z
qS/Ng6hPN/iH9TmXFLL8NfjIeS1xjVOUnw+bbd3/MiSA8v+EL9VOD70TQX0e
axUww3W/HZxN5ibAO0uC5XedpvzP4ZoRzS0C+n4hfXBoVPEvTfr7kILJHwTM
HMfGTZn0855P4VfjuprzAylvDzzv+vFtl+nPb5rYJmDKi837wy9R3pWwnrL5
/LAM6rMUfpK699Qt+r78Tviie8P4edQPR+Ej9g+japup1A93Bay20+2+ZjHl
dYYlDQNeraXronY4dqiV6+Y06nPcJ5ynGaMnUtdpHpZ9+m9/frHwCK2P5x54
A3PPOfcC5b8AS/WELZOj9dYf/Rn7mXqr88Ub1Kc+HGiTmuBCnxe3G64wq55W
mU/5I+Df/W5McQnlfwi/6wqUv19KfeoJcB70yEvdStcLdsIbNQ/lvbtF+UPh
qR9frJ5SRPnz4IAhFzw5Dyl/G5zV65tlmU39bhdiP/adGfCsgPo9C2+w1nSx
pd/XvwcHyUYOsKF+nd/DE9YHzq65TX0GfREwb2ddGrOT+ublwK3Fj0fu41Pe
JtihZrHukWrKK/NVwDRrto0c9oryqsP3Xt2+dr+K+syCN61+VKzxnvp8C7cs
fLvNqYbyDmwXMAXlE244VlLe+bBj5/CVC2g99TfBVqMP5KjR5/MbYMFhG/tp
lIcj2YHzzpfJDh70+1xV+LdyxeMJhZR/IxxX9aZs3DPKfxKeVS+n0Ev9Kw0Q
Yb5Nqta+rKM+58A+4UdXMvTznuvhbMnJ69bTemZ4wqvLrlqJwij/dXiVY3Ko
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
/wEQikHP
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5719434000000005`*^9, 0}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 1.4995276792307872`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 1.4995276792307872`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9, 
   3.6679966014622297`*^9, 3.668024110181718*^9, 3.668031049318376*^9, {
   3.668032804112906*^9, 3.6680328286320314`*^9}, 3.6680328691426263`*^9, 
   3.6680329226453495`*^9, 3.668034039959835*^9, 3.6680783426206446`*^9, 
   3.6680785187740164`*^9, 3.6680795586876087`*^9, 3.6680816296349354`*^9, 
   3.6680817354333153`*^9, 3.668110915434724*^9, 3.66811167458549*^9, 
   3.668112417986598*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euo", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "end"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6680300623170033`*^9, 3.668030065558288*^9}, {
   3.668111631132517*^9, 3.668111631960491*^9}, 3.668112371394373*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcjPsXB/BBkX3IUtqGbJUYKlupeYrIklF2Xca+M649ydh3xnYtuYyt
hcudlKWIsUUUk50sI4QZNJWyZPmd5xz39fqd3x/3d9/3mZpP5znf73OeZ6bx
qOkRYytKJJJi+If4//A/o2GvWaB/tQbBP7QTdWah4Rq7j82qoA1bwLYjS4tC
SwtFWzPAWx/VnL2kBh6XvQV/y+rT4Xg3tLLuPrNwo2quW98FaJMWXGgX1chj
Flp6Btyg4MK4Jv+iFa/Bd10HVbigRatr7zcLVWcEDZ2WgdZ1AgdN3/KxXTxa
fhrcOCFl6RENWpUPXni/gkfEW8pf44BZWBU8Lv1DFOVvD67ucmTb8vloqwqc
sTXcPm41WvMc/D2h5erclWh91YNm4U3JvY6nhlN+H3C6KcNdPZHyDwc/f97D
tecoyr+K21j5kFmomeu/XL8TLWkLPjV8d88+tyj/MHDzTm5XSvMp/3LwP5P9
G56dS/n/5Za1jmf5lYO5NUvAQ462yl6aQ/n/Ae/NnpZoP4by3we/DOoWti6Q
6jsgwSxMil7Rd1wHqu8ibmMSePrjJdGJ9pT/Lvh8A/X7DHfK/xM8W+oXUpaD
/WCISTQL/QI+zKgvpfrGJ7LXy3LBC/varoyypfzl/LimWZJZeN//hufPSKrn
TXDHu1XbGTPx96u/gLdUGvxgTmvK2+Qw5D1oTB46hPL2Bo/PLB3h35DqeQNc
2C4+xuUvqmcpuE/6jR3Fs6kf3I4wW8PAPUd9anz5B+WdBe5yqUWKk5nqWQy+
1zzmxN1PVE/nf8wCtmfHIuyH7uA/60trZDVAK2aAE8Z/GTMnBK2OA6c+iZ7h
6YeWNDpqFj5uGFHqGIiWdwU/tFXe/NIXrZoGnju7RofqJZR/B9h8O6lfXhrl
vwhu+02aH5tK9RSOwfqNSpv3PYHqORk8vKbH5ytJlH8buNcTa+gdH8p/HhzV
JvxQ/HjqZzO4xdOxvb92pvpO+NcsQPEXrdlM9d0MPioUpV4dQP2QAb42QCFv
OozqXUcP77eymfO957Q/bNTz/SEdPB26UbcejytfcWtqJbP1qO8Izp2UWecv
NfXDqWS2/tQvuHXVj5uFgV/jngw+Snn9uCUqbu0zMGw+Dzucp3rapUB9Oh4+
fyuP+qFdCtt/ZH+ksPWrXJnC+sVkm2oWksQ/5xfVU86tGAouKmg/pcdJyr8M
fKfHvtEnjlP+Y/z1cu8TZmHziDrKmfepvoO4tYvB1eaPqbWkMfaL4QjY1nEC
LHG09R44cm50pfb2aE3/k8z62JPs7zUlnmT7p/TOSdbfih/g75XyK9xsgzYu
OGUWDqSMn93Lnfo5HtwyuIuilor62Qi+Zc16v6Iz9fM38PGW5sW/6qG1TU8z
yw6A90T8udSmNVqZA16VNSrqZRDl/wy+2O/HwmfNKX/jNLPQale9UwEPKX8v
cOfa2y9Zs6ien9J4P7ims/MtCUtn/SafCVbuiDfXOU39UJTO1r/V6YxZEHef
eYXUD6HgiZI1noMqUF41t2YXePrIRc57yqiejmfNAi6vVlTPELDl8U3bQhfa
H6aCB/vIE2ZtR+u2cxsvgHPE7VxH9VRkmIW8l54yh81Uz0ngt4PFCwD1w1Zw
2LmjuwyHqB/OgccmHk9puZrq/Q7sBT/tvZ/qOf6cWQg+LNNEJqFNm8ABYV4b
aqTS/nYWnLzswLfys5S/AIzL/Q3ll543CzFRtjYhx6kfNoK7DU+eHptF/ZAG
hov7lDo5lP8lGC620s8HKH9NA7Ohg4G9v/Ik2Ndvz8y9p6i+JvDXxYaWR7ZR
/moXmE2+4CPhRW2PVSzG/CPAfz+a1uybFK17Cq4mGamfa4M2VrkI18f+4hUQ
LWkH9orJrebZEy2P4sdVK8B9F4h/MNpqc8ksyJ9mflcHoWVtwAtOn4sJGopW
DgFnNcjd7dcSrVl6idVLfxS8JqHLsYpLqL6tLpsF18W93JdvoPoOBDvlpPsM
nUb9oQGLV5vc3dQfhy+z9Se5d5mtT23kFbMg8xZ3MKrvQm5rAjgvTdxQqT9u
g+8cHPokeSjV/zt4pouf4Uk01Tc6E/K3O7MvXEv9cQhcNNWnVuBOyn8LbHJ8
+nZsb8r/FRy/KfjqpLGU3/0qO1/y/VdZ/6qyr7J+1JZdZfWy9rzGrMm6xt5f
X8Jtcsli/S7tAb7wQDLklpXy/gnedvltyKpyqqcV/DZ13KFrXtQPTtfNQmBE
WNVmbakfunGrpnNrd4LPzrVpvb4e9YPDDXZcGcytmQLuWBTZ8Jk/Wv8XeEac
/Zs0E+U3cKuDss1C8ezBsCVSPSdyS86Br8PuK1SmvG/BoePuu2/2RhvG5TBb
tWBovsaPmlC+1zns/TS1b5qFc1+bVdEfo/pt4FacBre+m7h48EXKlw/WDdP+
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
q1obyc6/9sT/+X946OA8
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
XmCfJbV3TX5F8b5zW+SDJeoOzwcUzzl3hJ+pdt8R8dLeuiP8x/AB+BG45+np
FL8dd0U+65PuCv8zvbsr8sfq+4+oB93Wf8TnjdeBZ1Z/vGldGOktAI6pHxPq
NZ/01rsn66vnPZ4HKJ5X74l8tOXeE89z+9yXfhtxn/dvTtT/A/CS1/VHTzyN
7Mi+z/MusrrWA/ZLZF34A94fIBunPBD3s2x8wPs5ZG31h+xnyAblIfs3snnS
Q563kW3rHvJ+kvSfe8jzDcW3cyrvT/Hz1vGpvJ8k/atT2c8pH86kivXSvUrl
/RzFd8wjUd8qM/CYtXVu5X0i/XGPeB6jfHj+iPdjFP8KacLPNMvTRL/TnwT+
eG9PSGoR3s/0NE3E01ruMe+/SH/QY+43FN/jj3l/TvF9LNle5ol4f1XrJzxf
UjxTn4j4uUs5nMof4E57c/C6RusQ8dcPdYj4mn518P6R8qHEU5EfuoCn4vnG
wU+5n5He+cDPPeVqJb37n4r3MzR9Jt7fPOAZz3ekf94z3t8gu/c8E/mmuf1M
5Iu1XzrPi9QPZqeL9VLvShf1oLOny3p8L1n183M532x/LtbbcPO5qE9z4XPh
H7b6L0S/MSW+EP5pzQf2vM1PZ0lv3ZfCv9Q9Xgp/tVx5KT5vz3kp+oPK55WY
57TdXgn/MhhfiX7ozgJO8IwzFyh/a77m/Rzlb9hrMb+a/vOa9wekfwPw4nBz
8CIXxbNahrhu1GWI+1kmZkj9azOEP6vOZYj3N4c4Rf+wjZPsXuUU/U9z2inu
p3/pFPOlY7RL+KN6pYv3H6T/lEt83pjuEs/T/vFG9uMTb8T6mh1vxPdtZTPF
dXebTPF907FMsb7WtEzen5He0llynmiVJdZDNzyL92MUz4fyuqpUtpj3tC2z
xfxp+CZbzAPmhdlif6Ap7hbzs765W+y/TIOA9Z7t9ELqzybJjn1usX8xNskR
87Clfw73E5rP5+aI+Ve1J0fs17QpOWI/Y9Pnis+7Z+Vy/yH9O3PF9/XJueJ5
pqJcsZ9Qz8wTn9dty2O/If038vg8k/bPb/PY30m/Jt+pZPddkmj3pf18dL7Y
35qv5XM90v45L5/9hPbPdQp4fqD9c/cCcd7gcBeI8w517bdcz7Rf7vqW14fO
f6a+FedFqqy34jxUW6OQ40nnU10KxfmfebJk2/pC3t/QeVrVd+L8zBT6Tpyv
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
/YI=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
bDt/1kM3pQD7F/MqZ2zY3kUquChHXPPeIeY/Bx8+9Vb+ketD+Su4yfuFTh/5
usriqV64X+7wUX2A9d0C7x062srbtP49A/8+1s+5gP1V+Rz+aXk8U8L+oqlV
iPlmVWT6Y7a3Ilc4dYXs5RE+H0Uy/GKNylnB9qou/Nc682dYn7Z5UBzI+Ubk
Apf993XAYN6P9gmsnpS5I4H7CWO1Iqz3yvJ3lpjWZxLY5UXvE+nsHzJ/2MOj
NP86x0/lWnhLeJ1uCVy/ias81wvjj7qW3eD9SB3hnVG3fvbh81H4wb7x9jt3
3WTeENgso65nY1Pe4/DQM/5rgnj/cocXWN95/m7fm/1JNRKe3GHN9Bts79qV
8OG0FI84tndjHNy/fLYokPOP3T346rqme2IPs57DX+qFm3cu3prJ51W0DC57
r3dpaMofC/ftXnPbH87XUh280yd33u2tzP/zX4uWvMJ6tW/q+A1cf0sOv/rn
ectvwdYnTi1uxuet+gZr96/OWMX2oW3xGv350YL5WaZ6ZsO5W8b3KOT4pfkC
u5Y+X+C8hnlt32D9vLggUq1kXi+4pnKhj5uC9bzx5p/36z7Cy99+uh3IfCKb
txi/nS66pK1lXk9YGTik3Y35zKuAuxZt3X2R+yNjKTxH5HgyKIb1bFyM+61/
7aaR45GsH9wy6/CsGqb9xWw4I/yMvMsi5t8Fq1Pfu65czXpal6D9FF54q1rG
ekrhtLl5hjcbmX8GvF4UunYE96O67fCO9Mj8GlOY/zKs2BKwwHIn69lHj+tf
u17+g/XVToNXt5F8nsr5wBgBzzvY976Y9bK7AHvfWBjvv5n538CpV6rPvbeQ
9Z1swH4946pTqGl9sxVWNH9x7yWfpzQNfpX4M7+Haf3wEnYucQ8ZvpL13PxO
Lyx1CSjqvpT1TIU98o7u7LiYeYvgqaFN/l7k/Whrvv/ndWOX9/98XpkEF84a
3+cbrXkKO9rujm24gnmrl+qFN3NE+iHcD4ud4bm/ZzrUoqXj4HU19uadWcB6
PoZrTNJ2TOfzEVX7oBc2aXz+Tg1l/k6w5w37yAzej3wM7H65+lVrPj/VGjhe
FbVByednV9mIenYXdRw6j/XsCFs8cKw/L5j5feHzI7u2W8H70yjhfalqWz3z
FB2D3wU+LJT+x3q2/4j+9bvmjt68X/UIOGCSS0Md10e6FfCiIbs7HufzE8XB
zh10W4vZHiR34Zyx1wsHcr7Xyj6hPU7s1TuH1zMuhT2so9fKhzB/DDzUKi9O
xtdlt+G9rn281GOY/wec6m3ld4v3K178WS/I3YqPdOL3S6Phuh4nk9RzmD8H
3h1qsWcu26O6DC44+sC1y3rmt/uC8S/Q89dJrqflB+Em2ZtXhnuxvlmwj2G8
7Ux+v/Yz/NSvfxOrwczf7CvWC+M7uG8ayfwD4WLLsAmdR7OeRnh0vt3VH7S4
aRnuX+3qIJIxb3842a4g8nF/5v0Pjq6TmvDEk/UshW+WWLU5O4D1bPQN+6ca
I8Z6DGVed9iiduGVpX2YdxZs6/rx4phhzLsTrt/BzqWXlPW0+q4X9rjHz7jT
jfXsCxc3GBmX4Mz2EAQ7OdzJ7tmS+bfBDbZGnhc1Zf5LsMXSCQHxXVjP3j/0
Qq2CcxsntGM9p8LNQ943Xtid+SPgMB+Ljm16Mf95uL+vxe6Qzsz/Gi4cFFUj
gdczBv7EfPL25uPdbVjPcNjbac+ysS2Y/yzcfo8s5RzvV/kCzqnX5dqehsxf
u/z/+wlrs45tWd8weF2vJ11PVGJ9U2DPn8fCqtgx/zN4YdGccRFVmb/GL72w
8Y1v3jxb5u8CtzjbYbE/369KhBMjizrcsGZ9C2C5h7V/kg3zm/3WC7WvFfao
zfrZdYalnrUrHWjN/GPh4tRlS1Ibs76P4GRlWOyGBqxv1T94PenSo/N83lIn
OHeJfUwXe+YfDYvN2xfvr838q2Hr+vcG2fJ+JZX+Yjz7EddzV13WtwM84GW/
CQ7MoxoFn9csm7C/E/Ovgo2N71s8rM/88XDgrKQ4dRPW115kEMabnbC43J71
9YE3nMsqWW7F/Mth2YmmSbP5vMRH4acDnCNSXJn/DnzhR26duqynblglg7A1
7VTZQz5v0VL4qGXJr7n8PskReFJa1/a3TPlzK/1zfdV3eFHLXzPsm7G+wZXh
HoG7K7F9yg7BNtvzJ/xle1HehI3RK4d/Y301X+GaIaeXiFoxf/MqBmHB5o/r
b/H5KA7AGYPN4lrWYH0zYZuhk4Im8f26T/C6SleOW/H9kgFVDcKVA9W94/h+
7XVY+WJlz1H8fuMHOCi58ZaJ7B92TaoZhF8PP9zLYT1lHnBH97v2b/h8lXPg
x246+4u8vvg9vHNm7g77WqxnQzODoFv3/OkPPi+FAK+LapBeme1PPRP2b9Tb
r70Z8+6AV8Z7nr5fnfVsUN0g9HQ69mkp25/KDZ5dsPPKfL6unQ5Pznnn+s3U
HyPhDMnb3Fxe3+4irMrrOm0971fTyxyvT/MZFVOF9ZwCv3vUJc+G7UOsggP2
jnwyif1T8QouaXz3S2RzPv/AGgbhU2T2hGw+b8kWeMyyVRkepud/Bl57N3uA
Pb9fW6umQRgXnXAjry/rtwm2rXe6zwv2F2UyXPfJxLzXHF81hfD3kf6qjcOZ
z7yWQWgenRW5jPtNsQucK5NE545g/U7D+zNc18p9Wb8ncHDc18Dak5nXrDbq
eaKOS8E45pXA08NGtJprWq/5w2bq3rnZm1ivKnUMWE/s3dBgF/M6wupnw586
cT2n9IMP7Eu5ncH1myYEzqyhi+xYib8XiSwMQtpH97bdeL6mcICzW4tcMrge
Uo+EUz6mPDbyPFK3Ej4Qe+1tJ/6eI4qHt62Sx16mVe3qIn/dctclPA/QDocX
RLRd5M3zC+MyWJnrFXuc+wW7WLi0bOU5B96PTAerW+iTA7g/KRoqNgjJdYZl
9+H+TLwEfvpk3JQYvi49DGcN2P1Wwv2k4hac/aW9pRvXb+pvsNbGp6GO+3W5
uh6cfnpVEOdjVTbcfajXmX1cT2i/wJdifo35wPW60dbSIFw7tO7XTO4nlPvh
5HGPxVKep2luwD75x6Y+5P696CNc/dzfKabfi8Q29dGeXMqff2R9pJ5w8NXo
a99fsZ7p8KGBoZa7uN8VfYCPOI5VxPJ8VdK4AT7/JfbbKP4eLO8H+1t/e7KQ
56Oq2XD0jpf+jp0qbPcO3tu96s2jTjw/tbZC/zh5ab2fX4WVUlif8mR/1VCe
l82AG16rVO49h783b4e7bvGOle6usKK+tUFIzGi0eXAwf0/uA+vzH0Rnzq2w
bho8b28dy/1tKyyKhCO/ykP7jKuw5ALc8e/Ri3PbV1jbs6FBOPhqlD7cvMLG
ybBLbNMdp2sz/1Z4xroo9Wr+fi1Lg2v+DLf0sWb+l/B2Z6sZ+rr8PTygkUH4
MGHflo0t2Z43w3VcnQvcujB/6v9ff3DHP7cz8xfBBy4F+z6ux3pubGwQatls
amht+v07CY5LWJc/1o55n8IeEmlEGvMbqzdBPffs8R3vybzOsNcvQ8sRI1hP
DXxzWOaZY2NZz8dweMghq+WDmbdaU4PQOnNY0yw35u0EJw/b02ZoO+YdAx/Z
E9E6qgnr+RBeGPwi/CCfp6SyDdqv78jFxXze8o7wzxVXjdNolS+csXVa1t3G
zK+EndfI9wbUYT3/wr4Ju14er8p6tm+G9iLziDnB39s1I+C4vS1HePP8sGgF
LH8eH1vTdJ4WB3+X7XhQFsL+1dbWIBRfGH8kk/1HJ4MtNluubML1r2gZvHd4
lkMe14uSGNj/5Afpy9nsj7dhaVSyayH3N8YhzTE++zt3n831v91ieF6bUyO8
uR6XRcPjdl174DqI/TEHfuETfyuK84mmDD61cItNNc530oV2GA+cfLrX9eP4
cBCO6N9yYEvuf9RZcIntgIbppv3GZ3jnkVNtzHneKLJtYRBGVwpcP47jpzYD
XjL10wIN/17AaIRr3A6sn8/+a9e0JepVbWzvEabfX/rDb887hdny96uia3DO
rkHHBheynqWw+HFnrwlLmLdRK4z3vW2qzvNgXnfYu3/fNuGcX9Sz4PuKv65e
pv2nAc6NX1zNnetVuVVrPO/CSeemuHN86wufm72gR52OzB8E1ww7ERrH143b
4HVhbTMqcz+gtGyD65/ek/exB+vZG66s7HLhIPcrRVPhKNsZwcsdmD8CVox6
UuTD9ZX0PNxAd7NNONeDuh5tDULZifA1MVxfiSbDIWs9vOz8mT8c3pnbMmcj
92fys/DPjhGxt7j/UL2Aa9XXbHzK/ZHdpHboj9G/RgeY5ucwOKXnQYdtk5g/
BZ7fZnWHsWyvmmewbbR7/0LuPxUb7DEe/WkSdcbUfhPhnTN04/ermLcA3jYz
eN967g9F1dsbhMI14q8C93+SzrBiRUrESM7f2lOwxHfgysn8vPERvMpBsHjG
8yK7qg4G4dihqyHdOB/InGD599WL8nm+qhwNu/9oOFPN80hxPmzhffdxhGm+
qNQBz/fqHW1r0/lDB/jBHW+Xb7R6FJzwJGh0gy3Mvwoeunrv3NPMI/8De1XP
e7RnAutp3xHje+tQq1bTmd8H3hH12NyX92dcDlvKP12L4PmY3VE4uYeiXgnv
R9PG0SB8ad4vVMLzpaJhsPJHr/snTL9/L4UbXJ3zuITjh/QIHPtoz5oczv+K
XHh1deuw51yviIY4GQRN5Jm3Pfj3DJJgp//fv/0AMc8H5Ifg8LR9+obc76lu
wrPWz21xuB/zf4UVk/ymuLB9yBZ0Mgi7N7u3suT6SXkAHhrZKb8dzys0mfDK
T90OmA9k/k+wb/7z/mrub8TNJAbhdg3zv9alpRX1jYLrffa2qnm6wrrrcO97
7o9qX66wyAjvOHXNMlxfYUmTzugfYR9lsebM7wHPHtPa+jXXw8ar8AZZpa+Z
3F/ZvYc9/Dvq93+t+LysobNBaDR2c9ZFrseVAnxh0bgApYT5Z8KxZ2Ye78b+
pGjggv1J96xpnSzZHtxgp/nDo/dzfaubDgfGdz3h9I15t8GNXk9ps76wwqp6
XTBf7IwaMf9VhbW94HXD41ySyipsnAI/NquUnva+wnYq2F2xtOueC8x7DrYu
2G/9ntcv6u6K+TuwKMaF631xIOy8/LPbQK6vpVvgyauVMUeZT3EGfjbB6ejU
X6z3czinldvgjSK2B3lXg2CeF3Vs2u+K1+Wb4M46zYBL/D5VMmz5/lK9cu5H
tIWw9IzvsGcWrLd5N4MwZ15uzuU/Fe9Xroc357k+nszv15yG9Qd6HTxdxPxP
4Km1kq6u+15hsVl3rH+SBm/9xfuXSmCfDkMyyu+yPZyEt8yYJt6ew/o+glWe
9s36sn1IqvQwCJ63Hj1JO8L8jvAU3bnGbpeY3w8WcpoFZ2Wxvg/gDTsO9Oml
Y31FPbFet395JZVWOsAH8hy3/KA1I+FxqTmtknheULQStgjwmtmE5y+K3/Do
/ORmp7g/VLfrhf1DQPvlwZwfdcPhnxE24rly9sfl8OrYB/Zz2L8ksfCs8Hqy
cI632ta9cb1jCU21LqzvUPhKveFda3F/ZLcEvnqsU3woz1dlh+GeS/s88GV/
Vt6CSwfcTGho+n3Ru49BONHJx0NkOn9fBJdFrXYR+HuAQg2fbe54ZgLHD3U2
3DZ54snRYcz/BT6yWuvRnr8fyue7Yb5qW3Kqien3xf1woX3sqUzT30fcgA92
X2v+wPT3HR/hgJ1HD1hzfLaz6WsQ/jQXP/7E/YtmL2z2Y86PuY9Y33R43J1V
oy/w9wfxB7jVpet37Pn3Xop+UqwH1O1ateB+SnQV1qsvNNT/ZT3fwRddvrkU
8fvl1gL6x+8OYRs5/quk8NjP59yCOL9qZ8DLzYwZLbh+kpXATr5Zt0Zzf6ms
7477D/zitElg3j5wom9a0P2azDsN7uk8e1qk6fwkEt4eZjPRh/t7tbgf9mfb
E7vYc/+s6wlXHZ7hPI/nB6Ip8PhR3UZd6cD8W+ENws1f3zneytPgkdETWzXn
+Gzs5oH5dorVyVwn1jMA3uWct6GS6XxqM7wprHoPb64PlKlwecanMV95niGd
2B/tt/tf87bc3ys2woPedVi/n+OzOgm++tbsvjXvR/cUDm6Q4ifj+aNqnSf2
a8rXnhHcb2s18CD77uo+PP82PoZ7Llo6qW8g81UbgPuteVvxiOsXWSfY1xGL
EZ7HFSXAkY8Wbz7G/iB+CGfN3L40k+staeWBuL/0dtrnjszbER4nmlrwuSfz
+sInO1+qt5X3K/8Lfy9zzbcznTe198J+YNHg2y9YL+0IeMz9ao0/cLw3roB7
lrco326az355/fP9mraDsF4rl7afzfVakQw271gkcuF5q3gZLH0281ptfp80
Bt6TmH+8PddbulaDMf5uKz1ry/Mn0VB4ZGCQ+za2B8liuLJuhdmybI5f0fDS
hLuerQ9x/Mr5//vHLLq3/AzHr8HeBmHgAclW+TGOXwvhb4krvT6t4Ph1EL4/
Tf/q1VKOX1nw7jzhuDKY4+9nuFLA6H7Dwzgf7BtiEBzWmrsVaDjeZsBq++yG
olSOtx/hFRqn01VM423Toaj3NMkdOd+v3QOv/XOwagDHd+M1eLVobNLhZ8xb
Cpc1ajp82FvmbTQM9Zq0qtLXl8zrDvsPbbQom+e74ivwwzfj0gbwvFFqgNMl
Db5d5vmgwkqG+WlqW3fBNN72hdOxOvjwmfmD4EWx2X4+T1jPYjg2tt7mN8yj
shyO7x8otvB8xPy94dsLmrcb+ob5p8KfREM7VI1h/gh40NH+RekJrGddH7Tn
lBGTN2lZzx7wycu66TdSOJ9Nhp9FX29yIZTzWTi87+nt/HtzKqw4Cw9sdtW4
ZC7r222EQXizpk3TgXx+kknw5XG6+K3rmT8M7np/U0j6buZPgUWLdN3O7izt
+z+MDCKF
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5719434000000005`*^9, 0}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 1.4260000000000002`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 1.4260000000000002`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680300670903735`*^9, {3.668032821463683*^9, 3.6680328418687954`*^9}, 
   3.668032879070866*^9, 3.668032929583929*^9, 3.668034068744912*^9, 
   3.6680783651426744`*^9, 3.6680785301828213`*^9, 3.668079567034998*^9, 
   3.668081644195116*^9, 3.6680817488791685`*^9, 3.668110928922552*^9, 
   3.668111678434035*^9, 3.6681124217779565`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<btal.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "btal"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<euo.png\>\""}], ",", 
     RowBox[{"Magnify", "@", "euo"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6681116553181944`*^9, 3.6681116650122952`*^9}, 
   3.66811237640305*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<JGBT\>\"", ",", "\"\<JGBD\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.668025228046261*^9, 3.6680252311869135`*^9}, 
   3.6681123743627853`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2mlYjHsYBvCpiKyTEComRGkblSjSvFmyG4VjN5TsTIfsNPblWEZ0sh1G
9i1jiUIZawiN9SAyKDLjaGTJ3nl6n093H7h+12z3e/+3d7pyHz01aoytRCIp
pX8q/qcfo2GHWSgXf0rCydrxOrBhA9qahZYVkx/NK9Ho21grrKyzE2zSkn80
r73wt1R8vvQseW7V+Z17LxatKCKnOtu0dqwmWl07FawLIefVaHPngEq0PAOt
ekm2rg44djr3vZi/xi6wIZj8+FhIpH1Hzq9Ca56Tx797tK2ZnWi9w26zsF/2
x6edgaJNgWjpCLRiBdltUVw/ZVPRRvs9ZqGPU/fdJ31ES1qj5UPJR89sa+Mt
5/xL0dqj5DWROT8ChnO/fnvNwva5UQu6DBStHITWLELrD6NND9HqAfvMgrtw
1umRv9iPLpHcOWp/fMHk/8T8B8h51k115YmiJffJbp2aL230RrT8N1nl1G9d
bK5ow7z9ZsHB9cJ+t2WirXv3w/vJ7pBTf8ROT/EUrfxBXjR37MaVWaI1HgfA
itvkS4POdX4bIlr9Fa1retAsBDqNOPN1A+ftRT48/9KTtodFq3LJCV2m6YJq
8nz4fBDe39DkENjaneyVLxkwykd8vmw62Wl7k9rZDqL1peS9Dwd83OQs2uR6
mK7nUXZs/m3x9dJI8taOs5tF3eX88Wj1VrSk0RGwvDNaNYWcE3jkktmT829C
Gy6ilUIaWDMRrU9Og+s1nUdLzeRSxbWOk75yv+OOwuPGJLQkC61y1GOf69Cy
M+Rgx8/dTj3l8S9Ea2odMwuvq93v4dyN87ZDK06TU0P3KW7FiFa/QOuqHwcb
26AlKrS2gJzQ9JZ21gnus+oJs5CYc8f+gVa0NQAtG04+8ysjL3kW970cbap8
EiyVoxVDyNofw1a+Wcn5l6B1aeQ+wSUn1MtEy33TzUIvb3niP3tEq/5Ih7za
heS53s36Ozzj/IfQ1gfkRVfGJSc95vnQ/xRYvwBt2o+W3kMrfqGNc0/Teo+7
eKBFKve7l/ym9N1UvzzOb0SrvqO1zTPMgn7QycEhW7nfXRlwfcpbaE0ZOX5Z
44LD5ZzfPdMsbJl/tmR5Td7fembiefEpE/M2PgP9SLqTJ69Y3rfkFOedRs6y
ar00Ju7zA9rqchYs64pWqtGaLWhpw3NgRadzcB6oJ5P31tt0/nYU508hezbq
5J4yls+TC+QYZSvzH335vFBkgbUTyJuf78qdncrn9Ua0NRste4vWj80Gm9aj
pefQitdotfQ8zecuI1ZZ9/B5tw4tz0SrXqG1NQ1gQ1u08hRaY0Lrq10wCz9t
xsdHnOb8QeRE+7r3qt3k/CPJU+6uUH69y/0+I4cGv7lmeMP9VrlIrw8YPvKs
jXi/IglAy4ehVcvQ1kqXwDJ/clh6gLZJDb4fGozWLCY/udF1yN+1ReuPoBU+
l8HqgWidBm08iJY8QGujr5iFq/f/nVjnG/c7H23dh5bdvYL5f6JNc66CpXvQ
ijy0+hta1yyH1l/OdRePUp4fqWjVTbT2C7kg5e33JzW57x7XzMKtmBGzrtXl
Pq+j9R/JX8ecyZ5hx3ndrsP7SbuhFX+ijVa0xOWGWbCpfj7ononzdkGrpqK1
m9GyBrlgZQRaMwmt/xttMqDV4Tdp/91TacawZzyfx6Ml2Wh5MdoQdwts1aKV
RWhN7dtmQXjWXz9yHve3Fq3IQKtfknPVFRs256uRBzYGo1XpeTC+2udog4MR
xz8QLRtB1qd88Zj6kPuyvwOWtiY7a2ab0114fg4le88ofhQSwPNzKVpS6S5Y
7odWDUJrF6ENh8kZo+UD4t14/XjfMwuvHjXwO9SX5+sAtD4RbTpA/vt7Q2Uv
b15f98mxFdNbwesn6j7YOA8t2YeW3yGfTF5z0qcJ5/+Blu1+YBa+F1Ze9qAl
572N1nxF65s+BCt2kmVre2bfGMp95qJ1n8kTDsbJM0Zz3ib/giU90NpraEMp
2ur6CCyLRCvj0aYStLTRY7NwQW3rtWw45++MVk95DOOn20S2mb466a9O3Kfz
E7OQNmdDqG0k9ymQV21oPWWBnPNPJKuvqA6+DOX8yeTKgn+gUeD859Gajvlg
/Tiy9nmTh+7RnD8JLc1CK96gjWOegiVatPwMWlWI1tZ6BpatISck2fVsGcL9
niYfjwzO79qF878gZ+0auUIYyfmrF8D1mNoUQD/qk2T9NbNTsYz7LSD3Lvj9
bERzzl/1OcxPSSD5s3NMkdaL+8wnz7kXsKBsDvdZ2WQWnlefsSauH+eVk+0+
/jvYPJbzDjFBPs0ScpLvzKNVfLlPuxd0fzDT4c5PFffpS65imPPdL47z/vEC
Xq9biI8bD5Ejvoy6VNKb+2z1Eudzf/L3QUkNRk3k/AvI5R5tMveM5/z7X2L+
e2SPoe9H1B7CffZ7hfNhLtnLc3159CDOv/cVfJ7C+ArX4/dXcH2S2YWQR76r
EF6vulUI16MtK4R8BvciyKO5UQTrR/+JvLV998Wukzlv49dm4cWqC/2vJHDe
7uSmNVOWemm4zxx83PjhNfQjcX0D+eRd0Sr1G7g+6/s30I+sYTFY2akY3l8z
Ga1PKcY+678FqxVk38+Buk0DOf8EtHHjWxg/yfm3uL7CzNjnWDNcv3W9Gea3
7By5YjAKF3L+12hTrAUsXYdWZJKnWpJjVuzm/K/Q8tXvzMLCDUdmtXjBfZ5C
a01oQ7X/wNYg8kC3KzvepXGfJ8gFHSbMfb6V+3xGrvRnM/fuqzlvlfdgaQB5
Wka7SrdSOe8wcg2bg77l+7jPJ2hJ5RKw3J+cLOvrULqR8w9GaxejZbZWsNKH
PK/i12M7OP9Acu/FiSNijnN+Ddp0EK32+kDnRZVjDxIO8XyIJmfdj55x5gDn
n09O2bHFqMzk/Pvx+fK75Chl0/J9eu5XWQrPt84hb50UFp98mvPvISe0XZLr
ncP589Cab2jprI9gRSrZ/vXRE/fzOP9NtO4L2ij7BFbtQGuvow0f0Va3z2BZ
N7TJSvYbbwhovoXzunwBK7qQ5cXVvy/K5rxT0ZL35Gvy+c3SL3GfDcrAqogy
6Fc7CW34G62s9xWsCUfrx6NNG9DSbLSuwzewMQ4tWY+Wn0WritDWmO9g2Vq0
MgOteYnW1/gBVvyFVqejdc/JQelpW3LOcX6Hn2BJEFp7HG14Sq7Te1Ny6g3O
b/8LLGuNVg5Fmx6jpZV+gxV+aPUgtG4RWm5TDlZ5o7UD0IZEtPUAWuMpsQiJ
tHsoqnwQ+41Cm+ahpfvQijtk8/Xl9aMloo19bcCSOWj5brTqNlr7FS2baQtW
7kRrctH6z2hTEzuwejtadw1tLEXLIyuBDVfImss743Z4i7aWoGWNKoOVndGa
KWjpf2iFsz1YLaB1E9HGZLSqbhWwtiPaMA5tTULLstD69lXBpjFoqRatLiQH
DfF3udmDxz/GwSJk1is/EbCN+1xDjvnnzMYecznvafLYCcPbrJvN+apXswiT
2koe3pvJ/a0iP++RMXjbau7vJLlxYvCxRlmcr4DcI++tMW0p56ta3SJ4jr2X
u3ID5wskP0lz2Gd8xP0dI39PuV/4917uL59ckWa9gfPa17AI3kMOeUz/wXnl
aNUQshj3BfdlV9MiHP9eKbTqZc7rS159pefG7fc47x/k86P+c3mYzXkXkpMc
Q38KX3i8JbUswuVU1757JaVif61qwfXr+pOTJmXODRvHeReQuym3OyhHcd4D
5IyuH3cees3j3bK2RZh52S0+8in32Y+c5/6u+vDpPN5zyYdDV4U/Hs7595Ib
94m4tPNPzm+sDeNh6iO1CLJba1ZJUrjP2eSin4UJtWw5/y7yvslvtm8cyeN/
i9yu5d2z0u6cv4xcUu1092YR3J/O0SLUU6hLVgdw3htowyfy5Y231W9rc97G
dSCf5h/yh5W2joviuM+cOnB9pg91YL5IXZ0swl/9zts4aTlvV/KRzAf27RZx
n5edYD5KSsjDn4VvcanH49+wLr2/tcyt0Ivzd6qL62sy2XHarT7dgrjPd+Sw
S5opT3/yeVC/nkXYZrpu5/6D91sF2XltzrU/a3D+CeT7WVuyPT05/0bysudb
6RXcp1N9i5C24kWD8225zzByw5pO2jtyzj+WfHzAkky7YM6fRO5qGymfsJzz
nyPbBjRqIdvF/YY6W4TwN71OhR/lfmOdYXxl68jNt8i9uyTzfMh0hvWreeUM
61s6ugGMn2J1A7ge9Smy25N0eX1/zm8ir4j2nDYgkvtc2RDmi/YE2vCsIfRr
rdII8waQx7jaDzuwg/vUk21O3B5xYQH3+YQs1q/nvJVdLILK6Pyp8nzO609e
eXda6MmJnHewC86HRy6w/uS2rhbh88A9x67Gcn4f8s8i7+x5Gs4/kLx8ieuo
2+s5v8YV9iNlOTl+lr/D7kzu08uN+hrtEu57ivNHk1OOFKfVPMj555OvP/i1
K7Mf59/vBnl1LRpbhLLdP1cd7sjzQUm+M7VTUUQfzj+XPCHjZK2EaM6/hxya
4JX8pSnnzyObw+oeKOjE/fZuAv3LZpEHS//59rA+509tAq/X3ETrv+DrFQky
i1CntEH9fYO43x1o3XW08SNa0tgdbLiKtlrJC9v5fWs1lfO6NLUIdHOuGT2E
83ZpCs83XUJL36MVDZph3gi0bhJabkGr6jUHa8PRhvHNYT+xbmgO61lTx8Mi
XBsV7+hXi/vs4AHjY4ojj5m5NH+3I+df7wHngeIs+WGH10uX9+I+Q1pgn7Et
YD3K15LFXzcpOH9GC8ijfUmu+G2gyon7HdXSIgxZV2xo0577/aslzof0lng/
+Zx8IPJ40fvPfH+7whPWr+64J+wXxqeesH9LqnhZhDiL4xT5AM7bmrx9ZL3c
xCbc51EvOH+sj71gv5RVagX7rdKvFVyvZhD5aBVfk9sw7vPfVrD+FTbesH7U
3mjdAG/4fGOiN+4Pv71hfLSePjA/DVE+cN5b5/nAfiHb5wPnm97Dl/p8FxD3
cTHPh77k37EVE4Lzz/GF5yt2o9W3fWF/kvT2g/NQPtMP9jPVTj/oQ5tLXlb5
zuapkzn/Z/KaHfXzv47nfqf7w/6k2e4P55H+mj+Mr6nUH85nqZsc7ud0W9HG
K2iJVQ7nmbxRa7Cqc2vYT60XW8P+L/uP/Mg/+3n8Sc7vHAB5NUIA7Nf6iQHw
/uq6gXD+6DqijePIG0euf9DSyHk3oLWOQRZhWtkco20B99k+CO4frWOC4H5X
pg2C8VaeIad3G+b0/h/us10bsDSGXFQtsH9uKc+HNeSenWbEhF7n/KfbwP2i
7kUbuJ+Vq4LBqlXB0If2JLn758ar+pdw/oJguN+1Vm1rEfpKG1ZKzOE+l7eF
z9MfQ5vy20IfUvt2FuHVufw5RQ3E+2OFvB18njGNvLZzytBfZdzvY7TcLsQi
VPx20tBCfL3Kl1zzfNsLG6qI1v5B1ia9D3p1h/t9iFZKQi1CM8OYQvNvzt8q
FN5f3x9tWoBW/0LrWran+V/S7omukfj5xn7k7ZNjDnSQipbMI3vV6N9rrbto
+V60oXkHsLUPWjYbrdyF1tzqAN8/pL3C8PvIDLRah9bdQBs/hcH1qaZ1BGv/
6Qj9GXLIdv9u2du8Nef/QO45fUK/E06c3zWc7t8G9X1+pYZo/ZZwGA/TZbLf
ftvywQ84f0k4rCd1JwW8n+QiubJHaWK16tznOwV8H1TVF+h+pY1sy60Qng8K
AcbHMIH8ZuUCl1bO3OdbcsVfDz6z8HxwirAIvS9eaLX5P54PYeS+Qs3SMkfx
+aaxEdC/NIk8q91Bu3tNROukneD7pTG0E8xPyRiyR/ixQ92bcf51aFUm+d1A
93NT6nGfbTvTem/fMqJzGPc5mpx5JjGobSvOv5pMm/MonxE8H06RxT8nGcnr
a2QXi7D4Ss72rkv4++hK8tmQ3B/JfTjvCXK8m37l/kiev8/Q2mVdwQY92voE
LascCVb6o01HyPlN/w4Z5sr9PYqE61XYdrMItWIzhE3JnNenG+TXDSQPtFnx
rsUs7qucPC9YSNKO47xe3S1Ce8+vH0/v5LzRZPO8gQl1EznvfLTmJzmEZsfd
HJ6fLXpYhKigop4vZ3NeZQ/II51LrlE0aU5IPOfdQ/5Nd/OOJu6vWU+ar4sy
/NWVPorj3Yd8cIfNlZO2ouWzyJ3HZqd38RGtSiUfr/jz33LOf5McTV92fq0V
H5f17GURNkvLLu5NEa1MIL9wj5ZcyBKt2UEOblF9jdtW0frr5Kv3gxOu7hJt
+kj2FQ8g0bptvel+Z9vMoUddRRuvktMm7R7zTcJ5P5DrNQ/skPOD56dLH4tQ
7ty1cFsz8XHDZrJdUfGSF+6irZfIHr3LV9rX5bzvyRsuVx1ql8B5G/S1CC4L
pi5qWfuTmDeCvM0uz3V9ufi49AJ5Wn6YW9g+0QoLefK6vumbl4hW11NahOLJ
wrhYE+cPJ68tq/iDGs4/nhwVEdhqxwTus5j8zsHaSL5RtLZOP7r/jl7UweMa
5+9Azroau/NYDOePI9vWf/bnkEmcfz1aXzvKIrxf0f7l2gzuM4Ss/JSvzNRy
/ljyMEmXE381FK9PsTYKxk+dEQV5JW2jaX60DNFPT+L5MIo81fXtkPTN4utV
f5FjDOePnEkUrU0nv0p7t+fp3U/h/wNwUPsT
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV13tczNkbB/CRlC6roSgKg0JuTURJmG8qJBrlklaMROTSsKwtt5FL6z7l
tlkyikJi0E2hoagQI9YllyayNIOmRMrt98x5/vjts39Y79c5c87nPN/ne2b0
CI8OmmfE4/Ea4A/D/+E/teqIlsO/6kfDH/KFCi03MdnFzN2JWbUH/DN99dfn
zsz6y+DPqhs3w0OYBW/Bp/s53k3IrjNY3OGolkvZM39fhTsb18jB4xpkSdLO
9QbzC8CTXfPv/HKVjYteg/UhfTNWrGXjUqsULZfomFc7oohZMRzsX2Z/tvu/
zMK8FDJf8hIc5HS/T79kzG+ZquW+//ri8JHfMf8wg+MFCuUczC8BH/3NwvN4
NLOsCvx5gfcNURyz0uwYeO+m0slLMP8Qav4scMC6B5lmYZj/T4ODEjO+LGNW
mxzXcgdPn4uYPp+Z5woOyPk+7UcUs/DX4ySPZDPY79WlytujMP9ZsG9u7OOC
YKzvoDT4/MvRM6ymMYtD0mj+OPCJ+entjSMw/+k0mv8h+J2zWUJqJbN0arqW
O35n8bT478yK9eAvq0w218xk9VSfBO+71HAsz5mZ9wD8sVgQofmC+X+AAy9W
Lr3Sk42r1pzQcpN2/rU4051ZnwZu+GOjSYovs+Ae2HfSbHe+nFn8FSy6n1LI
82SWOZ3Ucqln2n+dMZRZdOck7Ycv4PpNUZmbF2A/9Dyl5XTnnF2neGHeAPDh
p+p1fc2wH26dIueVfzpF+k/VPUPLiZ8MvanTYj+MzyDzBSvAjfrw+fWvsJ4N
4HEdnjUersZ6OpyG830b/8s/JtjPY8Etda9rhnzFflh2muSR/n2arM/rkknq
L/QBJw+ZutG/CvthaSbZT/4XuEFtalFsj/mvgbmSAruutlhP7gwZly0CHz67
a41tN2blPvC4/On61RbMmkKwd3dR19HvsZ+1Z0h+xYKzpF7qxLMkL+/yWdIP
kvZKcl79biXZT5CvJPPFNUpSX1m7c/B+R0maC3Ox3h7gI8HKF6vSsZ654E8r
nJc4Hsf+rQYnSWxMO1/AvBbnybh6KNh/sLv41knMKzlP74cX4CRZdLjfarwf
2l7QcoqxZe57N2E/DAb7HOi+dtd27Icww7h9/NCNSZg//gK5LzRtsmB8fYPm
z0SspzCLrCcKBU/YVjDl/XrMvymL5FGcoZ8XDswm60umgxUZbq+S1mL+Ddnk
/lBlZJP7Rv8PHZdNySFWrssh8zUnwL7bPR6eWoD579Nx0Xdq9epccr/y0sBH
j0z0ygnF/Opccj9KWnLJ+nLHPC1Xd/StvuEPrG8qtbg8j3y/yJrAJxNrrTsG
Yv4eF+F+uDomQMBh/gngpj8P91jqj/VsvEjyqLvlk/PzxueT+1H4Wz6Zr6oH
p9zaParEF+tpXwDfh6c6KbuMw7x+4JSme6LHQswrBTdlVfVaPxTzHgRPKWvc
uq0P1rPzJbjfdNqkxl+wnmMuke9T6RLwIceE4jRjzH8A/MUyou9RC8x/1TD+
ZdK1fZ2xnqLLWm5sa7thLSZYzyjwrllZ0k417PtXtRc8tWPim9JKZv2Vy+T7
XVAL9nMJ9bBoYOPKyCvwfrZqMVp9j1mTQM2/BG6csc70cDqz6F9qKb+QmLe7
kPweEF4E787xWOmRzyx5BU4+JHX8nMIs/0Wl5aYt6fROq8T87tTiHGqZRkXW
V5pfhfumKpwLTMb8buAZU8cl91qE+WeDFQExAz0DmRXPwRNK9n6MD2FWm16D
/Gbx/OpgzD+YWjgTfHRTysNBYZh/C7XeuAjuH0558Z85zAKXIrKfeAbYWH+l
MNkL828Eew2vHvfOF/NnghM/f+i/xx/rO6CYjEunFZM8Clkx2V99Cvw5ye1K
kzvm/6eY7CcPvk7WU629TvLp06+T9QUV10ke8TewkSgnJ1SO9Y29AfdzY2Nf
uxis73Fw6788C9bMx/x3b5D6SpvBH88ZWRauxfy9SoiFKSVkPcntEpJH/rmE
rKf3LyXnkZWVknHlRzqu6VpGxvnjysjzEi0HfyxTz9hShPXUl5F+49nf1HKe
Wx+PPpGEeX1v0rzR4ITkqD7LVmDeJHBm3In7F7ZjPe1ukfXF3rfI/rLF4BHV
M31uRmP+/XRco7pF6zn6NtlPsfA2ycO7cpu8X8K3t0l+1fxy8v7o5eCGkyt/
hHzFfK/BGRVHbkZXYT6rO/D97vOu+4PbWL9dd8j9IMoDv/7NL6TqCuZ7eYfs
r7C8S+4H9TDw+Gh+3bw4rF82ODTzdoovh/Wrukuev8pMTeqhH6Im/SuYpSaf
15jcg/EB3Sos4zGv6z36vH8Fv7XYYD3TCfNuBqfWXHibk/2B1c+4Qss1H716
KyyfWTgIrC3Y6qC4xywJAafscKnZW8UsjwNPutuj1YdKZtVpcODYVnNGxjCL
+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
Bwq2
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcy38cB/Cp5M4iR0omZ7omOkS1b0JyNEkixygkHXNfYe4zltyl3woJ
ySRKlOXoQk0SOScSmzI5IsXvXa/9s98fv9/v+fhu3+/r+/6c3/XtOz/CZ4EO
i8Wqo381/5f+kcv+UzL4X7Ub/Uu8WKJkBpYc3RbbpcWyGPK/x9lNtUYtVmeT
1wsCFwy1ajHnI7lHIS99VNsW87skKBmXtpZ7cx1arBCTA931aur5LWbfIOfP
jHSaybSYV0UWLCtLcN3cYmHnRCVj52/KmJ9usWQEuWLQiwnO91vMzSSnRLwt
fH+kxYJKcpW9A0tXB/k7nlIyKxNXr1r/8ktLfodmS1+/nYH7UwvI4waW2fi2
abHoDflwxHSvT61aLG13Wsmc6eI/L1oX+Ydpmz2HLDFgJT//2XJ+3i7yxULz
EDG+L9c/o2QYh/JrlxtbjrOGkhv6RPum4PrcALJvVa1z3u+W44Lt5Hje3pWV
5S0WXyLvsLa9MATn49gkKRkD8fCOx/F9vj850/9EY2An5N9CHuUTHByD+5Gm
kOd/Kh/t3BH5y8mvhxkPfueO+k47q2RiHQdIr7dHfTeRo/g1rz+1Q/5z5Mbh
bpf4n5C/jLzlQ1pS2OcWc/+SRQlMgJMe+kdkspLxMfnNu9nQclydRDZKnO4W
jfvnPCJ3+FDwyxr9if+HLPJU3Z2PfKIB56i9ryXO74w8vGLyOfc7ScNxf8Jf
zfZ/Pygb7SsxP69kbs+2GjcY7SGfSF5+wi7U4w3qeZ+c9MD9rctb1PMHuZ00
PdD+F/pDnwtKxvDo4kPSQuQdTxYd3T2yTI28K8h/b9WFyT+2WFpHjm3aER5S
02KFaYqSGb343C332hazx5E9DyT+nPUe/WEpWbkuSjylrsXCWLJz4b3EB3dQ
z14XlUxdmEWw9APq6UH+XGp4eHkB8oeTrVLS/Lqif4mPkZfYR1wz7Yl63yYf
5I53KeyGejKpWsdFS8iy03YRY43RHw6T263Zm8VTIv8tsu6r5dW6D5BfSV7O
9tILqW+xJPiSVr3kB8kL90k4EzGeWNnk9C2+NmeeIq+hVMnMOa43vqYa9Twg
1boeJ4u8f1LsrpE4zn9PPrD21Z6JpS0WGVxWMtkRRfH3X6DeTuQuM3pt23of
9cwgj+2yoVMHXE/4lqxsWnT2H+ot6ZCmdVxuT44t2aO+jPOxBORTtwcWsOWo
52tymWH5eZ0n6A9tr9D8Y2l34y/qobYj663fxfr9GPlnkzecCOxdjM/zd5If
V5ul7s1BPVun0/G/xQWPi1FPbrPzzvR5I0P+meSubUOM395F/m3kXqc2f+79
DvlTyfm9lM65OD/X+qqSidv4fHtnWDCd/HxUrKUf7k+8mZzV287LHvcju0D2
d79j8LIM+Z+Qc5RlyrXII/K9pmXpRnJA54WXOLg/RTJZv/YzZwWux36sfZzX
pG35+gwlo3PgVl1aPuqbRDYy9lgx6Tbyy8my+qIqCe5X0EDO1LM1cNfUv38m
zb/Ft08eyEN9T5GHDPMecQn9gf+QzPWx7tonDfnryZVPfm1RafL3vU79RdTX
4z2ur5hALjAyy1pVgnp+J8/X0dm5CcflZlla9WKNJ1vN8BQWYrxxl5NZPbtP
+VmEen5ttof/1DbXUE+TG7TemL+5OzMTeceSWcIT03omIK+Q7Ged7HTrDPKe
IKcx2fFFR1FP45tUr6ArqcM3op6jyUlDJZOc0D+EYeQI29n9DVKR/yi544nW
10NvIX8uuZgTlMHkop68bCWzxtLaMgmfF4eQjfpYmXlifpEdIq9uODEjAf1T
nUN+8OVR1ahHyP+JLGzzb7M77le6KEfJ5KknL2q4jnpGa5t9s9mm0Ys74P54
H7QtZN+i+di7tiAvCfU9QDZzyrXKvYj6XiezN97fZCRF/nfkHksXTV9+Gvk7
yWj+meF8I+wC8jtqm39N2yKFTOv80va5SiZRvaCi4DzyDyd/tk51OhqL/HPJ
Ozu3cjOORn1fkW//dZnTX4L6trmtZH5mSKov4PwsO21zZ5Enrkwt8tHk36Ft
td4d+vxU+1FJ6K8cW3JUwJekm1eQfwbZjRa/cOQTbSWvWZSxcR8+L71I7jfW
Vf0mHfW1uqt1XOhHLvPeU7kD7SERkYd0OnbPGu0rP09+0mPeiIOa/E/IL90H
ZlWhPuKp95RMq52zZm76D/XdQL4iTp44EPVXnyXPjrDNWYv245SSd3CHDFx8
Gfkbya5PolQTMb8o1uUpmX22F09fwPhhnyG7tpLXzEZ/5ZWQK3s27Q7EeBH+
JjsYDO/+D/1N0i9fyUhHfehal4H6JpL158xNjL+K+j5oPh48uLvuKeT/Sd72
58p3syzk9Sqg9Y5VEpeD74sKycvyBy/riPEh/UY+omP5LhT3o+hdqGRmjbu0
0w/9le1JvqyXHdJ0DnmXkaWeD7OePEc91eT5vdS6uzBeWCZF1N+KJmS5ZCPv
GLL8X0XqjxTkjSAXlhnZJKJ9xcfJT/OGbRuN+YPT876SWaccl2+lmd/cyeuT
HFf7Yv4QhZLNfkbdnJyM/Ee0jytk5IGfLA5djEM93R4omYcJGcUf8HnJYnLZ
g0hvZ0375zRb4jzJAvML9yPZ/GjtzC030P4LH9J6suiQ+WrN/kdM3jjIJWsm
9nf8qubjI304C18jX+diJfNFzPl4HP2FvZ98IuLsjBrUl5dJjkmetO2/k8hX
SU7fsb6v8izydSyh9XWBTowL6iN3ILcX3tdPxPwouEreW+v9YINmPntDfmZq
vfU+2lfWTk7OzH16TzOfDSPbuCYZrkF/4cwhb0+cF/R8L+ql/0jJDJ7fvjEb
52MPJXdJmJIvwfrOCyD3aUyurNasx9vJkcHuk7pFoX56pfT9cYU5wQdQPxsy
x9e6uh3mE4E/OXIUa4JeIvJuIZfOXlsh1YyvFLJA/3Jr9kzU0/KxkqmOO6xy
0rT3NPKogw9Wl2F+kG4iK8797voc/UlxjuxSeZ5/5xjyl5H1TDw8ndC+Ep8y
JRP8M21rNOovjyR3NFD0OYrrs86WaX2e+4isv6t6cNt1yP+HHLDU0UC2GPU7
/YT2u5E8xmc/8haTJy7/PvnCbuT9RR7z7OX68CXIa15O8+2uHQ4rglDPBPK6
RTMD++5CPe+Tc4+kx1rhepIf5OybJqzc7cjb56mSubt15RMD1Jfl1ezpwx43
acZ7AblLms++Wbh/WR05OEIQoYv+pTZ9pmRuiiuaLp1A/nHPtD7PX0peNNos
rA7zl+ILuefalHnnUX92rwqqV1CFWR+Y50HOCRtgmKdZz8LJNxtC2LVbkf8Y
eapN9uxlYtSzx3Mlc2H1NXN35Bcw5F3+lhcLQ5B/CbkoPsJ7xCLkP0xOH5mx
8DHqp76lbZHrC9of6FssM4lEfYPJ+08bdwtDf1QcJB86FRdzSTP+sskvSn/e
zzqC/NXkyuP8hLaa9WzBS/KjtV5NmP9Z4pdan+dmkbkF1v5+mP8E78muW/q1
1sV4FRu8IqcuaGN0EPWNInePDR28ezrqm0GWOi0zPYX7Fb0l3zgUW3hyG/J3
eE370anvdSrQPxT25PehvK5PZqG+6eTU6wOneYxFfV+TJXeXXvDDcXnbN7S/
upqUUj4J+YeR63gFJW9xXPaCbFGcdblBs361VtDzo5nl7IgVyMslp9XMjarB
es+fSQ7a1K6yDPcr2kbmNd5U/Eb92bpvaf/I77lqKurNsybrZZ+sDMf8IZxO
bnvUYeNzjHfJZnJq4J/zD2H5hbfNzyOT+hxCfxEMqdTqb2JfcqJg44rWsGwj
eca/0XMaDyN/MnlE1Ta77A3I/5i8aXiT7sIdqOeUd3T+TJv1azahnuvJA2v2
uP6H9mEnkY3P1Abe2If8cnJB7lpTEfqTsIG8LODtpwyMR9ba90rG1y4hOwPz
L/cUueMbQ7ZlKPI/JB+R13zSDUT+erLdh1bp6xYif98q2k+103HnRqCeRWQT
L8Pil5gvpN/Jx622312DfAqzD0rmQ/jxMBHGC3s8mTOkW+ERjCdJvvZx+Vey
XvtOpQLUk2VarWTC97uOX4774Y4lzyvzjMvDflogrNa6P3Ut2abj4p6dl6Ge
xh+1zB9NTu7rHL4Q5xOFkSeOWNQ+dCXyHyUH579fPmA56tn9k9b1hTyyqORW
Xgr6jySEPKRL2rvWGO/yQ+Riv29d5agn6xb5fe8eySPnoZ4uSrKJONnOD/Vc
RFb8uxPni/6tjiav8bTP24HPc26Swzuksh7jOP8DmR2gN/Yh2kcRpFIyC/gj
S4NXob4HyKGjn57Lx/jkXSeHN1qxuqA9hO/IhhO3jul4HPXc95n2eyXtjuhi
vyO4RrZ7XtouGOutWEFe+0rpNv8e8rav0TquHk4+vWv9jzK0p+gK+eXl0Dvh
W1DPV+RrmZ5pe7DeKNrU0viJ2jrUEfVi25GX9/U9swb9izeLnDOuJIenWS+e
a5vV+gvtH1alrNyP9YprS+YFfzX5ivVWMIP8damLwbG5yL9V+zhHR61kDu8O
OX/SH/W0Im/d8u2GN9pL5EeeKPNvatqD/CJyvc6EXtMxHhXnyZM+n/hngHoL
Lb7SfrGf4YdAHJdMJV/zeuzWZi3ybyDHl3Qe54XjrGSy0Yz/npvg+9xSctPR
u4ZnYRm/Tsl8U+968hP9X72OPDb9zdZDmvnhDJmzaeDrIZiv+CXkotyef7Zi
/RX9bj5+IVgxcg3qu+Yb7U/S00sr0X95ieRZTibOTji/8AFZGp29tAL1lPwk
B3SscByE9VTO+a5lwX/kfzuXbrJDfcSFZH3v+76iGOT/pn1c3fuHljme5PmB
iqy9aE+FmrwnK9WxCOsF2+QnjdfSF49LZiPvGPJ2A/uNT1A/YQSZO2VQrA36
F6uWLN83PO7WetSzZ72S6Z96cUgo6i9wJzeW1GTFYn0Sh5K98hIKvmM+lR0h
J6WusPqC8/O7/dI6LnIjNy7Z0vkI9pfSxeSfpwc7e+L6ihiyT9Sfk+6Y/9g5
zcflIaNmhKGeo35Tf3/ooz8X/Vu+kJycGLW9A+6XFU1u/GObnYL5lHuD/PeO
vlEmxr+g6rfW+dSBDTQ/ZiSqumP+4Oxv0DofP7PZxSU7Tb2Rv7LZ+r+5hqin
tOMfre/z9pKnXvT7HTEF9b1KluYumbt+NPK/IR8c+KvhBM4nb9dIz3OuA45K
PJF/OPnDuKW7x2G9Fqc1an1e9pK8OODbfWscV+s3Uf/XmXJoH4P8Q8nB9Ts5
g32RP0D7uKKC3DW+6uMOXI+t91frfDybv1rHhf7kkJ32xa5OyL+FnOMx+nLV
KNS31T9ycuoslT3qa0k2sok5ctIK+ac1H1c8ba3A/cs2/dM6n/ocWRaXf7VN
V9R3MEvFWA3tZSRBPaU+5C0+MYkTcT+KSHL5lzFD8jA/ss+SLQ1vZS7DeOM9
IvM87f/Lj0d9vVupGHe9Ad5f0N6sdeTDi1OtV+D5j3u6ldbnBcXkz2N7hHpi
fhX/Ih+tWTH8LNqbs1qHPm/6Le6a5veIBHLdALcDs/F8Lrrf7Cmbo8Ox/5b+
0NG6nqKProphgsUN39F/hfHkz+V3jeei/pKCZi+bET4D9yuvIx+9OmFvGtqf
O05PxRwzznDIRPvI7pGf5XX7ORbjSf2FvLWJE3oT6xmnV2sVs80iMPzhZOT1
ID/zu3Nqtma/Ed7sLBvvwGDUs6bZH4RTVkxFPXvok81ONARj/AgZckXquORN
Y5B3ib7W5+WHyTZymYMV2ltg1Iau/3XEvWc81NO1jdZxWXAbrXzqg220zsfJ
bj5+r/52/jTUc2Rbcu/I/E+WqOeCtlrnZ4ubfZ1t+t4Oed+TndYrSvu6oP0D
26mYHAfpkl2a9S6K3KXVnMW/cf+CDLLM01S+V4h8HdqrGOH3MZX9lqJ+e8jv
h/GCm3BclE7u/2tJ2EHMv9LXZL7I08EE+wtF2w7Uf8ccXLgD8zV7GPnNnccZ
7prfGy6TWRWKemPUV/6CnBs91nWUF/Lqd1Qxr44fb71GhLxcst30sx/NcD3B
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
+9gHIf9V8qlrRoK9CWq3/wE4/ubV
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0.7356925665226507}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0.7626348232461769, 
      1.3014799577167018`}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0.7356925665226507}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0.7626348232461769, 
      1.3014799577167018`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"JGBT\"", "\"JGBD\"", "\"JGBT & JGBD\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6680252337025223`*^9, {3.668031059959094*^9, 3.6680310640966015`*^9}, {
   3.668032816869893*^9, 3.668032833933844*^9}, 3.6680328714675937`*^9, 
   3.668032928110566*^9, 3.6680340567214584`*^9, 3.668078350073217*^9, 
   3.668078522638321*^9, 3.6680795594343996`*^9, 3.6680816341974983`*^9, 
   3.668081742856388*^9, 3.668110919950199*^9, 3.668111680071972*^9, 
   3.6681124225088577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TQQQ\>\"", ",", "\"\<SQQQ\>\"", ",", "start", ",", "end"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66802991472351*^9, 3.6680299654683013`*^9}, 
   3.668112378900997*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTN0bAPBRSopMKu0ZyRItkyRLy9zKUqjJHtKgLBWNPYSJEpKSUnjL
tC+2EUohI2QJDSkUmVToTmlKlKh+j+d8fn94/3jf9/s5d+4889znPOec26g1
wQv8FRgMRgf86+9/4R+J+DxNkf+VO8G/YjcKaWrwiN7wTavb/lp8CpzcXjYl
SA3H5XfAZdmCJlMHHGd9BYsnX2JaUGju8FSackv5wuwJ/fbX0liw7xj/2lOd
aOYtsHhq35KdsXg9pwk8cMCB2pLreH/+sDSaWrp/ZsnyS2jhNLDr6pm5WTlo
9k1w4+ZL0xPc8fO8T+CVghDzM/NI/EPSacqEayRZcxW/TzwF3JN0NMjfpxXj
54GvpRoumJCA44KPYGpdzfCCCLyfaHAGTRlN0KEfT8P7SW3AkvzXt65boZmr
wEOPGD5q2ormHAH/2R7m4OaJlihn0tToi1f+jC1BM6zB+29s2zfVsB3jXwF+
fW1h4rZGHOdFgL13+KorhOF47BVwxdE/AbFGHZhfyyya2qrrFurjjeYuA5er
NNi0z0cLDoKDBx7wt0xEiy6C06u1xq05jJZWgxuz965QfIPmL86G+PreJ1c2
o4UHwMt5Xq+HWH/H+HPBSU59AYsXoxmvwVt284dbu6DZfeCuq2zb2S/Q4tAc
mqpUrac3F6LlWWAducYUp6do1kuw4vwku2QPNPc3uIZVF/xeFy0Yk0tT9uZV
q8xHoDkvwAZ7Y7t/7EHzu8H9jyyKr1uhhSZ5NGU2+N7AvAMk3nng6mGf79u1
4+/hlYNtNULG8YfieOwPcKaXvp7NAxwXj7wA+bBvm6Y7BC13A1/0yR9+1JXk
eztY/fs2a6YKfl7UAQ49fs5cSxUtNbxIU4cmNir1hOL1zNngecsqNgx6h8+P
s+Xfcf45cLTZlOQcMzRD/xJN1d+4dycvD812Be/R/iI4boD3520GnyzSGn45
DMdjk8BuS7nRc0zx/uJS8Kz37ud2fcb64VKXaern5t4j93hoQSB42rN2mXEx
WpQALj2b8VjFCj8vvQuu1I/Zqs1DM2nwqeLHGRZBaOGGKzQ1e6XIKbEcLYkD
F4dnu5x7jmbcAd/uv2gbpEbyrSGiqfcG++9EbyH5jAGvbVVQUiDxs4rBGtuj
N1wh9cdtBAs0lPP+jCfPX/0qfF6jcc+N5Z0Y71SwtarI0+QkmlMI3rcrusO4
GM2vB5d3T77onokWquXTlHtmF1v2FC2xBW/hacR1pKMZPLCyh47mSkV0bB14
66+qAu54tFjlGk1xbfc+C7hB6ncSmJ1QkjayidSvD3jwE0MlCwqv50aCwzsf
LrBMREuVrsP9byz41rsfzWSDbz//NrntGYl/OXj5zbjiyG8k/nCw390E9xcn
f2D8l8HzhGse1bai2RY3aGoI579f33+heUvB7szwBdUJ6NgwsLHHGwm1Ey2+
AC5126Zw4C5aXgWe1OWnlX8ILVhUQFO9l/Szf2aiRfvB1fUhgwcq/MT4c8DZ
Z1erRt7HcWYleO6VlbcVLpL4e8Fq3r93TzpD8ru3kKZmpvgxV4WT/GaBYwZ8
GOdCfi9bUvhPfng94ILyW2UiCxK/6U2aOh1ZJqDPo1np4JyMsoSUDDT3Ofjo
AVftptn4eUEXuGzRcdaIKFIfo4po6kBHXGNbF8n/XPCz4Oalr06ReugE7/m5
7dYBmsRrXExTI16m8Cedwfsz3MAJzOFVa66SfG8D699fph71kOSzHZxraj69
5CjmR25wi6YCLxbv16lHs2aByzxcTCPvo7l8sDjvbNKCXLTgLFjLYXqfyW00
U+82TbUJNKxHRKE5LuDxVU5KOX1o/iawfbN3gOKbLow/ESw2belK/4OW3AMf
EL9u2FqE5nHu0NTNpG/elono2ACweppz4OEktDgebOTqcGKjL1peAjbJTozb
+xXNagbnaU+amViOFq0voamml56RMIcwnyfBI85Lg28s78b4b4MPld90d/NE
cz6DgwtTmlp34vV85l2YT+mujiEaOM6IAX/6mNDcHoLj7CLwkyq+sNMUfy+v
AXzeyCxv12dSD0PFNLXsaJZpgjuJ3w780mbKjC4Jmlsg/uf7BVIw77Cr2YMh
aJHqPfh9ojlRmh/R0sng4KSJrPqZvzB+X3Avb/q4gogezO8H8KPuqxcuX0RL
BpXSlHmO11ibB2jGJLDxgC7ugCVo9krwuIG5Z/ty0bzDf625+a3fpN+Y34H3
Yf2uTVEP46BZVuCuh87xemvQXG+w7HKZTetctOAQ+Ja858hXY7ToEviblTTg
uAGaY/6Apo7rh8tNHdD8JWB3l8G7bixHCwXgqPQK12QPtCQPfGra+jGyp/h7
GVXgu3t3zz1fgfHGLnxIUx4+X17lX0aL94FbZkctmytBy7PBeXNaWHZlJP5X
4HH7e3559pL4/4ADvMuKVKz+YH73lNGU3ZVFBbvX4zgzE7xtx5tDriYk/grw
sUlWdQ3teH/+L7Bfi/KEjw9I/KMfwfM9oC/VssX7sdPAaZPazj3xQ/OegZu1
PEKHfUDH/gQHuj97UM/vxXjdH8N8aJ15/1ALWvAEfHn6lkEVt9Gi7+D00T+y
0rLQUqMnNDVs1oafxsVo5hxwySvl82fT0JytYJsv6b/HO/VhPuXgOfEHIz6d
QzMMnsJ8eOblWRaNZs8EF029n7JvI36eFwxuPFpRtMwcHXsG/FZp4LTbKmiW
bjlN3bljYbjuCJrrDG5R9eZdXUbiDwLfvT47aOhKvL/oNPgT/dPTfARaKgYf
8vVX+tOL5js9g/pJ1x+c09eP+dwIzpoxSkdVicH5G28JeMb7gNsDLdDsr+D3
z2ocH6ujxeue09RvxfrqmA78vDwWbBPVOuGUG45zm8Ds+RNd50pwXDDsBU11
7uva99UYzTwBLrlsM87pKcbDuQnWHK21/OBpHOd/AldQkxf/fkXiG1IB69OV
fIW+/WjJFLBimJ7d+Qo07wb4o29I9A5/vF/sR3DovQbPEA0S72AJzNeJdpLo
LWi5Ddj+1Z2vbnvQrFXgBzRdtsoKLVV+SVMPV0RZ6B5HM63BUzzWvFl3Dc1Z
AWbWyIcwBGh+BPjIinDLIDWMhzHwFU1pXxt3eI4ped6W4KM9K5OSRqF5y8BL
88vurLQkz/sgODtBq1n/Jo6LL4In8JSZCmFo7sRKWC/eOX5O3Yv1LFgMNl7T
bKWlSur1ADgxtcU06iGZX7ngU2E9h+5+JPX6Gpw28GB9wg6SzwWvaSp2cRLz
+kCMXxIKDky86Gpykjz/bHDP+rgY90zy/F+CV6m6rJQMH/DXvN/gKdO5IfEj
0ayMKpp6nn0r2cgPzX0BHp/pqihSQAu6wQrtSmrvKLTIpJqmPrgViBkT0ZxU
cNWogNqZIWh+OdjK2jl1zAa08Ad4od/6NT7eaMnINzR1oe3ciwIRmuEO3jpE
fXXdGXTsY3DkpasVunZocQd4cfut63u/ouWGb+H8YO7hbKiugPHPBvsEBnSk
/yHxbwF3r6v787QYLW0D6wwfZmzzAM3UfwfnPdcPE0qjSPyuYJGsuGtsCYl/
M/jA3bcq3F7MnzAJfF3tUlJHOsmnTg1N0aVD3QXaJJ8U+Bx34ovifBJ/YM0/
v1+cANYKKTcaQb5Pfrfm//t3vJ/AsZam9EzntibvRos2gAOH9+w/LST1HAfm
qXV98+wl8+8O+KC3l9giCM358nf87JIjp4Vkfvm/p6m99tbHWlikHmLBBaHz
+y8w8PvZxWCBjWKc3ITE3whWPqAu33kLr49V/wD7KXs/m+8vsH5Z0WCbnYoJ
wZ9I/yr88E+9C+rBanFPzgrHkPjV6qBf/Bfg8sOT9F9bcHjf1rHNbljf/Otg
3jS/3EMtaGEd2Da2Xh40Ba+XqHyEeNiBW64uI/3XBtwi8N5dRPqjuBb86Xv2
nAdDSP9Skv7TT1hs8P27Eysb2sn8Ww4uZS3cWFhL+lk4eKuDkuMvLxxnKtbT
1Aana1numaSfWYDzwoqpzAWkny0FSxssQ+rOkPkXBl6qWfRf8CeS7wtg0ylX
GoyLST+b8Ame/8NvK96OIPlcBDYtNym1aSPx7werTL5d2JONlueAm/udnPXJ
+sKqBGdo/b669ytZD7wa4Pz4ev87LVtSD3vBx17a90scSH/Lavj/+xvS3yRg
pZNxgyKcSfw94A8VfquvvCH9bXcjTTlUzVazdiH1nA7+6B6wUKCN5j0H289X
G11ylMTfBc7apjNgXAnpx6OaaEr+ISDM3pj0h6dgDrVQpbaU9IdOMKNxhE9N
Ipl/xp/h/Nj98tmM72T+uYGXBc99YtNG+sMj8MNzozMeNZD+0A6+Ur84aNgH
0h8Mv8D5nGdvyx+K8509C7xDVVG/IALN44MXLWhw93yFln8Df7ywctKpJ6Q/
6H2lqfgc1+iRTWiuC/jzGDX+rQ9owSbwQwXfAxt90aJEsHBZxPC8A2jOiGZ4
XnUTnExOovkcsOrK4oU1iWhhAHiKwYf8yG9oSTx4e69mUGEtmnEXLC/pumXV
io51oGnqkjT1XUwHWrye/ic++UnwLJ/7jl0Oihj/bfBIDZdf6+eiuZ/BvTlz
GneGoqV+Msiv4qUfQaloZgw4q+35a333gRh/Edhi9b1vLqvQ/Abwl5Sndf6l
aPbxFvg9v8reLYhB8wrAfgHluu/f4P1ipeB37lfoMnI/sWor7B/yc/sL9dDy
yeBdaUEOetvQgmtgoww71Rlv0KIP4DiPkrvbzqOlg77R1Jnu8mkutWjmJHAc
z/vtdGUS70qwumNY7+tutKQGnCljVy9tQjOU2miqNurZsMOeShi/FTjsXMLP
CzfQPG+wecShDss0dOwh8GnL7HaPVWiWgpymXFr0vQb5o7nm4Hmtv9N2u6EF
S8A2abyQ3GNokQDsULS7PnM6iT8PbDssaH11H+aHb9ZOUwa2h5Iursdx4UKw
j5M8xKcVxyX7wCP7s6XCRjQjB7w4Xaobdw3NfgX2/pm0RHckyS+3g6a8psvv
h4WS/O4BP2b80NjIR7MywQfPT/qxWZ/EXwHeLDctu7+JxP8LzHYYarLyJpoZ
8h3WQxvF7vuOypjfNLBJm92VeiGa/+xfC3+Cf2ysu1JxDy1hdcJ+Zp/bj5y3
aN55cEzArLK3eoMwv0/+juuGKCpYosXfwXPsDH5eIpYb/aApa9vFR0NHoFlz
wOOumV66vgItlYNHBzw/FhyNZhr8hPU0MDe0fQyaMxPst316IEsTzQ8GS7f8
Lo3YjGZ8A8vVW7bfP45m63bRVEpdT4tzD4nXGdxoEPn28kESbxDYNkjjVM8+
Eu9pMH9H8qhpI9Fc7W6Ib8LJQpNN+HmBE3js2M6bvio4LtoIbnljFTiTxCc9
BR6kkV/fmUHiLwFb+kwaF56IFtr/gvhYkdHHvpN8rgNr7j10ZJcYzTgJPqtV
neFB4mHfAo95UuOb1E/quQkcZNLUkH8Nr5ev7aGpgZL427bkebFOgOkNe38V
3EBzb4L3N6g92n+e1MMn8Lw95okv/iP1POQ3rN8NIQ4hLqQeosD0nhHD9xuS
ergBvnk6VZljgdcLP4J3BxktC1hH4h/8B/ZLCeLrz+fgOGMyOGvAxtZ6EekX
+eAl+vNHMx4qYH7fg8OMlybdfo6WK/fS1MS9WkJ6HZplDZ5rFBmYZ4TmrgDX
rZ7VZliJlr4D/9cxyOhhGulvA/vgPN0QrvB1In4/xxL8zO6qwRfSb/jLwGdi
fNzelZP4D4KbRt+rmjwP42cP6Kep+eHDdApWk/qYCE7XLvwpXk3qY3H/P/Ut
PgBeM6C554Ujqedc8L5KPWu9ySqY3/EMGaWt3tMr34YWLQD7ZoWYbrRGS0PB
ouH9w++w0cxssGp/ksVrfzTnJdhowAdb3yVoiecAGTVVccwgu9Noxh6w06VJ
Ycqv0OwMcN+vpJDuTjTvBdgoafPMH7MGY/zdYFPn0LsPDqJZuxRk1IxcTePk
mWhuKtjlm2fWw2q0oFzhn+tFP8DtMY9e7niHlo5UlFGtU7cmmA9WxfymgO/N
e7T4xnm08DH4DScm59MNtKQD3Ldne1UepYbxzh4oo0a9rHz5OhctfghumVx1
emMGXi9vA0tfCL/ltqJZ+koyKlF/bLyZOV7PdQVXCD+5LdJBCzaDe47Ij6kY
opmt4PeJjY0TD+PnOTrKkP+M8JxBj0m8FPjXXL7fkFD8PcJAsGH8y1mTPqEl
CeAInxMhRoPQPK1BMuqx8iN/ehbmN9YRPEnPe/H24aQeNoA7VF/WZHniuDwO
nF07b9cPHRL/HfDG8baV0WvQohkq8Pu+WO58L0RL/cFL1nq8yPVFM2PBnj+M
Vj7aROJtBKewzSY0/UQz1g6WUcccRq916Eazo8GZZxw+lGxE8wrBaV5VC5VO
Y/xiNVUZ9XLOzjYnHnnex8CxjVdm1c0g9XodPLTmzeQPM0k/qwM3izZEMyeS
elVRk1EblppukEfh55k24JfNFu2HSX6EV8Hr9IUtp51JvdaCm1oVl01xIPWq
PERGHT+59sqDD6SfscGCyGPKLBmZb8vBzkUZM81uk/VAceg/9+NagO/u5CSo
pJF4l4LzzbqcGhkkn2Fg2lh0hWNBnjdDHT7/SdNjlzHJ3wTwiv6f6bQufl64
CNzvZvyq8DJ+n2Q/OCR9d/aYVSTeXPB33aMTfr8g83/cMBmVPMx75ffNOC72
Arv7ri68qIe/X74XPPZ7mMJHFTK/ssDGLNhS5JN8S8BxdqxRc2aQ+ePBlFFB
6xkdKmS+MneDfct2ttWOIfGng9kdO5NHbyHxPwfrNecU3/LB+hZ2gQM1xZlh
6kMwf0INGSVJaM3oH4WOfQp+u3TVA5qDFneCd4yOkD6/hJYbD5dRm4v5Fp3T
h2I+k8FD7Tx1I5ehRY/Ay19tLfyzHi1tB48aOf/E/olopqGmjFKx8GWNSEZz
ZoE/lQX2tk1FSx6A9YXzQuMV1DGfbeAsxQB373gcZ+tpySj55yGlizhongs4
/L+DGq6r0bGbwIPdNF/sW4XxslrAbudUnvtloLkjtCE/1SkXA9XJ/OeAlUqm
292PJ/UQAI7rP3VwPOkP0njwioKz/vfvkHxqjpBRz5xTh36+T/LpALazHKR4
QoaWrAfrrH3MmFGE38eIA7daHj9b8x7Nvg2+1xY4Vn8nxiueriOjHq6KvSyb
gpb7gSXhRkrdNIk/BhzmGnz60Wf8fm4R2Gin4R7uZbSgAXx79/IHbDmZ/2t0
ZdRWl3Ur7L9iPJzj4Pg5vKlaamh+ATi2VnGN0WnSb6XguuUTnx9LJfP/qJ6M
YiVb3IiZidfHXgPn+88/OncM6bcfwB6cbVE5T9HyQfrQL/9cCtD2JPFOAuu2
2295lokWicCPg8bGeQejpTXgxLlzzlex0UwlAxnlWtoujRahOVZgt4W7ohQS
0XxvcKnxQMNaDn4f4y1YMU1DXBpC8qlgKKNsxm5OnVRN6tkc/Hcb+24+qYcl
YKqmcVFrNsm34O/1kfE6ai+xvrj94MiKE5eFKWiBmZGMMlnHNzkWiBYtBAds
m+fyu5rU8z5w/5I3IiU+iT8HPEZlkua20zguHGsso3qr7SKXXCX1zAWnGv/K
V3Ej9bAXbPTOrTfoMlnPMsEa07KidMeT+CvA2xmK42axST3MHwn1+Pu5yKWO
5DcE7Cgo21Wxn9RzGrhkmd7S7aS+Bc/ATl06OaOayXz8CR40dP3RHV/JfNvB
gnq8NiTi5Cz8ffzz4G1r2Xlr2GjhE3D+/lFLxzugJd/BcWlOpZUFZD4aj5JR
rxRDVb1S0eIysJsXf3/JSRKvHOxeffexVh+OswxMoN/fYQefuU/yPRM8VGfm
FoEjWnofXCnsNfA/iGZ+Ax/rzvo5egaaoztaRnkd9E1VOUDidQa/le9S7XpN
8h0EPnR4xcVx50h/kIFjftbZO14j+dQ2lVGhHa1n20+Q/uYEfthyeEOeiNTD
RnDLSfrO0hoS/ynwZ39aXVOX9LfhY2B9sHsmnXaV1LM9eNS5KvvQUaQe1oFf
HzKYzOCR/nYS/MJoZ1RnMon/FniAa7zP/LEkn9PGQr+vfNYtkJJ8+oEXt93a
1f8dzT4B3l6ePGTRHjTvJvik2Zdwh9no2E/ggtbw6WsL8ftYq8fJqGnts2tS
ksn+JgrseLrd2u0b6W83wA2O7yorBST+j+C6W14ua/8j8+vIeBnVGG4aHEX6
pTAfrGd3ZEj4IbTkPfiunnZOlTaZf4PMYH82d6jyhQGkfq3BVeWb3v92JuvF
FXBgUWJd/nWSz3dg39CtK9znk3oYOAH6kWV1t/NWUg+WYM4MtfKHacMw3mVg
x4rIdfHHmJjPN+Do3593dBehOQMmyqg1o21+Tb6M5k8Exym36w01QQsXgztH
e5W61eP9JAfA9NLTVrxfJJ99YDMrF498C5LP8eb/jIsXgO/4PNllsAA/Lw8F
l1SPunH1HpqVDd6rJz74KgctGmMB+49HqQNsV6GlnuDiK8w9WyegmXvASfLV
Uxc0oTkZ4KP5K1YE+ZB6fmHxz3xgzLeUUaPzrot6XfB69i5w5bjMuhfDSfyp
4LNXfY5eW0LiLwevHdqtdNeGxP/D8p/7c7dbQb3++Z2/yJDkNwWcaPMwaA6p
T9FjcMX7gAoNVTIfO8BDhydw38WS/bARG84XbZ/OtpuQ/c85cGRZZtTXWXge
kjwEJ+VsX/e7j7xPkYPfRBYNKVAm5wt9axlVVN5hvfQL2Q+7gkev1d3zs57s
f0rBCSMjXdpkeD2rFZwttMoxyyXnT51JMmqLj/zs0DCyf6PAFUVdQUf0yPko
EHxvZaHVhLnkPK9lA/2j0jxyCTmfCB3BEa6Xm8f4kf3lBnC6UL6ofCKOM06B
Qy3Ppv45Rc47GpNhf/HumWmYN9n/zgD7OVzqH2xPzhf+4MHmUvt5F8n+PBY8
YJVxsvFdsj4XgwvXRlT4J5P92lRbmF+zxz1nV5H971rw4PKism1XyXktGryX
Xqx59BaaXwg27i4VuWwl+a7/+/nPjKXLasj+lzdFRj3JNIsY8Iyc54+BbfZf
6Fywm7yfug4+Ec1y6m3E/InrwPy4xTf6p5DzpoqdjLLqelB3LJDkMxKsv22y
ZswRcl67Cm7+9sZ6JMmPtBZ8PE7imxFH4leeCvu7+U+S0sh5h8MGzyuY/Hye
DTmvXQY/ED8c8iCQnDfeTf3n+bMVp8mogcmrzxuUk3qwAH8MnR//YCjZbywF
+3ucElSsRbOqwYy9jIhD9aS/MaZDP5jmvGVyIOlvE8Ai3irtWT1k/7YIXMPX
mZx1iuw39k//p7/ye8EOWj0xh9VwPgjHzYD1YGKUjpsT6Rde4EdDvAol3WhG
KLjts9bz2BoyH7PAYZ/iLvcEoMWm9pAvxvAnKY7Yf+QeYNtm2+rZ69Cs3eCg
mqYBP9ejuelgc9WGBb3OaMFzcN6c86oPuaTfzXOQUSM0WU3Z8aRf7AR3x13P
DF+B5gvBhru3mzTakfifgsc3d+X3eJL1pRO8eJBT3vFIsv5tc4T1/o2t97Cb
ZD+UDI6+fezyrFdk/XsEpm02rfgUSfpdO5ifPLPp9ynS7wydYH5LF5kt0Mf4
RGfBb9UWNul0kH73APz+v7cxx9+SftcGtvK2l+fTJF4XDtRzbIjH6IH4eUYp
+LoKTzv8NclnC7jCSR5ArcVx3ggK1os/o0p+jEDHcsD7FmppPD1K+lsAuH4S
12yLF8lnM7gv9kzqcmOST01nqGflDpGIWOQAfi7o3C29Tfrb+r/+Na9wpzmJ
Nw6s/djUzG0w2U8wXWD+KFS79V0h+7fp4Lz59Y/VrUl/9geH+qoZHztM4o8B
X6aaVgdPIf25CKxufNznTDQ5L9m5wnwI11MuWkfW6zVgkWm++owfaO5xMOdz
7epLGWT/WQA+9fWYT1Q82T/4zoTzbooHKzKO1O9RsPfUtt0hXeT5XwMPyL4n
3TiW1O8HcF9CrW9GH3neh2fB80+yzuObkfVZBM610NnzlZwP5DXgoM3/mSwy
I/NNaTbsfx6V/fx4ipyfrcCWVWk6Xv3k/eQl8MoLs37r2JLz51vwdfvt8WOV
ST9QmCOjJs718/6xnrz/MwcbvLy6Y2AteX+5BPxUtp1VlEv6Vz845fV2bc49
0r/M3GRUh2HwxaoTaPFCcC2904ORjpbvA9+ck9fpKsD7Cf6A/QWekau24PeJ
xrrLqJxSr+C12iReLthugE3EfR/y/nov+MCpVfJjtuR9ZSZ4qtXv1tZscp4f
PReub76yYMpT8j7YA3xHM9zi6mzyvi8E7LFV0KvcReJPAy+PCr3Y3kLifwb2
yfm2IPwC+XvL3Hkyav1Yfm8KeX/J3QGe7vyivzIaLTgPTmGOMpxbhhY9AXNP
/hJ9KEZLv4PdM3pFdpF4P+F/82XU6fSIjh+V5O8ZZWCutWn1Ilfy/rcdvOna
aZPbB8nfMww8ZFSUjcKaj7dIPs+AYyoDa66Xkve/98GxBUc7PIXk7xnfwJ1Z
fVWMmWT91fWE/sg692XeJ/L+2hnsYfDLoPY1mnkPXKdx5KjTdJJPGXjusPu3
bi8n65k2F34v8170jtVkPXMC6+acsQhzJOvxRjDbgbnH2Y28f/wKVmE7laZX
kfcnw73gfLVqg7fnZPK+zB6cfXHsjeZMsp6tAx/5HFyjHkPe/5wEHzQ4nZr2
iOwPhi2A9ef5L8dzLeR91DSw5oDmx3FfSf36gf2zRwU7kfdTnBPgTTsa1DeF
oPk3wSvf+VZopJD9gt1C2K8cvF6m1kLWs9Vg14hOR5tx5PwcBd7e663ZEEn2
EzfAFY6zC+siBnP+B2D0QX0=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
nvQJxvB89mqwsjhInhfR4OpTPyxCBGS9+xRstqj82wBlsl6TgaVV1qU1XJyv
jcebwPPhcnOs5CS5H63Bk647NosiyXyRD+6wsFI9s5s8Pz6DRxf0Xp32kDzv
VGdI/33/TtYbFNiNEk789Y48X7aANYLi969KJ8+30TPl7le+xUy554loE1hD
bZul23myvjg3U25+5ymbyj8v5oHJ7xuQft4Ifq1x1GCfIbn/eGDhSeujqePI
/JYNvqKsb2YziMwPc2bB81t5QnpWLZkfNoDXO4w8G1+D48xTYF+DiyWRDeR+
vD9Lbr3Dfw828tk3tUtA7je2mZQyiX5/ob6aPK+Pg0MMz+eGT8P1Hi8TXH6K
2s/fSJ7XDX/HMz73jRhKnteDZ0upWWa88KvJZH44Oltu/hPcAYfGrnMLayfz
89vZcs9HuuIcuF+Gvk267kjmN2MwP1D3QM8v7B/RbXDo769rlteQfq6ZIzd/
Gw8wl5sP2Ybgzu3VX9ytSD+7gW+alHrofSX3WyXY7VfxkONX0CzaXFi/vJtc
mCYj/TwN/NOnLK3QnvTzcvBT0z2nIhTI/RgCnqMgm7ppVT7WtxdssOU6c7Aj
mj91npQaXtMv+uNUtMgFnOLlNft7bh7mDwILbZ23z69EG18HS3Ys6Hs4CLcX
6syX/vs+A8dlTmCT1/Hhjyk0Yy+YfB+EZsWDl/O5lvXeaO5LsIOV/6bg1Wi6
wwKYP74Prh/TgmYGgDs3mT3SVSL5+eC+/tz4Y+okfzE4ZEj+rctJJP83MPl+
FOdH9k4L6O81tU+/fsRx3lXwXZfth0a8I/mfg69XHjob9Jjk/2Ih9/kZGpaw
fvZz3s5ZhxZcBpPv79DiJ+AAvzVdv0+Q/B1g/9PlD4ccRXMWMuH6deqWu/qS
euaDg1Rua8p4pJ6fwOT7NzR7LCVXDx4TrPXwU/l0C5J3M/jjzzsjQn4IsZ5t
YB0RFb7ZmNRzlJWUGh9Df9irS/IuAFc39qzs+Ery+oBjxMfLle6RvGfBedLs
zdukpJ70hVJq3Z4Jg/YfIvWcCx7hdnzOCiM0bSPY+bfRWMl6kv8MWNR/x8Tf
7ST/A3DniLi7q3Sw/rLZ1tJ/33/h/gxPsErL5vpSEzTrJDil8VO553OS/x44
9d7wF/755Pqvs4H5O3/3SNcXpJ7hYPL7Hfj5+Rng9Tqr4wo4OC6qt5HrT94R
W6jv52kdDnqYRygA67m6nHyxmuSrBafYaitvbEEzFOzk1iMsIzu59Zk41U5u
vqNX28ndv8z+i6QUfewwy4GHyHxmACa/D4bjfFfwOdlWS+1hZL37Bxww/WdJ
WweZf/XsYT5Z/WGlrxaOC5fZy82HsmDwpahrNoN+4PG4v8FHjZi/+2Rk/pqy
GJ5vtHLvUStIXhb4yNZzdfP7kfX6fnDkocURJQPJ/JsINu/WqtE6TuYv7SWQ
P728f/+NZP5yAruUMWJVssj8FQhO/nDLMHEUeZ7Fga/nNcdqjiX5X4A/p3g9
bd1P3j+XOEj//X4neZ7tBts/GCjW7iDvb9fAP6K2K/ddJu+fReD+Mx92r7lB
3j+/gj/pffZcdoi8b15xhPe9mHtTJtSR9dkzR/n1+Rcw+fkYyavuJKUcDUV7
JmaQ9e4lJ7n1gqwAbKflM8v8JnmetYNTf/drFCuQ55maM6wHBgZf3O9D6m0F
nmSlmlQaSNY3ec5y63umFHwvcPm7sk9kfTaGJf338w4035IlNz+LfMGFgy8e
jqGh2R/Bqlv2iY090DwVF+gX56ZJTXVo4Xyw2YHIj017yfrMG2z32Pin2Qny
vIgAL34dlrojGM8nUFoq/ffzHrTYHGzkmV2a7kXWl15L5eZD5mlw/oINf1o/
k/k2C5zkrHQo+yW5/2cvg35NEVTMvYI2Xg92Mj/0feoONPsE+LFJzyNaM7n/
7oIz/hS2n6vLt/wPgkfqew==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/ZucMWL8P03xBTc=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5719434000000005`*^9, 0}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 4.181611864302693}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5719434000000005`*^9, 0}, BaseStyle -> {FontSize -> 20},
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5734176*^9, 3.6677664*^9}, {0, 4.181611864302693}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TQQQ\"", "\"SQQQ\"", "\"TQQQ & SQQQ\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.668029922314522*^9, 3.668029966891885*^9}, {
   3.6680328177136507`*^9, 3.668032837720002*^9}, 3.668032875289584*^9, 
   3.668032928798088*^9, 3.668034061143282*^9, 3.6680783575774946`*^9, 
   3.6680785234351854`*^9, 3.6680795632476196`*^9, 3.668081635791247*^9, 
   3.6680817474814653`*^9, 3.668110924402893*^9, 3.6681116810497675`*^9, 
   3.6681124233230357`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9, 3.6680310240717154`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"end", "=", "Today"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart1", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chart2", "=", 
   RowBox[{"BTALChart", "[", 
    RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "end"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
   3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
   3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
   3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
   3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
   3.667989983816139*^9, 3.6679899846396537`*^9}, {3.6680328189012156`*^9, 
   3.6680328236945057`*^9}, 3.668032854896698*^9, {3.668032892840277*^9, 
   3.6680329128159447`*^9}, {3.668081685682143*^9, 3.668081688494714*^9}, {
   3.6681123817767186`*^9, 3.668112402824794*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
     ",", 
     RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.6680817833225226`*^9}]
},
WindowSize->{1474, 812},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3208, 82, 198, "Input"],
Cell[CellGroupData[{
Cell[3791, 106, 2152, 40, 129, "Input"],
Cell[5946, 148, 48733, 875, 460, "Output"],
Cell[54682, 1025, 50012, 896, 472, "Output"],
Cell[104697, 1923, 50282, 900, 464, "Output"]
}, Open  ]],
Cell[154994, 2826, 753, 20, 83, "Input"],
Cell[155750, 2848, 844, 22, 106, "Input"],
Cell[CellGroupData[{
Cell[156619, 2874, 359, 7, 36, "Input"],
Cell[156981, 2883, 45866, 828, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202884, 3716, 302, 6, 36, "Input"],
Cell[203189, 3724, 43740, 794, 460, "Output"]
}, Open  ]],
Cell[246944, 4521, 559, 15, 60, "Input"],
Cell[CellGroupData[{
Cell[247528, 4540, 233, 5, 36, "Input"],
Cell[247764, 4547, 42639, 777, 460, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290440, 5329, 230, 5, 36, "Input"],
Cell[290673, 5336, 50204, 899, 472, "Output"]
}, Open  ]],
Cell[340892, 6238, 5203, 135, 290, "Input"],
Cell[346098, 6375, 1334, 29, 106, "Input"],
Cell[347435, 6406, 524, 15, 60, "Input"]
}
]
*)

