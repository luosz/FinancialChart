(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    450384,       8243]
NotebookOptionsPosition[    449163,       8200]
NotebookOutlinePosition[    449539,       8216]
CellTagsIndexPosition[    449496,       8213]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HedgeChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"stock", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"inverse", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s2", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "portfolio"}], "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"stock", ",", "inverse", ",", 
          RowBox[{"stock", "<>", "\"\< & \>\"", "<>", "inverse"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844407477314*^9, 3.667844464668743*^9}, {
   3.667844502510292*^9, 3.667844509302876*^9}, 3.6678446269184866`*^9, {
   3.667990456906193*^9, 3.667990461900839*^9}, {3.667990516543872*^9, 
   3.6679906068069367`*^9}, {3.667990657898166*^9, 3.667990683752285*^9}, {
   3.667993204237013*^9, 3.6679932091319733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<IYE\>\"", ",", "\"\<DDG\>\"", ",", "start", ",", "Today"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"HedgeChart", "[", 
   RowBox[{"\"\<DIG\>\"", ",", "\"\<DUG\>\"", ",", "start", ",", "Today"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667844469354578*^9, 3.6678445687006326`*^9}, {
   3.6678446454967623`*^9, 3.667844693697332*^9}, {3.6678447729026036`*^9, 
   3.6678448456427317`*^9}, {3.667844884979068*^9, 3.667844888273032*^9}, 
   3.6678449295894375`*^9, {3.6678451062147293`*^9, 3.6678451289457235`*^9}, 
   3.667845407416785*^9, 3.66784545943077*^9, {3.667846101121807*^9, 
   3.667846138176633*^9}, {3.6678467594459*^9, 3.667846760609721*^9}, 
   3.6678533185137177`*^9, 3.6678533602629747`*^9, 3.6678535184195585`*^9, {
   3.6678535884028864`*^9, 3.6678535915956755`*^9}, 3.667854083107685*^9, 
   3.667990506586691*^9, {3.6679906131469707`*^9, 3.6679906408249264`*^9}, 
   3.667990904564515*^9, 3.66799103420006*^9, 3.6679910894389567`*^9, 
   3.667991336857196*^9, 3.667991590510102*^9, 3.6679916726469*^9, {
   3.667992188406139*^9, 3.6679921910293303`*^9}, {3.6679923487891283`*^9, 
   3.6679923501680956`*^9}, {3.6679929002308016`*^9, 3.667992903728224*^9}, 
   3.6679951804655724`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
67wfOVE9P8C+fR0LClTP6l+skrL3XgTl6wcfnJqFoPFs4hc2npo2wl7lxy7R
faZ6Vink45svPCRdVWaWgcaHUDhNTPAo/3WF7PgoL8JN6p5BUD07f7VKh1Ke
DpvQm8a3sV/Z+KtYCx+sqjlUVUPj2zk4yqnek9HHaXzLgs02zLb9aHwb9c0q
fa3V+UjiYbperIZfigVi4YAz8K42zXe3aU7X50xYDE+z6Ppc9rtVOi5+AM0f
VsBRieV8hsyl63MCXOOEZ80TnnR9fgE3+/kEQddn1x+Yz9cyIGi+2ZbbcAJ+
H+bv/ewRzYf/gw/PjPqWVoPWI0r8tErbPNpv92hP6xGt4QajZjccNZvmy8Pg
+D93FLvQkubD6T/5/VvxIsz3JL3XXiXNP1vCnfb+80HKpPnnEDjQ9G9M/WY0
/1xQxO4v1MV+sfsXbXP4csbJGbMbUv6D4AzXyasOPKP7pUh4glNW7ZiBNH87
9It9v76JwibF9nM53M+F5m+BcGn/Y2X8j9H8LQIOnNVuwKx2dD9yAJbfj9yH
o5z/We78D9W3XzGblL3N3etXAs1/wuCa8YtSAj7R/G0vLKbPGTR/uwv7tcgs
uN2f8i8sxvJRzXKCN4cWfvtK87ddsNMLXUKEhfojGZb9fmMBLJtvW+o62yTX
EMt5lwDqjx3cMTdh6b6jQSn/j87s96l7FLdJI7zPVUhrRus71+BujvKUoX7I
hWu1O4qg++WaLjYp2bEc14f6oRssW1/RT4anOZZX51E/5MCy9UxNtRI2+fqe
ToJlzytiJnCbN8Cy9W1t5ZI2qVViSGZQGj0P6wLL1rtNIbBs/dIeDa8vmrCh
aAL18wV45eYWvu230/pOp1Ls91nGwLL+Vhrgst0VSa+m0HrP61Ls84pRrjbJ
My55foXhdD+6CpadX9rTsGw9zFSmtE0a/vwqguq3HJatn+pPwrL1VeNzWL6e
WqqMTfoxvlvvlIe0/ucJX5h9C0Hr1cfhv1x6HRmXTvV7Crd0iogYXZaeD5Qo
a5Oex098ET+Rnnep4R2lB+8sPZjq+ycsW59VOZezSXMdjxNDaP23BSxbj9UH
weV+Wz1sWh3Kdz7ssyDaXteJjreivE2aaCmumjedjncz+NqZh7MGd6N8B5Zn
v9c8rzz7e4pDsGz92dC4gk3yuHUqrHkP6tf+sFv66dBOPWm9LBwWl2899et+
eI+44FC9zXB+YsCnxAA63n2VNvl6nXIO3HDG2ccVm9L60x4l629dCuzpWL4s
S+t9X+Bw7y83ty2l8SrmN5uU2CW+1K6udL7fhlPdhy65cpPuNz/BsvVDe52K
NmnvjTeDxwym82c7nFm55OvKJak/b8Dfd5466tOI8s2DO+U8RtB4VasS+nde
xfGW3ZRvd1g2XpuvwtNDpzcu+Zr6Ndfh/18fU9eobJPE9OwG9WtX+KpoUFo/
mQTL1odV7+HKW34G/1hF679Vq9ikKnFrbv7+i/pBA8uedxjHw7L1ZMv6Kqyf
dZWq4vUvmQjqBx9Y9vzEPA4+0sI9roU7rV9HO+x43BxJ69fnYdn6u8m7GvJ1
avLIqQmNX6Or8fzXwLL1mYCzDpcoQFD9X8FXHbdHHen8Cq5uk+5I3SJfxFN9
V1Znn9edgtuaRrwdkUL9YIGHb9BW8DRTPaNqsONpiK/B+sf0DB5Vx1z1vC/1
Q8marP9UbeD6wY2nXj1N478RPvd55+T1FagfMmDZeq3Sxc0mX5/QtILF9O8e
XR+GwrLrpSLN8f4wp4VhTnQ9cKplkyo6bufnUD97wN/FAyLq58HcJj0cLR7A
0PrOr1rseqpvWhvXL7EgQ/kPqM3+nmUu7HhavP8DrZ8chP2WLS1w/0LXr0Z1
2PXSHADLru+K8DosX/U+WLberb0Hy9a/7H3qsnxVs+FXZ5St3XZR/rth2Xq3
/g638TMsWy/VzFAx63bCYRtzwjfm0PzmFiybz5jzVezvKerUYzZdr8eOr91e
j11vVW712fUmwL8+6xfLFfjkb94IGs8+8Nc11Rvg+pX/oMtaP+pfvwZs/IiZ
CA/rOH54x/E0Pthg2fMPbZWGNvnzHINvQzbemEIb8vF4XUP2eX1Fd3Z+GDu7
s+ujZaw7+37lWm7NOXd2vps7NmLfrxgNy9eHV3Nrz8C0/4Tyz4Rlz/dUfzfG
9VQccBrfVsDdBo71HziWxrcEeOLdK5PuXqHx7QUsex6pW9bEJkVUr5YcdoDG
sxOw7Pmx+b8m/PpWsikb79St4bnND6lvVaf9EMfgn2nhxpk2Gs/SYf8yToUH
p9J4VrwZc0BLWNxOZFC+Q7iVT+ACH8cDaLo+F2tukz//1zWHuz9es95LRftP
BsEFjuHZnfYbRMJTjrxC0HyhCB7gdTsstCLtj2niYZPvTzAFerD5iD0C3n50
5HulneYXB2DZfgmjewuMpzlLy533pf0Q/eD1FYYjaD9EGPz+bXME7e/ZC9+Z
PHmfTyNh3V1Ytj9I0aelTVoa7eWtPkjznVmwbD+Tdhcs2x9iSIaviwsi5V8A
B6XdQ9B+jumtbFIXx+X7vLB+RytWD+NNOOl7V9P3rpT/R3jIv6Mjbx+h/Gur
bZL2ZqT3pg55or5b4Q1Jigv2nh9Ffa/BOao8hHhdYYePiuMnrK7Z2ibpK10+
0K20sLYbLNtfZb8Mi3b1p/1fOXCNP7p9rPmD9n9Va4P5xivVvBNptB9FgmX7
rYwT4EUv/f4yfqN6Vva0ScadxxC0/6QLvKurG0L8fXOIJ3u/Yh3cZ4EaIV43
/NYW84MjXRDCpk5tWf72MfD5qLMIytcA68SGAco3se3/rv/i/RavdjZJlCeH
6jkKvjRt+hY/D/G6ZhUc8rqUoUp/Yd1px/s39qy3sSfV+yWs9R35t+9Iqqe2
vU3q/2fs7BUfqZ7L4a+lvyMo/5Pws7ADCMr/OZydc//y+SjKv1QHnN+O7W7n
qZ5LO7DjbzwOy/YHWZ7CRXtc+5TYIqws4WVj+6vUsGw/hvkoXDX18uh2A2j+
ng7L96s5d7RJk0tGTSkZRf3cApbvrwqCZfujVI/5+wMU3jap/UrHBJj6uRkc
+bl9ypAb1M8Dvdl4YJkHHx146MepjrRf7ac3Ox9iGneyST3Fehrtt+sPX9zZ
p5zTc8o/Aq7jWH5pQvnvh2f2WN80y5nOt4adUZ+5j41u3Wm86NuZz9/mwBsc
h7Me3Y/sgRNyh57KHUr3TylwlljApP0yf/jgdcfj9JNU35lwStkHblOCabyL
gVseeBzhOo7yv+3DzmfzJ3iT14LfH+dRfad1wfhWoVguQtR3Ozw5uOWU4JaU
/w34+bW4taNq037MPFi2/09Vyxfff7Fh/eHrqb5bfNn9l+UqvCrp+Oqk45R/
LizbD6frqmFWXIbv1h09/0Iq7e95r2F/T1tVYuOrQQPL9oOaxktsfA3Ihun5
AvVzJT+Mr60cDSz63egDz/7iFXjdTuPbOD92/iqjYfE4egGdb8quuH71Ld1Q
H0jjhTdcmDOlbt0zNF6M6cq+X70Gfu+4velE5+NZOC863BGinh262aRbtvzd
iYeFVcFwu/82lT/cTzhgJbw3YR+C8j/VjeWnGemP+58gzxlBnjQ+RPmz8Sgm
3p+NF+ZnsIfrtBJpzWg8WNKdvW4ywk06few30Zvyy4BdbkR5FN6n/Fx6YDyZ
n6GKry/G94BWcNXXJ0Z17ypsiYOL/lWmhdwUVqbBNf37hBx4Jqxx6on53tLN
WQ1L5Yt8PeCzJRwntHg9ZnBP9n7tL5jWx8X7DU174frnWv3vtHvCpgHw6XHL
De39hO1z4dIvkl7FzRKf1/+AL28pzE7WiNeNjX5Hfo7lkw2UbwB80f51U9Jx
yjcc/juqcnBUZcp3H+zTaBuC6tegN/KN7VmyXDpdz/rCu54s3v1ksXi/enZv
dn3T7oYX2zql9rlD9b4Dh1W+6nHCU7xf1fsP9vcCZsCujtNnJ+W/8w+Wn/EW
3OVOj7zQ05R/Pvwh4m1MzSCq37Y+mD/tcOu+w42uv9dhx26bztGUbx581lp8
3dnz1J9ufW3St3VuqcGpdPz/hYutH4+g438FblFpYviMH3T8P8Bf/4tUlb9J
/Vm9H85fx+llEtb7wYunDz+yb6+w8hJc5+lQ8+xbdD2zwbUjRyGoX6sEsOtf
jC/spTqAoPE2FF42IOXv+otp//I7eN1LS2LFpjQ/q9jfJm32C0+adoXO/85w
ROiVQV7hNH8YC5/pNvTFjF10PV4LpzoeB1Sn61mFQIwXmyMmjWtL539HWCwv
D6Dzf3QgG280qwPZeKc7E8iuX4oOA2zS47sl3FtvouvB3/BFx/C3msbbFQPY
fM+QAE8X+4Psvv8HRo9OHw==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2Hk8lGsfBnApQoVUEi0qVIhJKu3zyJJUlKiIJqm0WUqSJEml1aTSHgmt
NLJLmRBaDSIRJkk1IyaJFvT+zlz+ec8f55zvZ7brue7luR9j3b2Xb5CVkZFp
p3/991/6x2dbtIjB/0rm079iosg3bB/YdveTWsAnt11q3m/c0/qfuZtjRMzC
dQftEn5LzT9DPnYgTrs7U2rJo/9er/S6qfZAau0vZDedvX9XvJPaXu26iNnm
PeDQ53qphVzyKq+K1dU/pVZ9SL43Y7nSdp7U7E/kl9MbWj+8lNpHJVbEHLJl
/F81Sh0zk+y/5q/vt1tSszLJbRvYAzWCpOY0kJ1/Gcns+oL8A2+ImIQskUS/
EPmnk7Uz65XzLyM/hxznGnRz8SepQ+rJtQ0eWjMTpOYpxokYcUTD+NUfkH8q
uWrPlgvn7yO/G3nkjWTR3jjkDyePujzzcP11qQXy8SJGKDvOaNt5qWWmkJXq
z8/fcwf5XciNb5WMWXg/5xBZ+fdFWctS5L9PNlu9TnNoEfo1ShAxraayuwov
ot9V5J3lB1sr85E/lHzB89BRr6fIf4+sn+kg64G8wkqy8ZqdrVcL0K/jTXL5
K7NPT9DvfvLQig5lpgT5b5PZLgbKrhXI/4bs5fD636yHyN9Djv0c97MH84kf
dIt+77Xd99LX6DeBfGnSyvvT8X7tUnJzdfap3YeQ/y85Z7WG7E28P0T3tojx
LPXSG1iDPl+T/d6dNjqCz/v8Iuckexf5Yb7FjLtD35/9fnx3HvIuJjdXuQRu
DEefL8jtz7USGVwv9yc5wHe7QtRdzIcxd0XMmrTvqcv2Ia8NOeGfm1c9+tf2
I8dWVSgcxvXx2shGE9X+5GL+C0feEzGV68SJClcwH6zJKwxnjdl3Dvl9ybpF
7bmX7iH/ZbJbsO0rzyPoUzNRxNz3mNr9PRV9WpA3Ps3L8k5Bfi+yhdqMyQv3
I/8Fso7k8h81rBd+HrkjcvrqeVgv9kySiFnNNrpxAdcbspUcWSjo2NeB+XCO
XBKw6IuukvR6hLnkO3o3IpwGSa0qIt/umNyciP0gxvO+iCkz97zhjPUgiCSb
nJSEr8X1yzwiOw06kbAD85MzmCdi7sZw6mswPpIIsmTuZ5l1yKedTc71Ldh6
vwt5G8kxh/O/JN5EXuVkWi+pzJ86zAeeGTk7UsUysxp9ZpAL5C1X38P4+Xwg
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
pvPc+sfL2Zbo9xpZpzt+7Wu8zisme3UtHpJuivxt5ICHZosU8LrqKJaYCWp2
TCp2Qr+XyeGqsi+0CtDvU3LboG5JEhv5JeQmPz3WdOzHLM0pdD2vLowq2ob8
FuQ5C4wt9NGnJI/s9HvV1hwN9PuN3DnclfvEBvmHm5CtrZ9th0MYskHciwk7
8HneVnIgt1vbCn35DJ0qZhpcT/mwxyHvPPKe2FHaD9GPwJNcrLE7yGAm8p4h
N9p6G1/E/OUONqX5whVO3YPr4c8mhxnt7t+I+S7ZQM5xqVhwG9+nzSXn6t9f
vwq/Z59NLqpKN6/G+hKaTRMzZlYSr+uY36rryYZ/LALTrTAfTpID0rZ/Xt+b
P4P87O/pXyrzkP8D+dopZ5sEzA8WZ7qYmdc5/CTPF30eIwvHPJ3YjPsrN5X8
yzzrTh32W34d+ZZJgtMP7LcShRliJrs+3HncSPR5hCz/7GqIqiL6TCb7Tbg8
NOWfdP0Ja8gPJstO+zcM+eXNaP9UG24tbJe+zmaR+zybNJILC5LIrYvs7Eu+
SS3zjszxHb0kFuuZ1Xcm3Y+fidOuKyH/ZLJxys43kU3S17kryXtzd9ZZf5Ra
u5KcrHxyi20X9guZWWJm/4QTWYENUofokxX9X04b8Ftq3gqyhmeSSB+/Lwwm
hw5L1HeRSO3TTY4zydiVWyF1zITZdN7VNTg4XQHzYxm5eXbWvieDMT+CyPGh
cmU7niJ/AlmkXqiXXiI1X2cOrY8nFgd/50stWUq+d1HuBzsb+feQ340Mdf8q
Qv4b5J7oGaaWNcj/ivyydOXbxlrsd4vn0v1j8pMwm9fo158c4jxl7YUHyB9D
Ppo4Nm7PZ+R/Tq6R5Gm2vUD/7eSG9fpORXlSc3bOEzO8rdfFRcjHvUp+efK1
qtd95C8it3mKp+ihb8l3su3I7vLos8g/cj6tD50ZZ28Wod9L5PcsgYt3Lvot
IE/ddkluBx/5W8mBi2/9Mk9D3gVsep5pdTTLPIf5kEcOcDtyxP0m+mwmz0ly
Eaq8RF51hs4Ly9WbOjA+XDb5VNjUiw7Ix99CFl2yc+sL238lO7Gjmqy60ecQ
czFT3bKxdPJ75J1LVm6r2F2E+SncRK7cOMJkaRXyRpKfboqJa9LHelNdQM+7
vzakvR+E+TCLbLX52TG5N8i/geyuH9PG6o/1GEEuOXn3x/1m5M8ii83Ovx7V
hj5nWJD9HfLtsf9ru5MrfUcf9MX77U+Qg8SuLm2YTyHp5B4mrWYLxou91lLM
vP1TlPAA89/nKNnpaKJh4VeMfwo5M2tMdl/cTwW15CsfH0xPwvzgHrYSM9Pz
xw6Mx3rm88hzFKxzO3qQr5qce/pL01wt5JOzpvPznx+7GsdgPzMma0azbv3F
/ixMJOuwJxhfwH6iWkXmmhpe99qH/Ux2oZjxDvucuAb3Px9DcuVOnW8O+L4Y
J3Jd1AVTF5xPOP/IzlqP2pPxfMydZEPzJ7Rrjj+eT/kO5L5dCuXbcV6V7CPr
TDtybNAc7F9d5OLm8wPicF7l6S0SM0vMowfWzUVee3JjlGprC/Zb1b3kWs2+
DSrY79jx5CF9P68Lx34iGG9L66MzpujlB4z3UrLlkWu2t3Qw3gHkxNV3bXr3
N04suTZwZ+q2T+j7JTm4hPHdhO/Xtl1M+3+qpt/uRoz3LrLTsOMnqg2QP5rc
Ppm9ucUQ+Z+RvSLF2Xr4PeEPslHzwR0laujvyhJ6Xri/ePKM3v22kFx/3LTL
owB5v5M7z6st7CnF+tJaKmZiHLsVDbHf8C+Sz1q2c8NyMP755PQauT/+yKfd
Qg5MW7qlAJ+317Cj9XH91bLtcIg5eXDx508B2A9Vn5AP93licL4Y81VMbj/u
s3/8DczXYfZ0vtzBigsMxnydT1787e/NO1uRfzNZL16otnUL+vxCdmupqvV2
Rp9qy+g8+LBcP5SD/HPIo7VcQuUckH8jObV8RMTiAOQ/TRbalh5vmIv1r7Jc
zCgNe9nYZYn1P5NssVFX5fxq5PcgGyo6Gr81Q/5T5IFe1zpemyN/Jrnwi0Sc
Yot+ZziIGd+oV+uLpqHfdeSXFbfzWvWQ/zh5b1kph6a8NH8aWa3HWt3B8Nv8
/wEJ7jbS
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0.6522206668255738}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0.6830118741559631, 
      1.29883602076375}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0.6522206668255738}, 
     BaseStyle -> {FontSize -> 20}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0.6830118741559631, 
      1.29883602076375}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"IYE\"", "\"DDG\"", "\"IYE & DDG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6678461022283344`*^9, 3.667846139497766*^9}, 
   3.6678464769698286`*^9, 3.6678465152740993`*^9, {3.667846764872697*^9, 
   3.6678468054650745`*^9}, 3.667846863653308*^9, 3.667846940058202*^9, 
   3.667847047074705*^9, {3.667847163057259*^9, 3.667847179850812*^9}, 
   3.667847235483157*^9, 3.6678491919843855`*^9, 3.667852098617084*^9, 
   3.6678531826297216`*^9, {3.6678533126989336`*^9, 3.6678533263492355`*^9}, 
   3.667853363049285*^9, 3.667853477657905*^9, 3.6678535215967693`*^9, 
   3.6678535928882294`*^9, 3.667853674532955*^9, 3.6678540880952816`*^9, 
   3.6678542071320305`*^9, {3.667854246135454*^9, 3.6678542593261414`*^9}, 
   3.6678544902958994`*^9, 3.6678548276211667`*^9, 3.667855323827012*^9, 
   3.667855429025695*^9, 3.6678565776839647`*^9, 3.667856609259245*^9, 
   3.667856842203129*^9, 3.6678570429309707`*^9, 3.667935983026452*^9, 
   3.667936037542777*^9, 3.66793708247532*^9, 3.6679375444453373`*^9, 
   3.667939071817354*^9, 3.6679899966262302`*^9, 3.6679906484349675`*^9, 
   3.667990687285232*^9, 3.667991001612897*^9, 3.667991041368252*^9, 
   3.667991094560013*^9, 3.6679913399594393`*^9, 3.6679915933537083`*^9, {
   3.6679916744163084`*^9, 3.667991681370572*^9}, 3.667991727448231*^9, 
   3.667992289246281*^9, {3.667992351592111*^9, 3.667992376553158*^9}, 
   3.6679927186666965`*^9, 3.6679927759086905`*^9, 3.6679929406300454`*^9, 
   3.6679929986203775`*^9, 3.6679932326996365`*^9, 3.667994567599383*^9, 
   3.6679950479038796`*^9, 3.6679951828715906`*^9, 3.667995762856764*^9, 
   3.667995808136899*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
b8cgJQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
jdnULKB+L8LOMVPO5SdT/go4N1o9bwOdv/z/4F0cicDj3/k99gHWe2iZaE85
9ZsIL+rz/HIc9cV7DFt973uciaf8XbCvUoh8v3/n9fwy7J+cl95X6TwNfAjb
rJlzfSntx8J2uG76pRWV9P5q1R/i+RW+iN9J+6niPPjZ/PX399N+arkdlj+1
2UqZ9u9KCbw9b8qdcTT/nJHlIqZDekXfXurXyAZWm771XjXtL7xt8AEV6454
W8p7FlY696o82Jz6HP4I+2vbqgnBtJ9wrWBBNfeKeBbl3wKfapui5E+vJzwF
u3ErairofKgtgh2DNkqe0/2Cb/EYz6Oqy+W4YOrTA56Zlbes+TTlvQPnLt2k
tyuL8jbDTc+Panjep/nf8ATnd9orO7tU6jMCrm7f/9ntEeVrgJ/L7YhOj6J8
g59if5h7oVr93/N0At74af1VFbJlPqyRWTHiHs0fvw6WGSflKqDzVaBQIWKC
OGEbo2h9V06F61PWeSQGUn85sBzjdzSB+oqogef7JC+x+ne+DajE+TZxRqch
7S+SybC2VKpnHO1/mm7w+7MLBzW7UF8yz0RM3JDeRa9pvhSN4bf1snYn6T5g
uQIWeRv32tJ5wj8Ez3x5WM2zL/UnXYX77UmpkmEd39j+DGHZtD89D/pT3mWw
4hhnjmInOx4RDEsmqLdK/WJdlA7fkX7Xo1HNmjvhOaw34XGxkHXgYphvs2mS
8m3WwgBYtXPlBP9U1rWXYY3Pm+5pFbNWrIalohQzT7xmLXCuFjGHp7g/Uyxl
XbkP5uB+PqSeNecS3KqvuN3iE+V/Bp/ZdqajXxdr3k940wDHzZpq1F/yC3ye
4hk6/NSh+X8KL3tlO/XjOJr/bvhWvbdBHJ0PwjEv8fmRORDE0aM+L8DJ+7Q2
/KTzjv8IfjmkoKRsBc1/J/yntl2pjc7fytGvML8a/bt/0fnPmQ83Hwhf/+8+
GVH26u/nzY8VN+j8KGqDu89Vf/pO8ykZ9Rrv16vP20l0/mjOhfeZSN20+/d8
ecODAtWNttF5Ufsdzl1UPKrk33pQe4PXj9DRMKf1ZmkNz3uw6qwWnW98L1h7
8OfzuaqU/wz8MqP2u3A4PU+qb0XM10QL1z6GtB4YuKcyOUzHnvJvhm3rJXNO
GlD+GHjtozVm6vR+JIXweP2BRufpfAuc/Q73rUu68adsqN9NsGbdrJW8f/mj
4GZtxwM//93PbsNzx8fY5uyi/E1wgcLj0iH0PFe6v8f+0riuoo4+/3Ei4GyN
vT99Sih/AXyiY1Xb2A+Uvx6uigiPihFT/kEfcP8uPzn2eTX1exz2kpP/eoXu
x9w8WEr6u3dpDuX/BC+5sPP5hyrKL/8R+y9PvXQBnY+1U+BMzy9eH+j+zM+G
jzWE6Zyjz5uCj3DX3lEOW79TftkafH64JffGWo39vM6ZDOfPlPZ0NaXP8+/g
JgenUY629Hm+Xy3uS2fsrgyaQ99HGMFD3Tba+XLp+whXuCxkZqr6fNaBB2G3
OcOMjk5nrdj3E+5/2y+oTbJkbWkAPyvbN+iNPWv+UtgjNcHbeSF9fxIEd22v
M5KxZl2Z9v/jPP06EfPh11p73gr6PmUR7Jyg4v7FjfLvh2uuJ40d40v5U+FV
oe1qm+dS/uewscgguYH+vtDpM9ZzluvchGX0fYoffLS5ua5nLeVPga8uuaS7
cz3lr4Qj89of7pxJ+XvgxKmRfeTNqM+99bi/m03zM57B2igJrnfJmBozhfI/
gUWi8I82rpT/B1wwwjsgcxHl12rAeSkwOPXVkfosh0tWXG/YupTydsDvbbZz
RPT+azUacZ9rdk+K3kl57eCPMUfMNztTnw/gxdELbxzeQn22wlY93sXVuyjv
qCYRs3fTD4+NPpTXFhZMuPdmaRTl5cMy7+dzliZTn9/gL6VXFaMuUZ8jmkXM
yfjnCaMTaT3MgecbhfVvEVL+rbDCnEuFPsWU/zScmPGkMaee+lT5gudtMdfP
uIf6tITPTMl6bdxN+T1hj8ItkTuGtrL5T8KNMhfOa+qx5hTC1UO6tvYuYh0x
SyRiJp81SwtyZ120ET7s6P00U4a1JBLeJFeiqT6GteYtOD5DOTxVmzW3Ef64
YYJcsA7r2vVifN44t/z7BgPWiuFwfJPY1dKYteUNuK1+yHUe5eF/hhPd1uU+
nsna6FiLiNmgFBPVMYI1LxfOf3dcNW4Y5a2FBSNeDZM1orxyX0VMukB3anZf
ymsKd1dOGreK+grMguOvtMda9GfHhR/gFz9Vt5u103ro/w37ZfzeERYmlNcE
FlwbJRjXSn2vhJ+6Lh8d1If6fAsX7rT4biJNffb7LmLuGTQFfqY+jCbBjaKh
1RazKf9y+P3HqB49hvIfgCcHjDMNH019SknQH18wSFuV+pwI75Y/fWj1ANaB
S+B9GT8mOUloPQTCzp1XOhbS+q29AnfpnNwbsI3Wg14rPv9KZLKaU2k9uMDa
Z0cPS6LnodIf9qhY86w/Pa+cVLh8hk7JHztaz1WwzgHvyXIH6fnitomYNzEz
l3UcovXsC/t1/MrW3Uzr+SL8+8bzbRf9aD1XwFZPRr9wdaf+/4NXdIyQnN1H
z9uedpxfXyM7toZQv4nwqY/jXRfS88B/DJ+ceMREKo3yd8GzV219rJRO+TU7
RMyRSP95KqfoeTsP55qO6gi6TvvDQ3jhxvMX/zyk/O3wppAv9xzIEvVOEeN/
wymmh6w5D0689aNpbC31KYHD/OKfG1yhvCO7RMxmH3dPvTzKawOPWpH+VhJA
ebfBL23nfFkbS31+gw9zOBUjeNTn8B/4/Da7bO0W2v95VrBXYZBcBu2vEVvg
mnl1EXeo/6JTsHXM5YIfKtTnsG7Mj8L9XwMMqE8LOMVt4/w7TrQePOCIE7M4
pxjKHw3zo9/XJhtS/juwfR8jgz0Tqc+Z/+Hz3udk2W3/0fm2AX7R9/SzoXV0
PkfCSn1jd1xupvP5JqywwpX7ls5PXgPc/OEm15G+X5as68F5NS4ubV8Rnc8n
YJmJtvZqdB/g5sP7djrcOSNL53MdnOkyd8CNdrpvKvwUMak7tmR5tLK2PArn
Dm5dWkHj/BzYdWnKk0fZdN+sgR2uNJROekv3zQG/cB793v2tzojum6aw8g2z
/fIydB/OhDOWL4i4mfqV7fc9HOJ/Y+aOcNYSmV7cl/f9Dlt3hrWmMZxxOuZQ
WQFr7gp465GKfVFPWde+gUsjB6kU1rBWlP4tYg4NiR04zJTyG8Infvq7Vbew
4/xlsN7e8Up1OpQ/GJbjKtucVaf7cJ8/IiZ4VLrc3cfsz/MmwBkF/Qo3DqX8
i+GnA/uPqKKfLwqAi/d5tUUMZC25DBdeEpqXLKT7vC5HzKSWxOZlKlC/znD6
ixZhTx7l3wf7vmtSShNT/ktwU+WD2+1qlP8ZHCiWBC5won4X9hEz3b+ef99J
+Tm+8GaXHt3qSZQ/GU51tZqgPYju809h767CvOLX7N+P6IbXDeixiOyifndL
iRkHfQFv3Sfq9wIsK6cUs/4z68BHcOod7SLVbtbCTnje3vpz9dr0eWR0XzET
ahoeYLuc1sc5+Fg/FX+XqdRvGbzopZeyWTv7+5VtsK+nXK1bKWujudJi5u53
+cRrb1vYPu/DUdZ+5qo1rCXf4YuhAUYK31hrqvUTM3URt2OfylBea9hTb7Hz
oi52PNAL1lCZyL30jrXiV/jEINXFkijWlqoyYkbnWMX96jOs+QzsuTkmYdUh
1oLN8LiLQ939g1lXxsAl9wWBfkdY85T7ixmrqcct74ewjpgNZ/bd9bL3AOXf
BE91CmqVX0X5o+BpXe6jtD0p/214SVznvY+BrIUzZMXMmXS95FV7Wde6w4uu
9VPXPkr5I+CWyyUNA3dR3np4g78xL57MWTdAzOwfeP2YNdnoOBxUP2uxxVbK
mwfnqdW1xKymfPJyYua1jHHrUHfW3DBYtL6vHncs9ZcNq9kdiH48kvJ9hFO3
Lr0ZNYLyycqLGfsNMZUmWpRvMtzhm+TaQeOC6/CxA/VOl+Wov3dwT+q44Y8G
UV4ZBTHzfvLo2VwaNzKC01ut59krUl5X+Efs0dmlnWK2r74DxUz5bWUd+XbW
XANYaZnN83hy4FJ4wnRVv/5drIVBcIjmgiMmrawtOYPEjMn0iM4R3az5+nDA
+VmeZT9YCxbBM3Nbe1dVsa7cD//+PTbNvpI15zKcsCCFf7yIdYTOYDEzMqco
NZnGi5zgun3TQgTfWEv84F+bN2vy3lD+FHjcu1kVaY2UvxLWP+k8vI5c66go
Zp4wp95dr2OtuBeOepei70O2TIKH3Pnz8PkLyv8ErvrQsqScXk/wA04aEN37
kPrnCYaIGYUhJhZxmrQ+y2HtPNeqGT8pbwcsF5h0YpKY8mooiZlsf8/LGbXU
ZwL8OnaYRuxL6vMBLLS7mWf2jvK2wgM9qq5+pvyKo4aKmb378/Y9KaG8trBn
mlih5Bb1WQJbNjuuL7pKfX6H+Zu+nY/OYW00Qhnz6WR16EoWa94cePG12yvT
r1DfW+GW4T41adHUZwts+Dnv+Ndw6lNlGNa/otvrilDKbwl3LzkY2XCI8nvC
jeXKN+vJtSfh6UYDb288SH0OVcH8ZctbvAikPmfB5n+CO9NpvHIjPNQm0P7O
YcofBa+/3KT8y4fy34I9b+3PN91H/U5Xxf6zIVL6rS/1ux7Oz/V0G72d8ofD
t2pW5KzZS/lvwIEKDuLt5MDPcO3hkBWP6ecV1w4XMzWmu3IGUD7LY/AYV6kX
OfT6/FxYvk7zyfXdlL8W/maTPGe+H/V5ZISYMfvdGCs4QX1mwa/0Dz0rOEl5
P8C/S2d75ARQ3v5q2G/FdQrb4yivCZx7M+z4IgH1KYRnhjmHi6n/2rdwjkLa
gD80f4r9RmL/+NpZb95AeSfBexKT7XQ/UN7lcJpbdtZYWi+c1/CmR3uCRj6l
PqVGiRm//zbc8s6g/BPhUYac0IV3KP8SOFTi3DDl3/MXCNuEa9Qn0Hrj/oFz
bnRp7M6jPvXUxYyWnqejQTnld4HnyZ1M+O8T5feH5Za/OR3zlvKnwmO/n3Ge
U0N9jtfA68n/NOp8TeuBCzObnv7Ynkn5/eDbUuPs5qZT/otwgll9dPdxyl8B
cwx2zJ4npH4dRmO+tTxkYqlvzT3w3YAzuWlHKX8irBkp9vCk9Rf4GM6fYnsn
Jpjyd8FKSp6fHtJ8Wu7UFDOKa2cw+2j988/Db4Qe3k82U/6HcIDifqmDXpS/
HRY2ho7XD6L8Glo4b2Z4FFTtoT5L4Rd1nuNTnCmvBDap/zo+gUt5R45BX5sH
cm4uoLw2cOwIlSTOPOrzHnxti3l2gx31+Q1e9uzBdKuFlHf4WDEjWTXxv0lz
KK8VzM+acnu3EeXdAvsECydOmEp9iuGq+oB1Xwypz2HaYmZQsYvjHvr5CAs4
ZabGhANWlN8DTrcwKc40p/zR8G1ZI6s4XepTaRzOW4/Oq8XjqM+ZsPL8utnh
BpR/A6z/tb8vX5/yR8JRKXNTwuj3LW/CXWHDleeNoD7Nx4uZ4NWPpwyhcc56
eFN7XYgv2egErP5DLPLSpPz58BZdscnLoZS/DvZ6dsPt1zDqd40O7gtc5yaX
/tTvUTgrffLpAzKUPwfm/CgPmCZN+Wtgk3bbUo0+1GeorphpS4m2nEIWZMKW
4+dGe/WK2Lzv4bJtUQZe3aw5/fWwv6gbe+Z3sDYyhmUbGnqVaLzoGtytmP15
j4S15A3srHD4iXMba01pfTHzPMnKb2MTa64hrNO9SH9cC+vAZXDOhKiKODFr
xVfwqFn2zQ5drC37TMB+M6nPTX4na/4EWJpTtXEJvb5gMXzuA9O29CflD4DH
+S2TKqG+eL/hev/XWr8nUp+6E7Eflo75dfYb5XeGrw8fGzjqLeXfB19xmX/B
5iPlvwSPvperUkavJxxngPHewP2/1Wg9LIQHSO7e1aX1ougLO7vdiuTT+rRM
hqXyj0sV0nzxn8L9RgQ0zqY8HAdDPC+pxze1V1O/u+Gc/zTPx7xkzbsADwlW
6xOexTriESxdVGaoV0r5O+FFCR8azZ5Qvz6TsF+vnBDeXUb9noMHrqjwr6ig
/GXw4CHSxYlSlL8NFjq9/TJ2JuVXN8L5462V6ELnsSAO/sq9oHXan+5r92HN
hsKkSa10X5PAu3c/NQyXovuamjHuV68OPrpM649nDa+yyL46Npf6vQubGgwo
ER6nfr/Cw+c/l0un9cJVNcF+cfftCddyys/AnNrInzp3Kf9m+OWT7IZ0mm++
8mS8fwf/vBgaF8yGH5eofNah56dyEzzG4ZJqRyut52g42uq7kZMirYchppjP
H+8bJpvQ/jADlplyqOviL8rrDmvbGncuOkp5I+D/lj7jXyFzC/6OH4qIXVjP
unbaFDw/v7zuf6P5VFwH8+/7Jlv/oPV8HE6RcPlNprQe8uDXOvHD08dQ35/g
+W4973YNp/2BNxXvN+52on0+9RkGWzEZpgl0vkRkw2uGjPQTmFH+j/BYtcN9
6mm/ksiaYX86OFHt82bq8zA8+0TTtsNy1Od1OF3n2qOUR1/Y/O9gkbV3WkIG
a0WZadgPg0rCvE+wtjSCla4UD4mJYl2ZAW83urXXMoU15w281mvMkugs1kZ9
zXGfmhCwPeYia54B7OijxAkOYR2xFPY4aPrkBlnzJVxSJTjXksCay5kuZj5c
aptQfIZ1oD6cUnf3tP011sJFcDUnNXPgUcq/HzZxvGnsdow1vxcecCRRi3eV
tUBnhpipXK9uUHaP8jvBwkUDXg2jn+fsgz8+0y1VojxGKbDiumOTJ+9lXaQ9
E+ujceGZk86sJY5wm6NKyqbplH8vbBh/4OkgS8qfBM+KWKK7x5byP4Gbixx1
e6yoX/tZYmbOtfSjk52o311wgIvo/BMHyi+A+7rLLxjsTvnL4WwNt7In0ZS/
A1YfeUu5+TT1u2O2mBHc+RI20Jr6TYBPPgu99n0x5X/wd3xz9DjxVMrfCnvX
nFjpuYDyj7IQMwtM3SNvuVG/sfDOqXM/Xl9E/ZbA555dfj5vPOX/DguONKmG
6VPeOZa4T8vu3pJoTn3ehbuXqp8IMaQ+W+C02Yxcgg7lVWHEzJQ+6l0K9P4j
LOG3fo90t+2kvJ5w4HHl7+NDqc8v8N2Imsif3dTnUCsxk6goma86jtbzLLgk
rO3D/g7KuxEePz14pvNbyhsFFzRNi3zoRPuF4hzcp/nyifOn0vkxHT4VkXju
xk3K7w6/PHtMa2gF5Q+H87cai5cZ0/58A1Zo0fa84Ef7hZk1Pm8ck36jspf2
i7Ww42ubbUVWtF8cg19oPIoI2E35c2H7/JUNo2j+LFfbiBmngjH3Br+hPo/A
2a+mv/O9TfOfBefXvQl26qH5/wCfdD/ZYdxI/YXYipm42wWZmSLqTwjv3Kb/
3YXev+QtfDj7SsLhXZSv31ycl+XPK1TpfONOglsKr071ovtX7VX4VN4V27KH
dD68hn9fCPXRp/PBUmoe9veN3T2HzOn7h4nw2NFHJSM5tJ8tga+U348VXqb9
6w+8NPhdcrw9ff7UsxMz8Wv0xu7XoO/7XOBXZ2aaXtWl70f84exrkzV86mj/
+gXf0mvfsawfff8wfj76uJSzNvYT7b9c2Oy63oUwecrrB2cuvOTNNaX99+L8
v/uF7KCI89Tf2AV4vzL7Dyzupfl2hJuic3ZbpdN5vAdetJhxNrpD6zXx7897
b5txKZ/6fgwP/20ueKBNfS6wx/1CKzFdegL1uRMeXRXw9XgG5T8P3xJE5ZTT
fUP4EF7xYG7VD7pf1bbDKd3nWlvm0PqMd0Af/MUb+snS+iyFQx+H/DntSnlb
4fpyfm3hIVqfIx2xvxccGKccT/N/Fq7kdUrz1Gn+78G5CoM6Wii/5jf4yOBl
AW7B9HwNX4g8k3paCvi0PnEvZ3rPrlqSsZSen2K4J8u2T8K/80AMn74gXtxf
g9brMC72Ew1Dw+KLzWx+C/i9w7u9HB7rSg+41F9bNd6aNa8ZfqkmI/nV0sT2
qeSE/vjGg46uYceLZsKax6bEKo5nLdkA77/ww4KnzVozEr41U/fzsEr294WD
nXF/zCk9a/+Jda05bK4V7GUiZq24Ht7FLXosvM7a8gTcPO9QnNUR1vx8OC63
frrXYdYcMxfsJ/4puY8iWRutgeu23Nh48DRr3lFY99voV1/vUf4c+LjH45GF
WU0W/wNI5Rpi
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.6343612754659353`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.6343612754659353`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"DIG\"", "\"DUG\"", "\"DIG & DUG\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6678461022283344`*^9, 3.667846139497766*^9}, 
   3.6678464769698286`*^9, 3.6678465152740993`*^9, {3.667846764872697*^9, 
   3.6678468054650745`*^9}, 3.667846863653308*^9, 3.667846940058202*^9, 
   3.667847047074705*^9, {3.667847163057259*^9, 3.667847179850812*^9}, 
   3.667847235483157*^9, 3.6678491919843855`*^9, 3.667852098617084*^9, 
   3.6678531826297216`*^9, {3.6678533126989336`*^9, 3.6678533263492355`*^9}, 
   3.667853363049285*^9, 3.667853477657905*^9, 3.6678535215967693`*^9, 
   3.6678535928882294`*^9, 3.667853674532955*^9, 3.6678540880952816`*^9, 
   3.6678542071320305`*^9, {3.667854246135454*^9, 3.6678542593261414`*^9}, 
   3.6678544902958994`*^9, 3.6678548276211667`*^9, 3.667855323827012*^9, 
   3.667855429025695*^9, 3.6678565776839647`*^9, 3.667856609259245*^9, 
   3.667856842203129*^9, 3.6678570429309707`*^9, 3.667935983026452*^9, 
   3.667936037542777*^9, 3.66793708247532*^9, 3.6679375444453373`*^9, 
   3.667939071817354*^9, 3.6679899966262302`*^9, 3.6679906484349675`*^9, 
   3.667990687285232*^9, 3.667991001612897*^9, 3.667991041368252*^9, 
   3.667991094560013*^9, 3.6679913399594393`*^9, 3.6679915933537083`*^9, {
   3.6679916744163084`*^9, 3.667991681370572*^9}, 3.667991727448231*^9, 
   3.667992289246281*^9, {3.667992351592111*^9, 3.667992376553158*^9}, 
   3.6679927186666965`*^9, 3.6679927759086905`*^9, 3.6679929406300454`*^9, 
   3.6679929986203775`*^9, 3.6679932326996365`*^9, 3.667994567599383*^9, 
   3.6679950479038796`*^9, 3.6679951828715906`*^9, 3.667995762856764*^9, 
   3.6679958119312153`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<iye_ddg.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<dig_dug.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6679929143603*^9, 3.6679929287370925`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<VXZ\>\"", ",", "\"\<ZIV\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlYjOv7APCxZ5+iXTX2XVNaaZm3SImMsiXLCKWEQRxbGRQhNdnJMu0l
y5BSlppKSGKQtW1Clhk0kaWUfrfn/l7Xb57zxznncz0z73u/93M/29sM9F/j
vbwji8Vqgn/9+y/8Iww5q2Twf9XO8C/JUXDVHbv8mX2J5TKwyYvihXkDiMVB
EiVzMNXu6gEOsewQWG+Jns/c3w3/rL4FZvJbhz4yIu2cj+Bm29tbu3wi7Xyd
BCUTXFmX0aJH2hVi8IuYNV2ND5B29g3w9FQT15l+xLx6cM6GAwubSr7+s7Bv
opLpKp273DOfWGIPbgk0dM2dT8zNBa/9HpMZcop8X/AGLNPdcLi/A2kX90pS
MkGjfYaviyTtMhvw1T91WfldSDxqQRL1PKJasMMbva2BWcTS7slKpkO0XcWO
aHI9xXjwwQd2H7sHE7MX0eZFJVP3l3dNUTIjZq97812bmGUBXnuXFcD//oXE
7wf2yDmwdlsSaRdEgg8LZ1dOmIHxXwLL8uL2TB5IzBmXqmRanUt+VOeR7/Pn
gVeNn5UwdQ6xaCf49TefA0WbiKXnwUdZ99L+viVWPAdXv3m76BgX8zs7TckM
7W3fGjcF87s9jbqfPAM89lmoKHoRxl8BPjhiwI+XEZj/v+Bqp7srAzyJZdvS
lUz7B+M6fhqxOhXclhU9cMFYkk/OY3Dc8YwRumrSzv8DDl4f3btiBuZ/aAb0
D/P3dLsn1sND8Ki2e+UB7Rjvb/Be+apko1cY76BzSsZ9mHFKbh/yefk0cIys
bUODGOuhDOy5LmbXgjpi8Q/w1IdrxaNbsR7MMqE+bEtySi2wHjzApDtMsZ5D
wYd4rP5R1VgP38B7ZqX8LT5MrBhwXslcWWI067Y7+Tx7CrjtWclT5iIxby34
wPPbx8OWEwvjwdHK1QXKbGKW0QUl82xBm8uUY8TcSWBXnfT4qDhiwWrwCs81
1TY7cTweB/80bK0549pI4i8CQ1KLbreSdj5zUcksutZsvTqXtItWgn+MTe3S
6zCx9Ai40SOqOCaKWFFwkboeWwk2s63zv+9MLFlxCb6/vqhh2mucHw6CLx4q
tnqmTdpZt8DL9RUmLlrEAm2pksnKLikNK8B8xoJNIq3fcUZhPq+DXc95ty+5
j/PDOyk1PkV9LlP9K7UDZ9cbxXEtsB6uga8ZnuMPzcR6qAPv+V3Y2LSZtEt6
XlEyT8/UWrk9w/q1Ble4tA7/7zrWrwCcX1dfYVaE46sGfCDdcC7PDutXK0vJ
+LTExZf/JeNFbQl+bpT++pQhjr+F4Np1c0b7leD42wM+9tlkR9whHF9driqZ
zWaXcvqcJWZzwbdWmWYkeBHz5oO7C82aC29/JvFHgIs3+xrfHE4suQiec93X
fFIXYu7YbCUT4fmoUJqgIvmdC1a43at3GkDaxTvAH/t0DrYfTyzLBK/fc6/5
TjP5vPpZNnV90awc6vvScHCPBRuezAolVqSDfc99YhneImY/BU+54rN5QjzG
3wb2eP/GzlyXWL71mpK5ObS+yDmCmJV6jWrnysEbzc3q7T+Q6wlawNP9M2si
fTH+IblKZlO3smOL3Yg5SeAxSy7M6qMi5peDc6fbs42GkvyLfoFPh3DMRilw
fhuYR82/Ck/wCfXczU/jcX5oAuc1zu7k2QPrwfQ69X2WB7hWb71p9DmMdz34
aPK7k+alxLJG8Jhb4iXVXbAejG9AvnLn1Q6OxXjdblD9xReCj3BN1lyejfk+
CR6pO2FjsAHm0/CmkkkIHXii42XSPzxXsJWvk+TGemLhKrDNJ2nIdi1iyTHw
OeHnqkaGWF4Itn/Fc5olw3rg3YL7L9o4aIOSWBwMvtk8J2xwJbHsMPisvHPq
4zKsh3zwW9PQ48u2EnM+gbuF1LNEN4mlgflQLyYb+3zphfUQB54xYW5cZi5p
Z98EpzYNto1vw/jfg+8zR87mOGE9swuUDNfet5vVVGJWLFiZM3/2eQ7mNw98
48i6n1sbiAVvwcfcO8QILhKLe8uoepDZyqj4+TngPlYDI7c8JRYpZFR9S3sU
KpnvTotWmTiRdoUV2Dzo4sP3N5Qk/sXgooyLb1afIJZUg2crL/78uZFY3q1I
yTjvPZ50NpyYZQm2OVC+WPqFmLsAfN79eKx+ArFgN9hQ6/jW2GJidediJZOs
/uTk+4OYYw72yTGz7dhGzPctpq4n2gV2nN393bnOmP8L4O6SUFmoDeZ3zG0l
Iz/S/bflG/J54RzaEhG4dK0yIEiK8Z8DqzYO+jRoOPk+6xk4RbSgp8k+0i72
KVEyOqecOy+7SywLA2/3c1ZXfsL408Bf8/0eRTRi/E9K6PhbwX7hfjda+2F+
t9yhnpedcod6Ht4j8GZbzmKdXIy/GRxwMTtfYYrxD74L8+vkJQvDJZ9IfhPB
kZey3OcdIBY8ADvWMblj4ojFP+l29dR71PdFpWB5yaKCeh9i6Xfwi09h/EuR
xAqTUiUj2n/4WowfMdsdvNTfReEwjZi3DjxYHH+IVfeR5FMNvhaaezIviZhl
fB/G35GHr6LyibmTwf0eHC7Ts8d414BL2wZNVDlgvCfuU9fnGJQpGSO7Ly4u
1sR8F9qiEPCzsWFOj6aQ60uPllH3V8jAusm8cIfjxELnB7B+dRqRUMEllgSB
Xy7p9be48AOJN/+fu4xsbEol5n4Er3Qb2SUsglgWUE59Xi0up9r59eCsEZNv
6j4mFvV9CPvPnznTmHJidgzY7XJ4TvsmYl4uOCe5t3+ILrHwDXjoeTcrt47E
kl6PlEyI5faavlbEchtwZXVFklFXYkE2OLbyqU9LLLG4FrzqefxjniHG210O
69Hs+AzuIox3PDh7QcXWHp7EnEXgV9P9X8xZS6zo+phqZ1uAPfaOChr68j2J
1w98sO/Sfg3dMd5IcExD2JZABeav8xMlM7lkRHVIKeZvHHiwTD0/yxvjnQd+
bvhU3/8XxrsTnCUMT/wvHuM9D/695WuqMor0D3/0UyWzwGnwjPVG2N+zwVmn
en08NAnrdTvYwXFoyZ9MrNcM8JPmL+Gvy8n32RXgyQN7KSe+w3x6V8D+af7T
0coKzOc2cPsot142UzD+NLD76YrYgyMw/scVVH8I/oBzxUsntt8m+eAkP4P1
clte/4OhxPyH4BxW4+qJXOz/3+Cq0lFhF7JJu3TQc+r7vATwoT+5n3fkEQvL
wFVD++zbJieW/HhO9bfc7AXVv6ypL6j6E98Dxx46uep4Cebz2wsq/+oBL+F5
H/q3B4zB/p8CHqw1itE1wfpdC359JP5W7kSshwbwwZVunPwhWA9Gr6jr8SaB
s/vHH0kXYT2sBreefOq87grm+zg41vaaoPQc5lP/NdRzjL+qxgvzyYBz3EfN
Pt1Cnle8Ety+bvu3Y9oY/xHwtc9u7g9rSbu64DWVD5FTJTV+pCsqqfpUHAS7
N187tcQV479VST0v7wPYg2ncWdwb87u8Ssl07PQt3y+V3I8lBl+//a3luxMx
9zr4yP7ReZO9iAXvwCMejC4vH43x96mm2jkH/tn125O3u7A+roFHjOj7+pQb
sagOXJvw3Pxpf6yPnjVKZk2P0XHWh4gV1jVUPMKrtCU14KljpyyYc4tYrlWr
ZDrb7gjnczD+8eBOh5btN5tILKsE31jR9+uQIZjPLgq4f1ueQ6I5xssFr/0p
Cr7ngvHOV1DPI4r493nf0x5rpxKzO9XB/u/psrNpBljPY8Hrd3+3iX5RT+Kd
Cz5ufCay+1tiyQ6w4lNfPetaYnkmeGT/5VnmP4kFo97A+TV3R6qgklg8C+w1
fcyP6vfEsnBw6MMxJl8TiNXp4FunzlwwPEPMeQrm77hx9YmAWDrzrZLxLm06
aTWaWLEVXDBGe0u1JTE7FTxz6Mu0Tm7EPDl4rHis7+4JGH8LeNzLAOePnYlZ
m9/B+p49NfTu63ekHpL+2Tcw8HcBsaAcXCSQ2D85Tyz+BS40CPQRviGWDaxX
MvUXtBO/fCEW3Qeb375psPUqsbQJXHhzl1vCXWKF6XvYP394+Ta+hpjtAZaF
ThU4txFL7oJP1Z7VLmokljeCN039UTTpPTFrwAfYv5f9UM5KwHjdwMVqna5H
GYxXCPYtjHxfl/WW5PMr+I4o8onvc2KO4UclEzaHa724gJjvCpYkJZzewsL4
V4EtpDrfei/D+I+B5z4z7z2jMzFP75OSsTy1okzSj1jI+0RdXxIM/uxRoCjz
I5YfBrMnTncw2EnMKgAnju8f7HSEWOyoVDLatUHmHoHEskDwvZDKzM+RGH8c
+Gvc7ztjh2H8N8GicVUfIkwx/ve0FctUSmbHRt2H7z++IfmNBev6WT47m0nM
ywMvXlvtOXYdsfAt+NvsFu/3VsTc6M9KZlfXqJPnwogFOWDddq97cjGxWAH+
drl6cfYMYlmPL0om3XlG1bzVxGqrL1S7KOufm/Xc9I2IpdXgyKMtAat1iBXd
viqZh8tCfp3og/FagtUle3YPkmC8C8AG42v2lPQglr8GZ+yJKrpuR8zq0qBk
9GMLDx8eivGbN1D3F/iCF+u2OC2ai/HvaqDi5XRUKxm9KVEXLf2I+WPUVD5E
c+h2qQi8wNEr2u43xn8O/LnD7pagOJJ/4chG2G8X77bpOArrwQfcp1v+tsFa
WM9h4JLD5s13hmE9p4PPrNGpidyN9fwE/Kn854QN+ji++N/oet5Cm5MCXnDC
4kS3flgPj8ANA1cearyO8TeDF5XL5rVGY343fYd8y2Z0DhqJ+U0ER07Qn3/2
Vx2J/wFtyU/w4jw9y1gHzD+nibLgbBPVv+LSJirfsu9NVL2pTX5Q/ctxBzf2
LgyJCMZ8qsH2dno9tu/AeI1/QntQ8mafSIx3MnjXueQDlf5Yv2vAgoXjh8oG
Yj18BWeMTslWmWA9GPyC/lMlJyzlYbwuv6j+FYeAHw4Yr203CeM9Cn6wSc+0
22KsB93fSmZnvtdV9yzMp/Nv6vmkQeAIr0JRL3eM/xB4omiGWuGJ8efTljg0
w3hKWnmjw0bMZwC4X7/mr451GH8cOO2X7s+fSRj/DbBOWYFWlR7pX0E9uOGV
xYVYNeZzaYuSsQ7tH35nHdZDDPjOvfzcGxKsh9wWqt5Eb8Dj3yVc7lhD2qW9
/sB5VBA813cQMW//H2r+Emb/oeZHSS14x5Pfr7M74fzWvVXJWEXlJ48vxvnN
qpVaP8RXWqn1UVYFfmPh0Xo0A9e7rm1Kpu7AmO4Bt3G9swB7ZfTteKEDrtd+
bdT6p3gF9tEet+PoD1w/Ov9VMr0LIo4WOuL8PO4vtZ4J54EtZ5nXO3lg/Dv/
UuOR26Ed8jUksWTfDczv6HYqv+LZtGXb26n8qDPaqfyJRrBUjN+FyoLQpZhf
b7DOrt2DtkzD+XkbePv7xA6DZxGz08Blk/Ys0qnH+n4MTvVp7ngnH+tjRgeV
Zj2ytoA16pWbDE5/u/LRXh+s74dg+8PNel6nMP7fYI3xx/mvo0pz/uMndKTa
RWVgjfle+gO8MHLPupNFWN9mnVSa40F4BrxoZPLysjSs73tgu2ky7ufHGP83
sMb6w53Smbq+rARcKgleWdeO9dzQmYqfY9SFel7+JLDG+Bet7kLlh/0FrDF+
ePpdqfsLGbBG/0lWgrfeubUifhTOz0fAmvuf/t1UzPsTgVtFp7GencAa+xfZ
CrDG+q4+CE4JTBo5vi+Ox1vgfmuq/vRqxXxO1FJprq+K5eCGMC+J7BnGL9ai
8/tOi6oP1tLukB911WCTa5jPA+DUS1V9j7zC/r8G1hj/sp49VIxv94IHruE4
H+wDc3v9/FsVjvPBVfDsBMn0+ftwv1MD1hgfCq2eUK/7Cpp87LFex4PnmQR9
lz7E/F0Ga4w/eSX4g2PE6ss7cX3r2kvF9Ho67ta4GBxvXPCmr9o5G8owv/PB
mw+Oy0iVEnM69abyzx8L/hh5a1a/6RjvXDD7GNfjwykcXzvACVPyxZn1OH+x
+lD9IRzVh2qXzAK/nznuiOlTjDccrLF/ZGWANfbX4uF9qeeRzQRL2iPOeRgT
q7eCe5rr3G9Lx/hTwWf9VlwzsMH45X2p51N4sVWa+2H2ZvDm14GxWltx/kqi
LSwH9/3eb07ONYz/F9h3eeIrnRM4X0m0VYwqb1p/rbu4n7wPToz9tbG3FPu/
SZvqL7WpDlX/otNgjf2n9C44padswLImrM9GHap+2QP60fOVWz+qHuW3wQ8q
mkc934z12tCPqneuYX+qXeAK1lgfxavAmvuDz2CN9Z+vp0vFI+KBdYYn6WZa
YPzButR4VxwGa8zfwn561PiSONKWB4InVlm2XQrA+A+CH3CrbVMOY/w3wWXR
skmhl3D+mqCv0tyvqJfpU/MbJxassV7y8/75//fnorfgnUaWhfoPMb/+BvT8
FW1AtQtzDKj+kSjAdulJjjc+Yz73GsLn/VembT6O+cwypOfbakMq/+puRirN
/RHHEiznF8nH5JP9n1QKfqS1V3n/O7HiNVhjv8XuYqxiMtfXxE//SNp55uBH
51Oq/7zE/aSvMfV51kuwI7voZrKCtHM7DlAx/h57/3o/JhaMATfVh5idKyUW
z/nX/iWlcVcOsUwEljfVFC9MIua3gw226q8e/oxYNNJExRgFrppyPQLj9wEb
mlktmXcd4w8zoe7PTgc/Pv4nJyYK97vDTCnL+WCnqzWXnpUQs7aCM/X/xISX
Y/wp4B979+pUXsT4H4F/bqhVrVpErJ5uBt+f9yexayYxZxMY/x6L8SeCnSVW
e1dswPgfgC+krfJz8cf4f4Iveu7zWj8F87uBo2ICeu/f11OhIPk9C67of3tB
/QNiSSnY9K31F3Ypsfw7ODpm/xXjeGKW6UAV8yxXMUPvCrHsDvhSZauRbRWx
Wg02G73m6bpDxBzjQar//b2amD8Z3Dx9/5lDt4gVxeDLg206nEglZn/9156x
OtP/JTHPYDD1faEL+HcX71yL7xhvCHh/ovWrKBUxVwUe8Ku2X7gh5lN3CDi+
teulv6Rd7DyEup4sCOy6zEZ3YATGfwjccuR2xI89xCKdoSpGut2wz4pCYqnD
UCpeRQA4cPZt4apzGH/cv/a73k2l+zH+G2D8+zzm036Yiokx/Rtea475XAae
3JRe984A44+hLcilLX4Ddu1q08uivpbkd8lwKl/8/WCXAW3jCvIw/mxw0F4f
rv8QjL92OBWfMGqEimEqit0XNmA+r4ygnl9eBd47v/XbsIFYv91GqpgnETPF
A+2wfi3Apnu8FcxFzOclcGupzyRlB8znK/BLcXRHB22sh86jqHb+ODD+voM8
j2geGH+PQcx+AV65+M37gPYaks8Oo6l24Whw9l7biCV6xJLZ4EEpRmHpPsTy
7WD8PQex4C/YtHz1/Z1NxOIRYyC+LSW1FxyIZd7glfoZrC7WxOptYPw9CeY7
bQx1P+nQsar//Z6AxKeYAW53bf9iVkTM3kKblzyWjv8hOCTNuPxeKWlnTR+n
+t/vhYi5/4Hx9y7EgoRx1P3FZeCcx8LgYgVpl/0Ar26YlTXqMDE/1FzFVHmv
Pfg0nlh0Buy+etZ+o1fE0nvmVH4V38yp+mKbcGE8P9p/J2kT1kc82CEkpXT9
H5zfSsAa7zNYavD30+Pt3duxPowsVJrne8EksMb7BnUROOkFd+GaLbjf/QI+
kcn2Lv+P7J/4+pYqzfcbIgZ8evirX4Nv4n5zpSW13xL2Hw/7xf88pYvX43nN
aTy1X5WvAH+skyx5E4j7tUPjqf2YWNtKxcyx6Gdkaob7tYlW1P5avRx87lFh
+oBOuN6Jrej5+Dq47GPSTNf7uH+ws6bWd/ZSa2q/zTtgTe1vhNesqfOPpA6s
cT7kCmxgv7YwqJv9edy/7QNrvD8UXwV/Tkn8cnIj7t9qbKj8qrVsIf91wduD
qnH/sAe8pAPfoLErni8ugycOCXmrbYHxV/5rTwnpOegzrndd7VSMcc99E1RB
uJ5wwU6t+kdtxVgPF8EmzoYttW9xfnsFXmpd+6JehPXQyZ5er8faU/OPeC44
IGj1sdctOF88B086v+bPTi+cL1gTVMyKZsXSM7E4v40CG/sUc6Zb4Xo3C2y2
Pj2vYiHOz+HgIMZoKms+zndtE6j5UTJ8IjUfymeC/1S3Bc/1xvi3gVecbpvz
KBTn59SJ1P1lQxyo8aL2AgfV2zhaOGP8m8GXV6750CLE+JPAV/pGvx49B+Mv
B2fNLZEd4OD6Mc0R7m9f99+wVbh+bHSk4hFKHKnrSe47Uuu7vMmR2s8I1jvB
825STIypwPyeBvM+rlpz3xn3Q3edqPVJ3QjG32fhfmOAM9Uf0pPg5sa0uNuJ
mN/bztT6w24A73fzfpAnx3hdedT6yCriUfnmfuZRzy/QY6C/tXy0vIMwXh5D
XV8WDG7dYbQoyhbz+Qn8PNlmZMYSzGc/F6p/pI4u1P5EEehCPR/7oAv1fkDC
dlUxy179ua8XgPmc4Eqvf8tdqfWRG+tKxSfIc6X2v2rbSVCfl1LHDpiB+fQH
B15OC3MowfijJ1H7JVHOJKo+eYsnU/0t3DuZen5JFjjaMj1lmgjrt3oylW/x
bjfYLy2xLmH1wf6WulH7L/VrN2r8cbpMUTFR9/cOWxqN85k5WOP9uOLCFOq8
xX4J3r2Tz+tQhPNBR3fqfCMc406dhyRz3KnzoqDdnTpvi0d6UOdRmY8HdR5V
h3lQ75NErR70+5FhU6nzn4I/lVqf2FunUucbXgrY4V7Ucxc9PL8N9qTmO5aX
J3U97iZPar4WJII13peLH3hS50mO5zTq+fgbplHvV0RnwRrvP6WlYI2/lym+
gzX+niQ5NR3O45unsUSf8P3pnenU9VmN06n3G1xjL+q8LjvhReVPXexFrS+c
r17U+sw3mEGtZyKXGfR5vnAGdT7lqWZQ9SLU5VPrpcSZT52v5EF86nwm+Min
6kmsM5PaP8gcaKsDZlLnR07cTOo8JO3rDeO9IZVJHoPnN3vw+U4zV2iH4fhf
5k3Nh7wYb2o8CHPBl2wVw7v+wvnL1oc6L3GX+FDjVbAf/OuWwZNHIzD+bDD+
PrbO+f8A9wEl7w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
p/kfZBY8yQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
OcdhFdep73bS/cJ7AofyqyKOB1D+X3DLLcXyn1Rvsck9nJ/wSK0pjUfcY/Dt
XZmShQeovqXwIM3lOy8ep/ytcOvJ7g1hNF7Kp92XMglvDyzZReOf8AE89+ge
f61zVM9vsGNuQmgmfb7R8IGUufHItrcJjY+cKfDhMJW28fT85YXD4lf5nTfK
qJ5yWBCkUfSsjurZ/6GUMfb7beLVNX+bBK/JPN+SJaa8YbDaC16vTZRftB+u
D/iaM5DyGes/wv1h7/ROg8ZvviNcM6Nw4MBMyr8CPixZ8zKa5tc5aXDjnLDN
cnp+NxbBRpsqbPs+p3pOLMV87ug9rSCaf4sDYdOn4jZhD3Z+r3AD3qH7zKtB
nTX3Pax/Nt3rJB0v8n+M+UXasUv9aP4tF8Ej/5pf66TP89/A4V9uOjqpsBZq
luF5rcMv+dGNNScJ3nzqkMvr3qx5efADq/zpvkNYC5pgpZXufifMab3R84mU
sWy0W5NkyFoyCo5/5133zZK1zxXYyDoiJaY7a1EDvHdOX1VRf8rbXSJltFzv
JhzWZy0fDt+z8DWI5LA2XgSb5G2+ZE/fb1QpR78lzu6oonwcWzj+ilhQOYjy
zoctP4TMX21EeePhqxu9wx+9o+utVCFl5lSH9dEic61hi0stWa5qlNcL/pCo
1FOB5teiTfDXh9fK9Nvo/sqGp4Zm9Pmyl663VaWUWWt4U+84jSfCuXC+ptU1
hsbvnFi4VaemxpTGh8Ys2HbqrXxF+jynCi4ZceTHI+pfsXsV+tPmYZwBrS8k
0XDeaxXH9zLKf7Lq3/29vf2OnPKXw2ckr3e40vrPpx3undqr5Zkq1S+zWspM
nt64P5/qyy+Dz/x5cUq7gfL+hJ/wz64PpP7IGfQU9XPacTSW+oN3FA7RY+Zo
alI9H8HrtjuLNXvS9f8BL+qzPV/SSXkHPMN4VXul6lFX3mmwRqztJmuaf4vu
w25NJTkvaf5b9BUunamj97KJ+tXgOeanMXot16n+xpNhyZhVSxwbqd4r4ehF
oQs1aqien+HdgbVPmHKqZ78XGI/Hzqwxovk0zxkWvLfJS6f1hCAU1tdZMlNO
803xPtjcMd8oOJHqqVeD9USqhmEwrX98GDjdspWf2Ez5g+E+8Qt9P72m/Klw
cszpR78+UP6bcE99y0Qzyid0eIl+O9lx0YjqnRMADyrvHn+rnvInwzXVdu2r
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
X7PlkZR3AqxWnNpp70R5l8PPygTJdqaUNxmekPEiotyN7jeOk4z5+zFeFHyQ
xgt7WBSVEL7/PY0XfvCD4S9szYMp/y448tvD+xodVO9r8KBlWBdso/tttLOM
CQqNiqk+zdrYF9Zxd8qZ3I3yJ8Iq43bMVhlO+a/CzVb69uOH0P21eBLmb3cq
muv5VM8EeEDIENMKGm/Fl+CboSu/F0+n618Huwy5vq8XjSeiLS4yZgo3gb/g
Go0HObDzsO/DU+l85DUwd++c2m6PKZ/yZIxPic3t3x1Z821g6bjaO1Gf2fG4
8Syc7dkutyxjzXkOW1colqpyaTxTnIJ+Njjtrh/JHhcMhbNH81e8v8Ja7AEn
iic+fmvD2qcTtrDcOuhgb9Yii6lY3+4OmmEsl7F5Z8PTL679Y6/IHpfHwBrX
1YN6+LAW/oG1OyfIlcxZ55hNw3yfe/lmuy/l5cNpkZbxVUMp73rYcmzgTsdg
1rzjcMFKfZveKawlJq4YT2TnY40vsFaYAft3e7rmmTtrbiSslHt+huV8yn8M
NpM6jMlxofyl8M/ctDGZqqyNXd1kzO98q7nBz9nz4a+GZbH6Wr1vsxYegbWn
rXu0PI91zgN47dN3dZ3RrBu/wQErPLb8FLIWp0/H/NHLW7n1LGtJCbzAJrGs
tI61whfYcp72W5VnrLn9Z8gYx8KxUQ7vqZ774QCripByY6rnHbgiKMVvaRN7
3PgTrOLUWHz6F+XVn4nxfqFP3XFTqrcjPIrRdC6k8+PcgpuPn8gq+Ml+nieD
lfwuTcx1o+uvy8f8bk3V5m7UD+KJ8PT05D5hmVTvQLj4+9HWt4lUz/dw8q1C
9Q66HiLtWZjvCb0Nl/JZF42HFbl/KxuWUH5/2GvQAFHzdqr3btj88WoVywfU
D5ruWM9+H6E9uY76YSzsNkd2wO4G5V8Gq8fvXtryifohyf3f/LNZYtVO+fPg
yGVlDqW96P4fPRvjQaByn0gzeh4vgX0am9TvDKf7fwecbGnpvp3uF9EV2GPb
tcWfq1sm/g+RaPHC
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.65123144002524}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.65123144002524}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"VXZ\"", "\"ZIV\"", "\"VXZ & ZIV\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667992292857834*^9, 3.667992727935062*^9, 
  3.667992780896806*^9, 3.6679930085594435`*^9, 3.667993237546131*^9, 
  3.667994571351944*^9, 3.667995054302185*^9, 3.667995187944273*^9, 
  3.6679957709169693`*^9, 3.667995816208765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<SPHD\>\"", ",", "\"\<BTAL\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.667991734244121*^9, 3.6679917395716925`*^9}, {
  3.667995156778397*^9, 3.667995177356733*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Bsy7E3zETOdxFJ5/VePBKfrPS+fg+4jTA3D0wu1327fg/mBixPPzVB+wEaMu
a5M9znMc2H7d09Q1jjgP98E6gp88o/F9gPEZzF5SdttoM/ZJX84hXlRrn/+D
fw/9LDi1RPMyF/+e+BJwj63/taH1mL8TvOqBEYNlgvlFjWEeiizvZuN+GX4a
bOk7s1oO92/mnf9fbzxQFYPrqasN7BXb+awOn0dUYRMOcUpuZCxfD+dZDyzR
e6v34AJ8XtwGHwlNaLExxnluATN+iTU34zzpCayA/TxCr15+GudBB/yiRbfv
kRXOsxu4u/iZejIdnx/N4Ocqv3Jj9uA8U1ZyCCUzFfdOP5xnLXBi4fbQuJ04
zy7gNfUG96QrcZ5Pgn90Lg02ysHn3ST4CfdQTm8mPu8WmsL8TM58Mn0e828A
j/lINHXkYv5QsOih36NW1zB/Dtg9LJnq9R+uN3UzOI8csKKz7uB53tGM5/ep
BpvxfL9TFjg9tj7dKRHzvwJv6eKUROB5hLrWHH5f7IfCZFzvtCDwWGjff0t1
MD8DLNKUEeBlj/nrwJkKE7KS+Dxmjfz/84fzp9Lw/Ew/ZAHz7SEoXWuG/aaB
f2V9/xaK7x9Vz8F1LXEXhHE/4A6CxXfuDc4+hvmVLOF5MtysxIjEfq/wuqsa
nCV2yHwUTf0JlhX4UmcfhXmtabC/GlMvPbuAfT4FC6X+ujEcjX1+Bxd5b+Qs
x77psgSHOB/l4SjmhXlp4KGX3brheN6r2gNusxPzSjuNffaD//yKcF5/HPuU
tuIQLnVhnz1x/2Oagxd2mdSWumNeX3D+tObVubhfUhPB7XHD54zxfYVBtYbz
kNFrl2Z832OtBHdelO4oc8X8O8Fr65Xdj9/D/BfAH/zb8qoxD70crLG/K8nD
EPs0XsUh5uwSOT9jPfbpDc64+m0i8N88xIJdFdLYul2Y/x44kF/u2cd2vP/b
VsP7uV9zpU4b9nkGrMhMsosTHiPzFoPPfCw+cfoH5u0A6/XciGCVY38xNjz5
qpjg+209wSEPMV8reFGy5qBiPOYTsoXnj+4sjduLMN9SMN+DTOGNM7C/W+Bo
huBnPjXs7yPY6Fj55fy5mJffjkM803IW4TbjfrYEvIFucNAF38cZm8DNW4sl
7+L5jj4NnqoK238Wz8/xi+3h+Ti9vmPPedy/nMGrWyOv2+H5lnsCvOez3QNv
3G/C/4Lf9XuMP8fzI1PTgUME21UumqWBeZ3ALVvl1/zC5zM1BBxDSdFRwPVG
ywbv+th26XQS9rdgDayH7YMzswrxfjuCs76+bUvH+dE7Bv4abhHhXob3OxPc
HLB9eQIb+24AG0U+2BzSjH2uWQvzPWgtGJeKfR4B2w+l9fP/27+ug8P03iZp
4f/fwHwJfmRR/4HA81DXMDjZokHKZRf2d20dh5j8sjSWXo15a8HUI93ilark
PFAGwfnCXypyaaT1FB3h/JZdmpgxm3TVZbDoDtPL3V6kuc/AfTXyy74aklYd
AGdXB8rOdybtJL+eQ6iLTdp5M0iHW4GDlWyi6k+Spj4BO91Z2Hb/MGkaBxxy
2a07upN04BwnmM/2mhXvhMfJ/JZgf8EXKtcI0qzd4I99xpHs3aTpfeCLWb3L
6Tmk46U28FyvMgMHOb6v2BtBmrsLPBHjzv6aRFo1Aaw1fNDq6UfSzFkbOYS2
WYx+QwfprhVg+62XzCRvkqbuAB+kbYu6NECadh6sU34pPsZ8gsxfBl4SGMUI
NSFNMXbmua63Hey/tEzq4RLS9HPgqwUndAomMH8puHmR+bj39Ljl/wAmtAn1

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Q2Y+bzufrO2sybv2L5+3/U5+LY7an3WOz6s2C7MLoYvqxnqlcV4teVhoRlj3
VM4bSa7pmtkq6x7njSWrSye5ed3i87aNe9D9vrvz/leRz9v2Is/M+7nkz87v
pfs9m3xpcIWskvqSdXvJQdcnpYbc4Pw3yRtVG4Z8KS9dV/UItwsG//yvxeMk
a2eS3y/pN7zlaMmG3eTRQQ1qJkyRbE4nO1XSVi+Olmz9QPbwNtVI7C7ZtKMn
1W/d7pQNds57hRzv5Jv2LYHzvu8J309dr5dduLpVvBv8nuu5jZzvNP119dNc
z4vkXa69/6n2ic8HF5K3PNGEWEv4/tfuTXl3+9apVo7zBvSG+ijPk+MjG6Vs
vMz1tJMT097EZW/j+19DaxeGJFWrHTaJ739X8jD7k3JbNZx/PHnR7ZF1fjXl
9pBH7rvJvv6XG9fTLYLmi0fnD6+5mPN3IW+Z6++sXsj5x5DHph2am76c86/7
zw83+iR7cHuo0scuFEd7igu8uT10Ilf5cCx+8xzOP4qc32Cw6cefnD+aXGfU
8ie1wjh/KvnhyN5JPztyfTv0tQvzdvR/dqMF13cE+Ur/Y6FR9Tn/qr7wfBiP
k1vmL16TM93R9f8TPMuH
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zntB+QXwCt/PToGXKX8qHPEscXUEzUuAbifmZ4HvTQ+aF+Fi+FUNvzTyJOUP
+X9zUmAuN1nVm/4+yK2AexJ+ZpXT3wPzeV9EjPRkjc3LblC/wXCTb5GmYQbl
T4blfCZ8jb9D+Z/DDkPVMsT5lL8Xzm382jz/PvUb1CVihm0KqTtH19s6Efad
tzinvYryP4Wb912RnUfzIvwGb58b7jGL5rdMs1vEjB4wUT6C+uCfg6O7nxQk
0rzGFMH7Htg93F5I+bvgFdlL6g0fU36NryJGx6ru1Xf6ec3ZcFzD0MgF9HmN
HXDDt+uGh2ie5dS+/d9x65mwzrgHGSHVlHcDzJ+7benp99RnO9ywh5fV/Yr6
VP6O97vpRqGylZTX5vu/9Z3RH/GU8vrDD67PmnCOPi//OBxqa8yNu0V9KvZg
/i/0HFKhfgVWMHeRyyYbyp++Blb2YNb2K6b8R+DpG68OuUf3l9xd2P3T1OaB
9PNCi16sr85Nq2QoT5kPfI17xbmjgPIfhvMHcFIX0Plzc2Gj6SNmfMuj/B9g
184mDws63rHyB+7vmMvOOfT9mgdh8/LFFUPoOC8L/rVdqN5K97OgCf4eVp+3
kPpJl/mJ9cly1N7KvvUhGr7rFNKr0Ej93oQ3Rv3VXEnzJ2yA+58zkrzWv5PN
P+iXiCmUPKG3iO4fjjHsvXfYOu+/1O91OKNxz+KVMuzP59fB3TvXX7eSZd0h
9RvfZ+T8+dZg1pqG8HphspXGINa8pXCP6ti0oK/U7ytY16dksgJ9ntyAP9i/
eVyLHDmatbU+LIjh26Rrsg5wg+88rHLRNmQtDIPdXq4Zd8+GNbffX+xHUqU+
jiPz9WCzVd5Kr21ZxzjDXc7DrOabUv5d8O8RpTkHeZT/Ehy88fpJ3mLWAh2O
mDmzUu2wyI11+iL4mJfW80+rWTfugKNcRicPD6f8F+FNznZbzm6l/OVwoMqn
B6a7qN8F/cTM2rVD+lfsZc0Jhk/P7OTFh1L+83Dstcgu0TbKXwpLz5F9Ykuf
H9MDb9ijnjVmB/W7TULMSJ0S1RvFUL8J8PU5Toq59PmCElj5ubxq1lHK/xU+
lZAxrmU/5R/dX4z9nsG7zjjqNx520Z+jlRhJ/T6BVyx14nw4QPm/wNrRcxP4
SZTXfoCYWZQrH2OYRX0+hAdOf3gv4Tb1+RlOvWP1SCeH8qpKipkev8Uhkfcp
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
j4antoR3p+mzjrkJC6L4NknTu63+BybVLXE=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.5150209091330666`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.5150209091330666`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SPHD\"", "\"BTAL\"", "\"SPHD & BTAL\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.667991764802039*^9, 3.6679922964703465`*^9, 3.667992732384021*^9, 
   3.6679927816009655`*^9, 3.667993009987155*^9, 3.6679932412636375`*^9, 
   3.6679945757182035`*^9, 3.6679950588326836`*^9, {3.6679951610623417`*^9, 
   3.6679951887411556`*^9}, 3.667995774705595*^9, 3.667995820018104*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<ULE\>\"", ",", "\"\<EUO\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.66799130926239*^9, 3.6679913120026073`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
PrFeDn7xqnLYiZaY7+198n6y9qVaLiC+KGvwbqzfDmrRRXBYjXpfYTrmqwGr
msXOGTsxX9sHxOoh1JJc8J2R/a3X3Mb1fkmtaq0m1rtQC8LB11puqq86hPVq
+ZDsD77zQ7L+oqkPyf6XJjwk5wXP6JGWe6WpXNv3MdbPkVoymVq+7hHpZ1U2
+H5GnzW543H/DHys5XwKg0xbzsF6TgJ7O2kL/wrDfo1/TM5nzQlqfhm1IqhM
ywVdml1dfgXruYqal0EtfAj2N5aX+9zF/D+pBcfKSb+LS6ll36iVtk9If4uO
gqe2SK1PasJ63gNPM6/IKP6NeT9Tq3s+JeaNAVcGL85a74T75zZYbbi/MPsL
1rP5KelPfY8Kcl3gBw4f4VOZOxbzLwZ/2trHvSmAWdNEzbes1HLau7nB3hOY
RT7gBX0FrvdnM0sX0uuKfeDvZ5NOh0Xi/rd4RizhwDV2Fq3ezcf888FfD0/9
1DsM91vyM/J59VfBL3VLLG+0w/qOeE6eL8pI8MyS7HnPe2P+XdT8K9Siuuek
Puo5VcQ8ObWwAPz+qL/tpBaY/w346XE3U5Mq7Gezai13L2R65bknWN/t4NDI
w0Wl1djPeeAZF5eePt4F878C1/azCJwzFPObviDWuIIlQXF7dFOxvufBT708
9WNtsL4vqNUmL4l5LtSq59R6Y42Wa7iTu09lhc9fIbU4TEPqJdtAzTd8Reov
cgDPGO5j7WKJeUPBuvHri9QTMe9a8NQBZtYyL8ybBY5YUTu+zAfrOaAGzteO
2hUpIdgPE8G/bhXPky/F/GvATcuahg5bjPkza8jrCR6Dp8nbuHv8wPNhwmst
98jiwYoaI6znSvDsvKWfbF/j+ZBOLVK/pvPZD2reijdkfYVp1JL74McG+w0H
XMd++EqtsnlLLLv7lsx3yk9vyTynsa7Vck9W3avsloh5/akVxbXkfvWHWjI/
8nrUkfuFo+rIeS+Rgp8fcxMnZOL+aqQWdHtHLPamli0Ae5isMYxdjPlTqEVd
3pN5WyqiVsyjVu+h5l19T+Zn+XAtsSpCSz6PPolacJlaXEutma2j8+5OHZ1v
8qmlr3VkvhIm1hNLLlDLNdSqNg3E+sHUsnMNdL6tbqDzeatGMs/yBzWS+VM0
rZHMm+pn1DzjJvJ8FTo1kflXMqWJzJvy9U1kHhUY6Mn3ZbG9nvweIwsB56dU
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
z1OeWzCZN4Qzgsn6SrYFk/WX5/6f/wc6URwV
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2ntcy/sfB/DRRSedrJRSyZAkyighyr7phmIuFbkNqSjkfj2Z3JJk7iGs
knLLCukiphCVLEKUWhdhc1lFcv+9f732j/PHOef52Nr39X1/P/etz4LlUxd1
ZrFYn+lf//8v/RMRflrB4H9VY+lf4iPktqEZYwp/f/q/ZVJytz7pfR786rBo
sVjBxN3ZuWrJ5w5LD5JvLX41+eDPDqvyyXles9Zc/tphzlvym/FndV61dZhv
mKhgAocderUK15OLyJWNy8cq8fnsPDLvw7mhcRodr/NekwXNRqZOrR2vR3RL
UjCSY7krNmki7yjyq6kuB2ubO17nZpO1db9vKMf1BfXktUkTS4w7dbxfpJdM
15/s8GqwDPmdyEuXhSzyqUd+AVn5sZen+fsOC2vJrJndpnm87bDknzOUp8wt
8zgsdyBnHW+5/qYJ+eeSc5tcwr+/7jAvmtyUZ35jxRPUUztFwei46IfNb+gw
ayh5GHPme9gH5J9FfrzRyiynHfl3kEtVypW2Faj/ZXLtsMsrR1xBfe3PKpj4
cR7XCh+hvjPIbzJueqWUIH8U2a26SP4Y9ZFcJHtbHP+pi/fLn5F/TavfduAe
6uuXqmD8PQKPFD7osHgL+W2X7WeXyJH/HNk5ZH5cUy3yV5BvuvxmNXxC/t9k
sfXhlBXIK92cRs8zY76nBaw6S35rWM0PfIX85eQVZm6tXWuQ/wfZ8G2OuLwY
+fufUzALbHwMnqF98crI6QbrXtllI287ud3g8zgf3I+473kFc31IquHwm8jr
Q/4ZVvWGOYp6lpD/1R8Q1wnPS/SFLBw0p60kH3l7X1AwifNm3ruRh7zjycd9
M3K74f2c1WT7HfMHqlAPSQvZddetSfWPUU+LiwpGJu69edkXtAcv8s/RH+oW
oJ68FeS4qucTpqB9RJwg2wy61Hs86sEyu0SfJ3bkZTxFPd3J1Y5z/WzwumAZ
+d4iZ5MkKfLHk70dg6KV6chfQDZ6NcyyO97PZ9IVTPOMmIVXkE8YRj5VvdP7
qTr/YXLX4QNrHJKR/xZ5gtlklv0d5FeQC5LmRnHPor6hlxXMzK+PM/zwvGQH
yI0yfffNz5E/n1w0OT5kINqTwECiYKRSWWQxnqdqH3meQJS6pQz1zCUfSfUK
uXYDeRvJomb+mZrNyKufoWAGat86fBrPWzKSrHGlrc1ZgnpeJy/brOE35ALq
WUf2PMAuCFmKvF0zqf8eWRiV9xB5h5N3lbQ6tqO+LAG5+mfR2Cm3UM8asqZx
4YC5uJ5U54qCiU0ThnVHPtUwctvn8seLcX3OHPLYhxEjkmKRfxe51zCFxSe0
P7nWVQWjeFdf3gn9kc0l519e1M0AeXiB5LNr57MWhyD/dnI498WT7SeRP51c
xPfadxTX59pdo+fhUiZ2OoP6BpCfbdkvHrcN+beS6+um+6zC/UgvkFkXtYY5
3kf+p2SO34Sv3VAv4fQsBXPyXfvAe4WobyR5SXRpvutp5E8jWy75Y1x6Gfmf
kFfnTE93LUX+X+TGLzFdzqnru+m6gpl4eNX7UbdR37PkA1tzj/bF8+fKyEGW
Q+8/L0L+7+RpfXtnxCQhv1W2ghmye9syziHUN5ncdGpNr8EY7/gPydsdTg9L
zkX+r+TOkVV9zqE/SPrk0P0ebtthfh75J5LbamsmzLuIen4mr11t3nIc7Vlm
matg5lhZOt9D+2eNJ9/5z9D7He6fu4pcI/R4a3UJ9Wwmhyd03rAaVpnnKRiP
jectTuDzOZ7kffcSK+LxefwIcsXBUW9aUT/hcbJh7E+WJT6f3fOGgmkJ2XH+
EZ4Xbxw5Zmqe3qRUtIel5IT9XT/Fq8fjo2Q9x61TwvC8ZLfJnb7VvPTB8xDw
8ul63Uoencb8JlpCHvnL5us1vC49RLbffKV6P8ZL1U1yfo8Vax/i8znvyFF5
Hge6o39KQm4qmK/5Y4Ls0V/k+8nC3wtsz71A/hvkngv1p9zF8+Q1kWOrd668
VYX87Fv0PEOk03eh/bP2kX09gwqmVqK+OeSNWpdbZfg8QQO5b2ZazxK0J9G/
UgXj3nTmXR7+XjqCbParzGuOer7LIh8af6/8knq+kJOXuFgWX1G3Z93bCqbs
haHzTozvckfyeu/LfkKMV+x55ARRnfws5mPxK7LZWMNXI/C6rEuBgrHYKjHw
wnqANYz8XTvZsfM75J9Nvr7FYsiPOuTfSV57xKNkaTnqq1moYPSTlx+cUI36
DiGbKjLHlWh3rEf4M8n2jfq6Olh/CLeRTSpSNHshr+QS+XZV8q01aO+8wXdo
/nDybfDJRH39yeOe9Y7oifYoFpIjeuwq21+A/OfJy99a+mVjPmM9Jc997vTe
U4z6TrtL65fF3wbsRH+R/keW6lal6h1H/lSyfbj9wk/q8e4xOdp8e/d0jE/8
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
CQ==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.4338864471536676`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.4338864471536676`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ULE\"", "\"EUO\"", "\"ULE & EUO\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6679913171641865`*^9, 3.667991366470523*^9, 
  3.6679916159086084`*^9, 3.667991714738222*^9, 3.6679917575303917`*^9, 
  3.6679923118317456`*^9, 3.6679927471773357`*^9, 3.667992790955432*^9, 
  3.6679930316380672`*^9, 3.667993250770827*^9, 3.667994593860427*^9, 
  3.667995075495886*^9, 3.6679951956238995`*^9, 3.66799577942585*^9, 
  3.6679958245288258`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HedgeChart", "[", 
  RowBox[{"\"\<TMF\>\"", ",", "\"\<TMV\>\"", ",", "start", ",", "Today"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6679952299492846`*^9, 3.6679952333967376`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2nlcTO37B/Bps8vIUiqZIkmpoZAWzVGWZBnRgqTQosTYKUtKFD01ZXss
aaFkiVEolBJJlpoWUR4ZbWoGTSTZ8rtc1/eP3/iD1/t1n5n5zHWuc9/3OUN/
1QYXX2UWi9UJf/39F/4I1iVJmT/4p90enHwc/LQ+qLvSDC0uBCfvKPO/mIwW
rk2WMlvqtFIjpZ/+uvAIuOJ4oppgDo7L88GnL3mW1mzFcU4reFDk1iBP749/
zddIkTK1wSUVr0/L/loiBKu6/TabOfHDX7PvguXBy0+fCULzmsE74oVLLKPw
9YJBqVLmWEm+l0sgOnkaOKqh+HaYNh7PzQU35q9wL/XF9/duAE9I4Bn170EL
B5yTMgGlyXVzdqALp4B3thybFmmLlnuDF19RbUkJQIe9Be9buyU01h0t6nte
ysz34qidOEH5LcD18p7dIUFothd49mzmqPI9NC8KHP0scpxzX7S4V5qU2aAZ
eXexE5o1UdHc5eCVOq42HkFSzB8Jdp3nmD92B1p4DRxoMiQj3Qe/L8csXcr4
aIQnmMeh+R5gz5CR2m/r0WHhYOcvdbHsSrToCvgSt/n7rV5YP0kN2H+8jldW
E9XX9YKUGXggiisR4vlL3gvO1IjRnn2M+uEi2Hvzr2Enf+I4qxo8t/Pj4qPK
aG4POOj+wRh1LTy+cFeGlCkePHDUfkvqj3SwnkH3Qe891B8V4D4j4odtr8Rx
/k+w7Xrf0Tc2osMML0oZp+iMNwPt0LwysP/dr1uXlsoxbzc4yehi5/gZ6GSD
S1Kmavuhp4OXo8XzwNHTr6oPDkN7PwW/XXfD390aLfwKNg3om6F3F1046rKU
6elJz4xVQcudwJue2A+7MAjN2QJ+s8hGo74GLfoMzj9pfjVBvwPrqXtFyjyM
P/WfcyyOs2eDb6bn3DK3wXHeRnD48UFKvlsp/2mw6su0hTsOoFnamVJG/2S3
8ccSNNcRfPlZL8HqAsq/Hjx1gHpFM72f8F9wtdZ0wQntz5i/CLxvm+pujf5f
sJ7MVSnzau/cfrde4HhYEHjwOHerCmccFx0D80J3pph8xnFJAXjK73+O71iB
ZkvBnhdyk27+ws9LDrgmZZonW5RX1aPFCeDxBvt/WzejWflgX77oT6UKvt57
sEjKVH5ylIhe4efJ48BvPVJ72K5ozh3wmubA6HnTKW8TODXO2HNuJjpM/bqU
+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
aO/D4BV1rByxLuW/Cc61zx7WPeKV/f8BlccBnA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Uf4A2KU3KbeZ3leG3IS/lM7u75rfNP9/KQMabw==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.7335233657555411`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.7335233657555411`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"TMF\"", "\"TMV\"", "\"TMF & TMV\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.08250000000000002], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6679952354581633`*^9, 3.6679957803391027`*^9, 
  3.667995825419471*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NormalizeData", "[", 
   RowBox[{"symbol_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"symbol", ",", 
     RowBox[{"{", 
      RowBox[{"start", ",", "end"}], "}"}]}], "]"}], "//", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "/", 
        RowBox[{"First", "@", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BTALChart", "[", 
   RowBox[{"stock_", ",", "inverse_", ",", "start_", ",", "end_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "btal", ",", "invalid", ",", "s1", ",", "s2", ",", "portfolio", ",", 
      "portfolio2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"btal", "=", 
      RowBox[{"NormalizeData", "[", 
       RowBox[{"\"\<BTAL\>\"", ",", "start", ",", "end"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"invalid", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FirstPosition", "[", 
        RowBox[{
         RowBox[{"btal", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "==", 
             RowBox[{"{", 
              RowBox[{"2015", ",", "4", ",", "29"}], "}"}]}], "&"}], 
           ")"}]}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"btal", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"btal", ",", "invalid"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"stock", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      RowBox[{
       RowBox[{"NormalizeData", "[", 
        RowBox[{"inverse", ",", "start", ",", "end"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "invalid"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"portfolio", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"btal", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"portfolio2", "=", 
      RowBox[{"Transpose", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Mean", "/@", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"s2", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"s1", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}]}]}]}], 
        "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DateListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "btal", ",", "s1", ",", "s2", ",", "portfolio", ",", "portfolio2"}], 
        "}"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<BTAL\>\"", ",", "stock", ",", "inverse", ",", 
          RowBox[{"\"\<BTAL & \>\"", "<>", "stock"}], ",", 
          RowBox[{"inverse", "<>", "\"\< & \>\"", "<>", "stock"}]}], "}"}]}], 
       ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"BaseStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"FontSize", "\[Rule]", "20"}], "}"}]}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.6679362444925575`*^9, 3.667936452585691*^9}, {
   3.6679364872933645`*^9, 3.6679365613457336`*^9}, {3.6679366207680845`*^9, 
   3.667936625218116*^9}, {3.667936685992075*^9, 3.6679367414590807`*^9}, {
   3.667936887824689*^9, 3.6679369236846247`*^9}, {3.6679369609806414`*^9, 
   3.6679369641014714`*^9}, {3.6679372872517247`*^9, 
   3.6679373220403585`*^9}, {3.6679374116080265`*^9, 
   3.6679374118424006`*^9}, {3.6679899785645337`*^9, 3.667989979692099*^9}, {
   3.667990708270297*^9, 3.6679907116545143`*^9}, {3.6679932157266464`*^9, 
   3.6679932187947435`*^9}, 3.6679945613770075`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"DatePlus", "[", 
    RowBox[{"Today", ",", 
     RowBox[{"-", 
      RowBox[{"Quantity", "[", 
       RowBox[{"3", ",", "\"\<Years\>\""}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"chart1", "=", 
  RowBox[{"BTALChart", "[", 
   RowBox[{"\"\<SPY\>\"", ",", "\"\<SH\>\"", ",", "start", ",", "Today"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"chart2", "=", 
  RowBox[{"BTALChart", "[", 
   RowBox[{"\"\<QQQ\>\"", ",", "\"\<PSQ\>\"", ",", "start", ",", "Today"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.667936107507012*^9, 3.667936234246795*^9}, {
  3.6679365748131948`*^9, 3.667936636632762*^9}, {3.667936850121998*^9, 
  3.667936857380887*^9}, {3.667936908793975*^9, 3.6679369163983994`*^9}, {
  3.6679369534180627`*^9, 3.6679369576680512`*^9}, {3.6679370227179747`*^9, 
  3.6679370282883024`*^9}, {3.667937526240353*^9, 3.667937530493512*^9}, {
  3.667989983816139*^9, 3.6679899846396537`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2mdYE2kXBuCIIootYm+Yta0KQlRsKJgBAcEWe1vXuPYeV/0sqMS2doy9
rCWAIAJqREXEFrtYx14QDUXFBDCiIvbv7Jw/8/hj97qvCcmTM++8Le9vf03v
N9ZJoVB8oP/893/6p5+y1yb8kv6960o2bUWLFrRxoskm+IwYfGZMN8d/tmwi
K17VCa41QrLjDFqVh9a6RdmE/h8KHhxeLdlqJKd4nHo0epJk5Sm05hU5OfJD
zFh3yfoq0TZh/B9JHetUlWzqhFankjPmz2kdulGyLhttrBgDtrQnR4se4dcO
cX4d2vCSHBVafc6odMnm8vtsQmj5Nge27OX8bcmqcPOIv2I4/5/kPUk9u41e
yPlXkueOML5dOFCyWDYWrGgdC/VUDyf7zooIOLyb8y+PhfoZD5Ov3N4VVLsD
19crDqwdQi505Affckj3y7CELHbVz97hwvmTyNlrxWvjSqTr1kfky/qdpSec
k6wfuN8mjHPML9x5m9tDBNlP3zyx3W5uDwfItSOmbVQUSFY8QKt/kp3ub4q7
s0GyZUE82BFHPlOg8dnbWLLqLrmerrWwJ1Sy9ls8fJ6h6QGbMG2as9h+jmTN
bbS+hOwd8MRkshVKeRslwPcXe5LH+vxvku9L6bruBvnO+dQ1979INn4iD2g6
+oiLKNnSMNEmaAJP93X25ryhiZh3FnniXb/dHT0km4vIposZ4+415HrWT7IJ
ffvdce3oL1kZQnbt675ysi/nn5EE31f/L75eUfcgvL+6G1o3jXzO8uDZtOOc
f/tB+HzLBfISbZJ3p9pcT+EQ1nMy2rwFbT1HTnzRKnxKdc5vQ5smHAaLG9GK
M4fh++qqmsGO9eTnTR+W9y2S8qvS0NpcM3w/Q+UjNiE3ZqT94U7J5o7kqcmK
no9WSNacQOuzyA2Fj+86x3F7qJBsEzxjldOi90gW26EVOnJC9a+FfsO4ni/I
1rLbUx/35vZQ7ijY0QatGnEU/l67gnyqcaV4/UTJVudjNmFezQbXuxgkK9Xk
Gl/aLZkRyPmHofXLyMvGd+4Xn1Yg5T9E/rKpXf+4stJ1davjYN1gcohzwGFN
nvR642Jy8Ge3/X834PyJaMdDsvscy+hK+dLrDQNSwOZFaGs8WnkfrflBrnMz
vbnwULIYfgKsiEOrRbTuK/n46apvA0dz/iapYFUMeZzfo2UZKZK1t8hjJgW8
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
9SLL1v+GIWjl45Yw/9WU8gDrPdCmgR4w3xQjyLL5ve4n2tjcE2zph3Ys8IT+
U7Wf/KLLGM8Dm7k/a9rKLqz1Mu5Wjuf+rA9Ztn5Xzm8F459mH1p/uxU8v4pe
XmD1HC+Y7+qiyGlDn9YLOMz5b6Atn9DaWd5gwx6ybD1lvuYN80lrkTfOJxqo
7YJ728tvpmbw+PYvOTUg7Mu9ijzfuUzuEvfR3SWHxzcHWXaeRl23NcyndN3I
bRv/28c/hMe3C+SUuTWn7uvH41tBa5hfaGu1sQsTXFyrus7g8U0gF/jkXZhS
is+fTG4D46G+elu7sPCtWV/RjfP6k0uWl+3xpDOPxxPQik1oY1UfqIelM9nZ
1ijd34fzjiU/nyguf+rEeY0+8HnaNB+YH1o7trMLN5u8H/LwINdzdDuYj2rW
kU+9rOp5dwjPL0+QgwqT194N4vMyWeRrgV4JHfryeR5de6rnqBVh7cw8311N
zt75S/S5yPPLY+SB77b6tV/N88sX5LVZPi7iIp5flutgl58fMqzoAHnNR8h3
77zZFHWJ82eQQ84Ht416zPnLdoTXa9Rk2XpcPITXFU87QvtQl+4E769rRdau
/HdR+WVc/8Hkltuyxj64z/V91Anak1bhC/UztCSn9x2R7Fyf28MA8lBxaP79
15x/Efn6sDM34z7w8/aDHNgkQhGzhtvH753tQuU2We3Lb+P8fTvD/FqxgLx4
8/7EJ805fxxZdl7G0qSLXaj0v+fJ8fu5v+jdBeZDqnlk2f6ANqYLrpdudYH5
h7Knn12+n6/5H1pvQpuu+8H6XPyI1s30h/Wwcbc/XLdc9Yf1u+M9XlfV7wrr
Z/NOcouM51kzc7m/u9QV55vvyBtuDBYrH+W8gRqw4gJana+Bv9fVFLB/0wi4
vp9Elp0f0r5FG6oFwHzY7BcA/YN1PFl2/kq5kbzoaO5335vcHpSBdvl5MtE3
ENqjYiz5U/Lf+8olcHtYT5adB9SdJMvOzzk6dIPrqr/Q2rXdoD0aUtCakUHQ
f+hXBeH682gQrJ/FTLTxn2D4fhYzWXbezvGM7DmqRpFTJK+XnUNo/hOZNqdn
JT4P6k2WnZ+1HiTfbbL6lHkMn1d9Qp7hsSQhbCifV3XqbpefX9V7kr8mV3DJ
1fF520Hk7KTl+gWRfD71F1l2XtbYItQuP79q6U9eV37yw0NmPl+7kKztrMm7
9i+fr/1Ofi2O2Z91js+nNguzC6FL6sZ6pXFeLXlEaEZY91TOG06u6ZrZKuse
540lq0snuXnd4vO1jXvQ/b67+/5Xkc/X9ibPzvu57M/O76X7PZd8aWiFrJL6
knXR5KDrU1JDbnD+m+TNqk3DvpSXrqt69LQLBv/8r8UTJGtnk98vGzCy5VjJ
hr3ksUENaiZMk2xOJztV0lYvjpRs/UD28DbVSOwu2bSrF9Vvw96UTXbOe4Uc
7+Sb9i2B877vBd9PXa+3Xbi6Xbwb/J7ruYOc7zTzdfXTXM+L5D2uff6p9onP
AxeStz3RhFhL+P7X7kN59/rWqVaO8wb0gfooz5PjwxulbL7M9bSTE9PexGXv
4PtfQ2sXhiVVqx02he9/V/II+5Ny2zWcfyJ5ye3RdX415faQR+6/xb7xlxvX
060vzRePLhxZcynn70LeNt/fWb2Y848jj087ND99Jeff8J8fbvZJ9uD2UKWf
XSiO9BQXeXN76ESu8uFY/NZ5nH8MOb/BUNOPPzl/JLnOmJVPaoVx/lTyw9F9
kn525Pp26G8XFuwa+OxGC67vKPKVgcdCI+pz/jX94fkwHie3zF+6Lmemo+v/
ARLDxcw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KcFH8D/Pw2K77jpuxpD7lu174P6SA98z/LmSG+4vZ4MP/UmY2nwrPr+38NRx
fu1u+j2vxn729aT7s5ngBJ9uRctb4f4swZM8v8ib9SD7eVWfHmQ/po/oQfZf
Ajm4VVSQe0USzr8rPcj+TtPbi+w3+VO9yPWItnmR/b70shd53lOUUgslPWG+
u059ePYt7nc3g/95XpdfBOdFrn9zfR7mL+lJ9sd681467vapuTs7WWE9N/Yi
+1vl+V5kf68pBheWBGu1KzG/WW94fusnPzxoGO4nhOB2PondvgTifudsb7I/
4L3oTfZPwgbeZP8kcfUm93P5WG8yPwVPvcl+UMzzIfsLWRdw/16i8UP7Yv7R
PmR+aFb6kPVW+tuHzGdFxz46zn7qmU/hF3G9GAnueP1Pme1SnI+x4G1ZByZf
X4DzMQmsLryQOnMrzrcOfXVcnNORyDYjcL0YDo5tM8JZ0B/Xi2jwl6PJwqhh
OB8TwTuSrS7eHonz8T41f1g/uL7AcYYnJFbfJeD51357zI7F/Ip+ZP1T3AVz
0ewPQFj+L/3ofjjKl6wH8kO+dL27DZ6Scebj3DmYvwacIDJPnbMI8zv0h/2G
4c9HwnC9OAD2EI7ymD8N63sTvOrSEPu8cMz/Caz1HF3WejLm9RfB/sTw65ZQ
rOd18Hfv4y4t52M9P4CH7f4ys10vXN9sOVJvuYgj65VqFkfqJa7iyPlkzf3I
fkbZz4+uzzP8yHjzd/rR+x/fn9zv1T7+ZH/Ii/An9yPhDn9yv5Nk+pN+1vcK
IPtRwZQAUn/xVnCfoOwF1+Iwf3oA6VfR5AHk/iaNG0DqrUgbQPpF/XoA2T/I
NwSS+71KGUjy6F8Gkvu5wHSgjpu11fAAjfPNfSBZ/zVnqPnPB5L3LSLjQTpO
Iq2aYrcI17Nug8h6owgZRN5/SP6C/3m/Ke88GJ4nkpI+XyjE9WsU+J/3v/oV
g+n9oB4sjj4YfXU73g9chpDjGvEQkoe/HOww8aHdglBcf08MIe8f1E5DYf0y
/PlmIa5fw8Gt8p60K+iJ6++yoeR6JMeGkvVeXgD+WvPmv9wl+P5h6DByPeLF
4PgjftJJ+Zj/CLUyH/zP7zc0n8GnTCpO8g9i/Q4G6bizgQXjl3jj/exWEBkv
Xg2470HDAyGut/bDyf1VtX84ed+hvwE2/DWxewWOfzX4+Jpp+SW3cPxbjtBx
d0Irj4hicb31AysNv/6Mw/tBLjjEyDCgOP66EeR5UWojJuuRor+Yzq9IMd2f
vReT5xu59Ugyn1R9R5L7gX46uJPhdZsZ5o8fSfdnTYPJflPjHUzWE/60YDK/
RNuDyfyWZgST9Y7XaxRZD4Xho8h6J9kCXuw/G3ZkmP/SqP/vZ/8HPtjqtQ==

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Y3xYww1oP6zzeYI29kv8eLJdo85bB7yflD8km0zupWyP9x05KXndIkXHWz3v
E8MMJczy86OGTsX+m2tN7reu4nDzTPRbSB5t7+OTOwH9fiWbu12Qjsd+mKM+
VcJYFT3Kdh6E/Ax5laprrKsZ8m8ii3Isdwc34/1syDS6P3ZkcO169uOzyEMd
P/0+gv12+Xqy+35OryH90PcxcrrHs/C56uhzoJGEUfca5meG/axwBjkloSnh
2STk9SS/iljdoofvZ0eTm70uvX1qjL5vk0+Yuzjp4f1IZGZMv0fv6qdvFuhz
LVllbMOhfQaYD5Hkb7NNAmzx/ODlkPs5K7xomIr878jd5fGRi3F9A66JhKk6
FzZGRwV9hpMHexl1rGEhfyY5OZinvQefF74lu+S5fTmI9w+psqmEKR3Qpf2A
gz7DyCnbfyo+wvNScJPcS+s6rw33t+g1OXVM0mVFrN8sJTPa33pNNj/Q83w2
IFs2fl/8CPvR8jTy5RXbgouxP5CrJU/iDojyxf7JQH66hNmRPyQ0Ac9/7mRy
YMinOXw836Od/rl6fZQl5j+7ilzcazuzBO8jHDlzCSN2joj2uIH8E8mZ0xx/
5GF/JFhK3uPiELUB+1NREPnQ2BHcc1g/eH/IXSMDK05gf8sfN0PCtJsmZjdh
f1/uSN5/WLwnA/tZuUByzeP7bE3sfw2SyUU3ew2IxP0vHD1TwkSsCiuZ17Ne
LCR/mzPhdb97yL+TfPxc/aRKHOdcIset/Zp7B58PeUo+9vTksLnYn7PmW9D9
HduoNqmnX38ya/W5D0WhyM8nt0V9ld+D5wm/mFzovMSpoed53Ua+fWtS49Se
96Gts6i/yf4Fk/H56HNkhUkRU6LxeeFjMktNY+BB9CdtIX/Xzd3ejfWDrW0p
YU4dZtdOSEe/Z8jRn1muC7Eeih6QDbq3Wp7LRP5m8t86r4fr8H7Bm2NFz9fx
/mOyevbvheQ8FYOvuT379yay8Zxbt5oxHtyhDB3/c8o/JhF5rch9dniFqiC/
cCM5Nb/IvagQfX4hy3/qDLHvWd8Gz5YwtX2nXq7B9QQW5PBweUkd5o/Ii5yr
9urpc3w/K5Z8dP3tIdPwPsBnzaH5Ud3WX4jj5ebksNzrR4LuIr8n+cNx03ur
3yB/FPn9yrNPkx8g/y3y0nXqBr/wPJOaWtN6y/LdbpGCPt3JOZ2XCuJ68h8h
b3X6U/Wr5/0pm9w/8/zxOZi/VqttJMwbzYyS+Zh/vMPkTyXPrpQ2IG8GWW2f
n7X5C+StI188YSCfloX+Ds6l9cpOuOwlnj9CAdk7vfvLqZ73zVdk98TbnsV4
XrIVbSVMWlWmy0s8rzlTyEPeTF9c1/O+eZ087UypNLHn/b2G7JCSUOuN56dV
bzt6/zb3KTiM+cWbRO6Sv/nTEt/PX07+L/JuaivWE+7ff+c7Xk6I7nkeT7Cn
8Qp81DcBzwvhEvLSmp3+YdgPSfeQvy/nTx2P9+uQLnLqgOrJDtg/CcbOo/XA
fMRjCfKIOGSl+Mr3dngfY+0mdx8fz5qI32uVRFY95L1+2nv0N8qB7qd3UZtG
fMB4LyQP0muoaP+M8Q4gt/qPdY/6gvwXyQ/uzWDXY/yjS8k1b+6WXcR8ZDvM
lzBfYqtbBmI94Gwnfyz5obEI60HIeXLSxohV1TgueEKuHDfM4xTeF0Wt5EK9
h3cEOM4/u0DCTFzwn10pnt/lj8hsBRd9f8x3uRby+JT9hv7PkFdrIa2/Chvy
NtShz7iF//49YAHXCfml98lLDYK4+fj97G/kqRM1bla3IK/GIgmTsZWb+Vaz
VZZ3Nrnvc7vhQ3+izwLyteI7Q6bg+lYS8sILkzQ9lGTn89Q4NN9sQ6y/diK/
JdlE7yvvvRT5N5Ddr1u3nW5Cn5/JG8K3VnEa0ecgR9rf1C970Psv8s8kT3h3
e3ViP9n1pevIqv6T0q8MlJkdQ/4QYnH5zgCZBQMW037vRNgxZVWZRdPJIfdU
hHv1ZWZ5kM9wd/T1NpTZ6ih5tu3arFoz5M8lm8T+/ug7Q2Y50yW0/i61jG8w
ldlgDXnOMD9W5hSZuRHk/1jvcrutZI7OIj/9b9lYJ9tWy/8B69obqA==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8js8rdFs02fur2l0E/O/xm6HXCfWdw9c4Ulr3XxH1vcOPNC2+827DZi/BJ6+
cHjUHmfm7ZVpFO7YHW58mvurbsH3GuX1bMrPa7/CcXYbCxYwv8HlFj4femHP
S1rcAw6e/N58uTbzzoDdu5kaybi/3gxXfHTS9jiPL3K6jfvlQOtSMfNJu8I3
+lhX9OT5KSLhlUlZocMt9d4Cv1tzK64OLXHIwngGj97WkPWRB8HVQuMur+P+
qinwU739xoE8P+1GuDy98eYXzGPQwV8ylA3yXFnPwDuYP95+31wbsZ4RsHBh
48CZjZn3MmzXKXbcEw/m/QB32piQXp3Wjb9rFDLk96OTm7GearhEdrDmupbM
9xZutDn0/H4eX1XrHs5/ZpmjrAnrtxYO6N5KJXVn/c7Cqh7LNzrzeMpXcMmw
woL+TZmvxn2jMPluypwAbte3g2WJmwet92T90uBVwYtPbOb5qV/AHe22brfs
r7PW43r2fLWkBT9vbg2vN02329uc9R2t/5/jG6o+MAqtfH/aOHG72Bd2nXM8
NpXnLxsJd/j+dZHJjXmXwXWS5qd8Yz+IKj/E/cy2IQ06cfyk3vC7Dqd9tNyu
GA6nN3qzqgHnj3oJ3O3xxX4P7Zj3KJxzfceCbM5feYt/MZ/Sv2ddsFyPh8Bp
v7dJf3F90i6GZ/la6W1pwyF4aHSl2BZcD8TZ8JGIjFpR7BfNwGzMp28LC9qx
n/RR8IFd7f6Zw/4RHYA7pmRX+sP+kT6ArWJb7/GRMH857NjJKiuZ4ytJfoT7
4QLH/R9o+T3Yql/u8Z8cD1UZPLbKuckKbte6PzYKif65Lhss478bvrm6epUW
rK8yC86c5zbMn+OhKYafVVg1d7Rl/Bs+wfXy4u4rxRxPUS9475bEax28WM9M
eKtX3VJHfl73Bb4UsuZcbV+Ov3MOnu+6TOs3rDXzd4cdekt/2bVl/unwyzGl
2++2YT0L4dS1OY8tFjd4iuufj43fFR/mD4aTwpd3q8PjK6fBGT9e1Iq09O9m
eEf7MElLzi9p/We4XjWZ+LFeC9ZTgG8+LDTN5/7qyfDArsuFZpxPuiR4Uexx
v4qtmP8KXMuta9lenq8q4DnWv0/vAo6wHtqJ8PS1jQ86M59hPfwtfv7kpayv
+BLcsWpYx96sj+w9nH39Qat73F8/LtcovFG32tKEeURqeJr75SkT2zH/ebjy
oZmjYzoy/xt4SuHy+f92YH7bPNwft2rrMcCb9V0DOyV7vL/C85efgffmXxy9
kX9f9RL2su79or2U+W3yMX4Ha5h6sX8MbeH6p2+Gx3P9V6bCLyPH+o1wYX3z
4cyS4MK27Ce91QusJxV+efzD+opawyfGNg30sdTzORy+9tXe1ayPuYoB63Fu
5MBNln6QwnO2zcoczTzyENjbWJZ3i/VXxcLb3QNv5bBe4kovkTfwwYjaPF+Z
F5xz/9aHM5Z+GAYvqe2mbsfja2Lg5Of1djVhP+mPwMYRbY6s4PEVnq9Qf5VI
doLb1YPh6x/Gyu0t+RfBH6/1mjTb0s8HYbnXoZaZzCv5F87z93+Qy+3aAa+x
vrhtqRvix3ouhKPGhZ8r7sT8++E90aaeSRxfmR7+OCOk3Ir1Uf6An6tWvbhg
6Yf5b3C/0+1u8B7OF+leuN0l0eY0fl5xF/aU1Ki6rD3zl8LxYaWDKrJfdG5v
jcJIT5f3Xp1Zz9vwsnu9JI+DmPcb/GvMq+DdAvO6vjMKba1LUw3dmLcn/KeO
i+pkd9bzJrzdz/Fy356sZxHcPPr1kFJuFzm/x/Xk6vltsb2YtxussHk4+7Sc
eZXwhwcpW6OHsp6f4R1jR//rOYz1dPyA/U05GencLu8CRwW8anZkEPNPhV36
rByZ35v5N8Fb03xNDv1Zz3oFGM8zLdut599TymCHkKHxbtxfMwm2/zTu0ZYR
zL8Bzmpiuzw+hPmvwJkrHkxfPZr17GzE/X7NcRUuh7KeE+A6ioWmtkOYfx38
ctoRXRqPJ7kIN004HbiIx5O/g+d+OV+x6yjWd6wJ64X72w8fuV2cAO+ftvbX
yjDmPwerFqWI34Yz/2t4zC9RWeFE1nP1R4z//ZtHB41lPU/DnbpIbhiZT22A
bwjv1k/i8XTVP+F+Kcj736B/mLcN7GqdvL+jgvU89d/29RHZ+TyeNg9+GvW0
MIH7G6p9Ngr9TSVymwnM2wq+lPY59jbzy0bB3tpTd46PYz2fwYfHLcr/h/lF
VQqNgm3evgHm8czvA49f8Hjzs0nMPwKW7x9gOBDB/Ethf6cHtaKYR1LRjPur
3Wved+T+8pawR8+pZ+eMYf6hsP7TtNwVPB+tCha1yTn0lv1nOAw7txfb9OnB
ejYvMgo/O0Vc+dmP/TAIznIof1i9K/NHw2EOjgOe0qKDcNSRH4vyApn/Ieye
3ka7gf2nk3/B81KvhOTpPJ55AawRKy826cP8+2CPgE29Hdh/8vvwNG2P7neG
M/93+PKiYofN7H/xvK/orxOjzP15PrI98LRRFXo25/kr78B9pt48tZP105TA
Hs5Os3RTmV/yzSgkpMQsSprM+u6Cbww5oc6ezvregvtHbTpeoGT+r3Bql9sl
KtrsUoz1yerJlpG0pAfc57dLachM1tMMf/Zx+z2MFjuVGIU2Xwer8nh8WVd4
a+LUCqW0MhJeGtckZvxs1vMzLHrrvW3iDNbToRT3Z6UmtyGWvEHwguzQG5Mi
mXcKPK+KZ2UvHk+3EW6z6cliZ56/vG4Zxn/fi3fXOD9UgbBdQV7HLjy+NgIe
7L25sp8lfyL87fdc2x3zmf8yPFLUaIFqHuvp/90o3PJ+cf7tNNZzPHwn+nId
Tx5ftA4uO57etQHzSC/A637+rrON80/xFp6S/aFLJY6XOfwHnh+f30pcaOnn
tXBi8eIRs9m/8rP/eeuGY7YDmf8VnFt+vlDCftHWKDcKgfY6/1SuR7J4OChs
9c3N/HvKNDjMzTv/D/tR8wJ2GHL7yUFu11v/NAo731+s05/9L2oDD17kOugj
r0fqFPiDLrF4L6/fulx45NNgxwTaXPWXUdjQ2bHkAu8fJL5wg6IWP97zfks+
EpZlVw7tbbn/eQpL5+acOs77E3Hl31gfqpzfVcT5IPOGy132/CwNZv7h8Miv
zcrfDGD+JXCHVRfyH3J9kVb4g/WyzvPvS3g9ULSAZ7cdcPg966keArtvr54V
y/VGtxjWNcg8d5T9YT4EVyzv+6sRx1flITIJm8IPniymtQNh3cwOrWIs/REF
h0e6tPm9kPkPwJ43bLsXqpj/Aew9OzBCFcP69q9gEjq/zlM1Wc76LoDX2z7q
8JSWJsPGXTnd4mOZ/x7c49mBh+Xcri6D54+ZduxgHOs7t6JJKA/tUlBnBeu7
G541v2k37Vrmz4JLNCkX3q5m/mI4xK/Wj/oJzN+wkklw+3PS8DWJ9d0J342/
6DprK+ubCRc1/Vrj+ibm/wLX732uWLadebtXNgk7I455/NjMembAe0TpLr5q
1rMQtq4waJYHt0saVDEJHUI7/ijh/vJgeKzdJufltGoafC8j8XjmDtbzE3x1
ySNTBeaT1a9qElae96o3cwPzCnCzBz2OTljEvJNh/w7rGv1k/fRJcPPq8oWX
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
v5dtWMLjma/BI2ZsntOAz5OST/DapJ6TX/L5TF6/Fa6HW+amuXZhfgGuO/Di
9VRaOxkumL7DbTbfjyrrtEa/dO0wZGFf5g2A+4cXen3j+0T9RHhFkePrKL5P
FCXC06aKJ2r5vKm2a2MSBrSZfXU436foOsHt9vl5uTOfeRw80NRS/5TPqxI1
PHRVr3uVeD7y8/CYwDpNCvk+0tChrUk4+aFrzDM+T4rD4ZeSawc6+7Mf1sAD
8y+9yeD7V+UZeJ197epZfH+qeQk3Pt07YIzlfaqinUnIUgfEXWS9FatgsVdW
UZID86fCQa4fgzWW5+N8uMPPc9+W8v2v2ao9rv/uvU+O5/tTVRz8Jutoy7V8
XtWehIvejHr2lM+3huewrdfEujmW939VO5iEGie9tpTzfYFMCs9LOne0L+9v
9cdh56CdTh9p0VP47crR0ZP5fkhaqSOeJ4MiTct4PIUX3HDi3lEn+bygHgYH
dhgfZT2H9X0M1y51Ml3h85Bc5IfxbKZN9uTzr8oTtvvUU3GX72O0g+GBY4We
c/i8a1gEBwW3rzGP98/KX3Du/bTrSt4vaZp1Qn2Cn7wJ4nqmHwDPO6vJ78/1
TBQFb1unWzNoC/Pvhz3f5NXcxOcFXWN/PC9bdfjejPc75n6wqO3erwm8Hkvm
ww41Wu+qzfs9+V7YZVtt11jOV9Vd+HBLJy8R57e4T2dcD8qlEQd5fNkcOKfp
wxVduT4rNbDq/IP4vby/09yG6yUH7h7G5yv9N7j3seAvPyzvp2YG4Pw2blw3
hfNZvQPWnM4PHknrbsJ7+nTV7eD9nrkIdgrN3e9OS5wDTULkyHjjNt7vabfC
D6M/+/RlPQzp8PtvpkaLWC9xIVy37N2tiG3M20WGesucrcN5vRFdg4c0vR50
gceXfoQNJ7edbGa5/6kn4H5h6Io4X96fqmVwpR2t6+7i85puEmx153lJO8vz
ewF87kmqbw3L9a52EObLudkHJvN6pe0MH72yrbwTn9cME+CbU3aNbMP+EK+H
eyTXtHnN9zMacResnwOsGm5n/fR+8Oup64N38/lRNA4OPTPq377sJ2kCrIhb
nrOTz3OKc/BHp4RRv/k8b24fjPuHSvc2r+D7HUkY/Nxjwqd3fD6Vr4ZP7u5z
SsW8qtPwxH8yWjfk84jsn66oz7L2RWaOl3Jl1/+ej3833cPz1ZyC65w46v+R
72f0efD46lucT/H46uXdsD4s/fNjGd9367TwldBFD/wt7/uewffL6/1T1fJ9
RpXuuB/8Emu7zvJ9pw88KCY1w5rfDxqOweHfFuZYvk8U58CDy15vWMTvf2QV
e5iEZrIKZXn8/YayJTw96YZjjuX7zqHwjtTlLcfx9yaKP/ChGy9W+fL7bHXz
nrgfnqxsMtPy++BB8Kthhw+s4O9lzNHwm/iZQh9+v6f6Ca/JiD9rbfm9S9Ne
JqF5n7jSXK6HBjkcOdBtkye3ixfCfhO8r9S1/D5jH5xxsEerQ7ze6Bv1xt+7
IA0fSYv6wS4eOVu+83jSeXCltv71XPj9o2IP7N04/NlWft+vvgPb9JyyYih/
zyPp3Qfj6bcxbLnl90az4eSw89Ub8fdRql3w8RcN8k7x92DaW3Bu0wxR+8f8
vdRXeFjdzyP/4ff7mu19cf5JykoKy/fzN+B344yyEP5+QlQEt8w64mDHPFKn
fvDiojkPaN0WePHJJMdRluvBdfiN8pRS4Pejks9wQr4+sCHfn8od+mP/BRf7
v+X3jaog2KA4sOcXx1t89b/taw5lOLMfZCa4nveIO1JeP5V15SbhbvuPAXGW
972BsHGedYWKvL7oI+DxHl07nrC8L/0Aly3e4vOeVtsPwP3B/e814nl91vnD
KYfKvN0s31+Mh9/mtTtcid+nSdbBmWuajP5p+X6o1kDcz1Zt6HjG8v1QR7j2
5ZI193g9Eo+Fc5fbpFXl9zmytfCUN4pqAXwfrzwLDzvaLNTW8j6n/SD0Uyvb
bIcFrO8YOORny8aduD4o4uEl99qdn2y5nqXB5StMfR5NNQf+H5Vt/Ao=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.4226259068709657`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.4226259068709657`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BTAL\"", "\"SPY\"", "\"SH\"", "\"BTAL & SPY\"", "\"SH & SPY\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6679366397690153`*^9, 3.6679367516068416`*^9, 3.6679368593411646`*^9, 
   3.667936970922141*^9, 3.6679370012599287`*^9, 3.6679370989355893`*^9, {
   3.667937301643483*^9, 3.667937329121683*^9}, {3.6679374044328537`*^9, 
   3.667937417822565*^9}, 3.6679375710827637`*^9, 3.6679391073697505`*^9, 
   3.6679900261512504`*^9, 3.667990737274878*^9, {3.6679910297008114`*^9, 
   3.6679910546273875`*^9}, 3.6679911084009924`*^9, 3.667991370645297*^9, 
   3.6679916200646744`*^9, 3.6679917189037895`*^9, 3.667991761806107*^9, 
   3.66799231597868*^9, 3.667992751396487*^9, 3.6679927950963516`*^9, 
   3.6679930328373065`*^9, 3.6679932518651276`*^9, 3.667994597998305*^9, 
   3.6679950838423214`*^9, 3.6679951975189505`*^9, 3.667995781572899*^9, 
   3.66799582958747*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2mdYE2kXBuCIIootYm+Yta0KQlRsKJgBAcEWe1vXuPYeV/0sqMS2doy9
rCWAIAJqREXEFrtYx14QDUXFBDCiIvbv7Jw/8/hj97qvCcmTM++8Le9vf03v
N9ZJoVB8oP/893/6p5+y1yb8kv6960o2bUWLFrRxoskm+IwYfGZMN8d/tmwi
K17VCa41QrLjDFqVh9a6RdmE/h8KHhxeLdlqJKd4nHo0epJk5Sm05hU5OfJD
zFh3yfoq0TZh/B9JHetUlWzqhFankjPmz2kdulGyLhttrBgDtrQnR4se4dcO
cX4d2vCSHBVafc6odMnm8vtsQmj5Nge27OX8bcmqcPOIv2I4/5/kPUk9u41e
yPlXkueOML5dOFCyWDYWrGgdC/VUDyf7zooIOLyb8y+PhfoZD5Ov3N4VVLsD
19crDqwdQi505Affckj3y7CELHbVz97hwvmTyNlrxWvjSqTr1kfky/qdpSec
k6wfuN8mjHPML9x5m9tDBNlP3zyx3W5uDwfItSOmbVQUSFY8QKt/kp3ub4q7
s0GyZUE82BFHPlOg8dnbWLLqLrmerrWwJ1Sy9ls8fJ6h6QGbMG2as9h+jmTN
bbS+hOwd8MRkshVKeRslwPcXe5LH+vxvku9L6bruBvnO+dQ1979INn4iD2g6
+oiLKNnSMNEmaAJP93X25ryhiZh3FnniXb/dHT0km4vIposZ4+415HrWT7IJ
ffvdce3oL1kZQnbt675ysi/nn5EE31f/L75eUfcgvL+6G1o3jXzO8uDZtOOc
f/tB+HzLBfISbZJ3p9pcT+EQ1nMy2rwFbT1HTnzRKnxKdc5vQ5smHAaLG9GK
M4fh++qqmsGO9eTnTR+W9y2S8qvS0NpcM3w/Q+UjNiE3ZqT94U7J5o7kqcmK
no9WSNacQOuzyA2Fj+86x3F7qJBsEzxjldOi90gW26EVOnJC9a+FfsO4ni/I
1rLbUx/35vZQ7ijY0QatGnEU/l67gnyqcaV4/UTJVudjNmFezQbXuxgkK9Xk
Gl/aLZkRyPmHofXLyMvGd+4Xn1Yg5T9E/rKpXf+4stJ1davjYN1gcohzwGFN
nvR642Jy8Ge3/X834PyJaMdDsvscy+hK+dLrDQNSwOZFaGs8WnkfrflBrnMz
vbnwULIYfgKsiEOrRbTuK/n46apvA0dz/iapYFUMeZzfo2UZKZK1t8hjJgW8
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
9SLL1v+GIWjl45Yw/9WU8gDrPdCmgR4w3xQjyLL5ve4n2tjcE2zph3Ys8IT+
U7Wf/KLLGM8Dm7k/a9rKLqz1Mu5Wjuf+rA9Ztn5Xzm8F459mH1p/uxU8v4pe
XmD1HC+Y7+qiyGlDn9YLOMz5b6Atn9DaWd5gwx6ybD1lvuYN80lrkTfOJxqo
7YJ728tvpmbw+PYvOTUg7Mu9ijzfuUzuEvfR3SWHxzcHWXaeRl23NcyndN3I
bRv/28c/hMe3C+SUuTWn7uvH41tBa5hfaGu1sQsTXFyrus7g8U0gF/jkXZhS
is+fTG4D46G+elu7sPCtWV/RjfP6k0uWl+3xpDOPxxPQik1oY1UfqIelM9nZ
1ijd34fzjiU/nyguf+rEeY0+8HnaNB+YH1o7trMLN5u8H/LwINdzdDuYj2rW
kU+9rOp5dwjPL0+QgwqT194N4vMyWeRrgV4JHfryeR5de6rnqBVh7cw8311N
zt75S/S5yPPLY+SB77b6tV/N88sX5LVZPi7iIp5flutgl58fMqzoAHnNR8h3
77zZFHWJ82eQQ84Ht416zPnLdoTXa9Rk2XpcPITXFU87QvtQl+4E769rRdau
/HdR+WVc/8Hkltuyxj64z/V91Anak1bhC/UztCSn9x2R7Fyf28MA8lBxaP79
15x/Efn6sDM34z7w8/aDHNgkQhGzhtvH753tQuU2We3Lb+P8fTvD/FqxgLx4
8/7EJ805fxxZdl7G0qSLXaj0v+fJ8fu5v+jdBeZDqnlk2f6ANqYLrpdudYH5
h7Knn12+n6/5H1pvQpuu+8H6XPyI1s30h/Wwcbc/XLdc9Yf1u+M9XlfV7wrr
Z/NOcouM51kzc7m/u9QV55vvyBtuDBYrH+W8gRqw4gJana+Bv9fVFLB/0wi4
vp9Elp0f0r5FG6oFwHzY7BcA/YN1PFl2/kq5kbzoaO5335vcHpSBdvl5MtE3
ENqjYiz5U/Lf+8olcHtYT5adB9SdJMvOzzk6dIPrqr/Q2rXdoD0aUtCakUHQ
f+hXBeH682gQrJ/FTLTxn2D4fhYzWXbezvGM7DmqRpFTJK+XnUNo/hOZNqdn
JT4P6k2WnZ+1HiTfbbL6lHkMn1d9Qp7hsSQhbCifV3XqbpefX9V7kr8mV3DJ
1fF520Hk7KTl+gWRfD71F1l2XtbYItQuP79q6U9eV37yw0NmPl+7kKztrMm7
9i+fr/1Ofi2O2Z91js+nNguzC6FL6sZ6pXFeLXlEaEZY91TOG06u6ZrZKuse
540lq0snuXnd4vO1jXvQ/b67+/5Xkc/X9ibPzvu57M/O76X7PZd8aWiFrJL6
knXR5KDrU1JDbnD+m+TNqk3DvpSXrqt69LQLBv/8r8UTJGtnk98vGzCy5VjJ
hr3ksUENaiZMk2xOJztV0lYvjpRs/UD28DbVSOwu2bSrF9Vvw96UTXbOe4Uc
7+Sb9i2B877vBd9PXa+3Xbi6Xbwb/J7ruYOc7zTzdfXTXM+L5D2uff6p9onP
AxeStz3RhFhL+P7X7kN59/rWqVaO8wb0gfooz5PjwxulbL7M9bSTE9PexGXv
4PtfQ2sXhiVVqx02he9/V/II+5Ny2zWcfyJ5ye3RdX415faQR+6/xb7xlxvX
060vzRePLhxZcynn70LeNt/fWb2Y848jj087ND99Jeff8J8fbvZJ9uD2UKWf
XSiO9BQXeXN76ESu8uFY/NZ5nH8MOb/BUNOPPzl/JLnOmJVPaoVx/lTyw9F9
kn525Pp26G8XFuwa+OxGC67vKPKVgcdCI+pz/jX94fkwHie3zF+6Lmemo+v/
ARLDxcw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ysApXxLOvIf3/z9LDBSL
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MQ==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV12lcTP/fBvBKki0jEe0ptCgttKCaUwrZkjYJFZEWJUsoSsqSpEXkh0qo
7GMpsrQQ0kIUKkulRWZUUykkdX/+5/Lk9gDv18yZuc51Pt/vOaPqGWDvJSYi
ItJNf/3vX/oT6JfKZ/BfoQX9lXaCHJbDK7ouxrqigDxTyr89fxjruE1pfOae
jd2fDnnWBYnk1mjr2x4mrIWPyFYrDA//N4W1SivZR6RF0XAqazvpc3xm4MmJ
kWLTWdfHkVODvoifxOucB+Qqef0hS2ay5jaTZ2do3DA3Yh04Jp3PFL9Ym3hb
F3lNyf+lh08w0mGtd49cL31ryNV5rN2/kPMeKBaWrkX+Uef5TMXgWydLY+Q3
Ih82V3bZo4n87uRrz584fcPx4XVkLeti3XEbWfOGX+AzHalSLjVeyG9Irlyj
WlK7AfnXkKeqzD/4ZQ3yHyIf7ZOb4oHPq5C4yGeci1PTtjmzFtEn73zJT5LH
+/VWkRMYm2J+OPJHkV/mJ3yZEoL8N8hpCm1/ZuxDv7oZfCZHSmbfocPo14Xs
WemxY8Ab+SPIZ/oXRkrgeN5Vsr/B260uQcj/jrw1U2260Rb065jJZ+4OrDx7
Mxj9hpGtlM7WXNmB/JfIZeO3TJU9hvxV5KAeg9t3YpB/gHxMNV9N+gj6Dc3i
M7oHHYpLDqLfDPK4gFLOuc3I/5r8OcNyfOF65P9Dljr++m7SNuSfcon6sDzz
tmkT+nxJznp1wcdwJ/L+Io+waDdNtUXeyZf5zPaCv0zJSeRdTHYzfPhWxQJ9
lpLNlbSkMheizx6ytW5kTL0h8ipf4TPHg16MXjYDeReSH39x1G7C/KlsI0vM
GJqx2Al9dpHr2+MHnB3Qp8JVPjNZPNF4hg3mYT556kWbEAPMO3cLefSHjial
Rch/muy+SOFOryn6lLvGZ7x7CvRkcD5688hDb2cE9a5C/s1ko9suI8dhvcQl
kzVsLOfKj0b+x+Sf98UT2wY72D6Z6zRvLwPuzR+FPn3/5wkBUQexfnlJ5N+y
zztXYz3V55Pf71n3V2088vPJlvu+B6hORL/eN/jMG0P7XQuxvisSyFmTx8jN
QB6RR+S8+Ge3XLEfuI/l0bzuHZZftgB9HiP7LGD0q/G6yn3yJGt/LRH0ZddE
Dpqa5exmhbxSN/mMoY9r6WrMM8+EXO4m8z3EH33eJY8199SNxzwHNpDHOH6a
qvNvfkfe4jOi5uryPbuRdxZZevP6ZzbbkdedHKHvKP5hMfr8TM6evDU0yQ59
St7mM7cEvuFqXOQ3IMc0RB23m4/8q8nrJZgyYxfkP0jOOdro0If9on7oHT4z
x+NV7h7ML0ePXBXYdYOL/YLrSv57KnpFoA/yR5K9VEJl52G/SrtObln9Vlo5
DPOgk81nror/fXL23/7gTN6XM4Ox8kX+feT3L47Iu2P9FFwh30sJbnyI44Vv
yZ7m+88o4fvCHXJof3JSCwgPQL97yZ2S5vxVocifRb4b9kCatxX5K8n9Dh5T
XqMv7l/y+gct201w/SpC7tL+vnCzg6Ml+s0gz378y9UQ79erICeumT3V/9/+
3Ee+cSLMWsoc+dXv8ZnuzGDO0iXo9zz5c1uwxoZ16Lf83v/mzztGBNcn/Cd5
1CP+uqvon6eay2fSP3ybf9Ue+ReR4xc5HhmK70v7Qf7xN0CiAcdXKN2n+0/y
LONJuD4iC8nCDOvshVjPelvJDpo5mX1Y7wWd5JHJu5JL3NGn/AM+w10hvVzU
DXltyNblYRu1sZ/bBZIjLOocn7ki73/knhdDAj/jfDiTHvKZ6d9LLpktR59W
ZBP+0vH/Pj/Qn2yv39eah+uXdpLc3b8iLzEC+QvJcZUp3BTs/+7cR/R5HjXT
dmL/jfMhv350qO51JPIfJ4/gmpTtxP1DmEfm7K5ULkpE/m9kjaBNZmui0OfG
PFpPrhfKPuP+UR9PvnrzXv1HvJ/zkNyrcehYbwLyt5Dt5sX6SmP9BXLyab96
kqEVjDwix8gSg/u6orA+9HLJ+u1NTyTRl3sj+WvXWqcOvB43uoDPiCkmKvph
/RYYk7un+mz8eRT95pANVOJ9NLHfh9eTtxkP/6B5GvlHFPIZRiYtdVoO8s8k
r7PrUBZ5gvxryf2nCz6+q0O/n8hfFnpGDP+Gfoc95jO5furP078jvwF5oktU
kl4L8ruRz/UYR/QLkf8A+cXCsj0h3ehX/Amfud+bGOIh2sn2O4Pc03bG6fhQ
1nYryRJ5urq6Q1iH7ydrKTuaHOpH/mvk6At5h0J60e/0Ipq3Pfc/yfShXyfy
er3KwAY4LZxcP/YZfz5ccZl8s0qtbW8p8r8l573d4RPQhn5XPOUztott9nb8
QL97yPY12rFvfyF/JvmE6WXlygnI/4Z8aPiNZalKyN9Pnq/8lOerxrp+9zM+
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
PjU76ffGT5sip7OYhxVkj6HuH6ajj4o95Og15iWjopA/i/xQsX5CZwjyvyFz
5VO2vjuCfu26aL5k+jvVTqLf3WSFexoj2pKQ/yK56Jf41Uc3kf8VWfpM7j77
XOT/TZYRsZy4pQT97uzmM+Xuv/2NGtBvOlmho3bi/hbkL/v/Tusldz36k5r0
HflVflD/ikXhap3oN5Vs5RR75O439PuCrLB3aHEB3l/QTXbfZJYZwUd+xR56
vXn3Q+2vyL+AXFjWF76xC30Kyd67JSJn/UFe+V76/XfkTPkifD7Xmhzq/FHB
ToC8AeR1eg6Oe/vQZzt5Kke9wm0AfU78yWcenB32+JgQeS3JBxtO784a2s3m
9SN7afRcnj2EdcEJsnS3flFeN/oc/4vP/Pj6QevUO/RpQZ6w+NCubHwebxP5
jMa9sk3/8ieSg9Yk7elAHk4e+d6brXH5yJM29zefMV8X9OoC+qvYQI4SjpfY
3Yr88WS+h7vXQ0k2j94DcmRjqnZaGfI3k3UfHHn1G8cL1/XxGeXU4K7lOF4l
lmxdvTlYphf575HbnUavM69C/i/k/2aPKHv/AflH/aH9w//2rle4PtwjZG1Z
heSx//rNJg8PnVwifgn568hbCz7tGzaKzVcxvJ/PZEbENb3A+0VmkrPT/nT1
38U83CJHT/ygvOgy5uEj2bRm7LHFWB9Cib+0/4uXJZ9IRH598q0fUe869iH/
KvKbF2fz92O91NeQq54VeotfRb/iA3zmbdiD17KYN64uWUvdw7X+I/K7kFdk
B+XVjmTzpkWQa3bL7jdUR7+ig/T7d3OiwaHJrN21ySZCySZ3G8yHI/nv0ob0
eAPMRxj5ZvQ161dzWAsvkc0Wjw54vIJ1uIaIgOkxmnK90Y01z568P7nGNtqL
dX0o2V7+rWKyD2tOJrnN9ozPgu2sua/JYypiZh4JQr/LRAVMX7dfV9ge1iK7
ycvTK4ebHUT+C+SCBSeWisPuL8nNkSFOsReQ/xf5+YnHXJdrrFWCxQRMw/Uw
mW/nWdudI+8a09xtfhn5S8lvHpYOVb+C/D3kh7l/FJ2zkV95iIDx9bB28X/A
OjCFHDtBI/L5M/RbTD5iFjph5Wvk7yLP0nrudKENeeeLC5gaZ+HDgpE/2D6f
kqt+dSbO+Yo+O8g5H687anUir9xQAfPS/3Z+80/knUceaD5l8/wD8m4mB853
8kx6gz7byLmbDVpq69CnrISAubxkWU9yB/Iy5IjNvZ8PZSKvL7nXMzPv4i3k
TSJv1F9gV4DPc5cZJmDuybw8nByNPs3JPnHejn9dMA/e5IKrz6Ml0J8wgVy2
pWfZiR/I/4gsd7BBPEaMPV/eHEkBU+wdZDdChHW9F1nbTf/rQ7yfE0ceceb4
w1Ccb2ATucYkVl/PgH2/yLrhAkbTb3Jhoj5rvaPk+OzAcn0F1u53yRM1o4Ii
/iDfyBECRubi4AWDf9c7mnxwoDtj6A70d4d83fKZqb87rvdnstSYl3+qME/1
kiMFTLXrpYEvg8hnSOY80PRVFKC/m+RVfKubv3+hvw9kfocgdvlxzKvEKAFz
U1nTy2g/rr8emTvbuX/hRfTrSh5rnO4w7AX6GjJawKh/al4R3IC8OuRAq2OW
S3OR15lcFiPsH96NvPvIdYX278RU2fPnikgJmMf+Hd+FtqwDtciDd4XK1k+Q
14GsLVkdNQzHV+wlj1jl25zFQb+XyEtPr1Y6iPOJmzaGzseiWezJb/S5nNz/
OyTmliz7fmEIWanQf24m8qpkkPU7a0Xe9yN/BVnueLlnUA36XMoRMB1Ldrzf
j/nk7CIbNT15ug7fzz1PXqwq6jwoj/zl5NDdY+9YMazTfpIjuI0tY1bjeqeN
pevxS1mlaAPruBLyyFgzlZW+WF8/yNUnU28fDkFeJWkBsyfN4bVuFOvws2S1
SJ3oMDvM53Ny+VTjY+vRX30neXN5WV2nNWuOwjjaD57NsW9egbw2ZMOQ3BPH
17OuKCIfHligFBmBPjvIfoX2fzqCMK+TZATMbVXrI/LI625FHvusVkRzN/L7
k73nvgw54cBa5Ts54dWoDKk1rO0mjBcwlhsU7/WqID+XfNk06bCDFPL7kEvy
bR291ZD/OHn45WsTV41Hn+MmCJjkb1ctWszRpxl53mIjnuw85N9IjtpVlKKF
8xFJIFf3yL4fvQn5H5JP3K2967cX/c6WFTDvPPYXDgSj3/Vkb7NpP0f7If8x
sp+e9O62ucifS+aG5kbfmYX8jeQvO/d/nzcG/XpOFDBOPwab7Gai3xjyJSa9
PngC8ueQ3yxuHH5uKPLXkx/mOd58Ogx9Hp4kYIL3rXOSm4w+b5PHhDqHn8T+
UPCJLO2/TsxKHXmHydHxJS+7dmkjrwH5erF/Xb4m+uSRI07vzAjB+qqvJaeW
a1b/xfxzhsoLmK1CJ8t905F3Btlry3eDHXrIu5JsPm9wi8Rf7AfV5L4/flnZ
yKsnpiBgisZXZV6YiPzTyfZXvo/L1kJ+J7LDw2enLY2RP5zsUiYhVApHn4Pk
8KZFvhme6FNTUcDYfPs7JXg58u4hi44alXUN38fJIk/eddS3dSz6m6okYKL3
nmJ8cT4VdmQfh9RlCVXIG0KOnDf+pFUJ9q+LZMOiKdtie7F/vSJf9ruRrzsN
fS5RFjCechzNNfbocyf5Z3/78dVWyJtO7lKb3DUJ6yu8jPx2rV3JOcwjr/f/
m7tdRcB8TJmT3cdFn6nkIcLBGUvNkP8Fud0j6H2QBfJ3kxWiZXYabMH8KqnS
fnpjfYOME/p7RrZys80wmIG8QvKxsqjt472QV36ygPl1RKrPH/uLnTX5/JCc
HyYL0ecT8uOO738tXNFnO3l6Du/eoWXIO1FNwLSa7rA8vxJ5LcnDdOpcBMiX
5kee8PrpgR5cTz0Buaicu+E31qf7eHUB41Y8M24H9sM4C3Jkil67DdZDwSay
TPtTSR1T5E9U/99+mPw5RRF9Sk+h9fW8zvQdri9vLrnc7dfFln/7wQayfa3J
4Hgd5I8n36mbu7oI58t9QN6hVrhzGc6vwnSqgNGZ9bhUayv6XE9O4l342LYd
+WPJR014PQHYL9zvkRfY/KxvNET+L+QdV7T/hiKfisc0AXNhTOUZu5e4Pxwh
p0Tf//gb94fwbHLaQQUb5t/6qyPfd/h1rRLHBx7SEDCz5y14KIL1lnaLXLB2
qmg0rmfFR3LeRGFudQ/md5imgDnnEjfTdRzy6pMN/xS1crCfF9wgBy2wyuaE
oc8a8v1JfcdzsJ+piGvRvAjrGC/cP+x0yZkHvzUFZ6JvF7JrlOosuVr0+Z6s
7fL7Q3wH+hTVFjAHvo7s8m1Dfm3yMrX8e2+fIr8jOUzSdYZ5DfKHkQNc0jkv
itDnAPmmRX/i0Sz0qTGdXt9U9/AOji+wJ7f/5tkmv0H+UHJdrNsGsXrkzyS3
puzqT6lAn1N0KK++nHXIfczDMnL/lWehTteRfzf5+/ZJFddeIP8Fcqf6Iokt
Ccj/klx0eahmcjLmYYku7W/TpO5Y5qPfYPLzOmmt2SeQ/xzZJdhIZ90V5C8l
dxSfkf10Efl7yHJb2jNl8Lrdthn0vHf4uLrdc/SbQq6fon36M8wrJqeXzhOP
fIL8XeQhZu93LMd65yjq0Xq5XZZigf027TQ5OdN7OS8OzztPyWJJ01O+7MZ8
CMnLx4bHeMggv5y+gNF4d4sngfl3n0f+tsmob8gc9PuYPCrTVe0y1qtKG/lj
o7zG9zzMs6yBgMkfMEi7jvUbzpDd/mo8VJmC/L5k74Wr28bj+SdQxpDu/59H
SQrwvJNmTn6UJ9o5Dc/LFd5kf81A7be4X4kkkhNXt2SeM0KfY2cKGD0ppbrH
WM8Fc8inXEY97sXzjNCLnMxsEh/mjLxx5Iaf1QOj3dD3fXLmi8H96//dL0xm
CZjjCT0f1+N5g7OO7BLbZHke+zf3KHlu6zXdQfQTeJd89Zzsk1js52kN5PaY
CB0nPK/ruRsJmD93NOO68fvDPZqcPi7L704Tni/vkE1KX+e1/Ls/fybfGlmR
a6iB/JLG/9s/7e78RL7wg+SJJw69EMV+zrtJjmz8UDsd+2/9B7LcYMeIpRuR
X8JEwOzcMlWxDc9bXD3yK7dkyUU+6Pc6Wezugcu8Pei3hjw46VzVmZ3IP8SU
nu+l9XnFeJ501yHbmS+y04xH/87kCWvyPnbfQr/vyJzCuIDcUvQrMlvAPJvz
5fyUQuTXIkdcuzL+CN7PcyCPyDRVONuK/HvJJSflV1qO6GH7/Us+W/kky9uA
ddq0OQLGdPWjcMe5rCuWkwdaXSZkmrMWCSXPGeHnpWXCWi+D/OKs6xSHiawL
1OfSfO/hMLEzWAuXktWlmLFGs1ir7CJfm2Sop2TG2u48udZVW95TnXV4OfnB
+avbmqVZcxabCZjRmgbq8/7tdzvIASLMKpcWzEca2fJC9fvhXzAfJWSboZ3j
YurQ/w+yR+T9959Po9+t5rQ/yuaPl3iLfs+SmzVXFKS9xHw8J+88f31exBjk
7yRn7MrYIUAeFQULATP+wXXfpXqsef+RI9+YRv4H1xeRyxdqBPThfDgd5JTY
agsGDrTiChhBhNMcHU30+Zi8xNUriFFBn9/J1zqXlyjPZ+0+gaF5tkyNPzSd
dRyXbC8s7T3ai7w+5LFVcUY9dujzG9lPfYt+Lxd9jrMUMJLHs0MUfZDXjCzh
f1Kx5F/ejeRWnruG6kzkTSBXxzN/ZwzBPHCs6Hn4aWnJgamYh9nk3jkZQdWG
yO9F1rxm2lPkhvzHyKnXrEQycX3dc8kdCZMVfouhT+N5NI+9pZfEVdGnJ/mR
RsBgtDHyx5B5N4donca8hOeQv7r0T/mLfNy11vT7ZkjAyxtz0Odh8t1dk4u2
BiDvbXKKnKnDzhXI+4nMGRUb3zsN/R2wof1H631lSTP645Fzf2o593ViP6gl
J8zKavqNeVMZOp/uV3/6l0RdxnqbQR51riH1EO5P9dfI26ZYNB3F/ZJTTT6w
xuO1Hj6fK7ZAwMSqrTL/fgDzOp184JBs/rkHmFcnsths0dtPNmM+B8k797gf
vo3fj3GaC2keVocZn8DzUcEK8prfW1u08Xwu3EO2NGrzefMK67+fXJYTru36
b/1PtaXfTxZmHxuxX9TbkT3VdjSex/MGJ4Qs5XpJrvAO8l4k/4qKv5XWjfWj
toiefzT7GrQGsH8tJeeuTspIw/OG3k5y6+Ya62X4fvd08oa6iOvTMpC/jBz1
2Tj6uAv6XLSY1vM3kfMleH61205+tz0wLn0p8qeSkw/bqpbj/sB7QZ51W9Ti
HPbT+m6yTtZAwPtt6O/MEnqeU+v8FhqNvM/ICdbnuubwkLeT3Ps0iyeThrzy
SwXMZ38d48P30Ocp8smgeR9q8PwifEI2mlSS0YTXVdrJA90iM3OrkXfiMgEj
vmDN7dBB5LUkt6vPvdOG/YZTSJaOSAo89Ah9CsielttPGo7GvI63o/uh/9eF
538ivwV5796RXikfkH8T+bFgSvPRf322knNk8q4N3kSf0ssFDD9H9JMBXi+Y
S465/mXSd+x/wg1k106fweIG5I8nRy5Vzb8jQJ9j7AWMrod6iwaub70pudw9
pvrXBKz/9WTl50uP9mO9c2PJInURV27IIf89clVnmrKTLNa/8Qq6X354oPNQ
Aevfg+zhFeW2GPuZ+xGy3nH9gRoNrL9sct2mKGkP/R6L/wNdKRNN
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], FontSize -> 20, 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxV2XlcTO3DBvCxtCmJSBIKRUmN7GtzSPZMSso6KFtkKFu27GtMqeyMsm+N
JTtlLyUVepKkZJ2RpkXKUu/1dvXP7/nD4/s5M+dc57rvc59zhvWMheP864tE
ojL88f//x3/y+UfVAv+qdcEfymjYKt/baGd18f87PREeHOH1NuFvrRVzlWph
zPZ1U+P/1TpxDzxANku2gdbehc3M1hstoa2+wg7Pj2eV8PvSZsfUQu7AWNUD
7j9fAdvPWbZvEreb3Ia1hqecenG75BNs2GDB5d/cn7xJjFo4285/6Cda2Rd2
zzg5Sv271uIbsPlyizXLaNkHOEwrufiggvmNYtXC7O4xBak/mb8XPLFHt0/X
fzG/DI4wMfo1lp8PfQ8/8u3rerOs1iqD42phnf0cv3B+P787PGhugWaqlvmn
wrPbZYVe4OclW+GrrxwqncvZp+4JtWBjbXjShttF3eAZUcf75pUy/yQ4oqao
ZWkJ82+C/074+6TueIo42KS43x7PP+zX8STG4/vQP5U8X6kPPLNZmFsNt4eu
h0f3XPntCrerzsPFF0ZLdnN7fhascs+Ye6yG/Y4/pRa2ix/6dmX/yrXwlCW2
ZmLOj/QzcGJMrNqlXq1Fr+AjNqezwrldXA33dsrY8ad+rRNXnVYLrvLppr8a
1Fp7EjbqtTjKjNutMuCOv7a+3cjjS//Asu1dh37l+IbanMF4dxyz/0fdfEiD
NWtK/rXn8eSVcP7f8Cud6/K2P6sWVg8s1gupyzsa/i2JdOvF+SVLgR1bvZHJ
ef6Kn/Dh252jBlZxPrQ7pxaGht8JO/aD82EEXLDyddlb9m8VDJdeTtUz4P5U
pfC46FfBbel8y/NqQRGpqGfB+WMyDE77LsqM5f4ki+BcD48Odtyf/CBsdG9K
1RzOH5HFBbUw74LTmVjOF7ErHG3QJvEm88kC4bxOs3KCOX8U++DRF3eOMlUz
/4P/9y7LYzEf2adwEfPFqH0Xt3z2GQAHFl2e1uMT80fBSa4h7tPp/AQ4qoXq
1u8vzK+G/74eULCT+1fOicN68G2C095vnM8R8I8nGfIZGua/Cz8uGGzxm9tl
TVVqYcWTDOOPRexzN/xXJyay4jv7vAVry9JC5xYz70e4cU+vzqY8/1DjS2rh
WpbeoIscX1Uf+K1tsHccx1dyHXZfM+fTJM4neQE8Z3rD3985P5WGl9XC5lPz
Djo35HzoCT9vMvNZs7r5K4PzTYOkIvaryIPNY0/1+sH5kah/Bccv1D1+kHm0
zrCrZsme25XMPwWO2OW2xpD7k2658j/Hz9e5qhZa6e00taVNxLBXkf5qPeaV
TIQLnbanrmc++Ua4zfCJuUn6zH8RPnTOJ/YtLe4aj/ViXKjXxEa1lk2AHaXx
By7o1VqxDn6tWnr2sy6vv3Ow/sJqwYDf176G9/f/lhSlU+tQr2tqYXzjhu92
8fuqNfARKys7MfeffxpuqjV7MJ7fN3kJl820Ly/gfJf8gyt6D/jaqu56W3ld
LSi3bDy9ndev6CTcOdFkR5u69SEdXuc7Q+HB8ZT9hidWbY4eyPNXdLyhFtrO
u786h/msYuHlBYvyPjOf9Dl8LeDXU/O69fkXXBC6rnQdx0tlfVMtHNUmijN4
vPxRcMgPqxHJHC9lOWx3bZv7rbq8bW/h/qK77E8s1yfRCNhsfEhcJo8vDoKP
6Kd8tKATS2CPtDFT3xqwz9a31YK8ZIjbZSPmdYO3xk76tZyWyuGqo0tPXKRD
D8DfPW49PWLIPlvdUQsvI/ZEutOSIXDUnkMrvxtzPiyA39zqafy+OefDXnit
Y9ddI82Y/z7cwHiKqozbZZK7yL9eWV9hyj7nwS2L7PPimzF/JNzwVk6HSBPm
vwdbprSJGtCC+b/BNdVWE1O4P9Xse2pBGjknviedHw5PfjM5OagV89+BT0od
loeZM/9nOOlao+xfTZnfJAHrQ8svNl2YV7Qbbu78ujqXxxffhL8EK502cvxl
hXD1r3bZwzkeisaJWG+GO7ufYx+JveGYh9snPOH5SK/B2Rb7JbEt2W8+LG0f
udK9Ln+j+2ph54So1pdbM38PuGmAkNTGivmnwYdOrl4xrAv7fQe39v/XrMqR
/eo9UAubzj8KHkuLnGHBf9Z5VWfmnwz/yN/3K53fl22GvaZ0jh7enf02fIjr
Ibv0Tldn9usEC98+Djnfg/l94e9Hwxb+5udDN8C6EREBqm7MfwG2rS9Yd+R2
icMjrN+R16970XJv+N7x4l9HuH9lKJz134Zj7+n0s/DHImmbx+2Z/zXcyjoq
KsGB/Xo+Vgsf2hj0HUwnrn78P9u1p+BngWW2/3ozfyZsnnireWZf5v8Lz9k9
6nrP/uw35AnWJ8Nt4tbMb3ICXv8y7cN7J+Z/Ac/T2vTpwD7lVfCeFNXT4b2Y
v8NTtbCxm//V2f3Ybwzc+0/HK9kD2W8q/MMy5GS6hPkr4Dn7/zQNHMa8I5PU
woF1G0/5jmGfyfCIGZ3rDRnBPsvgsc3WlbwbzrxtkjH+Zs3u7OZ2k+HweJsb
CRncLlkMZ2VnrR0vZZ9auKj/FqcGXuyz9TOs16ue3jHxZN6hcPOU880qBeZd
CH9qskrZaAjz7ofHmcw8NHow+zRPUQtq0wltdJhfOhh2Sn0dHOLK/PPhQW6b
T7XzYP5oeP0r6/vjeX75ibBrwp2Fsgns0yUV83uH9X+7Z7DPuXDrRWtU32jR
Pfhvvf2i8/7M+xW+W9x1yFJuT5z1XC28y/gc3Xo6+1TA/c6s+HB7LvN9ggtd
ZlzpPo35mqSpBQvP8HqOPuxvF6zU0Q0+yz4kN+ApOh0qB01hvg9wy7Vdk2fL
mM/oBZ5n/OcNS5nMfnvBs7MfHJVw/7J4+Frzdlbu7F/xHv6Qu/ecZV1eg3SM
97R3Ny7NZ97ucPOZOhs60lZT4X89azo99mNfuhlqwaDgrfjNAubtBt+vCLyx
Ts68k+BVM9oGLOZ2+SZ4Y0Oftqbe7K9hJtaXLjc/V49mf46w023bnxNomQ+8
+fTjtHiOv2I9/F/h/Z1t2EfieVhi/rM8mOcj7fIS623UiMsX+7DP8bDbiWsB
s1043mthl167Gn/m/M8/Az8ZoEgurpuvr2Dt9XpX/k1kn+Ne4f5a/WFzGvtL
XwWv3f3V8ArPR3QK/q3zcUVYIPNnwPHm95xCljL/H7hil7KXOIT9HX+N97sT
Z5beX8u8abB03rRpXsuYtxIuTfsdsGgl87bPUgtTzySYm69in8fgho1U791D
2WcKPPhYtfgt96f8CXcf+m5xJzq93X9qYdLuTaP9tjDvSNghI+zt1I3sMwle
bDTxZBPuP7EUTpY51xhu5/hbZquFrsP67fcOY/5h8F95sDyEli6ChwhDHodx
//nF8FK3Ue5tt7FPizd4Hx6yTxy0nvld4XsLpiy+v5n5A+FdLdZfHMS+lPtg
q6dKO8O6PlvmqAX/wDdhbdmPTIAbG+wQauryB8A/Jg87EM7zTYyCo42GO+fy
eNoEeNCApF7FQex30FuM72l5fCtef6o5sFmVMuIR53d+BHx3SS/1G15fJndh
owNlO2byepR8gQtTUs9YcX6k++eqhb57KiSZvL5FCnh/4ZxnnsHMfwu+Yb74
b0Fd/o+wtcKtcZeFzG/8DuOjG/TxMOevVRhcntp0aATXK+l1+J/bB43InfkL
4C9b8fDI46kM83B9390Ve3gQ8/eE766P3jWz7n52FS4t+Ku/iPcTZR785+ra
Ly4DmF//PdZT8Y+m70Yyf3d4VbOtu79xvU58Cxd1y+7Vi+ulVidfLYw0b2k7
zpd5xbDxjX2ha+quv4nwntbD+nWYxLwbYducBf2W1l1fDQowXzNE86pGsc+u
8NHrLr4tuP7LJ8DvezVZGcv1V7kOfvp71j8X7i/9HJzu2NfUkuMhs/+A8bt1
tnoDx0vhBY8d0npV0FjmXwPXqDSeI3k87Wm4Xar1g/m01Uv495Id9W35eZVH
IZ6vbbxSorge5q+Eo3z92ldzfTU5CfucdvSXc32VpMOlX64MC+F6JP8NDwoe
OPU0+xGt+KgW9lasvfCZ4yWOhf0fLejvybyy53APsxmdwmcx/y+4Wj+n/xCu
L4nWn9TCiZV5/u+WsM9n8KuVU930NjFvOby+YOv1F1wP8tt+xviV7nzzpu76
GwEfsMwpW7yVfT6FB3tnxy/g9ZpeAifN/x3Tm9ejyPILfGOq2awdzOsG/95Z
5pMUzbxyeKK2pqndUfb5A86dqxvc6DD7bPUV+Xr2mOqo5HwYAhceinPfw8+H
LoA3b5944XsE8++F/9o1+ajayz7NvuH4aweNuMrjySXwvl7nX/fex/zz4JGu
oYVy7i898tv/HE+UAHulzyr9QSsGqtWCply+cPsx9jkbjk/dItnA7dpw+EeG
Q7bzaea/A6u3jwq8fob5P8PKF3s+O6vYr59GLVw0sKsfepn97oa3rix+/j6B
+W/CHp+ndy14yPyFcPKAXvUXpLHPnd9x/jveHuiaxD6vwVMuV31xv8a8+XA7
nYlzxt9n3kZFamGlsHVJzG3m7QE7dTn29Nhj9nkFDpzyrqniOft8B89/o790
fTLz6v1QC3EhkVv78fgmzrD649WwgFvMOxmOnDQq/lQm+8yBVzp89biezj51
irF+XbScWv8N8zvBRmVlF+w+Mr8vfD65X+H5AubfACtXH/WTvGWf9bW4HqTR
CQ3esU8H2P7lkWNXs5nfG97/fJ/WLY/5Q+Gq8vo5H+8x/1l41Gjn8hY8f7ld
Cd7fBndbW/iA88ETDhPU5c+vM/9q+MdAwyEzaNFpuLP9iJiZV5g/E+5o32eC
xR32Ky1VC6eW5ASNeMJ+Q+BL807f/s5+rU7AZt6nNvi/Yv4XsDSgtfwQzye0
Cr4cqf3ak32YLC/D+h4Wk/e5mP3GwL5PEgYkVTF/6v9aWQEbdy1ptPgv81uV
4309yShiVA37PQrH99yekdawpLbfZLjUUJb3T7fWiWVwY7vdrRNobZufeP7e
r0qo0Km11XBYvaQ6oIVRrfO18NyCvC1Kk1qbtK7AeI36IWzl5yVDYduJRi3W
8XjyhfDjrXMvNOD3RT/gWaE+ls35fbH5L6yHnWZata5Xa9lg2DLw5ZQnTZh3
Pvz7qsMun8bMG/3rf44nbVGJ5/cETbhOBft0gV0qPtn6NqjdrpoLS8PrXXTm
+eXvgQd0k+bcbcb892DjwFX68U1rrRxQpRZyvj/vKq5f6/RZsP+aSaH9qzkf
wuGTHQyP2DKf+Db8vPPHw1M07PsTHLFtWcn5P5wPM3+rhfy5D8ZFVHI+7IIn
Zw8xfs3xkt6AZS+Xx3Xn/A/9AP/taPG+8QfOZ6M/aqGZfvK3orr5sANOz2x7
O7WI8yEeXnDl8ViXLM6H9/DWkdYjvcs4Hwz+4vtlww//5PUn6gFbWxz4JeF8
VlyGjY3/u3D2AOdzLpw9OfZZ5kHm1/2Hz9vff98/nPm7wZ/S5YUWvB9IJ8G6
znEd9fn5/Ddw2OWmrx3iOJ8bVmM9+bP7z9X/mN8Rri9vXuH+gvl9YK8C01bD
PjH/ejgkUH3Zn/nF9WrUwgtZ9bVMWtYFtlgxrXeAMefHeNgqccjQ8Lr5vBbO
m26XMasR5/MZ2O7dy3sTO9Q6tLNIIxTNM7+20ZbzYxx8bXSierg158cq+KHf
Jp1F7Tk/TsFmsa7t1nTi/M6AX63IMj9ow/kxtp5GmL825vX7LpzfIfDv9wkn
/nXj/DgOP942zH9VD87vNDhwQP+PVQOYvxJ225Uec3Ywr7dl9TVCbgvhRg63
S4/Btu6ful4Zyfwp8MJzozrZ8vOqn/CRERXXHbk9v10DjdDhQ3zJ9zG8/o7A
Y0WzPb9P4vxOgiM77Gt7axrzl8KJl0SH4gKYd1hDjRA80fhdj2D2+RiuXGLw
xGEq+yyG/RJvTz/mz7wWOvh8owPX1sxlXlf4u1fZbac5zBsIV2RqDqymTYrg
jqVDs19OZJ8tdZHPdPsCfxnzCnC+9b2mNQLzBsAj3nj6lfD80qPgFp5nS6t6
ss/mehphoFnW62scL8Ug+LG83sYnXB8S58DZITOtOnG8tRHwjRep7e5Lmf8u
7Dao0Wtd5lH119cIS28bJPvwfPP9YfX6mpstJzC/Av6kfjla4cO8H+HJ42Qu
J2Zx/GcaaITzm8rT9GlxGCz9dNyygp+XXYf9wpwaug1lPsNGGiHufJyuyIX9
bYdHn8icmlU3X6/COl45M8IMmS8Pvr5hlV0Yzzdf31AjHMiZp7/Elfm6w0Ye
Y65V92Z/l2D/B+kH3Tuyv7ewydGDF4Jpka6RRrizt2x+eSvmFcP7h9b7/Ifr
n2wi/Lf44bdyM/bVoDHmW+6M4dM5/6Vd4f8s04a/d2TeCfDAdnGzt7Bf1Tq4
XIiaFeHF8RYZa4ThIQrBaRz7s4dXjngXV9COeb1gW7+VLwa2ZN418Nk+d3t0
smPeM7DlHx9pJfMqOjXRCNV9PRWPuT3RA35o4LHGtz/HeyXsLi1dfLYv85+E
jXNHBPwdwfzpcEzDrAVzB7FPdxONsDoj94J9H/a5AnZ8uVTWYDzzx8LOA1bv
jZjM/M/hwddMnn1fzPy/4I/eFbeabmR/yqaYX4HaGuPNzPsMNpieoizeyrzl
8Fbd6JmlEczbtplGyLObc9D4GPs8DLe2upu9NoZ9PoXLsw5mjjnOvCVwUY97
Zo2OMq+lKfovudX3zBnmdYM/L16Su03JPh/Brwt/N/K/wj6L4aQLuZ2T+Hlx
q+Ya4WmOsD2Zn5cNgVVnKhaf5/EUC+DKnrIvdmHs8ztcHRQupDK/1KwF5ufR
CWtOcj0JlcAzxanZg3l9q+bBM6boDj0wn/kj4eJzoje3/NinqZlGmHOlTZtR
a9jnQHhdgPJE+Drmnw2nJvWf1yyK+SPgiC0nM5btY/478Oq0DT4WJ9hvv5Ya
4U3Zvwan2afWD84I3KkSH2D+3XCl4YWrWXXr1024wvCl37sZzF8IPws/8zRz
HvudYa4R4iMcLk5nHslOWFn2TTOR5yu/Bh+3OnfNid9X5sNN5hZpnGnZtlYa
YWTe4fBOQezzCtxq1SsL34XM+w5eYJ++4cta5tWz0AgFfi0fbt3JvM7wQ7nr
zI+R7FMFJzu08M3czT5z4MkFk+I3b2NendboxyWpcVQ08zrBkzc/6r1yD/P6
wumn9AojOX9F2bChq8N723D2Wd9SI+h9OGt9eT/zO8C+kfW7T2W/Cm+4+8xL
L09fYP5QOM2r5b6nz9hnDeyi3+6Q+DH7tGujETY5Cs/q32fe1fDrrF2OkQrm
PQ2XLQztZ3qe/dm2xfk929T5XBzHXwqPO9P0oA/7EK2Es10WZdasZt4TsGfb
seG+25n3Bexr2CGzbv5qx7TD+hew223kIfa5HFZ65AriuvkbA/u9TnXps5d5
U2G9qt3jh8az74r/tWSJFe537pLFOffY51H42JSiu+fuMH8yPHLT+nsO3J5e
BudO00YtTmb+ttZYn0aFlox8wv6ewKWbhEvL2adWC6v66wQ5pjNv6/aYr+ZK
g9EpzDsULinPe+V6l30+hLPzbXoeZt8mP2Cby61amfP4EvMOuF7t41aIuF0+
GPbpEZKxl+uBcj6s+KKuqeLxxRp4Z1p1iC+vL1mLjhqhbZOlwV6cfwoXeJrj
2BSzy8w/Fw70uhr09irz74Fjwq64XuD6FdrMRiOYN51nZMn9qQbAl0fEiXvW
rWezYNPFH27u4npkEg7LE3POGnI+SW7Dnr7bg17V9dnXFs8Hi1Z9uJPGPv1g
4/vrolJeMP8u2N/xT7nrI+a/Aef0qrE3TWT+D3BMUJZwVcV+p3fC+c8f9qgf
55N0B2wz3DVsHtfz0HjYq/fo/mFcf1TvYY9JAemGvL7kWzvj+azPzq8def0o
L8OLJw7eO5rzKT0Xzplbv4db3fWmZ6cRTtb4e/aRM283uHyBSWMnXs+JcfAR
27eHO3G+ad/AZS/STmgfMG9De42wXtZtgzXHU+oIPwlKnjzjI/P6wDP6tntm
oFda2+d/8I/kDx1aG9daUq+LRljVxGL9gMa1lneBezvGTEopYf7x8IupNi7T
vzH/Wjglv0Lvaib7rIYzL67enJ3APjs7aIT2Rjk2c18y/zg4cn3Jtgc5zL8K
Pr7K2tn7M/Ofgs+XzFFlFbJPm64aof8O+7vNczkfxsKVkx4cP5LN+RACV3S+
9qGJmvPhOGzkPSZlFMdXngb/ahnvfZXri2iMI/Llye2i37LfZXCkeoS4G+eP
7Bg8z6SjsiGvP0UKPKBULVKy38SfcEZ984i1df0GO+H+OCzob9F/7PcIHH9u
wdWHvB5VSfDbXNsA/brrsRR+dStprT/Xc5M2Ylx/Ce+DJ/D5TnkQnrJX3SI6
h+9rj+HeA6skWa/5vqaFXSWhmdP5fiG26KYRJi7c7TGVzx8yV/h2YWqf+3y+
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
1Ed28PuKeHhg5rSzr+H/A8zUDy0=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {3.5732448*^9, 0}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.7297657129596495`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.5732448*^9, 0}, BaseStyle -> {FontSize -> 20}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Charting`FindScaledTicks[
         (Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& )[
          SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
         (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
           (Map[DateList, {
             SlotSequence[1]}]& )[
            SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
           Automatic]& , {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
          SlotSequence[1]], {Identity, Identity}]& }}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           (Charting`getDateTicks[Automatic, {Automatic}, 
            (Map[DateList, {
              SlotSequence[1]}]& )[
             SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
            Automatic]& )[
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.5732448*^9, 3.6677664*^9}, {0, 1.7297657129596495`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"BTAL\"", "\"QQQ\"", "\"PSQ\"", "\"BTAL & QQQ\"", "\"PSQ & QQQ\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.066], FontSize -> 20, 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"FontSize", "\[Rule]", "20"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6679366397690153`*^9, 3.6679367516068416`*^9, 3.6679368593411646`*^9, 
   3.667936970922141*^9, 3.6679370012599287`*^9, 3.6679370989355893`*^9, {
   3.667937301643483*^9, 3.667937329121683*^9}, {3.6679374044328537`*^9, 
   3.667937417822565*^9}, 3.6679375710827637`*^9, 3.6679391073697505`*^9, 
   3.6679900261512504`*^9, 3.667990737274878*^9, {3.6679910297008114`*^9, 
   3.6679910546273875`*^9}, 3.6679911084009924`*^9, 3.667991370645297*^9, 
   3.6679916200646744`*^9, 3.6679917189037895`*^9, 3.667991761806107*^9, 
   3.66799231597868*^9, 3.667992751396487*^9, 3.6679927950963516`*^9, 
   3.6679930328373065`*^9, 3.6679932518651276`*^9, 3.667994597998305*^9, 
   3.6679950838423214`*^9, 3.6679951975189505`*^9, 3.667995781572899*^9, 
   3.6679958306656046`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart1.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart1"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<chart2.png\>\""}], 
    ",", 
    RowBox[{"Magnify", "@", "chart2"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.667937039730649*^9, 3.6679370458548574`*^9}, 
   3.667937563023834*^9, {3.6679390384723988`*^9, 3.6679390621543503`*^9}}]
},
WindowSize->{1474, 812},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2985, 79, 153, "Input"],
Cell[CellGroupData[{
Cell[3568, 103, 1565, 30, 73, "Input"],
Cell[5136, 135, 48292, 866, 410, "Output"],
Cell[53431, 1003, 51178, 912, 410, "Output"]
}, Open  ]],
Cell[104624, 1918, 525, 15, 53, "Input"],
Cell[CellGroupData[{
Cell[105174, 1937, 137, 3, 32, "Input"],
Cell[105314, 1942, 47766, 860, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153117, 2807, 256, 5, 32, "Input"],
Cell[153376, 2814, 45532, 823, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198945, 3642, 204, 4, 32, "Input"],
Cell[199152, 3648, 46044, 831, 422, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245233, 4484, 207, 4, 32, "Input"],
Cell[245443, 4490, 49583, 889, 422, "Output"]
}, Open  ]],
Cell[295041, 5382, 5130, 134, 253, "Input"],
Cell[CellGroupData[{
Cell[300196, 5520, 991, 22, 73, "Input"],
Cell[301190, 5544, 73247, 1309, 422, "Output"],
Cell[374440, 6855, 74103, 1324, 464, "Output"]
}, Open  ]],
Cell[448558, 8182, 601, 16, 58, "Input"]
}
]
*)

